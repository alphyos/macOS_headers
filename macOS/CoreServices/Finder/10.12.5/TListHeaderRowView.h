//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSTableRowView.h>

@class TListView, TListViewController;

@interface TListHeaderRowView : NSTableRowView
{
    struct TNSRef<NSVisualEffectView *, void> _blurBackgroundView;
    TListView *_listView;
    TListViewController *_listViewController;
    struct TFENode _node;
    long long _columnBeingDragged;
    struct TNSRef<TListHeaderCellView *, void> _cellViewForDrag;
    struct TNSRef<TUpdateLayerView *, void> _topHorizontalLineView;
    struct TNSRef<NSMutableArray *, void> _cellViews;
    long long _sortColumnIndex;
    _Bool _isSortAscending;
    struct TNSRef<NSTrackingArea *, void> _headerTrackingArea;
    _Bool _isCursorOverDivider;
}

@property(nonatomic, getter=isSortAscending) _Bool sortAscending; // @synthesize sortAscending=_isSortAscending;
@property(nonatomic) long long sortColumnIndex; // @synthesize sortColumnIndex=_sortColumnIndex;
@property(readonly, nonatomic) TListView *listView; // @synthesize listView=_listView;
@property(readonly, nonatomic) TListViewController *listViewController; // @synthesize listViewController=_listViewController;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setNeedsDisplayForColumn:(long long)arg1 draggedDelta:(double)arg2;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)handleMouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateCursor:(id)arg1;
- (long long)interiorBackgroundStyle;
- (id)columnForDivider:(long long)arg1;
- (long long)mouseInDivider:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)updateBackgroundColor;
- (void)updateLayer;
- (void)performUpdateLayer;
- (void)layout;
- (void)performLayout;
- (void)updateCellViews;
- (id)firstRowViewIfAvailable;
- (void)setFloating:(BOOL)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)updateNextFloatingHeader;
- (_Bool)isGroupHeader;
- (void)setNode:(const struct TFENode *)arg1;
- (void)dealloc;
- (id)initAsGroupHeader:(struct CGRect)arg1 controller:(id)arg2 node:(const struct TFENode *)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 controller:(id)arg2;

@end

