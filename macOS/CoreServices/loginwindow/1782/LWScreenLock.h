//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSColor, NSMutableArray, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface LWScreenLock : NSObject
{
    BOOL _protectScreen;
    BOOL _userSwitchedOut;
    BOOL _screenIsLocked;
    BOOL _screenLockImmediateIsActive;
    int _preferredScreenLockDelay;
    BOOL _wakeForIncomingMessage;
    BOOL _lockRequestInProgress;
    BOOL _unlockInProgress;
    BOOL _lockUIPresentedWithoutSuccessfulUnlock;
    int _lockReqestedBy;
    unsigned long long _shieldSpaceID;
    NSMutableArray *_shieldSpaceArray;
    unsigned int _shieldWindowID;
    NSString *_askForPasswordPrompt;
    double _startLockTime;
    NSObject<OS_dispatch_queue> *_lockSerialQueue;
    NSObject<OS_dispatch_semaphore> *_enqueueSemaphore;
    NSColor *_shieldColor;
}

+ (id)sharedScreenLock;
- (void)setCGScreenUnlocked;
- (void)setCGScreenLocked;
- (void)userActivityChanged:(BOOL)arg1;
- (BOOL)shieldWindowShowing;
- (unsigned int)shieldWindowID;
- (void)lowerShieldWindow;
- (void)raiseShieldWindowWithFade:(BOOL)arg1;
- (void)addWindowsToShieldSpace:(id)arg1;
- (BOOL)userSwitchedOut;
- (void)setUserSwitchedOut:(BOOL)arg1;
- (BOOL)protectScreen;
- (void)setProtectScreen:(BOOL)arg1;
- (int)screenLockDefaultDelay;
- (void)setScreenLockDefaultDelay:(int)arg1;
- (void)readAskForPasswordSettings:(id)arg1;
- (void)setupDebugShieldColor;
- (void)handleUnlockResult:(id)arg1;
- (void)unlockScreenOnThread;
- (BOOL)unlockInProgress;
- (BOOL)screenIsLocked;
- (void)setScreenIsLocked:(BOOL)arg1;
- (void)lockScreenImmediateWithFadeToLockUI;
- (void)fadeToLockUI;
- (void)lockScreenImmediate;
- (void)enqueueScreenLockAction:(int)arg1 requestedBy:(int)arg2;
- (void)dealloc;
- (BOOL)_displayIsCaptured;
- (int)askForPasswordSecAgent;
- (char *)stringValueForItem:(const char *)arg1 fromItemSet:(CDStruct_166d2db6 *)arg2;
- (void)startUnlock:(int)arg1;
- (BOOL)unlockFromEFI;
- (BOOL)userIsActiveCheck;
- (void)startScreenLock:(int)arg1;

@end

