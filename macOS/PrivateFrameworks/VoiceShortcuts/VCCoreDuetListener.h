//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <VoiceShortcuts/VCUserNotificationManagerDelegate-Protocol.h>
#import <VoiceShortcuts/WFOutOfProcessWorkflowControllerDelegate-Protocol.h>

@class NSMutableDictionary, NSString, VCUserNotificationManager, WFDatabase, WFOutOfProcessWorkflowController, WFTriggerManager, WFWorkflowRunEventReference;
@protocol OS_dispatch_queue, _CDUserContext;

@interface VCCoreDuetListener : NSObject <VCUserNotificationManagerDelegate, WFOutOfProcessWorkflowControllerDelegate>
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    WFDatabase *_database;
    id <_CDUserContext> _userContext;
    NSMutableDictionary *_contextStoreRegistrationsByTriggerID;
    WFTriggerManager *_triggerManager;
    VCUserNotificationManager *_notificationManager;
    NSMutableDictionary *_pendingEventInfoByTriggerID;
    WFOutOfProcessWorkflowController *_outOfProcessWorkflowController;
    WFWorkflowRunEventReference *_inProgressRunEvent;
}

@property(retain, nonatomic) WFWorkflowRunEventReference *inProgressRunEvent; // @synthesize inProgressRunEvent=_inProgressRunEvent;
@property(retain, nonatomic) WFOutOfProcessWorkflowController *outOfProcessWorkflowController; // @synthesize outOfProcessWorkflowController=_outOfProcessWorkflowController;
@property(readonly, nonatomic) NSMutableDictionary *pendingEventInfoByTriggerID; // @synthesize pendingEventInfoByTriggerID=_pendingEventInfoByTriggerID;
@property(readonly, nonatomic) VCUserNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(readonly, nonatomic) WFTriggerManager *triggerManager; // @synthesize triggerManager=_triggerManager;
@property(readonly, nonatomic) NSMutableDictionary *contextStoreRegistrationsByTriggerID; // @synthesize contextStoreRegistrationsByTriggerID=_contextStoreRegistrationsByTriggerID;
@property(readonly, nonatomic) id <_CDUserContext> userContext; // @synthesize userContext=_userContext;
@property(readonly, nonatomic) WFDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
- (void).cxx_destruct;
- (void)outOfProcessWorkflowController:(id)arg1 didFinishWithError:(id)arg2 cancelled:(BOOL)arg3;
- (void)logPowerLogEventForTrigger:(id)arg1 workflowReference:(id)arg2;
- (BOOL)launchExtensionToRunWorkflowForTriggerID:(id)arg1 eventInfo:(id)arg2 error:(out id *)arg3;
- (void)userDidDismissTriggerWithIdentifier:(id)arg1;
- (void)userDidConfirmToRunTriggerWithIdentifier:(id)arg1;
- (void)handleContextStoreChangeCallbackWithIdentifier:(id)arg1 info:(id)arg2;
- (void)handleSunriseSunsetChangeCallback;
- (void)queue_deleteContextStoreRegistrationForTriggerID:(id)arg1;
- (void)deleteContextStoreRegistrationForTriggerID:(id)arg1;
- (void)registerWithContextStoreForTrigger:(id)arg1;
- (void)fetchCurrentSunriseSunsetTimes;
- (void)reregisterTimeTriggers;
- (void)registerWithContextStoreForSunriseSunset;
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fireTriggerWithIdentifier:(id)arg1 force:(BOOL)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getConfiguredTriggerDescriptionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshTrigger:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithDatabase:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

