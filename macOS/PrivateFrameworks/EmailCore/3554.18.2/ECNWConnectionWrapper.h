//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSError, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, OS_nw_connection, OS_nw_endpoint;

@interface ECNWConnectionWrapper : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_nw_connection> *_connection;
    int _connectionState;
    NSObject<OS_dispatch_semaphore> *_eventSemaphore;
    struct os_unfair_lock_s _lock;
    NSObject<OS_nw_endpoint> *_endpoint;
    NSObject<OS_dispatch_group> *_readGroup;
    NSObject<OS_dispatch_group> *_writeGroup;
    BOOL _readScheduled;
    NSData *_buffer;
    unsigned long long _bufferOffset;
    NSString *_securityProtocol;
    NSString *_service;
    BOOL _readable;
    BOOL _writable;
    double _connectTime;
    BOOL _allowsTrustPrompt;
    BOOL _usesOpportunisticSockets;
    BOOL _disableEphemeralDiffieHellmanCiphers;
    unsigned int _timeout;
    NSArray *_clientCertificates;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_accountIdentifier;
    NSString *_networkAccountIdentifier;
    NSString *_connectionServiceType;
    NSArray *_serverCertificates;
    NSError *_error;
    CDUnknownBlockType _networkActivityChangeBlock;
    CDUnknownBlockType _serverTrustHandler;
    CDUnknownBlockType _bytesAvailableHandler;
}

+ (id)log;
@property(copy) CDUnknownBlockType bytesAvailableHandler; // @synthesize bytesAvailableHandler=_bytesAvailableHandler;
@property(copy, nonatomic) CDUnknownBlockType serverTrustHandler; // @synthesize serverTrustHandler=_serverTrustHandler;
@property(copy, nonatomic) CDUnknownBlockType networkActivityChangeBlock; // @synthesize networkActivityChangeBlock=_networkActivityChangeBlock;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(readonly, copy, nonatomic) NSArray *serverCertificates; // @synthesize serverCertificates=_serverCertificates;
@property(copy, nonatomic) NSString *connectionServiceType; // @synthesize connectionServiceType=_connectionServiceType;
@property(copy, nonatomic) NSString *networkAccountIdentifier; // @synthesize networkAccountIdentifier=_networkAccountIdentifier;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(retain, nonatomic) NSArray *clientCertificates; // @synthesize clientCertificates=_clientCertificates;
@property(nonatomic) BOOL disableEphemeralDiffieHellmanCiphers; // @synthesize disableEphemeralDiffieHellmanCiphers=_disableEphemeralDiffieHellmanCiphers;
@property(nonatomic) BOOL usesOpportunisticSockets; // @synthesize usesOpportunisticSockets=_usesOpportunisticSockets;
@property(nonatomic) BOOL allowsTrustPrompt; // @synthesize allowsTrustPrompt=_allowsTrustPrompt;
@property(nonatomic) unsigned int timeout; // @synthesize timeout=_timeout;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) BOOL isCellularConnection;
@property(readonly, nonatomic) BOOL isValid;
@property(readonly, nonatomic) BOOL isWritable;
@property(readonly, nonatomic) BOOL isReadable;
@property(readonly, nonatomic) NSString *sourceIPAddressString;
@property(readonly, nonatomic) unsigned int remotePortNumber;
@property(readonly, nonatomic) NSString *remoteHostname;
- (void)unregisterForBytesAvailable;
- (void)registerForBytesAvailableWithHandler:(CDUnknownBlockType)arg1;
- (void)enableThroughputMonitoring:(BOOL)arg1;
- (BOOL)setSecurityProtocol:(id)arg1;
- (id)securityProtocol;
- (void)close;
- (void)_closeWithErrorDomain:(id)arg1 code:(long long)arg2;
- (void)_closeWithError:(id)arg1;
- (void)_scheduleNextRead;
- (long long)readBytes:(char *)arg1 length:(unsigned int)arg2;
- (long long)writeBytes:(const char *)arg1 length:(unsigned long long)arg2;
- (void)_networkActivityEnded;
- (void)_networkActivityStarted;
- (id)_negotiatedSecurityProtocol;
- (void)_configureTLS:(id)arg1;
- (void)_handleConnectionFailure:(int)arg1;
- (void)_handleConnectionReady;
- (id)_createConnectionWithEndpoint:(id)arg1 error:(int *)arg2;
- (BOOL)connectToHost:(id)arg1 withPort:(unsigned int)arg2 service:(id)arg3;
- (void)dealloc;
- (id)init;

@end

