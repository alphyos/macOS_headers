//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <MailCore/MCConnection.h>

@class IMAPGateway, IMAPMailbox, MCInvocationQueue, NSMutableDictionary, NSMutableSet, NSRecursiveLock, NSString;
@protocol IMAPAccount;

@interface IMAPConnection : MCConnection
{
    NSRecursiveLock *_imapConnectionLock;
    unsigned long long _capabilityFlags;
    long long _connectionState;
    NSMutableSet *_capabilities;
    NSString *_separatorChar;
    NSString *_selectedMailbox;
    IMAPMailbox *_selectedIMAPMailbox;
    BOOL _selectedMailboxIsReadOnly;
    unsigned long long _commandNumber;
    unsigned int _readBufferSize;
    double _expirationTime;
    MCInvocationQueue *_streamEventQueue;
    NSMutableDictionary *_unhandledTaggedResponses;
    unsigned long long _fetchSizeNextReadingIndex;
    double _fetchSizeRollingAverage;
    BOOL _fetchSizeFirstTime;
    BOOL _fetchSizeFilledHistory;
    double _fetchSizeRecentTimes[8];
    IMAPGateway *_gateway;
    unsigned long long _lastIdleSequenceNumber;
    unsigned long long _lastIdleSessionNumber;
    BOOL _createsGateway;
    BOOL _executingInternalReconnect;
    BOOL _canStartIdle;
    BOOL _sentID;
    NSRecursiveLock *_validatingLock;
    NSString *_logCategory;
}

+ (unsigned int)minimumFetchChunkSize;
+ (void)_setReadSizeParameters;
+ (id)keyPathsForValuesAffecting_gateway;
+ (id)capabilityNameForCapability:(unsigned long long)arg1;
+ (BOOL)_defaultsToBackground;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) NSString *logCategory; // @synthesize logCategory=_logCategory;
@property BOOL sentID; // @synthesize sentID=_sentID;
@property(nonatomic) BOOL canStartIdle; // @synthesize canStartIdle=_canStartIdle;
@property(retain) NSRecursiveLock *validatingLock; // @synthesize validatingLock=_validatingLock;
- (void).cxx_destruct;
- (BOOL)_recordMailboxResponse:(id)arg1 forOperation:(id)arg2 exists:(unsigned long long *)arg3 fromIDLE:(BOOL)arg4;
- (BOOL)_recordMailboxResponse:(id)arg1 forOperation:(id)arg2;
- (void)_recordResponse:(id)arg1 forOperation:(id)arg2;
- (BOOL)_recordUntaggedResponse:(id)arg1 forOperation:(id)arg2 exists:(unsigned long long *)arg3 receivedExists:(char *)arg4 fromIDLE:(BOOL)arg5;
- (BOOL)_recordUntaggedResponse:(id)arg1 forOperation:(id)arg2;
- (void)_setError:(id)arg1 forCommand:(id)arg2;
- (BOOL)_isTemporaryError:(id)arg1;
- (id)_responseFromSendingOperation:(id)arg1 receivedExists:(char *)arg2;
- (BOOL)_correctMailboxIsSelectedForOperation:(id)arg1;
- (id)description;
- (id)debugDescription;
- (id)_stateStringIncludingPII:(BOOL)arg1;
- (BOOL)executeFetch:(id)arg1;
- (void)setReadBufferSize:(unsigned int)arg1;
- (unsigned int)readBufferSize;
- (void)setReadBufferSizeFromElapsedTime:(double)arg1 bytesRead:(unsigned int)arg2;
- (double)updatedRecentAverageWithNewValue:(double)arg1;
- (void)resetTimingHistory;
- (BOOL)executeNamespace:(id)arg1;
- (BOOL)executeAppend:(id)arg1;
- (BOOL)executeUIDCopy:(id)arg1;
- (id)_responseFromSendingOperation:(id)arg1 tryCreate:(char *)arg2 receivedExists:(char *)arg3;
- (BOOL)executeUIDStore:(id)arg1;
- (BOOL)executeUIDSearch:(id)arg1;
- (BOOL)executeSelectOperation:(id)arg1;
- (BOOL)executeSubscribeOperation:(id)arg1;
- (BOOL)executeAggregateStatus:(id)arg1;
- (BOOL)executeStatus:(id)arg1;
- (BOOL)executeUIDExpunge:(id)arg1;
- (BOOL)executeDone:(id)arg1;
- (BOOL)executeIdle:(id)arg1;
- (BOOL)startIdle;
- (BOOL)isIdle;
- (void)_handleBytesAvailable;
- (BOOL)executeUnselect:(id)arg1;
- (BOOL)executeListOrLSub:(id)arg1;
- (id)_separatorCharIfAvailable;
- (void)setSeparatorChar:(id)arg1;
- (id)separatorChar;
- (BOOL)executeLogout:(id)arg1;
- (BOOL)executeLogin:(id)arg1;
- (BOOL)_supportsPlainTextSchemes;
- (id)_authenticateWithPlainTextSchemes;
- (id)_getErrorFromFailedAuthenticationResponse:(id)arg1 forOperation:(id)arg2 usingSASL:(BOOL)arg3;
- (void)discoverAccountSettings;
- (BOOL)executeStartTLS:(id)arg1;
- (BOOL)_startTLS;
- (BOOL)executeAuthenticate:(id)arg1;
- (BOOL)_authenticateWithSaslClient:(id)arg1;
- (BOOL)authenticate;
- (id)authenticationMechanisms;
- (BOOL)executeNoop:(id)arg1;
- (BOOL)executeID:(id)arg1;
- (BOOL)sendIDIfNeeded;
- (BOOL)executeCapability:(id)arg1;
- (void)_fetchCapabilitiesIfNeeded;
- (void)_addToCapabilities:(id)arg1;
- (void)_clearCapabilities;
- (void)updateCanStartIdle:(BOOL)arg1;
- (BOOL)supportsCapability:(unsigned long long)arg1;
- (id)capabilities;
- (id)_errorForResponse:(id)arg1 operation:(id)arg2;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(id)arg1 exists:(unsigned long long *)arg2 receivedExists:(char *)arg3;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(id)arg1;
- (id)_copyNextServerResponse:(id *)arg1 logFetchResponses:(BOOL)arg2;
- (BOOL)_readBytesIntoData:(id)arg1 desiredLength:(long long)arg2 error:(id *)arg3;
- (BOOL)_readLineIntoData:(id)arg1 error:(id *)arg2;
- (BOOL)_writeData:(id)arg1 dontLogBytesInRange:(struct _NSRange)arg2 error:(id *)arg3;
- (void)_socketDiedError:(id *)arg1;
- (BOOL)_sendCommand:(id)arg1 response:(id *)arg2;
- (BOOL)executeClientOperation:(id)arg1;
- (BOOL)prepareAndExecuteOperation:(id)arg1 outWrongState:(char *)arg2;
- (BOOL)shouldExecuteOperationsImmediately;
- (BOOL)isDisconnected;
- (BOOL)isValidAllowNetworking:(BOOL)arg1;
- (BOOL)needsSelectForMailboxName:(id)arg1 gateway:(id)arg2;
@property(retain, nonatomic) IMAPMailbox *selectedIMAPMailbox;
- (id)mailboxNameIfSelected:(BOOL)arg1;
- (void)_setSelectedMailbox:(id)arg1;
- (void)_transitionToState:(long long)arg1 selectedMailbox:(id)arg2 readOnly:(BOOL)arg3;
- (void)_transitionToState:(long long)arg1;
- (long long)currentConnectionState;
- (long long)connectionState;
- (id)_gateway;
@property(retain) IMAPGateway *gateway;
@property(nonatomic) BOOL isValidating;
- (BOOL)_tryToStartValidating;
- (void)quit;
- (void)disconnect;
- (void)disconnectAndNotify:(BOOL)arg1;
- (BOOL)_completeConnectionWithResult:(BOOL)arg1;
- (void)_setupConnection;
- (BOOL)_reconnect;
- (id)displayName;
@property __weak id <IMAPAccount> account;
- (void)dealloc;
- (id)init;
- (id)initWithPendingGateway:(BOOL)arg1 account:(id)arg2;
- (BOOL)_isFetchResponseValid:(id)arg1;
- (BOOL)_readDataWithRemainingByteCount:(long long)arg1 intoData:(id)arg2 error:(id *)arg3;

@end

