//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <PhotosUICore/PXObservable.h>

#import <PhotosUICore/AVPlayerItemOutputPullDelegate-Protocol.h>
#import <PhotosUICore/ISChangeObserver-Protocol.h>
#import <PhotosUICore/ISWrappedAVPlayerDelegate-Protocol.h>
#import <PhotosUICore/PXChangeObserver-Protocol.h>

@class AVPlayerItem, AVPlayerItemVideoOutput, ISWrappedAVAudioSession, ISWrappedAVPlayer, NSDate, NSError, NSMutableArray, NSMutableSet, NSObject, NSString, NSTimer, PXDisplayLink, PXVideoContentProvider;
@protocol OS_dispatch_queue, PXVideoSessionDelegate;

@interface PXVideoSession : PXObservable <ISChangeObserver, AVPlayerItemOutputPullDelegate, PXChangeObserver, ISWrappedAVPlayerDelegate>
{
    CDStruct_5f1286c4 _updateFlags;
    id _playerTimeObservationToken;
    NSTimer *_playerTimeAdvancementTimer;
    NSObject<OS_dispatch_queue> *_audioSessionQueue;
    NSMutableSet *_pixelBufferOutputTokens;
    NSMutableSet *_pixelBufferPausedOutputTokens;
    long long _tokenCounter;
    NSObject<OS_dispatch_queue> *_videoWorkQueue;
    ISWrappedAVPlayer *_videoPlayer;
    NSMutableArray *_videoViewQueue;
    BOOL _mainQueue_didFinishInitializingAudioSession;
    BOOL _isPlayable;
    BOOL _isStalled;
    BOOL _isAtBeginning;
    BOOL _isAtEnd;
    BOOL _loopingEnabled;
    BOOL _seekToBeginningAtEnd;
    BOOL _buffering;
    BOOL _isPlayerTimeAdvancing;
    BOOL _isUpdatingAudioSession;
    id <PXVideoSessionDelegate> _delegate;
    PXVideoContentProvider *_contentProvider;
    AVPlayerItem *_playerItem;
    long long _playState;
    long long _audioStatus;
    NSString *_audioSessionCategory;
    NSError *_error;
    long long _desiredPlayState;
    struct __CVBuffer *_currentPixelBuffer;
    ISWrappedAVAudioSession *_audioSession;
    NSDate *_playRequestDate;
    AVPlayerItemVideoOutput *_videoOutput;
    AVPlayerItem *_currentPlayerItem;
    id _playbackTimeRangeEndBoundaryObserver;
    PXDisplayLink *_displayLink;
    CDStruct_1b6d18a9 _videoDuration;
    CDStruct_1b6d18a9 _currentTime;
    CDStruct_1b6d18a9 _lastPlayerTime;
    CDStruct_e83c9415 _playbackTimeRange;
    struct CGAffineTransform _videoRotationTransform;
}

@property(retain, nonatomic) PXDisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) id playbackTimeRangeEndBoundaryObserver; // @synthesize playbackTimeRangeEndBoundaryObserver=_playbackTimeRangeEndBoundaryObserver;
@property(retain, nonatomic) AVPlayerItem *currentPlayerItem; // @synthesize currentPlayerItem=_currentPlayerItem;
@property(retain, nonatomic) AVPlayerItemVideoOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) NSDate *playRequestDate; // @synthesize playRequestDate=_playRequestDate;
@property(nonatomic, setter=setUpdatingAudioSession:) BOOL isUpdatingAudioSession; // @synthesize isUpdatingAudioSession=_isUpdatingAudioSession;
@property(retain, nonatomic) ISWrappedAVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(nonatomic) CDStruct_1b6d18a9 lastPlayerTime; // @synthesize lastPlayerTime=_lastPlayerTime;
@property(nonatomic, setter=setPlayerTimeAdvancing:) BOOL isPlayerTimeAdvancing; // @synthesize isPlayerTimeAdvancing=_isPlayerTimeAdvancing;
@property(nonatomic, getter=isBuffering) BOOL buffering; // @synthesize buffering=_buffering;
@property(nonatomic) struct CGAffineTransform videoRotationTransform; // @synthesize videoRotationTransform=_videoRotationTransform;
@property(nonatomic) struct __CVBuffer *currentPixelBuffer; // @synthesize currentPixelBuffer=_currentPixelBuffer;
@property(nonatomic) BOOL seekToBeginningAtEnd; // @synthesize seekToBeginningAtEnd=_seekToBeginningAtEnd;
@property(nonatomic) CDStruct_e83c9415 playbackTimeRange; // @synthesize playbackTimeRange=_playbackTimeRange;
@property(nonatomic, getter=isLoopingEnabled) BOOL loopingEnabled; // @synthesize loopingEnabled=_loopingEnabled;
@property(nonatomic) long long desiredPlayState; // @synthesize desiredPlayState=_desiredPlayState;
@property(nonatomic, setter=setAtEnd:) BOOL isAtEnd; // @synthesize isAtEnd=_isAtEnd;
@property(nonatomic, setter=setAtBeginning:) BOOL isAtBeginning; // @synthesize isAtBeginning=_isAtBeginning;
@property(nonatomic, setter=setStalled:) BOOL isStalled; // @synthesize isStalled=_isStalled;
@property(nonatomic, setter=setPlayable:) BOOL isPlayable; // @synthesize isPlayable=_isPlayable;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) NSString *audioSessionCategory; // @synthesize audioSessionCategory=_audioSessionCategory;
@property(nonatomic) long long audioStatus; // @synthesize audioStatus=_audioStatus;
@property(nonatomic) CDStruct_1b6d18a9 currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) CDStruct_1b6d18a9 videoDuration; // @synthesize videoDuration=_videoDuration;
@property(readonly, nonatomic) long long playState; // @synthesize playState=_playState;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(readonly, nonatomic) PXVideoContentProvider *contentProvider; // @synthesize contentProvider=_contentProvider;
@property(nonatomic) __weak id <PXVideoSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *debugDetailedDescription;
- (void)_handleAudioSessionOutputVolumeDidChangeFromVolume:(float)arg1 toVolume:(float)arg2;
- (void)_loadAssetTracksIfNeeded;
- (id)_playbackStateDescription;
- (void)_logPlaybackState;
- (void)_handleDidReachPlaybackTimeRangeEnd;
- (void)_removeAllVideoOutputs;
- (void)_updateAVPlayerPlayState;
- (void)_updatePlayState;
- (void)_updatePlayerItemInPlayer;
- (void)_updatePlayerItem;
- (void)_updateStalled;
- (void)_updateBuffering;
- (void)_updateAtBeginningOrEnd;
- (void)_updateRotationTransform;
- (void)_updateAudioStatus;
- (void)_setPlayabilityFromAsset;
- (void)_updatePlayability;
- (void)_handlePlayerTimeAdvancementTimer:(id)arg1;
- (void)_avPlayerTimeDidChange:(CDStruct_1b6d18a9)arg1;
- (void)_handlePreferredTransformDidLoad;
- (void)setPlayState:(long long)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setAllowsExternalPlayback:(BOOL)arg1;
@property(nonatomic) BOOL preventsSleepDuringVideoPlayback;
@property(nonatomic) float volume;
- (BOOL)_isAVPlayerPlayStateOutOfSync;
- (void)_updateDuration;
- (void)_updateDisplayLinkState;
- (void)_videoWorkQueue_updateCurrentPixelBufferWithVideoOutput:(id)arg1 outputTime:(double)arg2;
- (void)_updateCurrentPixelBuffer;
- (void)_updateVideoOutput;
- (void)_handleDisplayLink:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (void)avPlayerDidDeallocate;
- (void)avPlayer:(id)arg1 itemDidPlayToEnd:(id)arg2;
- (void)outputMediaDataWillChange:(id)arg1;
- (id)mutableChangeObject;
- (void)didPerformChanges;
- (struct CGImage *)generateSnapshotImage;
- (id)videoPlayer;
- (void)cancelLoading;
- (void)loadIfNeededWithPriority:(long long)arg1;
- (void)cancelPixelBufferOutputWithRequestIdentifier:(id)arg1;
- (void)resumePixelBufferOutputWithRequestIdentifier:(id)arg1;
- (void)pausePixelBufferOutputWithRequestIdentifier:(id)arg1;
- (void)requestPixelBufferOutputWithRequestIdentifier:(id)arg1;
- (void)dealloc;
- (void)performFinalCleanup;
- (id)init;
- (void)_initializeAudioSession;
- (id)initWithContentProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

