//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitBackingStore/APSConnectionDelegate-Protocol.h>
#import <HomeKitBackingStore/HMFLogging-Protocol.h>

@class APSConnection, CKContainer, CKContainerID, CKDatabase, CKOperationConfiguration, CKRecord, HMBCloudDatabaseStateModel, HMBLocalDatabase, HMBLocalZone, HMFUnfairLock, NAFuture, NSMutableDictionary, NSObject, NSSet, NSString;
@protocol HMBCloudDatabaseDelegate, OS_dispatch_queue;

@interface HMBCloudDatabase : HMFObject <HMFLogging, APSConnectionDelegate>
{
    BOOL _manateeContainer;
    BOOL _shouldFetchAllRecords;
    id <HMBCloudDatabaseDelegate> _delegate;
    CKContainerID *_containerID;
    CKOperationConfiguration *_defaultOperationConfiguration;
    NAFuture *_startupFuture;
    HMBLocalDatabase *_localDatabase;
    HMBLocalZone *_stateZone;
    HMFUnfairLock *_propertyLock;
    HMBCloudDatabaseStateModel *_privateDatabaseState;
    HMBCloudDatabaseStateModel *_sharedDatabaseState;
    HMBCloudDatabaseStateModel *_publicDatabaseState;
    NSMutableDictionary *_zoneStateByZoneID;
    CKContainer *_container;
    CKRecord *_currentUserRecord;
    CKDatabase *_sharedDatabase;
    CKDatabase *_privateDatabase;
    CKDatabase *_publicDatabase;
    APSConnection *_apsConnection;
    NSObject<OS_dispatch_queue> *_apsQueue;
}

+ (id)shortDescription;
+ (id)logCategory;
+ (BOOL)retryCloudKitOperationAfterError:(id)arg1 operation:(CDUnknownBlockType)arg2;
+ (id)extantDatabasesLock;
+ (id)extantDatabases;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *apsQueue; // @synthesize apsQueue=_apsQueue;
@property(retain, nonatomic) APSConnection *apsConnection; // @synthesize apsConnection=_apsConnection;
@property(readonly, nonatomic) CKDatabase *publicDatabase; // @synthesize publicDatabase=_publicDatabase;
@property(readonly, nonatomic) CKDatabase *privateDatabase; // @synthesize privateDatabase=_privateDatabase;
@property(readonly, nonatomic) CKDatabase *sharedDatabase; // @synthesize sharedDatabase=_sharedDatabase;
@property(retain, nonatomic) CKRecord *currentUserRecord; // @synthesize currentUserRecord=_currentUserRecord;
@property(readonly, nonatomic) CKContainer *container; // @synthesize container=_container;
@property(readonly, nonatomic) NSMutableDictionary *zoneStateByZoneID; // @synthesize zoneStateByZoneID=_zoneStateByZoneID;
@property(retain, nonatomic) HMBCloudDatabaseStateModel *publicDatabaseState; // @synthesize publicDatabaseState=_publicDatabaseState;
@property(retain, nonatomic) HMBCloudDatabaseStateModel *sharedDatabaseState; // @synthesize sharedDatabaseState=_sharedDatabaseState;
@property(retain, nonatomic) HMBCloudDatabaseStateModel *privateDatabaseState; // @synthesize privateDatabaseState=_privateDatabaseState;
@property(readonly, nonatomic) HMFUnfairLock *propertyLock; // @synthesize propertyLock=_propertyLock;
@property(readonly, nonatomic) HMBLocalZone *stateZone; // @synthesize stateZone=_stateZone;
@property(readonly, nonatomic) BOOL shouldFetchAllRecords; // @synthesize shouldFetchAllRecords=_shouldFetchAllRecords;
@property(readonly, nonatomic, getter=isManateeContainer) BOOL manateeContainer; // @synthesize manateeContainer=_manateeContainer;
@property(readonly, nonatomic) HMBLocalDatabase *localDatabase; // @synthesize localDatabase=_localDatabase;
@property(retain, nonatomic) NAFuture *startupFuture; // @synthesize startupFuture=_startupFuture;
@property(readonly, nonatomic) CKOperationConfiguration *defaultOperationConfiguration; // @synthesize defaultOperationConfiguration=_defaultOperationConfiguration;
@property(readonly, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(nonatomic) __weak id <HMBCloudDatabaseDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)attributeDescriptions;
- (id)logIdentifier;
- (id)operationConfigurationWithProcessingOptions:(id)arg1;
- (void)removeStateForZoneID:(id)arg1;
- (id)openExistingSharedZoneWithID:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openExistingPrivateZoneWithID:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openOrCreatePrivateZoneWithID:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (void)handleRemovedZoneIDs:(id)arg1;
- (void)handleUpdatedZonesIDs:(id)arg1;
- (void)handleCreatedZoneIDs:(id)arg1;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (id)shutdown;
- (id)performAdministrativeFetchForDatabaseScope:(long long)arg1 withForce:(BOOL)arg2;
- (id)performAdministrativeFetchForAllDatabases:(BOOL)arg1;
- (BOOL)updateServerChangeToken:(id)arg1 forZoneWithID:(id)arg2 error:(id *)arg3;
- (id)startUp;
- (id)initWithLocalDatabase:(id)arg1 containerID:(id)arg2 defaultOperationConfiguration:(id)arg3 isManateeContainer:(BOOL)arg4 shouldFetchAllRecords:(BOOL)arg5;
- (id)initWithLocalDatabase:(id)arg1 stateZone:(id)arg2 containerID:(id)arg3 defaultOperationConfiguration:(id)arg4 isManateeContainer:(BOOL)arg5 shouldFetchAllRecords:(BOOL)arg6;
- (id)declineInvitation:(id)arg1;
- (id)acceptInvitation:(id)arg1;
- (id)removeCloudZone:(id)arg1 on:(id)arg2;
- (id)createCloudZone:(id)arg1 on:(id)arg2;
- (id)fetchZonesOn:(id)arg1;
- (id)subscriptionIDForZoneID:(id)arg1;
- (id)subscriptionIDForCloudID:(id)arg1;
- (id)modifySubscriptionsUpdate:(id)arg1 remove:(id)arg2 on:(id)arg3;
- (id)fetchSubscriptionsOn:(id)arg1;
- (id)fetchUserRecordOn:(id)arg1;
- (id)acceptInvitations:(id)arg1;
- (id)fetchShareMetadataForInvitations:(id)arg1;
- (id)fetchParticipants:(id)arg1;
- (id)performCloudPullForScope:(long long)arg1;
- (id)databaseStateForDatabaseScope:(long long)arg1;
- (id)removePrivateZoneWithID:(id)arg1;
- (id)createPrivateZoneWithID:(id)arg1;
- (id)fetchZones:(BOOL)arg1;
@property(readonly, nonatomic) NSSet *sharedZoneIDs;
@property(readonly, nonatomic) NSSet *privateZoneIDs;
- (id)setSubscription:(BOOL)arg1 forZoneWithID:(id)arg2 force:(BOOL)arg3;
- (id)updateSubscriptions:(BOOL)arg1;
- (id)unregisterSharedSubscription:(BOOL)arg1;
- (id)unregisterPrivateSubscription:(BOOL)arg1;
- (id)registerSharedSubscription:(BOOL)arg1;
- (id)registerPrivateSubscription:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

