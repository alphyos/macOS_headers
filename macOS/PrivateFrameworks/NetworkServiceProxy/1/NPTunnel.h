//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSMutableDictionary, NSPAppRule, NSPConnectionInfo, NetworkServiceProxyConnectionStats;
@protocol NPTunnelDelegate, OS_dispatch_queue;

@interface NPTunnel : NSObject
{
    BOOL _isViable;
    BOOL _persistMetrics;
    id <NPTunnelDelegate> _delegate;
    NSMutableDictionary *_flows;
    NSPAppRule *_appRule;
    NSObject<OS_dispatch_queue> *_queue;
    NSDate *_connectionStartDate;
    NSPConnectionInfo *_connectionInfo;
    NetworkServiceProxyConnectionStats *_stats;
    double _timeIntervalSinceLastUsage;
    double _timeToFirstRequest;
    double _timeToFirstByte;
}

@property double timeToFirstByte; // @synthesize timeToFirstByte=_timeToFirstByte;
@property double timeToFirstRequest; // @synthesize timeToFirstRequest=_timeToFirstRequest;
@property(readonly) double timeIntervalSinceLastUsage; // @synthesize timeIntervalSinceLastUsage=_timeIntervalSinceLastUsage;
@property(retain) NetworkServiceProxyConnectionStats *stats; // @synthesize stats=_stats;
@property BOOL persistMetrics; // @synthesize persistMetrics=_persistMetrics;
@property(retain) NSPConnectionInfo *connectionInfo; // @synthesize connectionInfo=_connectionInfo;
@property(retain) NSDate *connectionStartDate; // @synthesize connectionStartDate=_connectionStartDate;
@property BOOL isViable; // @synthesize isViable=_isViable;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSPAppRule *appRule; // @synthesize appRule=_appRule;
@property(readonly) NSMutableDictionary *flows; // @synthesize flows=_flows;
@property(readonly) __weak id <NPTunnelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)flowIsFirstFlow:(id)arg1;
- (void)handleFlowUsedTunnel;
- (void)start;
@property(readonly) BOOL isConnectionAlive;
- (unsigned long long)maxDataSendSizeForFlow:(id)arg1;
- (id)createConnectionInfoIfNotCancelled;
- (id)createConnectionInfo;
@property(readonly) unsigned long long initialWindowSize;
@property(readonly) BOOL canHandleMoreData;
- (void)handleFallbackForFlow:(id)arg1;
- (BOOL)shouldTunnelFlow:(id)arg1;
- (id)directConnectionPortForFlow:(id)arg1;
- (id)directConnectionHostForFlow:(id)arg1;
- (void)handleCanHandleMoreData;
- (void)handleDisconnected;
- (void)handleConnectedNotifyDelegate:(BOOL)arg1;
- (void)acknowledgeData:(unsigned long long)arg1 sentToFlow:(id)arg2;
- (void)sendData:(id)arg1 toClientFlow:(unsigned long long)arg2;
- (void)increaseWindowSizeForFlow:(unsigned long long)arg1 byBytes:(unsigned long long)arg2;
- (long long)sendData:(id)arg1 forFlow:(id)arg2 packetsSent:(long long *)arg3;
- (void)closeFlow:(id)arg1 withError:(id)arg2;
- (void)setFlowFallbackReason:(long long)arg1;
- (void)setFlowFallbackReason:(unsigned long long)arg1 withReason:(long long)arg2;
- (id)handleFlowClosed:(unsigned long long)arg1 withFallbackReason:(long long)arg2 withFrameError:(unsigned int)arg3;
- (id)handleFlowClosed:(unsigned long long)arg1 withError:(id)arg2;
- (id)recordFlowError:(id)arg1 withFallbackReason:(long long)arg2 withFrameError:(unsigned int)arg3;
- (BOOL)hasFlow:(unsigned long long)arg1;
- (void)removeFlow:(unsigned long long)arg1;
- (unsigned long long)allocateFlowID;
- (BOOL)addNewFlow:(id)arg1;
- (id)initWithDelegate:(id)arg1;

@end

