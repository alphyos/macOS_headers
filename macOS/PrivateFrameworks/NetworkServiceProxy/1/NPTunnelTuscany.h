//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <NetworkServiceProxy/NPTunnel.h>

@class NSData, NSMutableDictionary, NSObject, NSPNetworkAgent, NWTCPConnection, NWUDPSession;
@protocol OS_dispatch_source;

@interface NPTunnelTuscany : NPTunnel
{
    NSData *_currentDayPass;
    BOOL _ignoreWaldoTimestamp;
    BOOL _shouldReportUsage;
    BOOL _isCancelled;
    NWTCPConnection *_connection;
    void *_clientRef;
    unsigned long long _nextFlowID;
    NWUDPSession *_UDPSession;
    NSData *_UDPDatagram;
    NSObject<OS_dispatch_source> *_connectionTimer;
    CDUnknownBlockType _pendingCancelCompletionHandler;
    NSMutableDictionary *_fallbackCounts;
    CDUnknownBlockType _pendingPingCompletionHandler;
    NSObject<OS_dispatch_source> *_pingTimer;
    NSPNetworkAgent *_pendingAgent;
    NSObject<OS_dispatch_source> *_usageReportTimer;
}

@property BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property(retain) NSObject<OS_dispatch_source> *usageReportTimer; // @synthesize usageReportTimer=_usageReportTimer;
@property(retain) NSPNetworkAgent *pendingAgent; // @synthesize pendingAgent=_pendingAgent;
@property(retain) NSObject<OS_dispatch_source> *pingTimer; // @synthesize pingTimer=_pingTimer;
@property(copy) CDUnknownBlockType pendingPingCompletionHandler; // @synthesize pendingPingCompletionHandler=_pendingPingCompletionHandler;
@property BOOL shouldReportUsage; // @synthesize shouldReportUsage=_shouldReportUsage;
@property(readonly) NSMutableDictionary *fallbackCounts; // @synthesize fallbackCounts=_fallbackCounts;
@property(copy) CDUnknownBlockType pendingCancelCompletionHandler; // @synthesize pendingCancelCompletionHandler=_pendingCancelCompletionHandler;
@property(retain) NSObject<OS_dispatch_source> *connectionTimer; // @synthesize connectionTimer=_connectionTimer;
@property(retain) NSData *UDPDatagram; // @synthesize UDPDatagram=_UDPDatagram;
@property(retain) NWUDPSession *UDPSession; // @synthesize UDPSession=_UDPSession;
@property unsigned long long nextFlowID; // @synthesize nextFlowID=_nextFlowID;
@property BOOL ignoreWaldoTimestamp; // @synthesize ignoreWaldoTimestamp=_ignoreWaldoTimestamp;
@property void *clientRef; // @synthesize clientRef=_clientRef;
@property(retain) NWTCPConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (BOOL)flowIsFirstFlow:(id)arg1;
- (double)timeIntervalSinceLastUsage;
- (void)handleAgentUpdate:(id)arg1;
- (void)handlePingResponseRTT:(unsigned long long)arg1 geohash:(id)arg2;
- (void)pingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)start;
- (unsigned long long)maxDataSendSizeForFlow:(id)arg1;
@property(readonly) long long lastWaldoDayPassResult;
- (void)checkForStaleWaldo:(unsigned int)arg1;
- (void)cancelWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)createConnectionInfoIfNotCancelled;
- (id)createConnectionInfo;
- (unsigned long long)initialWindowSize;
- (BOOL)canHandleMoreData;
- (void)handleDisconnected;
- (unsigned long long)allocateFlowID;
- (long long)sendData:(id)arg1 forFlow:(id)arg2 packetsSent:(long long *)arg3;
- (void)createTuscanyClient;
- (void)closeFlow:(id)arg1 withError:(id)arg2;
- (id)handleFlowClosed:(unsigned long long)arg1 withError:(id)arg2;
- (void)sendUsageReportWithSuccess:(BOOL)arg1 rtt:(unsigned long long)arg2 geohash:(id)arg3 fallbackReason:(long long)arg4;
- (void)handleFlowUsedTunnel;
@property(readonly) unsigned long long maxFrameSize;
@property(readonly) long long currentMTU;
@property(readonly) NSData *dayPass;
- (unsigned long long)serviceIDForFlow:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)destroyConnection;
- (void)handleFallbackForFlow:(id)arg1;
- (void)handleNetworkChange;
- (BOOL)shouldTunnelFlow:(id)arg1;
- (void)handleUDPSessionStateChanged;
- (void)sendDataOnUDPSession:(id)arg1;
- (void)createUDPSession;
- (void)cancelConnection;
- (void)cancelConnectionTimer;
- (void)startConnectionTimer;
- (BOOL)createConnectionWithInitialData:(id)arg1;
@property(readonly) BOOL isTFOEnabled;
- (id)initWithConfiguration:(id)arg1 delegate:(id)arg2;
- (long long)currentEdgeType;
- (void)acknowledgeData:(unsigned long long)arg1 sentToFlow:(id)arg2;
- (void)writeDataToConnection:(id)arg1;
- (void)readMinimumBytes:(unsigned long long)arg1 maximumBytes:(unsigned long long)arg2;
- (BOOL)handleReadData:(id)arg1;
- (BOOL)isConnectionAlive;
- (void)handleConnectionError:(id)arg1;
- (void)handleConnectionStateChanged;

@end

