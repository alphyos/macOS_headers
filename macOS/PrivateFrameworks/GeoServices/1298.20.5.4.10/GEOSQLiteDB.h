//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSError, NSMapTable, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface GEOSQLiteDB : NSObject
{
    char *_logFacility;
    struct sqlite3 *_db;
    NSError *_lastError;
    NSString *_dbFilePath;
    int _sqliteFlags;
    CDUnknownBlockType _setupBlock;
    NSObject<OS_dispatch_queue> *_queue;
    NSMapTable *_preparedStatements;
    BOOL _isInTransaction;
    NSMutableArray *_filesAddedDuringTransaction;
    NSMutableArray *_filesDeletedDuringTransaction;
}

- (void).cxx_destruct;
- (BOOL)deleteExternalResourceAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)writeExternalResourceWithData:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)reportSQLiteErrorCode:(int)arg1 method:(id)arg2 error:(id *)arg3;
- (id)noCopyBlobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (id)blobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (id)_blobForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2 noCopy:(BOOL)arg3;
- (id)stringForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (double)doubleForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (long long)int64ForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (int)intForColumn:(int)arg1 inStatment:(struct sqlite3_stmt *)arg2;
- (BOOL)executeInTransaction:(CDUnknownBlockType)arg1;
- (BOOL)executeStatement:(id)arg1 statementBlock:(CDUnknownBlockType)arg2;
- (BOOL)executeStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (BOOL)bindRealParameter:(const char *)arg1 toValue:(double)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)bindInt64Parameter:(const char *)arg1 toValue:(long long)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)bindIntParameter:(const char *)arg1 toValue:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)bindBlobNoCopyParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)bindBlobParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)bindTextParameter:(const char *)arg1 toValue:(id)arg2 inStatement:(struct sqlite3_stmt *)arg3 error:(id *)arg4;
- (BOOL)_bindParameter:(const char *)arg1 inStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3 withBinder:(CDUnknownBlockType)arg4;
- (BOOL)statementForKey:(id)arg1 statementBlock:(CDUnknownBlockType)arg2;
- (struct sqlite3_stmt *)statementForKey:(id)arg1;
- (void)clearStatement:(id)arg1;
- (BOOL)prepareStatement:(const char *)arg1 forKey:(id)arg2;
- (BOOL)createTable:(const char *)arg1 withDrop:(const char *)arg2;
- (void)_debug_lockDB:(id)arg1;
- (void)_debug_unlockDB:(id)arg1;
- (void)dealloc;
- (void)tearDown;
- (BOOL)setup;
- (void)_execute:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)executeAsync:(CDUnknownBlockType)arg1;
- (void)executeAsync:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)executeSync:(CDUnknownBlockType)arg1;
- (void)executeSync:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (id)initWithQueueName:(const char *)arg1 logFacility:(const char *)arg2 dbFilePath:(id)arg3 sqliteFlags:(int)arg4 setupBlock:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) BOOL isDBReady;
@property(readonly, nonatomic) NSError *lastError;
@property(readonly, nonatomic) NSString *dbFilePath;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *isolationQueue;
@property(readonly, nonatomic) struct sqlite3 *sqliteDB;

@end

