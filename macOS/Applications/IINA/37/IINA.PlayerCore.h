//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FFmpegController, NSTimer, NSUserDefaults, OS_dispatch_queue, _TtC4IINA13MPVController, _TtC4IINA20MainWindowController, _TtC4IINA23InitialWindowController;

@interface IINA.PlayerCore : NSObject
{
    // Error parsing type: , name: ud
    // Error parsing type: , name: backgroundQueue
    // Error parsing type: , name: thumbnailQueue
    // Error parsing type: , name: backgroundQueueTicket
    // Error parsing type: , name: mainWindow
    // Error parsing type: , name: initialWindow
    // Error parsing type: , name: mpvController
    // Error parsing type: , name: ffmpegController.storage
    // Error parsing type: , name: info.storage
    // Error parsing type: , name: syncPlayTimeTimer
    // Error parsing type: , name: displayOSD
    // Error parsing type: , name: isMpvTerminated
    // Error parsing type: , name: triedUsingExactSeekForCurrentFile
    // Error parsing type: , name: useExactSeekForCurrentFile
    // Error parsing type: , name: needEnterFullScreenForNextMedia
}

+ (void)checkStatusForSleep;
+ (id)activeOrNewForMenuActionWithIsAlternative:(BOOL)arg1;
+ (void)setPlayerCores:(id)arg1;
+ (id)playerCores;
+ (id)activeOrNew;
+ (id)newPlayerCore;
+ (id)active;
+ (void)setLastActive:(id)arg1;
+ (id)lastActive;
+ (id)first;
- (CDUnknownBlockType).cxx_destruct;
- (void)getChapters;
- (void)getPlaylist;
- (void)getSelectedTracks;
- (void)getTrackInfo;
- (void)generateThumbnails;
- (void)closeMainWindow;
- (void)errorOpeningFileAndCloseMainWindow;
- (void)syncUITime;
- (void)reEnableOSDAfterFileLoading;
- (void)playbackRestarted;
- (void)notifyMainWindowVideoSizeChanged;
- (void)fileLoaded;
- (void)fileStarted;
- (void)savePlaybackPosition;
- (void)execKeyCode:(id)arg1;
- (void)setSubFont:(id)arg1;
- (void)setSubEncoding:(id)arg1;
- (void)setSubTextBgColor:(id)arg1;
- (void)setSubTextBorderSize:(double)arg1;
- (void)setSubTextBorderColor:(id)arg1;
- (void)setSubTextBold:(BOOL)arg1;
- (void)setSubTextSize:(double)arg1;
- (void)setSubTextColor:(id)arg1;
- (void)setSubPos:(long long)arg1;
- (void)setSubScale:(double)arg1;
- (void)setAudioDevice:(id)arg1;
- (id)getAudioDevices;
- (void)removeAudioFilter:(id)arg1;
- (void)addAudioFilter:(id)arg1;
- (void)removeVideoFiler:(id)arg1;
- (BOOL)addVideoFilter:(id)arg1;
- (void)removeAudioEqFilter;
- (void)setAudioEqFromFilter:(id)arg1;
- (void)setCropFromFilter:(id)arg1;
- (void)setCropFromString:(id)arg1;
- (void)playChapter:(long long)arg1;
- (void)navigateInPlaylistWithNextOrPrev:(BOOL)arg1;
- (void)playFileInPlaylist:(long long)arg1;
- (void)playFile:(id)arg1;
- (void)removeFromPlaylistWithIndex:(long long)arg1;
- (void)clearPlaylist;
- (void)playlistRemove:(long long)arg1;
- (void)addToPlaylistWithPaths:(id)arg1 at:(long long)arg2;
- (void)playlistMove:(long long)arg1 to:(long long)arg2;
- (void)addToPlaylist:(id)arg1;
- (void)setSubDelay:(double)arg1;
- (void)setAudioDelay:(double)arg1;
- (void)reloadAllSubs;
- (void)loadExternalSubFile:(id)arg1;
- (void)loadExternalAudioFile:(id)arg1;
- (void)toggleDeinterlace:(BOOL)arg1;
- (void)setMirror:(BOOL)arg1;
- (void)setFlip:(BOOL)arg1;
- (void)setVideoRotate:(long long)arg1;
- (void)setVideoAspect:(id)arg1;
- (void)setSpeed:(double)arg1;
- (void)setVolume:(double)arg1 constrain:(BOOL)arg2;
- (void)toggleShuffle;
- (void)togglePlaylistLoop;
- (void)toggleFileLoop;
- (void)abLoop;
- (void)screenShot;
- (void)frameStepWithBackwards:(BOOL)arg1;
- (void)seekWithAbsoluteSecond:(double)arg1;
- (void)seekWithPercent:(double)arg1 forceExact:(BOOL)arg2;
- (void)stop;
- (void)invalidateTimer;
- (void)terminateMPVWithSendQuit:(BOOL)arg1;
- (void)unloadMainWindowVideoView;
- (void)startMPVOpenGLCB:(id)arg1;
- (void)startMPV;
- (void)openURLString:(id)arg1;
- (id)init;
@property(nonatomic) BOOL needEnterFullScreenForNextMedia; // @synthesize needEnterFullScreenForNextMedia;
@property(nonatomic) BOOL useExactSeekForCurrentFile; // @synthesize useExactSeekForCurrentFile;
@property(nonatomic) BOOL triedUsingExactSeekForCurrentFile; // @synthesize triedUsingExactSeekForCurrentFile;
@property(nonatomic) BOOL isMpvTerminated; // @synthesize isMpvTerminated;
@property(nonatomic) BOOL displayOSD; // @synthesize displayOSD;
@property(nonatomic, retain) NSTimer *syncPlayTimeTimer; // @synthesize syncPlayTimeTimer;
@property(nonatomic, retain) FFmpegController *ffmpegController;
@property(nonatomic, retain) _TtC4IINA13MPVController *mpvController; // @synthesize mpvController;
@property(nonatomic, retain) _TtC4IINA23InitialWindowController *initialWindow; // @synthesize initialWindow;
@property(nonatomic, retain) _TtC4IINA20MainWindowController *mainWindow; // @synthesize mainWindow;
@property(nonatomic) long long backgroundQueueTicket; // @synthesize backgroundQueueTicket;
@property(nonatomic, readonly) OS_dispatch_queue *thumbnailQueue; // @synthesize thumbnailQueue;
@property(nonatomic, readonly) OS_dispatch_queue *backgroundQueue; // @synthesize backgroundQueue;
@property(nonatomic, readonly) NSUserDefaults *ud; // @synthesize ud;

@end

