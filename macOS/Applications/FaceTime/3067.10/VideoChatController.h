//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "AVController.h"

#import "FTWindowDelegate-Protocol.h"
#import "InviteViewControllerDelegate-Protocol.h"
#import "NSAnimationDelegate-Protocol.h"
#import "NSUserNotificationCenterDelegate-Protocol.h"
#import "PowerSaverManagerDelegate-Protocol.h"
#import "SODarkWakeHelperDelegate-Protocol.h"
#import "VideoFooterViewControllerDelegate-Protocol.h"

@class CALayer, FTWindow, FaceDetector, InviteViewController, NSArray, NSDate, NSImage, NSLayoutConstraint, NSMutableArray, NSString, NSTimer, NSView, NSViewAnimation, NSVisualEffectView, PowerSaverManager, SODarkWakeHelper, SideViewController, TUCall, TUDialRequest, VideoFooterViewController, VideoHeaderViewController, VideoLayer, VideoLayerPair;

@interface VideoChatController : AVController <FTWindowDelegate, NSAnimationDelegate, PowerSaverManagerDelegate, NSUserNotificationCenterDelegate, SODarkWakeHelperDelegate, InviteViewControllerDelegate, VideoFooterViewControllerDelegate>
{
    BOOL _contactListIsVisible;
    BOOL _skipStoppingPreviewOnDealloc;
    BOOL _previewStarted;
    BOOL _windowIsNewInvite;
    BOOL _windowIsAnimatingFromNewInvite;
    BOOL _windowIsAnimatingFromEndChat;
    BOOL _windowIsClosing;
    BOOL _frameHasChangedSinceZoom;
    BOOL _hasShownWindow;
    BOOL _shouldShowContactList;
    BOOL _showingAlert;
    BOOL _isAnimatingLocalAspectChange;
    BOOL _localAspectIsChangingDueToRemoteRotation;
    BOOL _receivedFirstFrame;
    BOOL _receivedFirstOrientation;
    BOOL _receivedFirstRemoteFrame;
    BOOL _hasNoVideo;
    BOOL _isFullscreenLockMode;
    BOOL _isAnimatingToFullScreen;
    BOOL _isAnimatingFromFullScreen;
    BOOL _isBlockingPauseStateUpdateDuringFullscreenTransition;
    BOOL _windowShouldUpdateFullscreenModeAfterMoved;
    BOOL _conferenceEndedDuringFullScreen;
    BOOL _conferenceEndedWhileEnteringFullScreen;
    BOOL _conferenceEndedWhileExitingFullScreen;
    BOOL _conferenceEndedDuringRotation;
    BOOL _conferenceEndedDuringFadeRotation;
    BOOL _conferenceEndedOnOtherSpace;
    BOOL _autoHidingViewsAreVisible;
    BOOL _isAnimatingRotationViaWindow;
    BOOL _isAnimatingRemoteRotation;
    BOOL _isAnimatingAspectChange;
    BOOL _isAnimatingAspectChangeViaRotation;
    BOOL _hasQueuedRotationOrientation;
    BOOL _runQueuedRotationOrientationAfterPIPAspectChange;
    BOOL _isAnimatingFlip;
    BOOL _skipRotateOnFlipEnd;
    BOOL _flipInstantlyAfterFlipping;
    BOOL _mouseTrackingEnabled;
    BOOL _isAnimatingToPIP;
    BOOL _localIsPIP;
    BOOL _localIsBeingDragged;
    BOOL _pipAspectSelectedDuringConference;
    BOOL _pipForcedPortrait;
    BOOL _PIPShouldIgnoreTitleBarChanges;
    BOOL _gestureRotate;
    BOOL _gestureMagnify;
    BOOL _hadPreviousCamera;
    unsigned int _currentPIPCorner;
    int _thermalToken;
    TUCall *_queuedCall;
    NSDate *_callStartDate;
    NSDate *_callEndDate;
    FTWindow *_window;
    SideViewController *_sideViewController;
    NSLayoutConstraint *_sideViewTrailingConstraint;
    NSView *_remoteVideoView;
    NSView *_localVideoView;
    VideoLayer *_localUnderContactsVideoLayer;
    NSView *_localUnderView;
    NSView *_blurringView;
    VideoLayer *_blurringTextLayer;
    NSView *_overlayView;
    CALayer *_rootLayer;
    VideoLayerPair *_remoteVideoLayerPair;
    VideoLayer *_localVideoLayer;
    VideoLayer *_localTransitionLayer;
    VideoLayer *_remoteTransitionLayer;
    NSArray *_sidePanelAnimationViews;
    SODarkWakeHelper *_darkWakeHelper;
    CDUnknownBlockType _fullScreenCompletionBlock;
    NSString *_failureTitle;
    NSString *_failureString;
    NSViewAnimation *_contactListAnimation;
    unsigned long long _contactListAnimationPriorTopBannerARMask;
    unsigned long long _contactListAnimationPriorBottomBannerARMask;
    NSTimer *_endButtonFlashTimer;
    NSVisualEffectView *_inviteViewContainer;
    InviteViewController *_inviteViewController;
    NSLayoutConstraint *_inviteViewHeightConstraint;
    VideoHeaderViewController *_headerViewController;
    VideoFooterViewController *_footerViewController;
    NSMutableArray *_autoHidingViews;
    NSTimer *_autoHidingViewsTimer;
    TUDialRequest *_failureDialRequest;
    PowerSaverManager *_powerSaverManager;
    CALayer *_backgroundFadeLayer;
    long long _queuedRotationOrientation;
    long long _fadeRotationViaWindowCount;
    CALayer *_cinematicShadowLayer;
    NSImage *_cinematicShadowImageActive;
    NSImage *_cinematicShadowImageInactive;
    long long _previousCameraType;
    NSMutableArray *_layersToRemoveAfterChatEnds;
    NSMutableArray *_uniqueIDsOfRequestedImageData;
    NSView *_controlsView;
    NSImage *_enterFullscreenIcon;
    NSImage *_exitFullscreenIcon;
    NSImage *_pauseIcon;
    NSImage *_muteIcon;
    double _gestureRotateSum;
    double _gestureMagnifySum;
    NSString *_previousCameraID;
    FaceDetector *_faceDetector;
    struct CGSize _windowAspectRatio;
    struct CGSize _localUnderAspectRatio;
    struct CGPoint _rotationPositioningOffset;
    struct CGPoint _localDragMouseOffset;
    struct CGRect _nativeFrame;
    struct CGRect _customFrame;
    struct CGRect _priorToFullscreenWindowFrame;
    struct CGRect _priorToFullscreenScreenFrame;
    struct CGRect _rotationDestinationFrameForRootLayer;
    struct CGRect _priorToRotationWindowFrame;
}

+ (BOOL)_hasValidCamera;
+ (BOOL)_isCameraValid:(id)arg1;
+ (void)setupLocalAspectRatiosForScreen:(id)arg1;
@property(retain, nonatomic) FaceDetector *faceDetector; // @synthesize faceDetector=_faceDetector;
@property(nonatomic) int thermalToken; // @synthesize thermalToken=_thermalToken;
@property(nonatomic) BOOL hadPreviousCamera; // @synthesize hadPreviousCamera=_hadPreviousCamera;
@property(retain, nonatomic) NSString *previousCameraID; // @synthesize previousCameraID=_previousCameraID;
@property(nonatomic) double gestureMagnifySum; // @synthesize gestureMagnifySum=_gestureMagnifySum;
@property(nonatomic) BOOL gestureMagnify; // @synthesize gestureMagnify=_gestureMagnify;
@property(nonatomic) double gestureRotateSum; // @synthesize gestureRotateSum=_gestureRotateSum;
@property(nonatomic) BOOL gestureRotate; // @synthesize gestureRotate=_gestureRotate;
@property(retain, nonatomic) NSImage *muteIcon; // @synthesize muteIcon=_muteIcon;
@property(retain, nonatomic) NSImage *pauseIcon; // @synthesize pauseIcon=_pauseIcon;
@property(retain, nonatomic) NSImage *exitFullscreenIcon; // @synthesize exitFullscreenIcon=_exitFullscreenIcon;
@property(retain, nonatomic) NSImage *enterFullscreenIcon; // @synthesize enterFullscreenIcon=_enterFullscreenIcon;
@property(retain, nonatomic) NSView *controlsView; // @synthesize controlsView=_controlsView;
@property(retain, nonatomic) NSMutableArray *uniqueIDsOfRequestedImageData; // @synthesize uniqueIDsOfRequestedImageData=_uniqueIDsOfRequestedImageData;
@property(retain, nonatomic) NSMutableArray *layersToRemoveAfterChatEnds; // @synthesize layersToRemoveAfterChatEnds=_layersToRemoveAfterChatEnds;
@property(nonatomic) BOOL PIPShouldIgnoreTitleBarChanges; // @synthesize PIPShouldIgnoreTitleBarChanges=_PIPShouldIgnoreTitleBarChanges;
@property(nonatomic) BOOL pipForcedPortrait; // @synthesize pipForcedPortrait=_pipForcedPortrait;
@property(nonatomic) BOOL pipAspectSelectedDuringConference; // @synthesize pipAspectSelectedDuringConference=_pipAspectSelectedDuringConference;
@property(nonatomic) struct CGPoint localDragMouseOffset; // @synthesize localDragMouseOffset=_localDragMouseOffset;
@property(nonatomic) BOOL localIsBeingDragged; // @synthesize localIsBeingDragged=_localIsBeingDragged;
@property(nonatomic) BOOL localIsPIP; // @synthesize localIsPIP=_localIsPIP;
@property(nonatomic) BOOL isAnimatingToPIP; // @synthesize isAnimatingToPIP=_isAnimatingToPIP;
@property(nonatomic) BOOL mouseTrackingEnabled; // @synthesize mouseTrackingEnabled=_mouseTrackingEnabled;
@property(nonatomic) long long previousCameraType; // @synthesize previousCameraType=_previousCameraType;
@property(nonatomic) BOOL flipInstantlyAfterFlipping; // @synthesize flipInstantlyAfterFlipping=_flipInstantlyAfterFlipping;
@property(nonatomic) BOOL skipRotateOnFlipEnd; // @synthesize skipRotateOnFlipEnd=_skipRotateOnFlipEnd;
@property(nonatomic) BOOL isAnimatingFlip; // @synthesize isAnimatingFlip=_isAnimatingFlip;
@property(retain, nonatomic) NSImage *cinematicShadowImageInactive; // @synthesize cinematicShadowImageInactive=_cinematicShadowImageInactive;
@property(retain, nonatomic) NSImage *cinematicShadowImageActive; // @synthesize cinematicShadowImageActive=_cinematicShadowImageActive;
@property(retain, nonatomic) CALayer *cinematicShadowLayer; // @synthesize cinematicShadowLayer=_cinematicShadowLayer;
@property(nonatomic) long long fadeRotationViaWindowCount; // @synthesize fadeRotationViaWindowCount=_fadeRotationViaWindowCount;
@property(nonatomic) BOOL runQueuedRotationOrientationAfterPIPAspectChange; // @synthesize runQueuedRotationOrientationAfterPIPAspectChange=_runQueuedRotationOrientationAfterPIPAspectChange;
@property(nonatomic) BOOL hasQueuedRotationOrientation; // @synthesize hasQueuedRotationOrientation=_hasQueuedRotationOrientation;
@property(nonatomic) long long queuedRotationOrientation; // @synthesize queuedRotationOrientation=_queuedRotationOrientation;
@property(nonatomic) struct CGRect priorToRotationWindowFrame; // @synthesize priorToRotationWindowFrame=_priorToRotationWindowFrame;
@property(nonatomic) struct CGPoint rotationPositioningOffset; // @synthesize rotationPositioningOffset=_rotationPositioningOffset;
@property(nonatomic) struct CGRect rotationDestinationFrameForRootLayer; // @synthesize rotationDestinationFrameForRootLayer=_rotationDestinationFrameForRootLayer;
@property(nonatomic) BOOL isAnimatingAspectChangeViaRotation; // @synthesize isAnimatingAspectChangeViaRotation=_isAnimatingAspectChangeViaRotation;
@property(nonatomic) BOOL isAnimatingAspectChange; // @synthesize isAnimatingAspectChange=_isAnimatingAspectChange;
@property(nonatomic) BOOL isAnimatingRemoteRotation; // @synthesize isAnimatingRemoteRotation=_isAnimatingRemoteRotation;
@property(nonatomic) BOOL isAnimatingRotationViaWindow; // @synthesize isAnimatingRotationViaWindow=_isAnimatingRotationViaWindow;
@property(retain, nonatomic) CALayer *backgroundFadeLayer; // @synthesize backgroundFadeLayer=_backgroundFadeLayer;
@property(nonatomic) struct CGRect priorToFullscreenScreenFrame; // @synthesize priorToFullscreenScreenFrame=_priorToFullscreenScreenFrame;
@property(nonatomic) struct CGRect priorToFullscreenWindowFrame; // @synthesize priorToFullscreenWindowFrame=_priorToFullscreenWindowFrame;
@property(retain, nonatomic) PowerSaverManager *powerSaverManager; // @synthesize powerSaverManager=_powerSaverManager;
@property(retain, nonatomic) TUDialRequest *failureDialRequest; // @synthesize failureDialRequest=_failureDialRequest;
@property(retain, nonatomic) NSTimer *autoHidingViewsTimer; // @synthesize autoHidingViewsTimer=_autoHidingViewsTimer;
@property(nonatomic) BOOL autoHidingViewsAreVisible; // @synthesize autoHidingViewsAreVisible=_autoHidingViewsAreVisible;
@property(retain, nonatomic) NSMutableArray *autoHidingViews; // @synthesize autoHidingViews=_autoHidingViews;
@property(retain, nonatomic) VideoFooterViewController *footerViewController; // @synthesize footerViewController=_footerViewController;
@property(retain, nonatomic) VideoHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(retain, nonatomic) NSLayoutConstraint *inviteViewHeightConstraint; // @synthesize inviteViewHeightConstraint=_inviteViewHeightConstraint;
@property(retain, nonatomic) InviteViewController *inviteViewController; // @synthesize inviteViewController=_inviteViewController;
@property(retain, nonatomic) NSVisualEffectView *inviteViewContainer; // @synthesize inviteViewContainer=_inviteViewContainer;
@property(retain, nonatomic) NSTimer *endButtonFlashTimer; // @synthesize endButtonFlashTimer=_endButtonFlashTimer;
@property(nonatomic) unsigned long long contactListAnimationPriorBottomBannerARMask; // @synthesize contactListAnimationPriorBottomBannerARMask=_contactListAnimationPriorBottomBannerARMask;
@property(nonatomic) unsigned long long contactListAnimationPriorTopBannerARMask; // @synthesize contactListAnimationPriorTopBannerARMask=_contactListAnimationPriorTopBannerARMask;
@property(retain, nonatomic) NSViewAnimation *contactListAnimation; // @synthesize contactListAnimation=_contactListAnimation;
@property(retain, nonatomic) NSString *failureString; // @synthesize failureString=_failureString;
@property(retain, nonatomic) NSString *failureTitle; // @synthesize failureTitle=_failureTitle;
@property(nonatomic) BOOL conferenceEndedOnOtherSpace; // @synthesize conferenceEndedOnOtherSpace=_conferenceEndedOnOtherSpace;
@property(nonatomic) BOOL conferenceEndedDuringFadeRotation; // @synthesize conferenceEndedDuringFadeRotation=_conferenceEndedDuringFadeRotation;
@property(nonatomic) BOOL conferenceEndedDuringRotation; // @synthesize conferenceEndedDuringRotation=_conferenceEndedDuringRotation;
@property(nonatomic) BOOL conferenceEndedWhileExitingFullScreen; // @synthesize conferenceEndedWhileExitingFullScreen=_conferenceEndedWhileExitingFullScreen;
@property(nonatomic) BOOL conferenceEndedWhileEnteringFullScreen; // @synthesize conferenceEndedWhileEnteringFullScreen=_conferenceEndedWhileEnteringFullScreen;
@property(nonatomic) BOOL conferenceEndedDuringFullScreen; // @synthesize conferenceEndedDuringFullScreen=_conferenceEndedDuringFullScreen;
@property(nonatomic) BOOL windowShouldUpdateFullscreenModeAfterMoved; // @synthesize windowShouldUpdateFullscreenModeAfterMoved=_windowShouldUpdateFullscreenModeAfterMoved;
@property(nonatomic) BOOL isBlockingPauseStateUpdateDuringFullscreenTransition; // @synthesize isBlockingPauseStateUpdateDuringFullscreenTransition=_isBlockingPauseStateUpdateDuringFullscreenTransition;
@property(nonatomic) BOOL isAnimatingFromFullScreen; // @synthesize isAnimatingFromFullScreen=_isAnimatingFromFullScreen;
@property(nonatomic) BOOL isAnimatingToFullScreen; // @synthesize isAnimatingToFullScreen=_isAnimatingToFullScreen;
@property(copy, nonatomic) CDUnknownBlockType fullScreenCompletionBlock; // @synthesize fullScreenCompletionBlock=_fullScreenCompletionBlock;
@property(nonatomic) BOOL isFullscreenLockMode; // @synthesize isFullscreenLockMode=_isFullscreenLockMode;
@property(nonatomic) BOOL hasNoVideo; // @synthesize hasNoVideo=_hasNoVideo;
@property(nonatomic) BOOL receivedFirstRemoteFrame; // @synthesize receivedFirstRemoteFrame=_receivedFirstRemoteFrame;
@property(nonatomic) BOOL receivedFirstOrientation; // @synthesize receivedFirstOrientation=_receivedFirstOrientation;
@property(nonatomic) BOOL receivedFirstFrame; // @synthesize receivedFirstFrame=_receivedFirstFrame;
@property(retain, nonatomic) SODarkWakeHelper *darkWakeHelper; // @synthesize darkWakeHelper=_darkWakeHelper;
@property(nonatomic) BOOL localAspectIsChangingDueToRemoteRotation; // @synthesize localAspectIsChangingDueToRemoteRotation=_localAspectIsChangingDueToRemoteRotation;
@property(nonatomic) BOOL isAnimatingLocalAspectChange; // @synthesize isAnimatingLocalAspectChange=_isAnimatingLocalAspectChange;
@property(retain, nonatomic) NSArray *sidePanelAnimationViews; // @synthesize sidePanelAnimationViews=_sidePanelAnimationViews;
@property(nonatomic) unsigned int currentPIPCorner; // @synthesize currentPIPCorner=_currentPIPCorner;
@property(retain, nonatomic) VideoLayer *remoteTransitionLayer; // @synthesize remoteTransitionLayer=_remoteTransitionLayer;
@property(retain, nonatomic) VideoLayer *localTransitionLayer; // @synthesize localTransitionLayer=_localTransitionLayer;
@property(retain, nonatomic) VideoLayer *localVideoLayer; // @synthesize localVideoLayer=_localVideoLayer;
@property(retain, nonatomic) VideoLayerPair *remoteVideoLayerPair; // @synthesize remoteVideoLayerPair=_remoteVideoLayerPair;
@property(retain, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(retain, nonatomic) NSView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) VideoLayer *blurringTextLayer; // @synthesize blurringTextLayer=_blurringTextLayer;
@property(retain, nonatomic) NSView *blurringView; // @synthesize blurringView=_blurringView;
@property(nonatomic) struct CGSize localUnderAspectRatio; // @synthesize localUnderAspectRatio=_localUnderAspectRatio;
@property(retain, nonatomic) NSView *localUnderView; // @synthesize localUnderView=_localUnderView;
@property(retain, nonatomic) VideoLayer *localUnderContactsVideoLayer; // @synthesize localUnderContactsVideoLayer=_localUnderContactsVideoLayer;
@property(retain, nonatomic) NSView *localVideoView; // @synthesize localVideoView=_localVideoView;
@property(retain, nonatomic) NSView *remoteVideoView; // @synthesize remoteVideoView=_remoteVideoView;
@property(retain, nonatomic) NSLayoutConstraint *sideViewTrailingConstraint; // @synthesize sideViewTrailingConstraint=_sideViewTrailingConstraint;
@property(retain, nonatomic) SideViewController *sideViewController; // @synthesize sideViewController=_sideViewController;
@property(nonatomic) struct CGSize windowAspectRatio; // @synthesize windowAspectRatio=_windowAspectRatio;
@property(nonatomic) BOOL showingAlert; // @synthesize showingAlert=_showingAlert;
@property(nonatomic) BOOL shouldShowContactList; // @synthesize shouldShowContactList=_shouldShowContactList;
@property(nonatomic) BOOL hasShownWindow; // @synthesize hasShownWindow=_hasShownWindow;
@property(nonatomic) BOOL frameHasChangedSinceZoom; // @synthesize frameHasChangedSinceZoom=_frameHasChangedSinceZoom;
@property(nonatomic) struct CGRect customFrame; // @synthesize customFrame=_customFrame;
@property(nonatomic) struct CGRect nativeFrame; // @synthesize nativeFrame=_nativeFrame;
@property(nonatomic) BOOL windowIsClosing; // @synthesize windowIsClosing=_windowIsClosing;
@property(nonatomic) BOOL windowIsAnimatingFromEndChat; // @synthesize windowIsAnimatingFromEndChat=_windowIsAnimatingFromEndChat;
@property(nonatomic) BOOL windowIsAnimatingFromNewInvite; // @synthesize windowIsAnimatingFromNewInvite=_windowIsAnimatingFromNewInvite;
@property(nonatomic) BOOL windowIsNewInvite; // @synthesize windowIsNewInvite=_windowIsNewInvite;
@property(retain, nonatomic) FTWindow *window; // @synthesize window=_window;
@property(nonatomic) BOOL previewStarted; // @synthesize previewStarted=_previewStarted;
@property(retain, nonatomic) NSDate *callEndDate; // @synthesize callEndDate=_callEndDate;
@property(retain, nonatomic) NSDate *callStartDate; // @synthesize callStartDate=_callStartDate;
@property(retain, nonatomic) TUCall *queuedCall; // @synthesize queuedCall=_queuedCall;
@property(nonatomic) BOOL skipStoppingPreviewOnDealloc; // @synthesize skipStoppingPreviewOnDealloc=_skipStoppingPreviewOnDealloc;
@property(nonatomic) BOOL contactListIsVisible; // @synthesize contactListIsVisible=_contactListIsVisible;
- (void).cxx_destruct;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)pauseChanged:(id)arg1;
- (void)screenPropertiesChanged:(id)arg1;
- (void)cameraTypeChanged:(id)arg1;
- (void)mediaPropertiesChanged:(id)arg1;
- (id)_remoteTransitionLayerFromLayer:(id)arg1;
- (void)callStatusChanged:(id)arg1;
- (void)callConnected:(id)arg1;
- (void)remoteiMessageAddressChanged:(id)arg1;
- (void)remoteCameraChanged:(long long)arg1;
- (BOOL)remoteOrientationChanged:(long long)arg1 animate:(BOOL)arg2 contentsRect:(id)arg3;
- (void)animateAspectChangedFrom:(struct CGSize)arg1 toAspect:(struct CGSize)arg2;
- (BOOL)remoteAspectChanged:(struct CGSize)arg1;
- (struct CGRect)_contentsRectForLayer:(id)arg1 withAspectRatio:(struct CGSize)arg2;
- (void)_numberOfFacesChanged:(id)arg1;
- (void)_selectBestMicrophoneForCamera:(id)arg1;
- (BOOL)_isAnimationInProgress;
- (void)_updateUIForNewChatStateAfterHint;
- (void)_updateUIForNewChatState;
- (void)_flashEndButton:(id)arg1;
- (void)_positionPIPAndShowEndedUI;
- (void)_cleanupRemoteLayers;
- (void)footerViewControllerFullscreened:(id)arg1;
- (void)footerViewControllerMessaged:(id)arg1;
- (void)footerViewControllerCallPromptCalled:(id)arg1;
- (void)footerViewControllerCanceled:(id)arg1;
- (void)footerViewControllerCalledBack:(id)arg1;
- (void)footerViewControllerMuted:(id)arg1;
- (void)footerViewControllerEnded:(id)arg1;
- (void)footerViewControllerDeclined:(id)arg1;
- (void)inviteViewController:(id)arg1 sendMessage:(id)arg2;
- (void)inviteViewControllerMessageCanceled:(id)arg1;
- (void)inviteViewControllerMouseExited:(id)arg1;
- (void)inviteViewControllerMouseEntered:(id)arg1;
- (void)inviteViewController:(id)arg1 remindMeAfter:(double)arg2;
- (void)inviteViewControllerRequestedMessageUI:(id)arg1;
- (void)inviteViewControllerDeclined:(id)arg1;
- (void)inviteViewControllerAccepted:(id)arg1;
- (void)clamshellOpened;
- (void)externalDisplayAttached;
- (void)lockScreenWillBeDisplayed;
- (void)screenShieldWasLowered;
- (void)screenShieldWasRaised;
- (void)mediaStalledChanged:(id)arg1;
- (void)videoQualityChanged:(id)arg1;
- (void)_avChatFirstFrameNotification:(id)arg1;
- (BOOL)userIsDraggingWindow;
- (BOOL)videoIsInitialized;
- (BOOL)hasActiveAVChat;
- (BOOL)isAnimatingToFromFullScreen;
- (void)powerSaverStateDidChange;
- (void)makeCallToItem:(id)arg1;
- (struct CGSize)_adjustWidthToKeepAspectRatio:(struct CGSize)arg1;
- (struct CGSize)_adjustHeightToKeepAspectRatio:(struct CGSize)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (void)windowStoppedDragging:(id)arg1;
- (struct CGRect)window:(id)arg1 willSetFrame:(struct CGRect)arg2;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)_windowDidOrderOnScreen:(id)arg1;
- (void)windowWillOrderOnScreen:(id)arg1;
- (void)_makeWindowAlert:(BOOL)arg1 withAnimation:(unsigned long long)arg2;
- (void)_makeWindowAlert:(BOOL)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)_windowEnteredFullscreen:(id)arg1;
- (void)_windowWillEnterFullscreen:(id)arg1;
- (void)_windowExitedFullscreen:(id)arg1;
- (void)_screenChangedParameters:(id)arg1;
- (void)_activeSpaceDidChange:(id)arg1;
- (void)_updatePauseState;
- (void)animationDidEnd:(id)arg1;
- (void)_showBlurringLayer:(BOOL)arg1;
- (void)_outgoingCallInfoChanged:(id)arg1;
- (void)_willShowSheet:(id)arg1;
- (void)_appFinishedProcessingGURLEvent:(id)arg1;
- (void)_avControllerUpdated:(id)arg1;
- (void)sendDeclineWithMessageMessage;
- (void)dismissDeclineWithMessageUI;
- (void)requestDeclineWithMessageUI;
- (void)togglePortraitLandscape;
- (void)togglePortraitLandscape:(id)arg1;
- (void)_setLocalPortrait;
- (void)_setLocalWide;
- (void)_setLocalAspectRatio:(struct CGSize)arg1;
- (void)_cleanupFromAspectChange;
- (void)_prepareForAspectChangeTo:(struct CGSize)arg1 withZRot:(double)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)togglePause:(id)arg1;
- (void)toggleMute;
- (void)toggleMute:(id)arg1;
- (void)vccToggleFullScreen:(id)arg1;
- (void)_setFullScreenModeEnabled:(BOOL)arg1;
- (void)_toggleFullScreenWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)toggleFullScreen;
- (void)dismissFailureOrCallPromptUI;
- (void)endChat:(id)arg1;
- (BOOL)_shouldCloseWindowOnCallEnd;
- (void)_cameraChanged:(id)arg1;
- (void)_localAttributesChanged:(id)arg1;
- (void)_endContactListAnimation;
- (void)_animateContactList:(BOOL)arg1;
- (void)_animateContactListWithStartFrame:(struct CGRect)arg1 endFrame:(struct CGRect)arg2;
- (void)_clearContactListAnimation;
- (void)_tearDownLocalUnder;
- (void)_setupLocalUnderPositionedBelow:(id)arg1;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (struct CGRect)_fitVideoAndControlsToFullscreenWindow;
- (double)_cinematicShadowVerticalOffset;
- (double)_cinematicShadowSize;
- (id)_newCinematicShadowImageWithAlpha:(double)arg1 blurRadius:(double)arg2;
- (void)_prepareCinematicFadeRotationOfLayer:(id)arg1;
- (void)_setupShadowLayerWithBounds:(struct CGRect)arg1 position:(struct CGPoint)arg2;
- (void)_prepareCinematicRotationOfLayer:(id)arg1 toOrientation:(unsigned int)arg2;
- (struct CGRect)_validateWindowFrame:(struct CGRect)arg1 withScreenFrame:(struct CGRect)arg2;
- (void)_makeWindowNormalWithFrame:(struct CGRect)arg1;
- (void)_makeWindowClearFullScreenAndGetOriginalRect:(struct CGRect *)arg1 newContentRect:(struct CGRect *)arg2;
- (void)setPIPLandscapeAspectRatio:(struct CGSize)arg1;
- (void)setPIPPortraitAspectRatio:(struct CGSize)arg1;
- (void)setWindowAspectRatio:(struct CGSize)arg1 forOrientation:(unsigned int)arg2;
- (void)_flipLayer:(id)arg1 reverseSide:(id)arg2;
- (void)_mainThreadOrientationChanged;
- (void)_checkQueuedAnimations;
- (void)_checkFlipInstantlyAfterFlipping;
- (void)_fadeLayer:(id)arg1 toLayer:(id)arg2 toContentsRect:(id)arg3;
- (void)_rotateLayer:(id)arg1 toOrientation:(unsigned int)arg2 animated:(BOOL)arg3;
- (void)_rotateLayer:(id)arg1 toOrientation:(unsigned int)arg2 animated:(BOOL)arg3 contentsRect:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (double)_radiansForOrientation:(unsigned int)arg1;
- (void)_positionLocalLayersWithOffset:(struct CGPoint)arg1;
- (void)_clearEndButtonFlashTimer;
- (void)_setLocalIsPIP:(BOOL)arg1;
- (void)_setVideoLayerFrames;
- (void)_clearVideoLayerAnimations;
- (void)_fixBadgeZRotationForLayer:(id)arg1;
- (struct CGRect)_frameForLayer:(id)arg1 forRootFrame:(struct CGRect)arg2;
- (double)_PIPBorderSize;
- (void)_pushPIPToCurrentCorner;
- (BOOL)_shouldRaisePIPForBottomControls;
- (struct CGRect)_pushRect:(struct CGRect)arg1 toCorner:(unsigned int)arg2 inRect:(struct CGRect)arg3 horizontalPadding:(double)arg4 verticalPadding:(double)arg5;
- (struct CGRect)_pushFrameToNC:(struct CGRect)arg1;
- (unsigned int)_closestPIPCorner;
- (struct CGRect)_fitRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2;
- (void)_performConferenceStartPIPAnimation;
- (void)_performConferenceStartPIPAnimationIfReady;
- (void)_unmessupAVCSublayers;
- (void)magnifyWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)_updateAspectTogglerWithMousePositionInRoot:(struct CGPoint)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_showAutoHidingViews:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_hideAutoHidingViews:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)_fullscreenWindowFrame;
- (void)_removeHidingView:(id)arg1;
- (void)_addHidingView:(id)arg1;
- (BOOL)_hasSidePanels;
- (void)_updateWindowSizeConstraintsForOrientation:(unsigned int)arg1;
- (id)_remoteHiddenLayer;
- (id)_remoteShowingLayer;
- (struct CGRect)_morphRectFrom:(struct CGRect)arg1 toRectWithAspectRatio:(struct CGSize)arg2 withMinimumSize:(struct CGSize)arg3;
- (struct CGRect)_morphRectFrom:(struct CGRect)arg1 toRectWithAspectRatio:(struct CGSize)arg2;
- (unsigned int)_windowOrientation;
- (void)_endActiveCallsNotification:(id)arg1;
- (void)forceReceivedFirstFrame;
- (void)prepareForAccountDeletion;
- (void)showCallPrompt:(id)arg1;
- (void)cancel:(id)arg1;
- (void)doCancel;
- (BOOL)_canPause;
- (BOOL)_canMute;
- (BOOL)_isMute;
- (void)updateUI;
- (void)exitFullscreen;
- (BOOL)isWindowFullScreen;
- (BOOL)isFullscreen;
- (BOOL)_windowIsFullscreen;
- (BOOL)hasReplyWithMessageUI;
- (BOOL)hasCallPromptUI;
- (BOOL)hasFailureUI;
- (BOOL)hasNoVideoUI;
- (void)showWindow;
- (void)showWindowAsNotification;
- (void)close;
- (void)notifyHasSetupAV;
- (void)_updateUI;
- (void)_updateCameraState;
- (void)unpauseCall;
- (void)pauseCall;
- (id)_nsCameraDisabledImage;
- (void)_removeAllIncomingCallNotifications;
- (void)requestMessageUI;
- (void)_restoreWindowFrame;
- (void)_saveWindowFrame;
- (void)_checkAutoAccept;
- (void)setCall:(id)arg1;
- (void)putCurrentCallOnHoldAndAddCall:(id)arg1;
- (void)_endAndCleanupChat;
- (void)_createRemoteLayersIfNecessary;
- (void)createLocalLayerIfNecessary;
- (void)_showWindow;
- (void)_createWindowWithSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2;
- (void)_createInviteWindow;
- (void)_createWindow;
- (void)dealloc;
- (id)init;
- (void)_sharedSetup;
- (void)_setupCinematicShadowImages;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

