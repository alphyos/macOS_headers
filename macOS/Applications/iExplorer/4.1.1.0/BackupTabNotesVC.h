//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "IEBackupsSubviewViewController.h"

#import "IEMainVCProtocol-Protocol.h"
#import "NSOutlineViewDataSource-Protocol.h"
#import "NSOutlineViewDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"
#import "WebPolicyDelegate-Protocol.h"

@class IENoteDecryptor, MPFilteredItemManager, NSArray, NSAttributedString, NSButton, NSMenu, NSMenuItem, NSOperationQueue, NSOutlineView, NSProgressIndicator, NSString, NSTableColumn, NSTableView, NSView, WebView;

__attribute__((visibility("hidden")))
@interface BackupTabNotesVC : IEBackupsSubviewViewController <NSTableViewDataSource, NSTableViewDelegate, NSOutlineViewDataSource, NSOutlineViewDelegate, IEMainVCProtocol, WebPolicyDelegate>
{
    NSTableView *tv_notes;
    NSOutlineView *ov_folders;
    NSButton *saveToFileButton;
    NSTableColumn *noteColumn;
    NSTableColumn *isEncryptedColumn;
    NSTableColumn *dateColumn;
    WebView *wv_content;
    NSAttributedString *attrStr;
    MPFilteredItemManager *notesFilterManager;
    NSProgressIndicator *_pi_contentView;
    NSOperationQueue *_opQueue;
    NSButton *_btn_ExportAll;
    NSButton *_btn_ExportFolder;
    NSButton *_btn_ExportNote;
    NSMenu *_menu_Export;
    NSMenuItem *_mi_ExportPDF;
    NSMenuItem *_mi_ExportTXT;
    NSArray *_notes;
    NSArray *_sortedAccounts;
    NSArray *_folders;
    IENoteDecryptor *_decryptor;
    NSView *_v_noteContainer;
    NSView *_v_noteContent;
    NSView *_v_noteLocked;
}

@property(retain, nonatomic) NSView *v_noteLocked; // @synthesize v_noteLocked=_v_noteLocked;
@property(retain, nonatomic) NSView *v_noteContent; // @synthesize v_noteContent=_v_noteContent;
@property(nonatomic) __weak NSView *v_noteContainer; // @synthesize v_noteContainer=_v_noteContainer;
@property(retain, nonatomic) IENoteDecryptor *decryptor; // @synthesize decryptor=_decryptor;
@property(retain, nonatomic) NSArray *folders; // @synthesize folders=_folders;
@property(retain, nonatomic) NSArray *sortedAccounts; // @synthesize sortedAccounts=_sortedAccounts;
@property(readonly, nonatomic) NSArray *notes; // @synthesize notes=_notes;
@property(retain, nonatomic) NSAttributedString *attrStr; // @synthesize attrStr;
- (void).cxx_destruct;
- (void)refreshDataForItem:(id)arg1;
- (void)updateToSearchString:(id)arg1;
- (void)showMultipleExportFailureAlertWithSuccessCount:(unsigned long long)arg1 total:(unsigned long long)arg2;
- (void)showMultipleExportSuccessAlertWithDirectoryURL:(id)arg1;
- (void)showSingleExportFailureAlert;
- (void)exportedNoteAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)showSingleExportSuccessAlertWithFileURL:(id)arg1;
- (BOOL)includeFolderInExportAll:(id)arg1 skipLocked:(BOOL)arg2;
- (BOOL)includeFolderInExportAll:(id)arg1;
- (unsigned long long)countNotesForExportAllWithSkipLocked:(BOOL)arg1;
- (void)completeAllNotesExportWithBaseFolder:(id)arg1 exportType:(int)arg2 skipLocked:(BOOL)arg3;
- (void)exportAllNotesTo:(int)arg1 baseFolder:(id)arg2;
- (void)exportAllNotesTo:(int)arg1;
- (void)completeSelectedFolderExportWithBaseFolder:(id)arg1 exportType:(int)arg2 skipLocked:(BOOL)arg3;
- (void)performSelectedFolderExportWithFolder:(id)arg1 exportType:(int)arg2;
- (void)exportSelectedFolderTo:(int)arg1;
- (void)exportSelectedNoteTo:(int)arg1;
- (void)prepareForExportLockedNote:(id)arg1 allLocked:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)exportAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)showContinueExportLockedNotesAlertWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showExportFailedLockedNotesAlert;
- (void)exportAllNotesToTXT;
- (void)exportSelectedFolderToTXT;
- (void)exportSelectedNoteToTXT;
- (void)exportAllNotesToPDF;
- (void)exportSelectedFolderToPDF;
- (void)exportSelectedNoteToPDF;
- (void)showMenu:(id)arg1 forButton:(id)arg2;
@property(readonly, nonatomic) BOOL shouldDisableExportSelectedNote;
- (void)exportNotePressed:(id)arg1;
- (void)exportFolderPressed:(id)arg1;
- (void)exportAllPressed:(id)arg1;
- (void)hideBusyIndicator;
- (void)showBusyIndicator;
- (void)displayNote:(id)arg1;
- (void)notesTableDoubleClick:(id)arg1;
- (void)notesTableSelectionDidChange;
- (void)refreshNoteTable;
- (void)reloadNoteTable;
- (void)promptUserForPasswordWithNote:(id)arg1 message:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)btn_viewLockedNoteClicked:(id)arg1;
- (void)hideLockedView;
- (void)showLockedView;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)clearAllNotes;
- (void)sortAccounts:(id)arg1 folders:(id)arg2;
- (void)displayAccountsAndFolders;
- (void)loadDatabaseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)awakeFromNib;
- (void)setup;
- (id)initWithParentTab:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

