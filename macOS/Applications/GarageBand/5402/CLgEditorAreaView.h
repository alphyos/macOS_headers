//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MAToolKit/MAKitView.h>

#import "CLgFocusStateObserver-Protocol.h"
#import "MAAccessibilityFauxUIElementParent-Protocol.h"

@class CLgDocwEditorView, CLgEditorAreaTabView, CLgEditorAreaViewDividerIndicator, CLgUnilibFocusView, CLgUnilibInspectorView, NSArray, NSString;

@interface CLgEditorAreaView : MAKitView <MAAccessibilityFauxUIElementParent, CLgFocusStateObserver>
{
    CLgDocwEditorView *_mainEditorView;
    CLgEditorAreaTabView *_editorTabView;
    BOOL _tabViewIsCollapsed;
    struct CGRect _dividerRect;
    unsigned long long _prevSelectedMidiEditorViewID;
    unsigned long long _prevSelectedAudioEditorViewID;
    CLgUnilibInspectorView *_inspectorView;
    double _tabViewPercent[4];
    BOOL _editorAreaWasVisibleWhenBeatsEditorWasOpened;
}

+ (void)queueUpdateEditorAndTabViewVisibilityNotification;
@property(nonatomic) unsigned long long prevSelectedAudioEditorViewID; // @synthesize prevSelectedAudioEditorViewID=_prevSelectedAudioEditorViewID;
@property(nonatomic) unsigned long long prevSelectedMidiEditorViewID; // @synthesize prevSelectedMidiEditorViewID=_prevSelectedMidiEditorViewID;
- (void)rebuildControlHeader1:(id)arg1;
- (void)windowDidResignKey1:(id)arg1;
- (void)windowDidBecomeKey1:(id)arg1;
- (void)unilibView:(id)arg1 changedFirstResponderStatus:(BOOL)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)setUnilibViewsUserData:(id)arg1;
- (BOOL)isSubviewOfMultiArea:(id)arg1;
- (BOOL)windowPositionIsOnMultiArea:(struct CGPoint)arg1;
- (BOOL)isSubviewOfMainArea:(id)arg1;
- (BOOL)windowPositionIsOnMainArea:(struct CGPoint)arg1;
- (void)showEditorArea2;
- (BOOL)showEditorView2:(unsigned long long)arg1 changeFocus:(BOOL)arg2;
- (BOOL)hideEditorArea2;
- (long long)localDocwTypeForEditorDrag;
- (id)srcImageViewForEditorDrag;
- (void)editorAreaRects:(struct CGRect *)arg1;
- (void)editorAreaRects:(struct CGRect *)arg1 forEditorViewID:(unsigned long long)arg2;
- (void)editorAreaRects:(struct CGRect *)arg1 tabViewPercent:(double)arg2;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)mouseDown:(id)arg1;
- (void)resetCursorRects;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)mainDocwEditor;
- (id)editorView:(unsigned long long)arg1;
@property(readonly, nonatomic) CLgDocwEditorView *frontDocwEditor;
@property(readonly, nonatomic) NSArray *allUnilibViews_notSorted2;
- (BOOL)unilibViewIsVisible2:(id)arg1;
@property(readonly, nonatomic) CLgUnilibFocusView *mainUnilibView;
@property(readonly, nonatomic) CLgUnilibFocusView *frontUnilibView;
@property(readonly, nonatomic) CLgDocwEditorView *mainEditorView;
- (void)editorAreaRects:(struct CGRect *)arg1 tabViewPercent:(double)arg2 maxTabViewHeight:(double)arg3 minTabViewHeight:(double)arg4;
- (void)editorBtnMatrixAction:(unsigned long long)arg1 changeFocus:(BOOL)arg2;
- (double)tabViewPercentForEditorViewID:(unsigned long long)arg1;
- (double)tabViewPercentFor:(int)arg1;
- (void)setTabViewPercent:(double)arg1 forEditorViewID:(unsigned long long)arg2;
- (int)tabViewPercentEditorForEditorViewID:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long selectedEditorViewIDIgnoreCollapsedState;
@property(readonly, nonatomic) unsigned long long selectedEditorViewID;
- (void)_selectEditorView:(unsigned long long)arg1 changeFocus:(BOOL)arg2;
- (void)toggleEditorView2;
@property(readonly, nonatomic) BOOL isEditorViewVisible2;
- (BOOL)toggleEditorView2:(unsigned long long)arg1;
- (BOOL)isEditorViewVisible2:(unsigned long long)arg1;
- (void)toggleEditorArea2;
@property(readonly, nonatomic) BOOL isEditorAreaVisible2;
- (void)endCoherentScreenUpdate;
- (void)beginCoherentScreenUpdate;
@property(readonly, nonatomic) double minEditorTabViewHeight;
@property(readonly, nonatomic) double maxEditorTabViewHeight;
@property(readonly, nonatomic) double maxEditorViewHeight;
@property(readonly, nonatomic) double minEditorViewHeight;
@property(readonly, nonatomic) double minMainViewHeight;
- (void)showTabViewForEditorViewID:(unsigned long long)arg1 animating:(BOOL)arg2;
- (void)updateTabViewIfWindowShown;
- (void)updateTabView;
- (void)hideTabView_animating:(BOOL)arg1;
- (void)drawFocusRect:(BOOL)arg1 forView:(id)arg2;
- (struct CGRect)focusRectForView:(id)arg1 asMainUnilibView:(BOOL)arg2;
- (BOOL)initAsOneEditor:(id)arg1 docwType:(long long)arg2 docwLayout:(id)arg3;
- (BOOL)initAsMultiEditor:(id)arg1 docwLayout:(id)arg2;
- (id)createEditorWithFrame:(struct CGRect)arg1 layoutCreator:(id)arg2 docwType:(long long)arg3 useRoundBottom:(BOOL)arg4 useRoundTop:(BOOL)arg5 asSingleEditor:(BOOL)arg6;
- (void)closeBeatMidiEditor;
- (void)openBeatMidiEditor;
- (void)closeBeatAudioEditor;
- (void)openBeatAudioEditor;
- (void)gridFocussedChangedNotification:(id)arg1;
- (void)handle_UM_WINDOW_Notification:(id)arg1;
- (void)updateEditorAndTabViewVisibilityNotification:(id)arg1;
- (void)updateEditorAndTabViewVisibility;
- (void)layoutManagerNotification:(id)arg1;
- (void)selectionChangedNotification:(id)arg1;
- (void)setTabButtonsViewHidden:(BOOL)arg1;
- (void)recordingStartedNotification:(id)arg1;
- (BOOL)noEditorSwitching;
- (unsigned long long)_editorViewIDForFirstSelectedRegionOrRecordingTrack;
- (unsigned long long)_editorViewIDForRecordingTrack;
- (void)closeAudioEditorWindowIfOpen;
- (void)closeSampleEditorWindowIfOpen;
- (unsigned long long)defaultAudioEditorViewID;
- (unsigned long long)defaultMIDIEditorViewID;
- (struct CTrack *)recordingTrack;
- (BOOL)beatsEditorShouldBeShown;
- (BOOL)beatsEditorFeatureAvailable;
- (BOOL)sampleEditorFeatureAvailable;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: song
- (BOOL)isOpaque;
- (void)sendNotificationForFocusChangeAtInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 layoutCreator:(id)arg2 docwType:(long long)arg3 inspectorView:(id)arg4 docwLayout:(id)arg5;
- (id)descriptionOfFauxUIElement:(id)arg1;
- (id)roleDescriptionOfFauxUIElement:(id)arg1;
- (struct CGPoint)positionOfFauxUIElement:(id)arg1;
- (struct CGSize)sizeOfFauxUIElement:(id)arg1;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityChildren;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)moveDivider:(double)arg1;
@property(readonly) CLgEditorAreaViewDividerIndicator *dividerIndicator;
@property(readonly) struct CGRect dividerRect;
- (BOOL)_showsSplitter;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

