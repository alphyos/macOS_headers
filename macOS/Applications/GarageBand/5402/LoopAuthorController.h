//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SmallModalDialogController.h"

#import "NSBrowserDelegate-Protocol.h"
#import "NSMenuDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"

@class NSArray, NSBrowser, NSButton, NSDictionary, NSMatrix, NSMutableString, NSPopUpButton, NSString, NSTextField, NSView;
@protocol LoopAuthorInfo;

@interface LoopAuthorController : SmallModalDialogController <NSMenuDelegate, NSTableViewDataSource, NSBrowserDelegate>
{
    NSTextField *m_NameField;
    NSPopUpButton *m_ScalePopUp;
    NSPopUpButton *m_GenrePopUp;
    NSPopUpButton *m_KeyPopUp;
    NSTextField *m_TempoField;
    NSMatrix *m_MoodMatrix;
    NSTextField *m_TypeField;
    NSMatrix *m_TypeMatrix;
    NSTextField *m_TypeLoopField;
    NSTextField *m_TypeOneShotField;
    NSButton *m_CreateButton;
    NSBrowser *m_InstrumentDescriptionBrowser;
    NSView *_infoView;
    NSTextField *_authorTextField;
    NSTextField *_copyrightTextField;
    NSTextField *_commentTextField;
    NSArray *m_descriptorKeywords;
    NSArray *m_genreKeywords;
    NSDictionary *m_instrumentDict;
    BOOL m_IsMidi;
    int m_MoodDescription[9];
    NSMutableString *m_Name;
    struct CEvLaunch *m_Region;
    int m_seqID;
    NSMutableString *m_FileName;
    BOOL _instrumentTitleIsMulti;
    BOOL _instrumentSubTitleIsMulti;
    BOOL _editMode;
    NSString *_createButtonTitleMemory;
    NSButton *_topperCheckbox;
    NSButton *_useLoopAsTrackNameCheckbox;
    NSButton *_addPatchToLoop;
    NSButton *_addCrossfadeToLoop;
}

+ (int)showWithName:(id)arg1 andLoopAuhorInfo:(id)arg2 enableEditMode:(BOOL)arg3;
+ (id)createKeySignatureMenu;
+ (id)moodKeywords;
+ (id)instrumentKeywords;
+ (id)genreKeywords;
+ (void)loadKeywordsFromFile;
+ (id)nibName;
- (void).cxx_destruct;
@property BOOL editMode; // @synthesize editMode=_editMode;
@property __weak NSButton *addCrossfadeToLoop; // @synthesize addCrossfadeToLoop=_addCrossfadeToLoop;
@property __weak NSButton *addPatchToLoop; // @synthesize addPatchToLoop=_addPatchToLoop;
@property __weak NSButton *useLoopAsTrackNameCheckbox; // @synthesize useLoopAsTrackNameCheckbox=_useLoopAsTrackNameCheckbox;
@property __weak NSButton *topperCheckbox; // @synthesize topperCheckbox=_topperCheckbox;
@property(retain) NSString *createButtonTitleMemory; // @synthesize createButtonTitleMemory=_createButtonTitleMemory;
- (void)controlTextDidChange:(id)arg1;
- (double)browser:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (void)addMultipleSelectionCellIfNeededForColumn:(int)arg1 inMatrix:(id)arg2;
- (id)browserCellWithDisplaytitle:(id)arg1 withPathComponent:(id)arg2 withLeafState:(BOOL)arg3 withRepresentedObject:(id)arg4;
- (void)mergeTagsAndCategoriesToFileData:(id)arg1 andWriteToChunksInFile:(id)arg2;
@property(readonly, retain, nonatomic) id <LoopAuthorInfo> loopAuthorInfoOfCurrentSelection;
- (BOOL)supportsUseLoopAsTrackName;
- (BOOL)supportsAddPatchToLoop;
- (BOOL)supportsTopper;
- (int)isUseLoopAsTrackName;
- (int)shouldAddPatchToLoop;
- (int)isTopper;
- (int)fileType;
- (id)moodKeywordsWithState:(long long)arg1;
- (id)instrumentSubtype;
- (id)instrumentType;
- (id)genre;
- (int)rootKey;
- (int)keyType;
- (id)loopName;
- (void)setPopUpToMultipleSelection:(id)arg1;
- (void)fillMatrixCells;
- (void)fillSignaturePopUpButtonMenu;
- (void)fillGenrePopup;
- (void)loadKeywords;
@property(readonly, retain, nonatomic) NSMutableString *destFileName;
- (void)useLoopButtonAction:(id)arg1;
- (void)descriptionBrowserAction:(id)arg1;
- (void)typeAction:(id)arg1;
- (void)matrixAction:(id)arg1;
- (void)click_Cancel:(id)arg1;
- (void)click_OK:(id)arg1;
- (void)updateInstrumentDescriptionBrowserWithInstrumentType:(id)arg1 instrumentSubType:(id)arg2;
- (void)updateInfoTextFields:(id)arg1;
- (void)updateAddCrossfadeToLoop;
- (void)updateUseLoopAsTrackNameCheckBox:(int)arg1;
- (void)updateAddPatchCheckBox:(int)arg1;
- (void)updateTopperCheckBox:(int)arg1;
-     // Error parsing type: v28@0:8i16^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}20, name: updateTempo:andSong:
- (void)updateMoodMatrixStateWithDescriptionKeys:(id)arg1 multipleSelectionsMoods:(id)arg2;
- (void)updateGenrePopUpButtonGenreFromKeyWord:(id)arg1;
- (void)updateScalePopUpWithKeyType:(int)arg1;
- (void)updateRootKeyPopUpWithRootKey:(int)arg1;
- (void)updateIsLoopWithLoopState:(int)arg1;
- (void)updateControlsForEditMode:(BOOL)arg1;
- (void)updateTitle:(id)arg1;
- (void)updateScaleMenuTags;
- (void)updateEnabledStatesForScaleAndKeyPopUp;
- (void)updateControlsWithName:(id)arg1 loopAuhorInfo:(id)arg2 enableEditMode:(BOOL)arg3;
- (id)initWithWindowNibName:(id)arg1;
- (void)awakeFromNib;
- (void)appleInterfaceThemeChanged:(id)arg1;
- (void)setDarkMode:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

