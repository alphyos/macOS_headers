//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MAMixerControllerDataSource-Protocol.h"
#import "MAMixerStripLayoutManagerDataSource-Protocol.h"

@class NSString;

@interface MAMixerModelAdapter : NSObject <MAMixerControllerDataSource, MAMixerStripLayoutManagerDataSource>
{
    // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}, name: _song
}

+ (long long)typeForMixThingID:(int)arg1;
+     // Error parsing type: @24@0:8^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16, name: adapterWithSong:
- (long long)allowedAreasForStrip:(id)arg1;
- (void)toggleMetaPlugInOfStrip:(id)arg1;
- (BOOL)stripHasMetaPlugIn:(id)arg1;
- (long long)currentMIDIActivityOfStrip:(id)arg1;
- (BOOL)valueForMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)maxValueForMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)minValueForMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)nameForMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)MIDIBankLSBOfStrip:(id)arg1;
- (BOOL)MIDIBankMSBOfStrip:(id)arg1;
- (id)MIDIProgramNameOfStrip:(id)arg1;
- (id)MIDIProgramNameOfProgram:(BOOL)arg1 ofStrip:(id)arg2;
- (void)stopTrackingMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setMIDIAssignValue:(BOOL)arg1 forIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (void)startTrackingMIDIAssignAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setMIDIAssign:(long long)arg1 forIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (void)setMIDIBankLSB:(BOOL)arg1 ofStrip:(id)arg2;
- (void)setMIDIBankMSB:(BOOL)arg1 ofStrip:(id)arg2;
- (void)setMIDIProgram:(BOOL)arg1 ofStrip:(id)arg2;
- (unsigned char)selectionMaskForStrips:(id)arg1;
- (void)toggleDisclosureStateOnAllStripsWithSource:(id)arg1;
- (void)toggleDisclosureStateOfStrip:(id)arg1;
- (unsigned long long)disclosureStateOfStrip:(id)arg1;
- (BOOL)libraryIsShown;
- (void)hideLibrary;
- (void)showLibrary;
- (id)currentDocWindowController;
- (void)setLibraryIndicator:(id)arg1 ofStrip:(id)arg2;
- (id)libraryIndicatorOfStrip:(id)arg1;
- (void)getLibraryIndicator:(long long *)arg1 slot:(long long *)arg2 ofStrip:(id)arg3;
- (id)settingNameOfStrip:(id)arg1;
- (void)setHardwareMonitoringEnabled:(BOOL)arg1 ofStrip:(id)arg2;
- (unsigned long long)hardwareMonitoringStateOfStrip:(id)arg1;
- (BOOL)stripHasHardwareMonitoring:(id)arg1;
- (void)setInputGainDecibels:(double)arg1 ofStrip:(id)arg2;
- (double)maximumInputGainDecibelsOfStrip:(id)arg1;
- (double)minimumInputGainDecibelsOfStrip:(id)arg1;
- (double)inputGainDecibelsOfStrip:(id)arg1;
- (void)setInputGain:(double)arg1 ofStrip:(id)arg2;
- (double)inputGainOfStrip:(id)arg1;
- (BOOL)stripHasInputGain:(id)arg1;
- (void)setPhaseInvertEnabled:(BOOL)arg1 ofStrip:(id)arg2;
- (BOOL)phaseInvertEnabledForStrip:(id)arg1;
- (BOOL)stripHasPhaseInvert:(id)arg1;
- (void)setHighPassFilterEnabled:(BOOL)arg1 ofStrip:(id)arg2;
- (BOOL)highPassFilterEnabledForStrip:(id)arg1;
- (BOOL)stripHasHighPassFilter:(id)arg1;
- (void)setPhantomPowerEnabled:(BOOL)arg1 ofStrip:(id)arg2;
- (BOOL)phantomPowerEnabledForStrip:(id)arg1;
- (BOOL)stripHasPhantomPower:(id)arg1;
- (void)setSensitivityWithMenuIndex:(long long)arg1 ofStrip:(id)arg2;
- (id)sensitivityStringOfStrip:(id)arg1;
- (BOOL)stripHasSensitivity:(id)arg1;
- (float)exponentialValueForGainReductionMeterOfStrip:(id)arg1;
- (long long)decibelLinearValueForGainReductionMeterOfStrip:(id)arg1;
- (id)topmostCompressorPlugInOfStrip:(id)arg1;
- (unsigned long long)insertCompressorInFirstAvailableSlotOfStrip:(id)arg1 exclusive:(BOOL)arg2;
- (unsigned long long)insertCompressorInFirstSlotOfStrip:(id)arg1 exclusive:(BOOL)arg2;
- (unsigned long long)_insertCompressorForcingFirstSlot:(BOOL)arg1 ofStrip:(id)arg2 exclusive:(BOOL)arg3;
- (id)pathPointsForEQThumbnailOfStrip:(id)arg1 bypassed:(char *)arg2;
- (id)topmostEqualizerPlugInOfStrip:(id)arg1;
- (id)topmostAudioPlugInOfStrip:(id)arg1 block:(CDUnknownBlockType)arg2;
- (unsigned long long)insertEqualizerInFirstAvailableSlotOfStrip:(id)arg1 exclusive:(BOOL)arg2;
- (unsigned long long)insertEqualizerInFirstSlotOfStrip:(id)arg1 exclusive:(BOOL)arg2;
- (unsigned long long)_insertEqualizerForcingFirstSlot:(BOOL)arg1 ofStrip:(id)arg2 exclusive:(BOOL)arg3;
- (void)toggleUserInterfaceOfMIDIPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)openUserInterfaceOfMIDIPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setMIDIPlugInBypassed:(BOOL)arg1 atIndex:(long long)arg2 ofStrip:(id)arg3;
- (BOOL)midiPlugInBypassedAtIndex:(long long)arg1 ofStrip:(id)arg2;
- (id)nameOfMIDIPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)midiPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)hasMIDIPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)insertMIDIPlugInWithMenuIndex:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3 exclusive:(BOOL)arg4;
- (BOOL)setMIDIPlugInWithMenuIndex:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3 exclusive:(BOOL)arg4;
- (unsigned long long)indexOfLastUsedMIDIPlugInSlotOfStrip:(id)arg1;
- (unsigned long long)indexOfFirstEmptyMIDIPlugInSlotOfStrip:(id)arg1;
- (unsigned long long)maximumNumberMIDIPlugInsOfStrip:(id)arg1;
- (unsigned long long)maximumNumberMIDIPlugIns;
- (void)toggleUserInterfaceOfInstrumentPlugInOfStrip:(id)arg1;
- (void)openUserInterfaceOfInstrumentPlugInOfStrip:(id)arg1;
- (void)setInstrumentPlugInBypassed:(BOOL)arg1 ofStrip:(id)arg2;
- (BOOL)instrumentPlugInBypassed:(id)arg1;
- (id)instrumentPlugInNameOfStrip:(id)arg1;
- (id)instrumentPlugInOfStrip:(id)arg1;
- (BOOL)hasInstrumentPlugIn:(id)arg1;
- (BOOL)setInstrumentPlugInWithMenuIndex:(long long)arg1 ofStrip:(id)arg2 exclusive:(BOOL)arg3;
- (BOOL)setInputWithMenuIndex:(long long)arg1 ofStrip:(id)arg2;
- (id)shortInputNameOfStrip:(id)arg1;
- (id)inputNameOfStrip:(id)arg1;
- (BOOL)setChannelModeWithMenuIndex:(long long)arg1 ofStrip:(id)arg2;
- (BOOL)setChannelMode:(int)arg1 ofStrip:(id)arg2;
- (BOOL)toggleChannelModeOfStrip:(id)arg1;
- (int)channelModeOfStrip:(id)arg1;
- (BOOL)isPlugInSlotFrozenAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)isAudioPlugInLoadedAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)toggleUserInterfaceOfAudioPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)openUserInterfaceOfAudioPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setAudioPlugInBypassed:(BOOL)arg1 atIndex:(long long)arg2 ofStrip:(id)arg3;
- (BOOL)audioPlugInBypassedAtIndex:(long long)arg1 ofStrip:(id)arg2;
- (id)nameOfAudioPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)audioPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)hasAudioPlugInAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)insertAudioPlugInWithMenuIndex:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3 exclusive:(BOOL)arg4;
- (BOOL)setAudioPlugInWithMenuIndex:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3 exclusive:(BOOL)arg4;
- (unsigned long long)indexOfLastUsedAudioPlugInSlotOfStrip:(id)arg1;
- (unsigned long long)indexOfFirstEmptyAudioPlugInSlotOfStrip:(id)arg1;
- (unsigned long long)maximumNumberAudioPlugInsOfStrip:(id)arg1;
- (unsigned long long)maximumNumberAudioPlugIns;
- (BOOL)allowsAutomaticallyOpenPlugInUserInterfaceOnInsertion;
- (void)openOrCloseUserInterfaceOfPlugInOfFamily:(unsigned int)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3 toggles:(BOOL)arg4;
- (BOOL)plugInLoadedOfFamily:(unsigned int)arg1 atIndex:(long long)arg2 ofStrip:(id)arg3;
- (void)setPlugInOfFamily:(unsigned int)arg1 bypassed:(BOOL)arg2 atIndex:(long long)arg3 ofStrip:(id)arg4;
- (BOOL)plugInBypassedOfFamily:(unsigned int)arg1 atIndex:(long long)arg2 ofStrip:(id)arg3;
- (id)nameOfPlugInOfFamily:(unsigned int)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (id)nameOfPlugIn:(id)arg1;
- (id)plugInOfFamily:(unsigned int)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (BOOL)hasPlugInOfFamily:(unsigned int)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (BOOL)copyPlugIn:(id)arg1 fromStrip:(id)arg2 toIndex:(unsigned long long)arg3 ofStrip:(id)arg4;
- (BOOL)movePlugIn:(id)arg1 fromStrip:(id)arg2 toIndex:(unsigned long long)arg3 ofStrip:(id)arg4;
- (BOOL)movePlugIn:(id)arg1 operationMask:(unsigned long long)arg2 fromStrip:(id)arg3 toIndex:(unsigned long long)arg4 ofStrip:(id)arg5;
- (BOOL)insertPlugInOfFamily:(unsigned int)arg1 withMenuIndex:(long long)arg2 atIndex:(unsigned long long)arg3 ofStrip:(id)arg4 exclusive:(BOOL)arg5;
- (BOOL)setPlugInOfFamily:(unsigned int)arg1 withMenuIndex:(long long)arg2 atIndex:(unsigned long long)arg3 ofStrip:(id)arg4 exclusive:(BOOL)arg5;
- (unsigned long long)indexOfLastUsedPlugInSlotOfFamily:(unsigned int)arg1 ofStrip:(id)arg2;
- (unsigned long long)indexOfFirstEmptyPlugInSlotOfFamily:(unsigned int)arg1 ofStrip:(id)arg2;
- (unsigned long long)maximumNumberPlugInsOfFamily:(unsigned int)arg1 ofStrip:(id)arg2;
- (id)queryPlugIn:(id)arg1 ofStrip:(id)arg2;
- (BOOL)sendIsInLowLatencyModeForSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)sendHasIndependentPanForSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)isSendOnFaderForSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (unsigned long long)zeroBasedSendsOnFaderIndexForInstrument:(const struct CInst *)arg1;
- (BOOL)isSendsOnFaderEnabledForInstrument:(const struct CInst *)arg1;
- (BOOL)wantsPreFaderSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)destinationChannelAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)revealSendOutputAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)routingStringOfSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (id)nameOfSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setSendMuted:(BOOL)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (BOOL)sendMutedAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)didChangeSendVolumeAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)setSendVolume:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (long long)defaultVolumeOfSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (long long)volumeIncludingAWM:(BOOL)arg1 ofSendAtIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (long long)volumeOfSendIncludingAutomationWriteModesAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (long long)volumeOfSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)isSendVolumeBeingEditedAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)willChangeSendVolumeAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)sendHasOutputAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (long long)outputOfSendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (void)cleanupSharedAuxAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)setSharedAuxAtIndex:(unsigned long long)arg1 withSharedAuxPatchURL:(id)arg2 ofStrip:(id)arg3;
- (BOOL)setSendWithMenuIndex:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (id)sendAtIndex:(unsigned long long)arg1 ofStrip:(id)arg2;
- (BOOL)stripHasSends:(id)arg1;
- (unsigned long long)numberSendsOfStrip:(id)arg1;
- (unsigned long long)maximumNumberSends;
- (id)destinationChannelIndexForStrip:(id)arg1;
- (void)revealOutputChannelForStrip:(id)arg1;
- (id)outputNameOfStrip:(id)arg1;
- (BOOL)setOutputWithMenuIndex:(long long)arg1 ofStrip:(id)arg2;
- (void)setOutput:(long long)arg1 ofStrip:(id)arg2;
- (long long)outputOfStrip:(id)arg1;
- (void)setRecordRegionBasedAutomationEnabled:(BOOL)arg1 forStrip:(id)arg2;
- (BOOL)recordRegionBasedAutomationEnabledForStrip:(id)arg1;
- (long long)mixerAutomationWriteModeOfStrip:(id)arg1;
- (void)setAutomationTrimMode:(long long)arg1 ofStrip:(id)arg2;
- (BOOL)hasAutomationDataForStrip:(id)arg1;
- (void)setAutomationMode:(int)arg1 ofStrip:(id)arg2;
- (int)automationModeOfStrip:(id)arg1;
- (void)setAutomationEnabled:(BOOL)arg1 forStrip:(id)arg2;
- (BOOL)automationEnabledForStrip:(id)arg1;
- (BOOL)automationGroupActiveForStrip:(id)arg1;
- (BOOL)automationGroupsEnabled;
- (id)defaultAutomationGroups;
- (void)setAutomationGroups:(id)arg1 ofStrip:(id)arg2;
- (void)setAutomationGroup:(long long)arg1 ofStrip:(id)arg2 extending:(BOOL)arg3;
- (id)automationGroupNameOfStrip:(id)arg1;
- (id)iconOfStrip:(id)arg1 highlighted:(BOOL)arg2;
- (long long)levelFaderModeForStrip:(id)arg1;
- (BOOL)wantsPreFaderMeteringForStrip:(id)arg1;
- (float)peakForType:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (float)levelForType:(long long)arg1 atIndex:(unsigned long long)arg2 ofStrip:(id)arg3;
- (float)convertLevel:(float)arg1 toMixerLevelType:(long long)arg2;
- (unsigned long long)levelCountOfStrip:(id)arg1;
- (long long)levelTypeOfStrip:(id)arg1;
- (long long)levelScaleTypeOfStrip:(id)arg1;
- (void)resetAllPeakLevels;
- (float)peakLevelOfStrip:(id)arg1;
- (BOOL)panShowsIndependentPanForStrip:(id)arg1;
- (BOOL)panoramaDisabledOfStrip:(id)arg1;
- (void)setSurroundAngle:(float)arg1 diversity:(float)arg2 ofStrip:(id)arg3;
- (void)setSurroundAngle:(float)arg1 diversity:(float)arg2 spread:(float)arg3 ofStrip:(id)arg4;
- (void)getDefaultSurroundAngle:(float *)arg1 diversity:(float *)arg2 spread:(float *)arg3 hasSpread:(_Bool *)arg4 ofStrip:(id)arg5;
- (void)getSurroundAngle:(float *)arg1 diversity:(float *)arg2 spread:(float *)arg3 hasSpread:(_Bool *)arg4 ofStrip:(id)arg5;
- (void)didChangePanoramaOfStrip:(id)arg1;
- (void)getPanorama:(float *)arg1 spread:(float *)arg2 ofStrip:(id)arg3;
- (void)setPanorama:(float)arg1 spread:(float)arg2 ofStrip:(id)arg3 grouped:(BOOL)arg4 absolute:(BOOL)arg5;
- (void)getDefaultPanorama:(float *)arg1 spread:(float *)arg2 ofStrip:(id)arg3;
- (void)setPanorama:(float)arg1 ofStrip:(id)arg2 grouped:(BOOL)arg3 absolute:(BOOL)arg4;
- (float)defaultPanoramaOfStrip:(id)arg1;
- (float)panoramaOfStrip:(id)arg1;
- (void)willChangePanoramaOfStrip:(id)arg1;
- (BOOL)speakerFormatOfStrip:(id)arg1;
- (void)openPannerUserInterfaceOfStrip:(id)arg1;
- (void)setPannerTypeWithMenuIndex:(long long)arg1 ofStrip:(id)arg2;
- (int)pannerTypeOfStrip:(id)arg1;
- (void)revealSubmasterOfStrip:(id)arg1;
- (id)submasterTextColorOfStrip:(id)arg1;
- (id)submasterIndexOfStrip:(id)arg1;
- (id)submasterNameOfStrip:(id)arg1;
- (void)setSubmaster:(long long)arg1 ofStrip:(id)arg2;
- (long long)submasterOfStrip:(id)arg1;
- (BOOL)volumeDisabledOfStrip:(id)arg1;
- (void)didChangeVolumeOfStrip:(id)arg1;
- (void)setVolume:(long long)arg1 ofStrip:(id)arg2 grouped:(BOOL)arg3 absolute:(BOOL)arg4;
- (long long)defaultVolumeOfStrip:(id)arg1;
- (long long)volumeIncludingAWM:(BOOL)arg1 ofStrip:(id)arg2;
- (long long)volumeIncludingAutomationWriteModesOfStrip:(id)arg1;
- (long long)volumeOfStrip:(id)arg1;
- (void)willChangeVolumeOfStrip:(id)arg1;
- (BOOL)hasMultiOutputInstrumentForStrip:(id)arg1;
- (BOOL)allowsRemovingMultiOutputAuxForStrip:(id)arg1;
- (BOOL)allowsAddingMultiOutputAuxForStrip:(id)arg1;
- (void)removeMultiOutputAuxForStrip:(id)arg1;
- (void)addMultiOutputAuxForStrip:(id)arg1;
- (void)toggleDimmedStrip:(id)arg1;
- (BOOL)dimmedStrip:(id)arg1;
- (void)performBounceWithStrip:(id)arg1;
- (void)setRecordState:(unsigned long long)arg1 ofStrip:(id)arg2;
- (unsigned long long)recordStateOfStrip:(id)arg1;
- (BOOL)stripAllowsRecording:(id)arg1;
- (void)toggleMonitoringStrip:(id)arg1;
- (void)setMonitoringState:(unsigned long long)arg1 ofStrip:(id)arg2;
- (unsigned long long)monitoringStateOfStrip:(id)arg1;
- (BOOL)stripAllowsMonitoring:(id)arg1;
- (void)setSoloState:(unsigned long long)arg1 ofStrip:(id)arg2 exclusive:(BOOL)arg3;
- (unsigned long long)soloStateOfStrip:(id)arg1;
- (void)exclusivelyToggleMutedStrip:(id)arg1;
- (void)toggleMutedOfAllStrips:(id)arg1;
- (void)toggleMutedStrip:(id)arg1;
- (void)setMuteState:(unsigned long long)arg1 ofStrip:(id)arg2;
- (unsigned long long)muteStateOfStrip:(id)arg1;
- (id)colorOfStrip:(id)arg1 highlighted:(BOOL)arg2;
- (id)numberOfStrip:(id)arg1;
- (void)setName:(id)arg1 ofStrip:(id)arg2 andSelectedStripsInStrips:(id)arg3;
- (void)setName:(id)arg1 ofStrip:(id)arg2;
- (id)nameOfStrip:(id)arg1;
- (void)setNotes:(id)arg1 ofStrip:(id)arg2;
- (id)notesOfStrip:(id)arg1;
- (id)colorOfControlBarAtIndex:(unsigned long long)arg1 focused:(out char *)arg2 ofStrip:(id)arg3;
- (struct CTrackID)trackIDForStrip:(id)arg1;
- (unsigned long long)numberOfControlSurfaceBars;
- (id)labelOfStrip:(id)arg1;
- (void)changeToFolderOfStrip:(id)arg1;
- (void)selectStrip:(id)arg1;
- (BOOL)isSelectedStrip:(id)arg1;
- (id)rightACSForStrip:(id)arg1;
- (id)leftACS;
- (id)makeStripList;
- (bitset_b1d0fd0f)allowedElementsForStrip:(id)arg1;
- (BOOL)isFocusedStrip:(id)arg1;
- (long long)typeOfStrip:(id)arg1;
- (void)_startStopTrackingParameter:(int)arg1 index:(int)arg2 start:(BOOL)arg3;
// Error parsing type for property song:
// Property attributes: T^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}},R,N,V_song

- (id)init;
-     // Error parsing type: @24@0:8^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16, name: initWithSong:

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

