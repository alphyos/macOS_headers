//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "CLgLibBrowserViewDelegate-Protocol.h"
#import "CLgLibraryDataSourceObserver-Protocol.h"
#import "CLgLibraryStageViewDataSource-Protocol.h"
#import "GenInstModelUICoordinatorClient-Protocol.h"
#import "MABrowserDelegate-Protocol.h"
#import "NSGestureRecognizerDelegate-Protocol.h"
#import "NSMenuDelegate-Protocol.h"
#import "NSSearchFieldDelegate-Protocol.h"
#import "NSSplitViewDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"
#import "NSTextFieldDelegate-Protocol.h"

@class CLgLibraryBrowser, CLgLibraryCharacterBrowserController, CLgLibraryDataSource, CLgLibraryPatchMergingView, CLgLibraryStageView, MABrowserCell, MAButton, MAKitPathControl, MASearchField, MASplitView, NSArray, NSBox, NSDateFormatter, NSDictionary, NSImage, NSLayoutConstraint, NSMenu, NSMutableArray, NSString, NSTabView, NSTableView, NSTextField, NSTimer, NSView;

@interface CLgLibraryViewController : NSViewController <NSSplitViewDelegate, NSGestureRecognizerDelegate, GenInstModelUICoordinatorClient, NSTableViewDataSource, NSTableViewDelegate, CLgLibBrowserViewDelegate, NSTextFieldDelegate, NSMenuDelegate, CLgLibraryStageViewDataSource, MABrowserDelegate, CLgLibraryDataSourceObserver, NSSearchFieldDelegate>
{
    NSView *_focusView;
    MABrowserCell *m_browserPrototypeCell;
    NSMutableArray *mSearchResults;
    NSDateFormatter *mDateFormatter;
    NSMenu *mContextMenu;
    NSTimer *mCurrentBrowserTimer;
    NSTimer *mCurrentArrangeTimer;
    NSTimer *mDataStatusTimer;
    BOOL mDeferredUpdate;
    BOOL mDocIsClosing;
    BOOL m_libraryConnected;
    BOOL m_observerRegistered;
    CLgLibraryDataSource *m_dataSource;
    NSArray *m_currentPathComponents;
    MABrowserCell *m_currentSelectedLeafCell;
    BOOL m_reloadColumns;
    CLgLibraryCharacterBrowserController *_characterBrowserController;
    BOOL _characterControllerRegistered;
    NSImage *_menuDownloadGlyph;
    BOOL _hideIncompleteItems;
    BOOL _reloadBrowser;
    NSBox *_header;
    NSTextField *_headerTitle;
    MASplitView *_stageAndBrowserSplitView;
    NSView *_stageSplitPane;
    CLgLibraryStageView *_stageView;
    NSView *_characterBrowserSplitPane;
    NSBox *_characterBrowserHeader;
    NSTextField *_characterBrowserHeaderTitle;
    CLgLibraryBrowser *_characterBrowser;
    NSBox *_characterBrowserFooter;
    MAKitPathControl *_characterBrowserPathControl;
    NSView *_soundsBrowserSplitPane;
    NSBox *_soundsBrowserHeader;
    NSTextField *_soundsBrowserHeaderTitle;
    MAButton *_soundsBrowserLock;
    MASearchField *_soundsBrowserSearchField;
    NSTabView *_soundsBrowserTabView;
    CLgLibraryBrowser *_soundsBrowser;
    NSTableView *_soundsBrowserSearchResults;
    NSBox *_soundsBrowserFooter;
    MAKitPathControl *_soundsBrowserPathControl;
    NSLayoutConstraint *_soundsBrowserHeaderHeight;
    NSLayoutConstraint *_characterBrowserHeaderHeight;
    CLgLibraryPatchMergingView *_patchMergeContainer;
    NSBox *_footer;
    MAButton *_toolsButton;
    MAButton *_revertButton;
    MAButton *_deleteButton;
    MAButton *_saveButton;
    NSString *_currentLibraryPath;
    NSString *_currentGenInstGenreIdentifier;
    NSDictionary *_splitViewDefaults;
    struct CDocumentLogic *_documentLogic;
}

- (void).cxx_destruct;
@property(nonatomic) struct CDocumentLogic *documentLogic; // @synthesize documentLogic=_documentLogic;
@property(retain, nonatomic) NSDictionary *splitViewDefaults; // @synthesize splitViewDefaults=_splitViewDefaults;
@property(retain, nonatomic) NSString *currentGenInstGenreIdentifier; // @synthesize currentGenInstGenreIdentifier=_currentGenInstGenreIdentifier;
@property BOOL reloadBrowser; // @synthesize reloadBrowser=_reloadBrowser;
@property(retain, nonatomic) NSString *currentLibraryPath; // @synthesize currentLibraryPath=_currentLibraryPath;
@property BOOL hideIncompleteItems; // @synthesize hideIncompleteItems=_hideIncompleteItems;
@property __weak MAButton *saveButton; // @synthesize saveButton=_saveButton;
@property __weak MAButton *deleteButton; // @synthesize deleteButton=_deleteButton;
@property __weak MAButton *revertButton; // @synthesize revertButton=_revertButton;
@property __weak MAButton *toolsButton; // @synthesize toolsButton=_toolsButton;
@property __weak NSBox *footer; // @synthesize footer=_footer;
@property __weak CLgLibraryPatchMergingView *patchMergeContainer; // @synthesize patchMergeContainer=_patchMergeContainer;
@property __weak NSLayoutConstraint *characterBrowserHeaderHeight; // @synthesize characterBrowserHeaderHeight=_characterBrowserHeaderHeight;
@property __weak NSLayoutConstraint *soundsBrowserHeaderHeight; // @synthesize soundsBrowserHeaderHeight=_soundsBrowserHeaderHeight;
@property __weak MAKitPathControl *soundsBrowserPathControl; // @synthesize soundsBrowserPathControl=_soundsBrowserPathControl;
@property __weak NSBox *soundsBrowserFooter; // @synthesize soundsBrowserFooter=_soundsBrowserFooter;
@property __weak NSTableView *soundsBrowserSearchResults; // @synthesize soundsBrowserSearchResults=_soundsBrowserSearchResults;
@property __weak CLgLibraryBrowser *soundsBrowser; // @synthesize soundsBrowser=_soundsBrowser;
@property __weak NSTabView *soundsBrowserTabView; // @synthesize soundsBrowserTabView=_soundsBrowserTabView;
@property __weak MASearchField *soundsBrowserSearchField; // @synthesize soundsBrowserSearchField=_soundsBrowserSearchField;
@property __weak MAButton *soundsBrowserLock; // @synthesize soundsBrowserLock=_soundsBrowserLock;
@property __weak NSTextField *soundsBrowserHeaderTitle; // @synthesize soundsBrowserHeaderTitle=_soundsBrowserHeaderTitle;
@property __weak NSBox *soundsBrowserHeader; // @synthesize soundsBrowserHeader=_soundsBrowserHeader;
@property __weak NSView *soundsBrowserSplitPane; // @synthesize soundsBrowserSplitPane=_soundsBrowserSplitPane;
@property __weak MAKitPathControl *characterBrowserPathControl; // @synthesize characterBrowserPathControl=_characterBrowserPathControl;
@property __weak NSBox *characterBrowserFooter; // @synthesize characterBrowserFooter=_characterBrowserFooter;
@property __weak CLgLibraryBrowser *characterBrowser; // @synthesize characterBrowser=_characterBrowser;
@property __weak NSTextField *characterBrowserHeaderTitle; // @synthesize characterBrowserHeaderTitle=_characterBrowserHeaderTitle;
@property __weak NSBox *characterBrowserHeader; // @synthesize characterBrowserHeader=_characterBrowserHeader;
@property(retain) NSView *characterBrowserSplitPane; // @synthesize characterBrowserSplitPane=_characterBrowserSplitPane;
@property __weak CLgLibraryStageView *stageView; // @synthesize stageView=_stageView;
@property __weak NSView *stageSplitPane; // @synthesize stageSplitPane=_stageSplitPane;
@property __weak MASplitView *stageAndBrowserSplitView; // @synthesize stageAndBrowserSplitView=_stageAndBrowserSplitView;
@property __weak NSTextField *headerTitle; // @synthesize headerTitle=_headerTitle;
@property __weak NSBox *header; // @synthesize header=_header;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (void)librarySplitViewDidResizeSubviews:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)adjustSplitSubViews;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (void)menuNeedsUpdate:(id)arg1;
- (void)_updateMenu:(id)arg1;
- (void)_addToolMenuItemsToMenu:(id)arg1;
- (BOOL)_patchMergingIsEnabled;
- (unsigned int)_patchMergeFilterFlags;
- (void)closeMergeView:(id)arg1;
- (void)_showPatchMerginView:(BOOL)arg1 animated:(BOOL)arg2;
- (id)menuButtonQuickHelpID;
- (id)prevNextButtonQuickHelpID;
- (id)iconButtonQuickHelpID;
- (BOOL)hasMenuButton;
- (BOOL)hasIconButton;
- (BOOL)hasPreviousNextButtons;
- (void)openPluginWindow;
- (void)_handlePatchPopup:(id)arg1;
- (id)popUpMenu;
- (void)selectPreviousChannelStrip;
- (void)selectNextChannelStrip;
- (void)_selectNextPreviousPatch:(BOOL)arg1;
- (id)stageAssetSetNameForIconID:(id)arg1;
- (id)trackColor;
- (id)stageIconImageForIconID:(id)arg1;
- (id)iconSetForIconID:(id)arg1;
- (id)iconIDForInstrumentIconOnStageView;
- (id)subTitleOnStageView;
- (id)titleOnStageView;
- (void)browser:(id)arg1 quickHelpForCell:(id)arg2 col:(long long)arg3 row:(long long)arg4;
- (BOOL)browser:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (double)browser:(id)arg1 shouldSizeColumn:(long long)arg2 forUserResize:(BOOL)arg3 toWidth:(double)arg4;
- (id)browser:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 inColumn:(long long)arg3;
- (void)browserColumnConfigurationDidChange:(id)arg1;
- (BOOL)browser:(id)arg1 isColumnValid:(long long)arg2;
- (void)browser:(id)arg1 createRowsForColumn:(long long)arg2 inMatrix:(id)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableviewRowTooltip:(long long)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)basicViewFrameChanged:(id)arg1;
- (void)documentWillBeClosed:(id)arg1;
- (void)documentWasSaved:(id)arg1;
- (void)handleUM_RECTRACK:(id)arg1;
- (void)handleUM_UPDATEONGINSTCHANGE_:(id)arg1;
- (void)doSearchSelection:(id)arg1 closeSearch:(BOOL)arg2;
- (void)searchSelectionDidChange:(id)arg1;
- (void)searchTimerAction:(id)arg1;
- (void)search_Changed:(id)arg1;
- (void)_resetSearch;
- (void)controlTextDidChange:(id)arg1;
- (void)browserTimerAction:(id)arg1;
- (void)libraryDidChange:(id)arg1;
- (void)characterDidChange:(id)arg1;
- (void)trackSelectionDidChange:(id)arg1;
- (void)modelUICoordinator:(id)arg1 valueDidChangeForParameterID:(id)arg2;
- (void)modelUICoordinator:(id)arg1 valueWillChangeForParameterID:(id)arg2;
- (void)libraryDataSourceDidChange:(id)arg1;
- (void)libraryDataSourceFocusDidChange:(id)arg1;
- (void)libraryDataSourceDidBecameAvailable:(id)arg1;
- (void)libraryDataSourceDidBecameUnAvailable:(id)arg1;
- (void)_disconnectLibrary;
- (void)_connectLibrary;
- (void)_removeCharacterController;
- (void)_registerCharacterController;
- (void)_removeObserver;
- (void)_registerObserver;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (id)_dataSource;
- (CDStruct_ffe30ac1)_currentSelectionInfo;
- (int)_currentDataSourceMode;
- (shared_ptr_c8869125)_browserMenu;
- (void)updateSplitViewForSplitViewDefaultsDict:(id)arg1;
- (void)updateCharacterBrowserVisibility;
- (void)updateStageDataSourceForBrowser:(id)arg1;
- (void)_updateSubViewFrames;
- (void)_updateUIForDocument:(struct CDocumentLogic *)arg1 displayMode:(int)arg2 selectionInfo:(CDStruct_ffe30ac1)arg3 withSearch:(BOOL)arg4;
- (void)_updateUI;
- (void)_updateRevertButtonStateForDisplayMode:(int)arg1;
- (void)_updateSaveButtonStateForDocument:(struct CDocumentLogic *)arg1 displayMode:(int)arg2 andSelectionInfo:(CDStruct_ffe30ac1)arg3;
- (void)_updateDeleteButtonStateForDisplayMode:(int)arg1;
- (void)_updateBrowserWithPath:(id)arg1;
- (void)_updateCurrentSelectedLeafBrowserCellForBrowserCell:(id)arg1 needsDisplay:(BOOL)arg2;
- (id)libraryDefaultsForKey:(id)arg1;
- (void)setObjectToLibraryDefaults:(id)arg1 forKey:(id)arg2;
- (double)clipStageViewHeight:(double)arg1;
- (id)modelUICoordinator;
- (void)_showHideSoundsPathControl:(BOOL)arg1;
- (void)_showHideChracterPathControl:(BOOL)arg1;
- (double)_splitSubviewHeight:(id)arg1 splitView:(id)arg2;
- (id)currentSoundName;
- (id)_quickHelpIDForCell:(id)arg1;
- (struct CTrack *)_currentSelectedTrack;
- (id)_defaultLibraryPathSelectedTrack;
- (id)_browserPathForDisplayMode:(int)arg1 withSearch:(BOOL)arg2;
-     // Error parsing type: @32@0:8^{CTrack=cc{CTFlagSet<CTrack::TTrackFlag, char>=c}{CTFlagSet<CTrack::TTrackMute, char>=c}iiSCC^{TCollapsedOverviewObjectList}{CUUID={?=CCCCCCCCCCCCCCCC}}{CTFlagSet<CTrack::TTrackFlag2, char>=c}{CTFlagSet<CTrack::TTrackFlag3, char>=c}{CTFlagSet<CTrack::TTrackFlag4, char>=c}{CTFlagSet<CTrack::TTrackFlag5, char>=c}{MEGAPARS=(?={?=CCCC}i)}{MEGAPARS=(?={?=CCCC}i)}i{TTrackNr=qi}{TTrackNr=qi}}16^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}24, name: _trackCreatorKeyForTrack:inSong:
- (shared_ptr_b09fa6e5)getCMenuEntryForSelectedItemAndValidateMenuEntry:(BOOL)arg1;
- (shared_ptr_b09fa6e5)getCMenuEntryForCell:(id)arg1 validateMenuEntry:(BOOL)arg2;
- (BOOL)hasGenerativeInstrumentsCharacterBrowser;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: _song
- (id)_songDocument;
- (void)_setPathControlPath:(id)arg1 removeLastPathComponent:(BOOL)arg2;
- (void)_completePatchLoadingWithFreezeDialog:(id)arg1;
- (id)_removeLastBrowserComponentFromBrowserPath:(id)arg1;
- (shared_ptr_b09fa6e5)_menuEntryFromMenuPointer:(id)arg1 validateMenuEntry:(BOOL)arg2;
- (void)downloadAction:(id)arg1;
- (id)missingOrOutdatedPackagesForAssetAtURL:(id)arg1;
- (void)handleGesture:(id)arg1;
- (void)pathControlAction:(id)arg1;
- (void)headerViewDoubleClickAction:(id)arg1;
- (void)applyBrowserSelectionChange:(id)arg1;
- (void)browserSelectionDidChange:(id)arg1;
- (void)searchField_Changed:(id)arg1;
- (void)applySearchSelectionChange:(id)arg1;
- (void)toolAction:(id)arg1;
- (void)revertAction:(id)arg1;
- (void)deleteAction:(id)arg1;
- (void)debugLogActionForMenuEntry:(id)arg1;
- (void)debugLogActionForMenu:(id)arg1;
- (id)_reverseDebugLogsInFolder:(id)arg1;
- (id)_debugLogOneMenuEntry:(struct CMenuEntry *)arg1;
- (void)saveAction:(id)arg1;
- (BOOL)keyUp:(id)arg1 inView:(id)arg2;
- (BOOL)keyDown:(id)arg1 inView:(id)arg2;
- (void)viewVisibilityChange:(BOOL)arg1;
- (void)willBecomeFocus;
- (void)subResponderWasChanged:(id)arg1;
- (id)subResponderForView:(id)arg1;
@property(readonly) NSView *currentSubResponder;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillBeRemovedFromWindow;
- (void)viewWillBeAddedToWindow;
@property(readonly) NSString *overlayHelpID;
- (void)dealloc;
- (void)removeBrowserTimer;
- (void)eatKeyEvents;
@property(retain) id nibwUserData;
- (id)initWithDocument:(struct CDocumentLogic *)arg1;
- (void)updateMutableQuickHelpIDs;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

