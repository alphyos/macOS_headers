//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ModuleController.h"

#import "MANewProjectDialogDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"

@class MATextField, NSButton, NSPopUpButton, NSString, NSTabView, NSTableView, SegmentedNumberScrubber;

@interface PrefsGlobalView : ModuleController <MANewProjectDialogDelegate, NSTableViewDelegate, NSTableViewDataSource>
{
    NSTabView *globTabView;
    NSPopUpButton *globStartupBehavior;
    NSButton *globSelectDefaultProjectBtn;
    MATextField *globDefaultTemplateLabel;
    NSButton *globAskClose;
    NSButton *globExportFormat0;
    NSPopUpButton *globNumberOfAutobackups;
    MATextField *globAutobackupsLabel;
    NSPopUpButton *globNumberOfRecentItems;
    MATextField *globRecentItemsLabel;
    NSButton *globEnableCatchStart;
    NSButton *globEnableCatchMoving;
    NSButton *globAllowContentCatch;
    NSPopUpButton *globRightMouseButton;
    NSButton *globPointerToolArrProvidesFadeTool;
    NSButton *globPointerToolArrProvidesMarqueeTool;
    NSButton *globPointerToolQuickSwipeClickZone;
    NSButton *globLimitDraggingMatrixScore;
    NSButton *globLimitDraggingArrange;
    NSPopUpButton *globDoubleClick;
    NSButton *globPianoRollRegionBorderTrimming;
    SegmentedNumberScrubber *globLimitMultipleUndoSteps;
    NSButton *globAddLastEditFunction;
    NSButton *globLivingGrooveConnection;
    NSButton *globSmartLoopHandling;
    NSButton *globSelectRegions;
    NSButton *globSelectTracks;
    NSPopUpButton *globCyclePreProcessing;
    NSButton *globSmoothCycleAlgorithm;
    NSPopUpButton *globInstrumentRecordingCycleOn;
    NSPopUpButton *globInstrumentRecordingCycleOff;
    NSTableView *globSuppressedAlerts;
    NSButton *globResetSelectedWarningsButton;
    NSButton *globResetAllWarningsButton;
    MATextField *globEnableForceTouchTrackpadGesturesLabel;
    NSButton *globEnableForceTouchTrackpadGestures;
    NSButton *globOpenPlugInsInControlsView;
}

- (void).cxx_destruct;
- (void)newProjectDialogWillClose:(id)arg1;
- (void)newProjectDialogDoOpenExistingFile:(id)arg1 withURL:(id)arg2;
- (void)newProjectDialog:(id)arg1 didSelectTemplateAtIndexPath:(id)arg2 categoryIndex:(unsigned long long)arg3;
- (void)change_globOpenPlugInsInControlsView:(id)arg1;
- (void)change_globEnableForceTouchTrackpadGestures:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)selectAlertButton:(id)arg1;
- (id)buttonsForRow:(long long)arg1;
- (id)textForRow:(long long)arg1;
- (id)keyForRow:(long long)arg1;
- (id)keys;
- (id)makeTextFieldForTableView:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)click_globResetAllWarningsButton:(id)arg1;
- (void)click_globResetSelectedWarningsButton:(id)arg1;
- (void)change_globInstrumentRecordingCycleOff:(id)arg1;
- (void)change_globInstrumentRecordingCycleOn:(id)arg1;
- (void)change_globSmoothCycleAlgorithm:(id)arg1;
- (void)change_globCyclePreProcessing:(id)arg1;
- (void)change_globSelectTracks:(id)arg1;
- (void)change_globSelectRegions:(id)arg1;
- (void)change_globSmartLoopHandling:(id)arg1;
- (void)change_globLivingGrooveConnection:(id)arg1;
- (void)change_globLimitMultipleUndoSteps:(id)arg1;
- (void)change_globAddLastEditFunction:(id)arg1;
- (void)change_globPianoRollRegionBorderTrimming:(id)arg1;
- (void)change_globDoubleClick:(id)arg1;
- (void)change_globLimitDraggingArrange:(id)arg1;
- (void)change_globLimitDraggingMatrixScore:(id)arg1;
- (void)change_globPointerToolQuickSwipeClickZone:(id)arg1;
- (void)change_globPointerToolArrProvidesMarqueeTool:(id)arg1;
- (void)change_globPointerToolArrProvidesFadeTool:(id)arg1;
- (void)change_globRightMouseButton:(id)arg1;
- (void)change_globAllowContentCatch:(id)arg1;
- (void)change_globEnableCatchMoving:(id)arg1;
- (void)change_globEnableCatchStart:(id)arg1;
- (void)change_globNumberOfRecentItems:(id)arg1;
- (void)change_globNumberOfAutobackups:(id)arg1;
- (void)change_globExportFormat0:(id)arg1;
- (void)change_globAskClose:(id)arg1;
- (void)click_globSelectDefaultProject:(id)arg1;
- (void)change_globStartupBehavior:(id)arg1;
- (void)updateUI;
- (void)awakeFromNib;
- (void)willDisappear;
- (void)willAppear;
- (void)handleUM_GLOBALPREFS:(id)arg1;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: song

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

