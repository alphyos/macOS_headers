//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CLgWindowController.h"

#import "CLgDocwController_ClgAreaButtons_protocol-Protocol.h"
#import "MAPopoverDelegate-Protocol.h"
#import "NSDraggingSource-Protocol.h"
#import "NSMenuDelegate-Protocol.h"
#import "NSToolbarDelegate-Protocol.h"
#import "NSWindowDelegate-Protocol.h"

@class CLgActionBarCustomizationController, CLgActionBarView, CLgDecorationView, CLgEditorAreaView, CLgInspectorAreaView, CLgMainSplitView, CLgTransportBackgroundView, CLgTransportBarView, CLgTransportCustomizationController, CLgUnilibDocManager, CLgUnilibFocusView, CLgUnilibInspectorView, CLgUnilibTransportView, NSArray, NSDictionary, NSMenu, NSString, NSView, TransportDisplayProgressDisplay;

@interface CLgDocwController : CLgWindowController <NSWindowDelegate, NSToolbarDelegate, MAPopoverDelegate, NSMenuDelegate, NSDraggingSource, CLgDocwController_ClgAreaButtons_protocol>
{
    CLgMainSplitView *mainSplitView;
    BOOL transportIsAtTop;
    CLgTransportCustomizationController *_transportCustomizationController;
    CLgActionBarCustomizationController *_actionBarCustomizationController;
    BOOL _unhidePlugInWindows;
    CLgDecorationView *decorationViewLeft;
    CLgDecorationView *decorationViewRight;
    NSView *decorationViewTop;
    CLgTransportBackgroundView *transportBackgroundView;
    CLgActionBarView *actionBarView;
    CLgTransportBarView *transportBarView;
    TransportDisplayProgressDisplay *_progressDisplayView;
}

+ (void)dragEditorView:(id)arg1 withEvent:(id)arg2 docwType:(long long)arg3 songDocument:(id)arg4;
+ (BOOL)editorTabCanBeTornOfForDocwType:(long long)arg1 songDocument:(id)arg2 editorAreaView:(id)arg3;
+ (void)dragListView:(id)arg1 withEvent:(id)arg2 docwType:(long long)arg3;
+ (void)appendCustomizeItems:(id)arg1;
@property(retain) TransportDisplayProgressDisplay *progressDisplayView; // @synthesize progressDisplayView=_progressDisplayView;
@property(retain) CLgTransportBarView *transportBarView; // @synthesize transportBarView;
@property(retain) CLgActionBarView *actionBarView; // @synthesize actionBarView;
@property(retain) CLgTransportBackgroundView *transportBackgroundView; // @synthesize transportBackgroundView;
@property(retain) NSView *decorationViewTop; // @synthesize decorationViewTop;
@property(retain) CLgDecorationView *decorationViewRight; // @synthesize decorationViewRight;
@property(retain) CLgDecorationView *decorationViewLeft; // @synthesize decorationViewLeft;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)configurePlayheadsForLiveResize:(BOOL)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)calledByWindowClose;
- (void)windowWasShown;
- (void)showInspectors:(BOOL)arg1;
- (void)toggleInspectors;
@property(readonly, nonatomic) BOOL inspectorIsVisible;
@property(readonly, nonatomic) CLgUnilibInspectorView *inspectorView;
- (void)setUnilibViewsUserData:(id)arg1;
- (void)viewButtonActionForViewBtnID:(int)arg1;
- (void)endCoherentScreenUpdate;
- (void)beginCoherentScreenUpdate;
- (void)listsAreaVisibilityChange2;
- (void)editorsAreaVisibilityChange2;
- (void)inspectorVisibilityChange2;
- (void)libraryVisibilityChange2;
- (void)helpVisibilityChange2;
- (void)toolbarVisibilityChange3;
- (void)toolbarVisibilityChange2;
- (id)willSendMouseDownAtPosition:(struct CGPoint)arg1 isOnUnilibViewSelf:(char *)arg2;
@property(readonly, nonatomic) BOOL shouldDisplayFocusRing;
@property(readonly, nonatomic) CLgUnilibFocusView *focusedUnilibView;
- (void)firstResponderChanged;
- (id)focusHandlerViewToSelect:(id)arg1 ifFollowing:(BOOL)arg2;
- (void)resetNextKeyViews;
- (BOOL)presentToolContextMenu:(id)arg1 forView:(id)arg2;
- (void)customizeToolWillBegin:(id)arg1;
- (id)actionBarCustomizationController;
- (BOOL)presentTransportContextMenu:(id)arg1 forView:(id)arg2;
@property(readonly, nonatomic) NSMenu *transportContextMenu;
- (void)menuWillOpen:(id)arg1;
- (void)showTransportButtonAutoPunch;
- (void)customizeTransportSaveAsDefaults:(id)arg1;
- (void)customizeTransportApplyDefaults:(id)arg1;
- (void)customizeTransportWillBegin:(id)arg1;
- (id)transportCustomizationController;
- (void)popoverWillClose:(id)arg1;
- (void)openPopover:(id)arg1 forView:(id)arg2;
- (void)doShowTransportBar:(BOOL)arg1 actionBar:(BOOL)arg2;
- (void)updateLayoutForFullscreenMode;
@property(readonly, nonatomic) unsigned long long transportBarRows;
@property(readonly, nonatomic) BOOL transportBarIsVisible;
@property(readonly, nonatomic) BOOL transportBarIsPossible;
- (void)setTransportBarIsAtTop:(BOOL)arg1;
@property(readonly, nonatomic) BOOL transportBarIsAtTop;
@property(readonly, nonatomic) CLgUnilibTransportView *timeDisplayView;
- (BOOL)mixerAreaVisible;
- (BOOL)smartControlsAreaVisible;
@property(readonly, nonatomic) BOOL listsAreaVisible;
@property(readonly, nonatomic) BOOL editorAreaVisible;
- (void)toggleEditorArea;
- (BOOL)hideEditorArea;
@property(readonly, nonatomic) CLgUnilibFocusView *browserUnilibView;
- (void)closeLibraryArea;
- (void)closeListsArea;
- (void)toggleListArea:(unsigned long long)arg1;
- (BOOL)isAnyListAreaVisible;
- (BOOL)isListAreaVisible:(unsigned long long)arg1;
- (id)listView:(unsigned long long)arg1;
- (BOOL)toggleListView:(unsigned long long)arg1;
- (BOOL)showListView:(unsigned long long)arg1;
- (BOOL)isListViewVisible:(unsigned long long)arg1;
- (void)toggleEditorView;
@property(readonly, nonatomic) BOOL isEditorViewVisible;
- (id)editorView:(unsigned long long)arg1;
- (BOOL)toggleEditorView:(unsigned long long)arg1;
- (BOOL)showEditorView:(unsigned long long)arg1;
- (BOOL)isEditorViewVisible:(unsigned long long)arg1;
@property(readonly, nonatomic) CLgUnilibDocManager *unilibDocManager3;
- (BOOL)unilibViewIsVisible:(id)arg1;
- (id)visibleUnilibViews1;
- (id)allUnilibViews1;
- (id)allNotesFocusViews;
- (id)allUnilibViews_includeAll:(BOOL)arg1;
- (id)visibleUnilibViews_includeAll:(BOOL)arg1;
- (struct CGSize)minimumWindowSize;
- (void)synchronizeWindowTitleWithDocumentName;
@property(readonly, nonatomic) NSString *windowTitle;
- (id)unilibViewAtWindowPosition:(struct CGPoint)arg1;
@property(readonly, nonatomic) CLgUnilibFocusView *windowMainView;
@property(readonly, nonatomic) CLgEditorAreaView *editorsArea;
- (id)listViewForListViewID:(unsigned long long)arg1;
@property(readonly, nonatomic) CLgInspectorAreaView *inspectorArea;
@property(nonatomic) CLgMainSplitView *mainSplitView;
- (void)dealloc;
- (id)initDocwController:(id)arg1;
- (void)quickHelpVisibilityChanged:(id)arg1;
- (void)addNotifications;
- (BOOL)actionBarItemIsVisible:(int)arg1;
- (void)validateActionBarItemWithID:(int)arg1;
- (void)validateActionBarItems;
- (void)setActionBarState:(long long)arg1 forItemID:(int)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toolbarMenuGenericAction:(id)arg1;
- (void)toolbarGenericActionForIdentifier:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (int)toolbarItemIDFromItemIdentifier:(id)arg1;
- (id)toolbarItemIdentifierFromItemID:(int)arg1;
- (id)quickHelpIdForToolbarItemIdentifier:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)allToolbarDefaultItemIdentifiers;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (id)allToolbarAllowedItemIdentifiers;
- (id)filterAllowedItemIdentifiers:(id)arg1;
@property(readonly, nonatomic) NSArray *mixedStateButtonActionBarItemIdentifiers;
@property(readonly, nonatomic) NSArray *toggleButtonActionBarItemIdentifiers;
- (void)resetFocusedElement:(unsigned long long)arg1;
@property(readonly, retain, nonatomic) NSDictionary *layoutDictForWindowController;
- (void)createDocwViewsForLayout:(long long)arg1 docwState:(id)arg2 unilibDocManager:(id)arg3;
- (id)addDocwWindowChildren:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

