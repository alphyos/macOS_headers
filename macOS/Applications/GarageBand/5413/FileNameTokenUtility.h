//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ClockFormatter, LGMAKitTimecodeFormatter, NSArray, NSDate, NSDateFormatter, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;

@interface FileNameTokenUtility : NSObject
{
    BOOL _hasNonDefaultActiveTokens;
    long long _mode;
    NSDate *_date;
    NSMutableArray *_internalActiveTokens;
    NSMutableArray *_internalFactoryTokens;
    NSMutableDictionary *_tokensToDisplayStrings;
    NSMutableDictionary *_tokensToReplacementStrings;
    NSArray *_dateTokens;
    NSMutableDictionary *_tokensToDateFormats;
    NSDictionary *_tokensToAvailableDateFormats;
    NSDictionary *_dateFormatsToAnnotations;
    LGMAKitTimecodeFormatter *_timecodeFormatter;
    ClockFormatter *_clockFormatter;
    NSDateFormatter *_dateFormatter;
}

+ (id)tokenByAddingDateFormat:(id)arg1 toToken:(id)arg2;
+ (id)userDefaultsKeyForMode:(long long)arg1;
+ (id)conditionClockString:(id)arg1;
+ (id)conditionTimecodeString:(id)arg1;
+ (BOOL)stringHasReplacementPrefix:(id)arg1;
+ (id)tokenUtilityWithMode:(long long)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(retain, nonatomic) ClockFormatter *clockFormatter; // @synthesize clockFormatter=_clockFormatter;
@property(retain, nonatomic) LGMAKitTimecodeFormatter *timecodeFormatter; // @synthesize timecodeFormatter=_timecodeFormatter;
@property(readonly, nonatomic) NSDictionary *dateFormatsToAnnotations; // @synthesize dateFormatsToAnnotations=_dateFormatsToAnnotations;
@property(readonly, nonatomic) NSDictionary *tokensToAvailableDateFormats; // @synthesize tokensToAvailableDateFormats=_tokensToAvailableDateFormats;
@property(retain, nonatomic) NSMutableDictionary *tokensToDateFormats; // @synthesize tokensToDateFormats=_tokensToDateFormats;
@property(readonly, nonatomic) NSArray *dateTokens; // @synthesize dateTokens=_dateTokens;
@property(retain, nonatomic) NSMutableDictionary *tokensToReplacementStrings; // @synthesize tokensToReplacementStrings=_tokensToReplacementStrings;
@property(retain, nonatomic) NSMutableDictionary *tokensToDisplayStrings; // @synthesize tokensToDisplayStrings=_tokensToDisplayStrings;
@property(retain, nonatomic) NSMutableArray *internalFactoryTokens; // @synthesize internalFactoryTokens=_internalFactoryTokens;
@property(retain, nonatomic) NSMutableArray *internalActiveTokens; // @synthesize internalActiveTokens=_internalActiveTokens;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(nonatomic) BOOL hasNonDefaultActiveTokens; // @synthesize hasNonDefaultActiveTokens=_hasNonDefaultActiveTokens;
@property(nonatomic) long long mode; // @synthesize mode=_mode;
- (id)annotationForDateFormat:(id)arg1;
- (id)availableDateFormatsForToken:(id)arg1;
- (id)dateStringForToken:(id)arg1 usingDateFormat:(id)arg2;
- (void)setDateFormat:(id)arg1 forToken:(id)arg2;
- (id)dateFormatForToken:(id)arg1;
- (id)tokenByAddingDateFormatToToken:(id)arg1;
- (void)splitToken:(id)arg1 intoRawToken:(id *)arg2 andDateFormat:(id *)arg3;
- (void)updateDateTokens;
- (void)initializeDateFormats;
-     // Error parsing type: @44@0:8{TAbsPureClock=q}16{TAbsPureClock=q}24r^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}32c40, name: rangeStringForStartClock:endClock:song:usingTime:
- (id)tokensForPattern:(id)arg1;
- (id)patternForTokens:(id)arg1;
- (id)displayStringForToken:(id)arg1;
-     // Error parsing type: v40@0:8{TAbsPureClock=q}16{TAbsPureClock=q}24r^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}32, name: setReplacementStringForRangeUsingStartClock:endClock:song:
- (void)setReplacementString:(id)arg1 forTokenWithID:(id)arg2;
- (void)writeTokensToUserDefaults;
- (BOOL)readTokensFromUserDefaults;
- (void)setDefaultTokensForMode:(long long)arg1;
- (void)setFactoryTokensForMode:(long long)arg1;
@property(readonly, nonatomic) BOOL hasActiveTokens;
@property(readonly, nonatomic) NSString *interpretedString;
@property(readonly, nonatomic) NSArray *factoryTokens;
@property(copy, nonatomic) NSArray *activeTokens;
- (void)setInitialReplacementStringsForFactoryTokens;
- (void)setDisplayStringsForFactoryTokens;
- (id)description;
- (id)initWithMode:(long long)arg1;

@end

