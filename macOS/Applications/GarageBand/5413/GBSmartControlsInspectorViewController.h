//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MAToolKit/MALastClickedParameterViewController.h>

#import "MAAnimatedListViewDataSource-Protocol.h"
#import "MAAnimatedListViewDelegate-Protocol.h"
#import "MAButtonCellTitleAbbreviatorProtocol-Protocol.h"
#import "MAIdleCallback-Protocol.h"

@class GBTrackInspectorAudioUnits, GBTrackInspectorInstrumentButton, MAButton, MAKitTabView, MAPopUpButton, MASegmentedControl, MASlider, MATextField, NSArrayController, NSBox, NSButton, NSImageView, NSMapTable, NSNumber, NSString, NSTextField, NSView;

@interface GBSmartControlsInspectorViewController : MALastClickedParameterViewController <MAIdleCallback, MAAnimatedListViewDataSource, MAAnimatedListViewDelegate, MAButtonCellTitleAbbreviatorProtocol>
{
    NSMapTable *_plugInIdsTable;
    BOOL _inputControlsExpanded;
    BOOL _effectControlsExpanded;
    BOOL _showsVisualEQ;
    long long _selectedSmartControlsInst;
    long long _selectedMasterEffect;
    NSBox *_upperDividerLine;
    NSBox *_lowerDividerLine;
    NSBox *_recordSettingsDividerLine;
    MAKitTabView *_mainTabView;
    NSArrayController *_dataSources;
    NSView *_keyboardSensitivityBox;
    MASlider *_keyboardSensitivitySlider;
    NSView *_eDrummerKeyboardSensitivityBox;
    MASlider *_eDrummerKeyboardSensitivitySlider;
    NSView *_recordingSettingsBox;
    MASlider *_recordLevelSlider;
    MASegmentedControl *_audioInputControl;
    NSButton *_automaticLevelControlButton;
    NSButton *_inputMonitoringButton;
    NSButton *_feedbackProtectionButton;
    NSTextField *_feedbackProtectionLabel;
    NSButton *_noiseGateButton;
    MASlider *_noiseGateSlider;
    NSButton *_visualEQBypassButton;
    MAPopUpButton *_visualEQSettingsControl;
    MAPopUpButton *_globalSendsSelectionControl;
    NSButton *_globalSendsBypassButton;
    MAPopUpButton *_globalSendsSettingsControl;
    GBTrackInspectorInstrumentButton *_instrumentButton;
    NSView *_midiTrackAUControlBox;
    GBTrackInspectorAudioUnits *_midiTrackAUControl;
    NSView *_audioTrackAUControlBox;
    GBTrackInspectorAudioUnits *_audioTrackAUControl;
    NSView *_masterTrackAUControlBox;
    GBTrackInspectorAudioUnits *_masterTrackAUControl;
    NSView *_eDrummerTrackAUControlBox;
    GBTrackInspectorAudioUnits *_eDrummerTrackAUControl;
    NSButton *_masterEchoBypassButtonAudio;
    NSButton *_masterReverbBypassButtonAudio;
    MASlider *_masterEchoSliderAudio;
    MASlider *_masterReverbSliderAudio;
    NSButton *_masterEchoBypassButtonMidi;
    NSButton *_masterReverbBypassButtonMidi;
    MASlider *_masterEchoSliderMidi;
    MASlider *_masterReverbSliderMidi;
    NSButton *_masterEchoBypassButtonEDrummer;
    NSButton *_masterReverbBypassButtonEDrummer;
    MASlider *_masterEchoSliderEDrummer;
    MASlider *_masterReverbSliderEDrummer;
    NSView *_sharedMasterEffectsBox;
    NSImageView *_trackIconView;
    MATextField *_trackLabel;
    MATextField *_selectedSendLabel;
    NSButton *_selectedSendBypassButton;
    MASlider *_selectedSendSlider;
    MATextField *_selectedSendDescription;
    MATextField *_selectedSendFooter;
    MAButton *_monoStereoButton;
}

@property(nonatomic) MAButton *monoStereoButton; // @synthesize monoStereoButton=_monoStereoButton;
@property(nonatomic) MATextField *selectedSendFooter; // @synthesize selectedSendFooter=_selectedSendFooter;
@property(nonatomic) MATextField *selectedSendDescription; // @synthesize selectedSendDescription=_selectedSendDescription;
@property(nonatomic) MASlider *selectedSendSlider; // @synthesize selectedSendSlider=_selectedSendSlider;
@property(nonatomic) NSButton *selectedSendBypassButton; // @synthesize selectedSendBypassButton=_selectedSendBypassButton;
@property(nonatomic) MATextField *selectedSendLabel; // @synthesize selectedSendLabel=_selectedSendLabel;
@property(nonatomic) MATextField *trackLabel; // @synthesize trackLabel=_trackLabel;
@property(nonatomic) NSImageView *trackIconView; // @synthesize trackIconView=_trackIconView;
@property(nonatomic) NSView *sharedMasterEffectsBox; // @synthesize sharedMasterEffectsBox=_sharedMasterEffectsBox;
@property(nonatomic) MASlider *masterReverbSliderEDrummer; // @synthesize masterReverbSliderEDrummer=_masterReverbSliderEDrummer;
@property(nonatomic) MASlider *masterEchoSliderEDrummer; // @synthesize masterEchoSliderEDrummer=_masterEchoSliderEDrummer;
@property(nonatomic) NSButton *masterReverbBypassButtonEDrummer; // @synthesize masterReverbBypassButtonEDrummer=_masterReverbBypassButtonEDrummer;
@property(nonatomic) NSButton *masterEchoBypassButtonEDrummer; // @synthesize masterEchoBypassButtonEDrummer=_masterEchoBypassButtonEDrummer;
@property(nonatomic) MASlider *masterReverbSliderMidi; // @synthesize masterReverbSliderMidi=_masterReverbSliderMidi;
@property(nonatomic) MASlider *masterEchoSliderMidi; // @synthesize masterEchoSliderMidi=_masterEchoSliderMidi;
@property(nonatomic) NSButton *masterReverbBypassButtonMidi; // @synthesize masterReverbBypassButtonMidi=_masterReverbBypassButtonMidi;
@property(nonatomic) NSButton *masterEchoBypassButtonMidi; // @synthesize masterEchoBypassButtonMidi=_masterEchoBypassButtonMidi;
@property(nonatomic) MASlider *masterReverbSliderAudio; // @synthesize masterReverbSliderAudio=_masterReverbSliderAudio;
@property(nonatomic) MASlider *masterEchoSliderAudio; // @synthesize masterEchoSliderAudio=_masterEchoSliderAudio;
@property(nonatomic) NSButton *masterReverbBypassButtonAudio; // @synthesize masterReverbBypassButtonAudio=_masterReverbBypassButtonAudio;
@property(nonatomic) NSButton *masterEchoBypassButtonAudio; // @synthesize masterEchoBypassButtonAudio=_masterEchoBypassButtonAudio;
@property(nonatomic) GBTrackInspectorAudioUnits *eDrummerTrackAUControl; // @synthesize eDrummerTrackAUControl=_eDrummerTrackAUControl;
@property(nonatomic) NSView *eDrummerTrackAUControlBox; // @synthesize eDrummerTrackAUControlBox=_eDrummerTrackAUControlBox;
@property(nonatomic) GBTrackInspectorAudioUnits *masterTrackAUControl; // @synthesize masterTrackAUControl=_masterTrackAUControl;
@property(nonatomic) NSView *masterTrackAUControlBox; // @synthesize masterTrackAUControlBox=_masterTrackAUControlBox;
@property(nonatomic) GBTrackInspectorAudioUnits *audioTrackAUControl; // @synthesize audioTrackAUControl=_audioTrackAUControl;
@property(nonatomic) NSView *audioTrackAUControlBox; // @synthesize audioTrackAUControlBox=_audioTrackAUControlBox;
@property(nonatomic) GBTrackInspectorAudioUnits *midiTrackAUControl; // @synthesize midiTrackAUControl=_midiTrackAUControl;
@property(nonatomic) NSView *midiTrackAUControlBox; // @synthesize midiTrackAUControlBox=_midiTrackAUControlBox;
@property(nonatomic) GBTrackInspectorInstrumentButton *instrumentButton; // @synthesize instrumentButton=_instrumentButton;
@property(nonatomic) MAPopUpButton *globalSendsSettingsControl; // @synthesize globalSendsSettingsControl=_globalSendsSettingsControl;
@property(nonatomic) NSButton *globalSendsBypassButton; // @synthesize globalSendsBypassButton=_globalSendsBypassButton;
@property(nonatomic) MAPopUpButton *globalSendsSelectionControl; // @synthesize globalSendsSelectionControl=_globalSendsSelectionControl;
@property(nonatomic) MAPopUpButton *visualEQSettingsControl; // @synthesize visualEQSettingsControl=_visualEQSettingsControl;
@property(nonatomic) NSButton *visualEQBypassButton; // @synthesize visualEQBypassButton=_visualEQBypassButton;
@property(nonatomic) MASlider *noiseGateSlider; // @synthesize noiseGateSlider=_noiseGateSlider;
@property(nonatomic) NSButton *noiseGateButton; // @synthesize noiseGateButton=_noiseGateButton;
@property(nonatomic) NSTextField *feedbackProtectionLabel; // @synthesize feedbackProtectionLabel=_feedbackProtectionLabel;
@property(nonatomic) NSButton *feedbackProtectionButton; // @synthesize feedbackProtectionButton=_feedbackProtectionButton;
@property(nonatomic) NSButton *inputMonitoringButton; // @synthesize inputMonitoringButton=_inputMonitoringButton;
@property(nonatomic) NSButton *automaticLevelControlButton; // @synthesize automaticLevelControlButton=_automaticLevelControlButton;
@property(nonatomic) MASegmentedControl *audioInputControl; // @synthesize audioInputControl=_audioInputControl;
@property(nonatomic) MASlider *recordLevelSlider; // @synthesize recordLevelSlider=_recordLevelSlider;
@property(nonatomic) NSView *recordingSettingsBox; // @synthesize recordingSettingsBox=_recordingSettingsBox;
@property(nonatomic) MASlider *eDrummerKeyboardSensitivitySlider; // @synthesize eDrummerKeyboardSensitivitySlider=_eDrummerKeyboardSensitivitySlider;
@property(nonatomic) NSView *eDrummerKeyboardSensitivityBox; // @synthesize eDrummerKeyboardSensitivityBox=_eDrummerKeyboardSensitivityBox;
@property(nonatomic) MASlider *keyboardSensitivitySlider; // @synthesize keyboardSensitivitySlider=_keyboardSensitivitySlider;
@property(nonatomic) NSView *keyboardSensitivityBox; // @synthesize keyboardSensitivityBox=_keyboardSensitivityBox;
@property(nonatomic) NSArrayController *dataSources; // @synthesize dataSources=_dataSources;
@property(nonatomic) MAKitTabView *mainTabView; // @synthesize mainTabView=_mainTabView;
@property(nonatomic) NSBox *recordSettingsDividerLine; // @synthesize recordSettingsDividerLine=_recordSettingsDividerLine;
@property(nonatomic) NSBox *lowerDividerLine; // @synthesize lowerDividerLine=_lowerDividerLine;
@property(nonatomic) NSBox *upperDividerLine; // @synthesize upperDividerLine=_upperDividerLine;
@property(readonly, nonatomic) long long selectedMasterEffect; // @synthesize selectedMasterEffect=_selectedMasterEffect;
@property(nonatomic) long long selectedSmartControlsInst; // @synthesize selectedSmartControlsInst=_selectedSmartControlsInst;
@property(nonatomic) BOOL showsVisualEQ; // @synthesize showsVisualEQ=_showsVisualEQ;
- (id)cell:(id)arg1 abbreviatedString:(id)arg2 forSize:(struct CGSize)arg3;
- (BOOL)listView:(id)arg1 canInsertRowAtIndex:(unsigned long long)arg2;
- (BOOL)listView:(id)arg1 acceptDrop:(id)arg2 row:(unsigned long long)arg3 shouldReplace:(BOOL)arg4;
- (unsigned long long)listView:(id)arg1 validateDrop:(id)arg2 proposedRow:(unsigned long long)arg3;
- (void)listView:(id)arg1 wantsInsertRowAtIndex:(unsigned long long)arg2;
- (BOOL)listView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)listView:(id)arg1 cellForRow:(unsigned long long)arg2;
- (double)listView:(id)arg1 heightOfRow:(unsigned long long)arg2;
- (unsigned long long)numberOfRowsInListView:(id)arg1;
- (unsigned long long)numVisibleSlots;
- (void)plugInBypassAction:(id)arg1;
- (void)plugInPopUpAction:(id)arg1;
- (void)plugInAction:(id)arg1;
- (void)setPlugInBypassed:(unsigned long long)arg1 inSlot:(unsigned long long)arg2;
- (long long)showPlugInMenuForSlot:(unsigned long long)arg1 andView:(id)arg2 showsCurrent:(BOOL)arg3;
- (BOOL)insertPlugInWithIndex:(long long)arg1 intoSlot:(unsigned long long)arg2;
- (BOOL)copyPlugInFromSlot:(unsigned long long)arg1 toSlot:(unsigned long long)arg2 replacing:(BOOL)arg3;
- (BOOL)movePlugInFromSlot:(unsigned long long)arg1 toSlot:(unsigned long long)arg2 replacing:(BOOL)arg3;
- (BOOL)setCurrentPlugInIndex:(long long)arg1 inSlot:(unsigned long long)arg2;
- (BOOL)closePlugIn:(unsigned long long)arg1;
- (BOOL)openPlugIn:(unsigned long long)arg1 withOption:(int)arg2;
- (BOOL)openPlugIn:(unsigned long long)arg1;
- (BOOL)togglePlugIn:(unsigned long long)arg1;
- (id)globalSendsSelectionMenu;
- (void)selectedGlobalSendMenuItemAction:(id)arg1;
- (void)backToTrackAction:(id)arg1;
- (void)editGlobalSendsAction:(id)arg1;
- (void)noiseGateAction:(id)arg1;
- (void)inputMonitorAction:(id)arg1;
- (void)inputControlAction:(id)arg1;
- (void)toggleRecordSettings:(id)arg1;
- (void)togglePlugIns:(id)arg1;
- (void)toggleKeyboardSensitivity:(id)arg1;
- (void)updateUIAnimated:(BOOL)arg1;
- (BOOL)hasPluginMenu;
- (void)updateUI;
@property(readonly, nonatomic) NSNumber *effectControlsCollapsed;
@property(nonatomic) NSNumber *effectControlsExpanded;
- (void)updateBox:(id)arg1 containingListView:(id)arg2 spacing:(struct AUControlSpacing)arg3 collapsedHeight:(double)arg4;
@property(readonly, nonatomic) NSNumber *inputControlsCollapsed;
@property(nonatomic) NSNumber *inputControlsExpanded;
- (void)viewVisibilityChange:(BOOL)arg1;
- (void)inspectorNeedsDisplay:(id)arg1;
- (void)frameDidChange:(id)arg1;
@property(readonly, nonatomic) BOOL masterReverbSliderEnabled;
@property(readonly, nonatomic) BOOL masterReverbBypassEnabled;
@property(readonly, nonatomic) BOOL masterEchoSliderEnabled;
@property(readonly, nonatomic) BOOL masterEchoBypassEnabled;
- (void)handleUpdateBitsForElement:(id)arg1;
- (void)handleUpdateBits:(id)arg1;
- (void)updateGlobalSends:(int)arg1;
- (void)didAddPlugIn:(id)arg1;
- (void)idleCallback;
- (void)removeMessObservers;
- (void)addMessObservers;
- (void)handleUM_AUDIODEVICE_GAIN_CHANGED:(id)arg1;
- (void)handleUM_AUDIOPREFS:(id)arg1;
- (void)handleUM_GNAME:(id)arg1;
- (void)handleUM_GEDIT:(id)arg1;
- (void)handleUM_PATRACK:(id)arg1;
- (void)handleUM_RECTRACK:(id)arg1;
- (void)handleUM_CHAUCONF:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: currentSong
- (id)smartControlsViewController;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

