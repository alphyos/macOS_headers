//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GenInstDrummer_TrackModelProtocolPublic-Protocol.h"

@class NSArray, NSDictionary, NSString, NSURL;

@protocol GenInstDrummer_TrackModelProtocol <GenInstDrummer_TrackModelProtocolPublic>
- (NSDictionary *)state;
- (void)setStateFromTrackCopy:(NSDictionary *)arg1;
- (void)setState:(NSDictionary *)arg1;
- (BOOL)keepDrumKitWhenChangingDrummer;
- (void)setKeepDrumKitWhenChangingDrummer:(BOOL)arg1;
- (BOOL)parametersWhereChangedAfterCharacterRecall;
- (void)setParametersWhereChangedAfterCharacterRecall:(BOOL)arg1;
- (BOOL)loadPatchForURL:(NSURL *)arg1 options:(NSDictionary *)arg2;
- (BOOL)isContentBeingDownloadedForPatchWithURL:(NSURL *)arg1;
- (BOOL)contentWasDownloadedForPatchWithURL:(NSURL *)arg1;
- (void)downloadContentForPatchWithURL:(NSURL *)arg1 groupInfo:(NSDictionary *)arg2;
- (BOOL)loadPatchForSelectedCharacterAtIndex:(unsigned long long)arg1;
- (NSArray *)patchURLsForGenreIdentifier:(NSString *)arg1 characterIdentifier:(NSString *)arg2;
- (BOOL)isDefaultContentBeingDownloadedForGenreIdentifier:(NSString *)arg1 characterIdentifier:(NSString *)arg2;
- (BOOL)defaultContentWasDownloadedForGenreIdentifier:(NSString *)arg1 characterIdentifier:(NSString *)arg2;
- (void)downloadDefaultContentForGenreIdentifier:(NSString *)arg1 characterIdentifier:(NSString *)arg2;
- (BOOL)saveNewPresetForRegion:(struct CRegion *)arg1 outPresetUniqueIdentifier:(id *)arg2;
- (void)setSelectedGenre:(NSString *)arg1 characterIdentifier:(NSString *)arg2 options:(NSDictionary *)arg3;
- (BOOL)keepSettingsWhenChangingDrummer;
- (void)setKeepSettingsWhenChangingDrummer:(BOOL)arg1;
- (void)setKeepSettingsWhenChangingDrummer:(BOOL)arg1 parameterKeysToKeep:(NSArray *)arg2;
- (unique_ptr_85341139)noteNrHelper;
- (void)generateEventsWithSameSeedsForRegions:(vector_e75b7d21)arg1;
- (void)generateEventsWithZeroSeedsAndOption:(int)arg1;
- (void)generateEventsWithSameSeedsAndOption:(int)arg1;
- (void)generateEventsWithNewSeedsAndOption:(int)arg1;
- (void)prepareGenerateToSpeedUpFirstPlayOnTrack:(struct CVirtualTrack)arg1;
- (NSString *)proposedClaveTrackUUIDForRegion:(const struct CRegion *)arg1;
- (vector_e94a763c)claveCandidateTracks;
- (unsigned long long)drummerTrackPatchType;
- (NSString *)drumKitDesignerPresetName;
- (void)togglePlugInEditor;
- (void)convertTrackAndItsRegionsToMidi:(struct CVirtualTrack)arg1;
- (void)convertRegionToMidiRegion:(struct CEvLaunch *)arg1;
- (void)convertSelectedRegionsToMidiRegions;
- (void)convertSelectedRegionsToDrummerRegions;
- (void)resetRegionParametersForRegion:(struct CRegion *)arg1;
- (void)initializeNewDrummerRegion:(struct CRegion *)arg1 options:(NSDictionary *)arg2;
- (BOOL)initializeDrumTrackWithOptions:(NSDictionary *)arg1;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: song
- (struct CVirtualTrack)associatedDrumTrack;
@end

