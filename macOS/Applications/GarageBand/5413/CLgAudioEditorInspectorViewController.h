//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MAToolKit/MALastClickedParameterViewController.h>

#import "MAIdleCallback-Protocol.h"
#import "NSMenuDelegate-Protocol.h"

@class MABackgroundView, MAButton, MAKitMenu, MAKitPopUpButton, MAKitTabView, MASegmentedControl, MASlider, MATextField, NSBox, NSString, NSView;
@protocol CLgAudioEditorInspectorLayoutStrategyProtocol;

@interface CLgAudioEditorInspectorViewController : MALastClickedParameterViewController <NSMenuDelegate, MAIdleCallback>
{
    MABackgroundView *automationBox;
    MASlider *automationValueSlider;
    MAButton *automationValuePopup;
    MASegmentedControl *rbaSwitchSegmentedControl;
    MATextField *automationSliderReadout;
    MAButton *autodefineButton;
    MAButton *followTempoButton;
    MAButton *followKeyButton;
    MAButton *enableFlexButton;
    NSBox *topShadow;
    MAKitPopUpButton *scaleTypePopup;
    MAKitMenu *majorMenu;
    MATextField *automationLabel;
    int quantizationMode;
    int lastQStrengthSliderVal;
    int scaleType;
    int lastPitchQStrengthSliderVal;
    int prevGainSliderVal;
    int prevTransposeSliderVal;
    int followTempo;
    BOOL fUserDidSwitchLevel;
    BOOL fContentNeedsUpdate;
    BOOL _automationSliderIsEditing;
    long long _quantizeStrength;
    long long _quantizePitchStrength;
    long long _gainVal;
    long long _transposeVal;
    MASegmentedControl *_timeQuantizeSegmentedControl;
    MASlider *_quantizeStrengthSlider;
    MASegmentedControl *_pitchQuantizeSegmentedControl;
    NSView *_mainView;
    MAKitTabView *_mainTabView;
    NSView *_automationContainerView;
    NSBox *_pitchQuantizeBox;
    NSBox *_timeQuantizeBox;
    NSBox *_pitchSliderBox;
    NSBox *_velocitySliderBox;
    NSBox *_transposeSliderBox;
    MATextField *_regionNameTextField;
    MAButton *_reversePlaybackButton;
    MATextField *_strengthSliderReadout;
    MABackgroundView *_pitchQuantizeBackgroundView;
    MATextField *_velocitySliderReadout;
    MATextField *_transposeSliderReadout;
    MATextField *_quantizePitchStrengthSliderReadout;
    MASlider *_quantizePitchStrenghtSlider;
    MASlider *_transposeSlider;
    MASlider *_gainSlider;
    MASegmentedControl *_switchLevelSegmentedControl;
    NSBox *_dividerLineTop;
    NSBox *_levelSwitchBackground;
    MAButton *_quantizeButton;
    id <CLgAudioEditorInspectorLayoutStrategyProtocol> _delegate;
}

@property(nonatomic) id <CLgAudioEditorInspectorLayoutStrategyProtocol> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) MAButton *quantizeButton; // @synthesize quantizeButton=_quantizeButton;
@property(nonatomic) NSBox *levelSwitchBackground; // @synthesize levelSwitchBackground=_levelSwitchBackground;
@property(nonatomic) NSBox *dividerLineTop; // @synthesize dividerLineTop=_dividerLineTop;
@property(nonatomic) MASegmentedControl *switchLevelSegmentedControl; // @synthesize switchLevelSegmentedControl=_switchLevelSegmentedControl;
@property(nonatomic) MASlider *gainSlider; // @synthesize gainSlider=_gainSlider;
@property(nonatomic) MASlider *transposeSlider; // @synthesize transposeSlider=_transposeSlider;
@property(nonatomic) MASlider *quantizePitchStrenghtSlider; // @synthesize quantizePitchStrenghtSlider=_quantizePitchStrenghtSlider;
@property(nonatomic) MATextField *quantizePitchStrengthSliderReadout; // @synthesize quantizePitchStrengthSliderReadout=_quantizePitchStrengthSliderReadout;
@property(nonatomic) MATextField *transposeSliderReadout; // @synthesize transposeSliderReadout=_transposeSliderReadout;
@property(nonatomic) MATextField *velocitySliderReadout; // @synthesize velocitySliderReadout=_velocitySliderReadout;
@property(nonatomic) MABackgroundView *pitchQuantizeBackgroundView; // @synthesize pitchQuantizeBackgroundView=_pitchQuantizeBackgroundView;
@property(nonatomic) MATextField *strengthSliderReadout; // @synthesize strengthSliderReadout=_strengthSliderReadout;
@property(nonatomic) MAButton *reversePlaybackButton; // @synthesize reversePlaybackButton=_reversePlaybackButton;
@property(nonatomic) MATextField *regionNameTextField; // @synthesize regionNameTextField=_regionNameTextField;
@property(nonatomic) NSBox *transposeSliderBox; // @synthesize transposeSliderBox=_transposeSliderBox;
@property(nonatomic) NSBox *velocitySliderBox; // @synthesize velocitySliderBox=_velocitySliderBox;
@property(nonatomic) NSBox *pitchSliderBox; // @synthesize pitchSliderBox=_pitchSliderBox;
@property(nonatomic) NSBox *timeQuantizeBox; // @synthesize timeQuantizeBox=_timeQuantizeBox;
@property(nonatomic) NSBox *pitchQuantizeBox; // @synthesize pitchQuantizeBox=_pitchQuantizeBox;
@property(nonatomic) NSView *automationContainerView; // @synthesize automationContainerView=_automationContainerView;
@property(nonatomic) MAKitTabView *mainTabView; // @synthesize mainTabView=_mainTabView;
@property(nonatomic) NSView *mainView; // @synthesize mainView=_mainView;
@property(nonatomic) MASegmentedControl *pitchQuantizeSegmentedControl; // @synthesize pitchQuantizeSegmentedControl=_pitchQuantizeSegmentedControl;
@property(nonatomic) MASlider *quantizeStrengthSlider; // @synthesize quantizeStrengthSlider=_quantizeStrengthSlider;
@property(nonatomic) MASegmentedControl *timeQuantizeSegmentedControl; // @synthesize timeQuantizeSegmentedControl=_timeQuantizeSegmentedControl;
@property BOOL automationSliderIsEditing; // @synthesize automationSliderIsEditing=_automationSliderIsEditing;
@property long long transposeVal; // @synthesize transposeVal=_transposeVal;
@property long long gainVal; // @synthesize gainVal=_gainVal;
@property long long quantizePitchStrength; // @synthesize quantizePitchStrength=_quantizePitchStrength;
@property long long quantizeStrength; // @synthesize quantizeStrength=_quantizeStrength;
- (void)setQuantizationPopUpStrings;
- (void)initScaleTypePopup;
- (id)LocalizedScaleNameForScaleAtIndex:(int)arg1;
- (int)indexOfSelectedItemInMenu:(id)arg1;
- (int)tagOfSelectedItemInMenu:(id)arg1;
- (void)pitchQuantizeSelectedEvents:(id)arg1;
- (void)limitToSongKeyClicked:(id)arg1;
-     // Error parsing type: v40@0:8^{CEvLaunchAudio=qq{CEvExt=qq}{CEvExt=qq}{CEvExt=qq}{CEvExt=qq}}16^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}24^{FENSTER=s^v^vssssqqiqqq^?sssSiscccsccccC[2C](?=[10s]{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}[20c]{?=sssSSs[2s][2s]}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssss[4s]ss}{?=ssssssssss})[4c][3s]si{XYH=qqq}[4c]iq{MEGAPARS=(?={?=CCCC}i)}{MEGAPARS=(?={?=CCCC}i)}c@[2c]cccccccccccccc{CT_Flags=cccccc[8s]s[5i][8c][19i]}{BOX=ssss}sii[12i][256c]{TAbsPureClock=q}@@{TTrackNr=qi}i[2f]f[2f][2q]ffff^{CEv}^{CDocumentLogic}^{CStripes}^{CMixerStripList}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}i(?=^{TArrangeViewState}^{ScViewState}^{SAMVIEW})^{CSong}^{CInst}{PlayheadManagement=iidd[60{?={CGPoint=dd}d{TAbsPureClock=q}i}]dddd{TAbsPureClock=q}d{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}ii{TAbsPureClock=q}dii{TAbsPureClock=q}{TAbsPureClock=q}ccffqdccddddcccccc{CGRect={CGPoint=dd}{CGSize=dd}}cc}{TPureClock=q}{RegionAttributes=ii{TTrackNr=qi}}B^{ZOOMSTACK}Bi}32, name: pitchQuantizeOneLaunch:withSong:Fenster:
- (void)qPitchStrengthSliderDidEndEditing:(id)arg1;
- (void)change_mode:(id)arg1;
- (int)currentScale;
- (int)currentRootNote;
- (void)change_key:(id)arg1;
- (void)updateUI;
- (void)setRootNoteMenu:(id)arg1;
- (id)rootNoteMenu;
- (id)scaleTypeMenu;
- (void)quantizeSelectedEvents:(id)arg1;
- (void)checkDisableGrooveSlave;
- (void)reversePlaybackButtonPressed:(id)arg1;
-     // Error parsing type: v44@0:8^{CEvLaunchAudio=qq{CEvExt=qq}{CEvExt=qq}{CEvExt=qq}{CEvExt=qq}}16^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}24^{FENSTER=s^v^vssssqqiqqq^?sssSiscccsccccC[2C](?=[10s]{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}[20c]{?=sssSSs[2s][2s]}{?=ssssssssss}{?=ssssssssss}{?=ssssssssss}{?=ssss[4s]ss}{?=ssssssssss})[4c][3s]si{XYH=qqq}[4c]iq{MEGAPARS=(?={?=CCCC}i)}{MEGAPARS=(?={?=CCCC}i)}c@[2c]cccccccccccccc{CT_Flags=cccccc[8s]s[5i][8c][19i]}{BOX=ssss}sii[12i][256c]{TAbsPureClock=q}@@{TTrackNr=qi}i[2f]f[2f][2q]ffff^{CEv}^{CDocumentLogic}^{CStripes}^{CMixerStripList}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}i(?=^{TArrangeViewState}^{ScViewState}^{SAMVIEW})^{CSong}^{CInst}{PlayheadManagement=iidd[60{?={CGPoint=dd}d{TAbsPureClock=q}i}]dddd{TAbsPureClock=q}d{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}ii{TAbsPureClock=q}dii{TAbsPureClock=q}{TAbsPureClock=q}ccffqdccddddcccccc{CGRect={CGPoint=dd}{CGSize=dd}}cc}{TPureClock=q}{RegionAttributes=ii{TTrackNr=qi}}B^{ZOOMSTACK}Bi}32i40, name: quantizeOneLaunch:withSong:Fenster:grooveID:
- (void)handleSelectionChange;
- (void)setAllElementsEnabled:(BOOL)arg1;
- (void)setControl:(int)arg1 value:(int)arg2;
- (void)selectRegionsOnEditorTrack;
- (void)qStrengthSliderMoved:(id)arg1;
- (void)gainSliderMoved:(id)arg1;
- (void)changeQStrength:(id)arg1;
- (void)changeGain:(id)arg1;
- (void)followTempoChanged:(id)arg1;
@property(readonly) struct CTrack *displayedTrack;
@property(readonly) struct CTrackID displayedTrackID;
@property(readonly) struct TPosOneBasedTrackNr displayedTrackNr;
- (void)qPitchStrengthSliderMoved:(id)arg1;
- (void)transposeSliderDidEndEditing:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)regionNameWasEdited:(id)arg1;
- (void)viewVisibilityChange:(BOOL)arg1;
- (void)registerMessObservers;
- (void)sliderWillBeginDragging:(id)arg1;
-     // Error parsing type: ^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16@0:8, name: currentSong
- (void)checkContentNeedsUpdateNotification:(id)arg1;
- (void)switchInspectorTab;
- (double)minHeaderWidthFlexPitchWithInspector;
- (void)switchEditorLevel:(id)arg1;
- (void)enableFlexClicked:(id)arg1;
- (void)setSelectedQuantizeMenuEntry:(int)arg1;
- (void)setSelectedRootNoteWithIndex:(int)arg1;
- (void)setSelectedRootNoteWithTag:(int)arg1;
- (void)setSelectedRootNoteFromMenuItem:(id)arg1;
- (void)setSelectedScaleTypeWithTag:(int)arg1;
- (void)frameDidChange:(id)arg1;
- (void)layoutInspectorBoxes:(id)arg1;
- (void)switchInspectorBasedOnSelection;
- (BOOL)isAutomation;
- (void)handleUM_ELASTICMODE:(id)arg1;
- (void)handleUM_CHSEL:(id)arg1;
- (void)handleUM_MARQUEE:(id)arg1;
- (void)handleUM_CHEV:(id)arg1;
- (void)handleUM_MSEQPAR:(id)arg1;
- (void)handleUM_CHMNAME:(id)arg1;
- (void)handleUM_CHNEWAUTO:(id)arg1;
- (void)dealloc;
- (void)RemoveAllMessObservers;
- (void)idleCallback;
- (void)awakeFromNib;
@property(readonly) struct FENSTER *fenster;
- (BOOL)isGarageBand;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (float)automationSliderValue;
- (void)automationValueSliderAction:(id)arg1;
- (void)automationSliderDidEndTracking:(id)arg1;
- (void)automationSliderWillStartTracking:(id)arg1;
- (void)toggleRBA:(id)arg1;
- (id)readoutString;
- (void)automationValuePopupAction:(id)arg1;
- (void)doAutodefine:(id)arg1;
@property(readonly) struct CInst *instrument;
@property(readonly) int instID;
- (void)updateAutomationValues;
- (void)updateAutomationRealtimeValuesIfChanged;
- (void)updateAutomationRealtimeValues;
- (id)currentAutomationParamTitle:(id)arg1;
- (void)frameDidChangeForAutomation:(id)arg1;
- (void)initAutomationElements;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

