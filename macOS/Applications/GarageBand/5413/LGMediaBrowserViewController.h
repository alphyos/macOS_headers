//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLgAudioPreviewView_protocol-Protocol.h"
#import "LGAdvancedSearchViewControllerDelegate-Protocol.h"
#import "LGFileBrowserDataDelegate-Protocol.h"
#import "NSPathControlDelegate-Protocol.h"
#import "NSTabViewDelegate-Protocol.h"

@class CLgAudioPreviewView, EcTimer, LFBButton_Prelisten, LGAdvancedSearchViewController, LGAlternativesChooserWindowController, LGFileBrowserData, LGImageButton, MABorderView, MAButton, MAKitPathControl, MANinePartImageView, MAPopUpButton, MASearchField, MASegmentedControl, MyMAKitView, NSArray, NSBrowser, NSButton, NSFont, NSMutableArray, NSPopUpButton, NSProgressIndicator, NSSlider, NSString, NSTabView, NSTableView, NSTextField, NSView, NSWindow;
@protocol hasTableViewMethod><TrackImportView_Access;

@interface LGMediaBrowserViewController : NSObject <NSTabViewDelegate, NSPathControlDelegate, LGAdvancedSearchViewControllerDelegate, LGFileBrowserDataDelegate, CLgAudioPreviewView_protocol>
{
    MASegmentedControl *_backForwardSegmentedControl;
    NSPopUpButton *_pathPopUpButton;
    MASegmentedControl *_computerHomeProjectSegmentedControl;
    MASegmentedControl *_listAndBrowserSegmentedControl;
    MASearchField *_searchTextField;
    NSProgressIndicator *_progressIndicator;
    LGImageButton *_advancedButton;
    NSTabView *_tabView;
    NSTableView *_fileTableView;
    NSBrowser *_fileBrowserView;
    NSTableView *_searchTableView;
    NSView *_advancedSearchView;
    MAPopUpButton *_advancedSearchAnyAllPopUpButton;
    MAPopUpButton *_actionPopUpButton;
    NSSlider *_volumeSlider;
    LFBButton_Prelisten *_playButton;
    MAButton *_importButton;
    MAButton *_openButton;
    NSTextField *_informativeText;
    MAKitPathControl *_pathControl;
    MABorderView *_borderView;
    MANinePartImageView *_volumeMinBackgroundView;
    MANinePartImageView *_volumeMaxBackgroundView;
    NSWindow *_newFolderWindow;
    NSTextField *_newFolderNameTextField;
    NSButton *_newFolderCancelButton;
    NSButton *_newFolderOkButton;
    EcTimer *_updateTimer;
    EcTimer *_reActivateSearchTimer;
    LGFileBrowserData *_fileBrowserData;
    struct __MDQuery *_query;
    NSArray *_searchScope;
    BOOL _queryRunning;
    NSString *_queryString;
    NSMutableArray *_selectedPaths;
    NSString *_preListenAudioFile;
    BOOL _logicIsPlaying;
    NSArray *_iconArray;
    LGAdvancedSearchViewController *_advancedSearch;
    NSView *_invisibleViewForQuickHelpTrackingArea;
    NSString *_newFolderPath;
    NSView<hasTableViewMethod><TrackImportView_Access> *_importTracksView;
    LGAlternativesChooserWindowController *_alternativesChooserWindowController;
    CLgAudioPreviewView *_audioPreviewView;
    double _selectionActionTimeIntervall;
    BOOL _rexSharedLibraryIsPresent;
    BOOL _blockSearchActivation;
    BOOL _playState;
    NSFont *_font;
    MyMAKitView *_view;
}

+ (void)setStretchAppleLoops:(_Bool)arg1;
+ (_Bool)stretchAppleLoops;
+ (id)createLGMediaBrowserViewController;
- (void).cxx_destruct;
@property(retain, nonatomic) MyMAKitView *view; // @synthesize view=_view;
@property(retain, nonatomic) NSFont *font; // @synthesize font=_font;
@property(nonatomic) BOOL playState; // @synthesize playState=_playState;
@property(readonly, nonatomic) BOOL blockSearchActivation; // @synthesize blockSearchActivation=_blockSearchActivation;
@property(readonly, nonatomic) __weak NSView *fileBrowserView; // @synthesize fileBrowserView=_fileBrowserView;
- (void)setupProjectAlternativesPopupButtonWithPath:(id)arg1;
- (void)openButtonAction:(id)arg1;
- (void)importButtonAction:(id)arg1;
- (BOOL)gotoLogicProjectURL:(id)arg1 showProjectImport:(BOOL)arg2;
- (BOOL)importProject:(id)arg1;
- (void)closeImportView;
- (void)hideGUICoveredByImportView:(BOOL)arg1;
- (void)playButtonAction:(id)arg1;
- (void)volumeSliderAction:(id)arg1;
- (void)removeFolderFromLoopCollectionButtonAction:(id)arg1;
- (BOOL)removeFolderFromLoopCollectionButtonActionEnabledForPath:(id)arg1;
- (void)folderContainsLoopCollectionButtonAction:(id)arg1;
- (BOOL)addLoopFilesPaths:(id)arg1;
- (BOOL)addLoopCollectionPaths:(id)arg1;
- (void)removeBookmarkButtonAction:(id)arg1;
- (BOOL)removeBookmarkButtonActionEnabledForPath:(id)arg1;
- (void)bookmarkFolderButtonAction:(id)arg1;
- (void)newFolderTextFieldAction:(id)arg1;
- (void)newFolderOkButtonAction:(id)arg1;
- (void)newFolderCancelButtonAction:(id)arg1;
- (void)newFolderButtonAction:(id)arg1;
- (void)actionPopUpButtonPlayBackSubmenuAction:(id)arg1;
- (void)actionPopUpButtonAction:(id)arg1;
- (void)runTerminalCommand:(id)arg1 arguments:(id)arg2;
- (void)updateActionButton;
- (void)searchTableViewDoubleClickAction:(id)arg1;
- (void)searchTableViewAction:(id)arg1;
- (void)fileBrowserViewDoubleClickAction:(id)arg1;
- (void)fileBrowserViewAction:(id)arg1;
- (void)fileBrowserClickInEmptyRowsOfColumn:(long long)arg1 clickCount:(long long)arg2;
- (void)fileTableViewDoubleClickAction:(id)arg1;
- (void)fileTableViewAction:(id)arg1;
- (void)advancedSearchAnyAllPopUpButtonAction:(id)arg1;
- (void)resizeSearchArea;
- (void)advancedSearchViewSizeChanged;
- (void)advancedButtonAction:(id)arg1;
- (void)setAdvancedSearchButtonPlusImage:(BOOL)arg1;
- (void)searchTextFieldAction:(id)arg1;
- (void)reActivateSearch:(id)arg1;
- (void)reActivateSearchNow:(id)arg1;
- (void)activateSearch;
- (void)activateSavedSearchWithQuery:(id)arg1 searchScopes:(id)arg2 currentFolderPath:(id)arg3;
- (void)stopRunningQuery;
- (void)listAndBrowserSegmentedControlAction:(id)arg1;
- (void)browserButtonAction;
- (void)listButtonAction;
- (void)setSelectedRow:(int)arg1;
- (void)exitSearchModeIfActive;
- (void)addMDQueryNotifications;
- (void)removeMDQueryNotifications;
- (void)pathControlAction:(id)arg1;
- (void)pathPopUpButtonAction:(id)arg1;
- (void)populatePathPopUpButtonAtPath:(id)arg1;
- (void)homeButtonContextMenuAction:(id)arg1;
- (void)computerHomeProjectSegmentedControlAction:(id)arg1;
- (void)userLoopsButtonAction;
- (void)bookmarkButtonAction;
- (void)projectButtonAction;
- (void)homeButtonAction;
- (void)computerButtonAction;
- (void)gotoPath:(id)arg1;
- (void)backForwardButtonAction:(id)arg1;
- (void)forwardButtonAction;
- (void)backButtonAction;
- (BOOL)browser:(id)arg1 acceptDrop:(id)arg2 atRow:(long long)arg3 column:(long long)arg4 dropOperation:(unsigned long long)arg5;
- (unsigned long long)browser:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long *)arg3 column:(long long *)arg4 dropOperation:(unsigned long long *)arg5;
- (void)browser:(id)arg1 willDisplayCell:(id)arg2 atRow:(long long)arg3 column:(long long)arg4;
- (long long)browser:(id)arg1 numberOfRowsInColumn:(long long)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)setSortDescriptorTableView:(id)arg1 identifier:(id)arg2 sortHow:(int)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (id)selectedPaths;
- (BOOL)pathControl:(id)arg1 acceptDrop:(id)arg2;
- (unsigned long long)pathControl:(id)arg1 validateDrop:(id)arg2;
- (void)queryDone:(id)arg1;
- (void)logicDidChangeTransportStatus;
- (void)logicDidStartStopPrelistening;
- (void)logicDidStopPrelistening;
- (BOOL)isLogicPlaying;
- (void)openInLogicFullPaths:(id)arg1 doubleClicked:(BOOL)arg2;
- (BOOL)isAliasFolderAndOpenAliasFolder:(id)arg1;
- (BOOL)openAliasFolder:(id)arg1;
- (void)updateGUIWithSelectedPaths:(id)arg1;
- (BOOL)selectedPathsContainOnlyAudioFiles:(id)arg1;
- (id)actionTypesForFiles:(id)arg1;
- (void)setradialMenuItemsEnabledStates:(id)arg1;
- (BOOL)writepermissionAtPath:(id)arg1;
- (BOOL)isOneLogic5or6Project:(id)arg1;
- (BOOL)isOneLogicProject:(id)arg1;
- (BOOL)isOneLogic7or8or9Project:(id)arg1;
- (BOOL)isOneLogic10Project:(id)arg1;
- (id)smallIconForFile:(id)arg1;
- (BOOL)isSDIRfile:(id)arg1;
- (BOOL)isEXSfile:(id)arg1;
- (BOOL)isREXfile:(id)arg1;
- (void)updateGUIWithSelectedPaths:(id)arg1 showPath:(BOOL)arg2;
- (void)setOpenButtonTitle:(long long)arg1;
- (void)updateSearchData:(id)arg1;
- (void)updateMediaBrowserDictionaryAtPath:(id)arg1;
- (BOOL)browserShowsUserLoopsPath;
- (BOOL)browserShowsBookmarkPath;
- (id)fileSizeString:(unsigned long long)arg1;
- (void)updateMediaBrowserDictionary;
- (void)resetSorting;
- (long long)sortHow;
- (long long)sortBy;
- (BOOL)fileIsVisibleAtPath:(id)arg1;
- (void)clearMediaBrowserDictionary;
- (id)currentLogicDocumentURL;
- (id)fileBrowserDataCurrentLogicDocumentPathURL:(id)arg1;
- (id)audioInfoStringFromLogicFullPath:(id)arg1;
- (void)deactivateTimer;
- (void)activateTimer;
- (void)diskUnMountNotification:(id)arg1;
- (void)checkForDirectoryUpdate:(id)arg1;
- (void)checkForDirectoryUpdate;
- (void)keyCommand:(id)arg1;
- (void)directoryUpdate:(id)arg1;
- (void)closeTrackImport:(id)arg1;
- (void)screenSetWillChange:(id)arg1;
- (void)removeNotificationObservers;
- (void)addNotificationObservers;
- (void)revealInFinder;
- (void)navigateHomeIfNoLoopCollections;
- (void)navigateHomeIfNoBookmarks;
- (void)updateLocationsSegmentedControl;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;
- (void)setPlayAndVolumeControlsHidden:(BOOL)arg1;
- (void)fileTableViewHeaderMenuAction:(id)arg1;
- (void)setFileTableViewBeatsAndTempoColumnVisible:(BOOL)arg1;
- (void)setFileTableViewTempoColumnVisible:(BOOL)arg1;
- (void)setFileTableViewBeatsColumnVisible:(BOOL)arg1;
- (void)setFileTableViewFinderLabelsColumnVisible:(BOOL)arg1;
- (id)trackImportView;
- (void)audioPreviewView:(id)arg1 repositioning:(double)arg2;
- (void)updateAudioPreviewView;
- (void)updateVolumeSlider;
- (void)stopAndStartNewPrelisten;
- (void)stopPrelisten:(id)arg1;
- (void)stopPrelisten;
- (id)playingIconForTableView;
- (BOOL)playingIconForTableviewFeature;
@property(retain, nonatomic) NSString *informativeText;
- (BOOL)setTrackImportInstanceExists:(BOOL)arg1;
- (BOOL)anotherTrackImportInstanceExists;
- (int)currentDocumentAlternativeIndex;
- (BOOL)preventNavigationUp;
@property(nonatomic) BOOL userLoopLibraryMode;
- (void)setPathForUserLoopMode;
- (void)updateListAndBrowserSegmentedControl;
- (void)viewVisibilityChange:(BOOL)arg1;
@property(retain, nonatomic) id nibwUserData;
- (void)viewDidMoveToSuperview;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

