//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MACore/ECSingleton.h>

#import "MAStoreDownloaderDelegate-Protocol.h"
#import "MAStoreInstallerDelegate-Protocol.h"

@class NSDate, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface MAStoreController : ECSingleton <MAStoreDownloaderDelegate, MAStoreInstallerDelegate>
{
    NSObject<OS_dispatch_queue> *m_queue;
    NSMutableSet *m_currentDownloads;
    struct AuthorizationOpaqueRef *m_authorizationRef;
    NSMutableSet *m_notFinishedItems;
    NSMutableOrderedSet *m_downloaderQueue;
    NSMutableSet *m_installerQueue;
    NSDate *m_lastAlertDateHDSpace;
    NSDate *m_lastAlertDateDownloadFailure;
    NSDate *m_lastAlertStartDownload;
    BOOL m_downloadFailedAlertVisible;
    NSMutableDictionary *m_downloadGroupProgress;
    long long m_lockCount;
    int m_lockfile;
    BOOL _appleLoopInstalled;
    BOOL _alchemyFilesInstalled;
    BOOL _jamPackInstalled;
    BOOL _triggerRescanNeeded;
    NSMutableSet *_documentsToRefresh;
}

+ (void)initialize;
+ (id)singleton;
+ (void)setSingleton:(id)arg1;
@property BOOL triggerRescanNeeded; // @synthesize triggerRescanNeeded=_triggerRescanNeeded;
@property(retain) NSMutableSet *documentsToRefresh; // @synthesize documentsToRefresh=_documentsToRefresh;
@property BOOL jamPackInstalled; // @synthesize jamPackInstalled=_jamPackInstalled;
@property BOOL alchemyFilesInstalled; // @synthesize alchemyFilesInstalled=_alchemyFilesInstalled;
@property BOOL appleLoopInstalled; // @synthesize appleLoopInstalled=_appleLoopInstalled;
- (void)uninstallItemIDs:(id)arg1;
- (void)uninstallPackages:(id)arg1;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didDeliverNotification:(id)arg2;
- (BOOL)canHandleUserNotification:(id)arg1;
- (void)_handleFailureForDownload:(id)arg1 withError:(id)arg2;
- (void)_downloaderFailAlert:(id)arg1;
- (void)installError:(id)arg1 forDownloader:(id)arg2;
- (void)installPercentageComplete:(float)arg1 forDownloader:(id)arg2;
- (void)installPhase:(id)arg1 forDownloader:(id)arg2;
- (void)installStatus:(id)arg1 forDownloader:(id)arg2;
- (void)installFinishedForDownloader:(id)arg1;
- (void)installStartedForDownloader:(id)arg1;
- (void)installWillStartForDownloader:(id)arg1;
- (void)installerWillPrepare:(id)arg1;
- (void)downloaderDidFinish:(id)arg1;
- (void)downloaderDidProgress:(id)arg1;
- (void)downloaderDidStart:(id)arg1;
- (void)downloaderWillStart:(id)arg1;
- (void)_triggerRescans;
- (void)triggerRescanOfInstalledContent:(id)arg1;
- (void)_resetTriggerFlags;
- (void)_notePackageTriggerFlags:(id)arg1;
- (void)_noteGroupTriggerFlags:(id)arg1;
- (void)_postGroupProgressForDownloader:(id)arg1;
- (void)_calculateGroupProgress:(id)arg1;
- (void)_checkGroupFinishInstallingForDownloader:(id)arg1 withError:(id)arg2;
- (id)_checkGroupFinishForDownloader:(id)arg1;
- (void)_checkGroupStartInstallingForDownloader:(id)arg1;
- (void)_checkGroupStartForDownloader:(id)arg1;
- (BOOL)_isGroupIDFinishedDownloading:(id)arg1;
- (void)resumeGroupID:(id)arg1;
- (void)_resumeGroupID:(id)arg1;
- (void)pauseGroupID:(id)arg1;
- (void)_pauseGroupID:(id)arg1;
- (void)abortGroupID:(id)arg1;
- (void)_abortGroupID:(id)arg1;
- (BOOL)isGroupIDPausedOrFailed:(id)arg1;
- (id)groupIDsContainingAllDownloadersOf:(id)arg1;
- (BOOL)groupIDExists:(id)arg1;
- (id)downloadsWithGroupID:(id)arg1;
- (id)downloadsForAssetAtURL:(id)arg1;
- (id)downloadsForPackageIDs:(id)arg1;
- (id)_installerForDownloader:(id)arg1;
- (void)_removeInstallerFromQueueForDownloader:(id)arg1;
- (void)removeFailedDownloads;
- (BOOL)hasFailedDownloads;
- (id)failedDownloads;
- (void)removeDownloadfromPersistentQueue:(id)arg1;
- (id)downloaderWithSourceURL:(id)arg1;
- (id)_downloaderWithSourceURL:(id)arg1;
- (id)downloaderWithDestinationPath:(id)arg1;
- (void)cancelAllDownloads;
- (void)pauseAllDownloads;
- (void)deleteDownloader:(id)arg1;
- (void)_deleteDownloader:(id)arg1;
- (void)continueDownloader:(id)arg1;
- (void)pauseDownloader:(id)arg1;
- (void)_pauseDownloader:(id)arg1 startNextDownload:(BOOL)arg2;
- (void)retryFailedOperationsAndIncrementRetryCount:(BOOL)arg1 showAlert:(BOOL)arg2;
- (BOOL)hasActiveInstalls;
- (BOOL)hasActiveDownloads;
- (BOOL)hasActiveOperations;
- (BOOL)hasPendingOperations;
- (id)currentAndPendingDownloads;
- (unsigned long long)numberOfRunningInstalls;
- (id)pendingLessons;
- (id)_pendingLessons;
- (void)createDownloads:(id)arg1 withGrouping:(id)arg2 resume:(BOOL)arg3;
- (void)_createNewDownload:(id)arg1 withGrouping:(id)arg2 resume:(BOOL)arg3;
- (void)startOrContinueDownloadFromURL:(id)arg1 groupID:(id)arg2 groupDisplayName:(long long)arg3 completionNotificationText:(id)arg4 icon:(id)arg5 andDownloadType:(long long)arg6;
- (void)startOrContinueDownloadFromURL:(id)arg1 withGrouping:(id)arg2;
- (BOOL)_addNotFinishedItem:(id)arg1;
- (void)_removeNotFinishedItem:(id)arg1;
- (void)_removeAllNotFinishedItems;
- (void)_enqueueInstallOfGroupIDs:(id)arg1;
- (void)_enqueueInstallOfDownloader:(id)arg1;
- (void)_startAllInstaller;
- (void)startInstall;
- (void)handleUM_PLAY:(id)arg1;
- (void)handleUM_REC:(id)arg1;
- (void)recOrPlaybackChanged;
-     // Error parsing type: B24@0:8^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16, name: _checkIfRecOrPlayStateChangedAndInstallStateListenersIfNeededForSong:
- (void)_startInstallersIfDownloadsFinished;
- (void)_startNextDownloadFromQueueInGroups:(id)arg1;
- (BOOL)_isURLAlreadyDownloading:(id)arg1;
- (void)_updateSuddenTerminationStatus;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (void)deleteOldDownloadsOnNewAppVersion;
- (BOOL)canDownload;
- (void)unlock;
- (void)lock;
- (BOOL)tryLock;
- (void)_exitLock;
- (void)_initLock;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

