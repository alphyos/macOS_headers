//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ChannelSettingsUtilities, NSMutableDictionary, NSString, NSURL;

@interface NewTrackCreator : NSObject
{
    struct CDocumentLogic *m_doc;
    int m_folderID;
    NSString *m_trackType;
    struct TPosOneBasedTrackNr m_firstGeneratedTrackNumber;
    struct TPosOneBasedTrackNr m_lastGeneratedTrackNumber;
    struct TPosOneBasedTrackNr m_newRecTrackNumber;
    NSMutableDictionary *m_settings;
    int m_channelMode;
    ChannelSettingsUtilities *_channelSettingsUtilities;
    BOOL m_useUserDefaults;
    BOOL _automaticallyOpensMusicalTypingKeyboard;
    BOOL _pluginInstanciated;
    BOOL _shouldInitializeGenerativeInstrumentTrackAfterCreation;
}

+ (id)libraryDefaultCategoryPathForTrackType:(id)arg1;
+ (id)factoryDefaultChannelURLForTrackType:(id)arg1;
+ (id)_tracksDefaultInfoDict;
+ (void)storeSettings:(id)arg1;
+ (id)userDefaultSettings;
+ (id)defaultSettings;
+ (id)deepMergeDictionary:(id)arg1 withValuesOfDictonary:(id)arg2;
+ (id)defaultSettingsLG;
+ (id)defaultSettingsGB;
+     // Error parsing type: v26@0:8{TAuConfType=s}16^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}18, name: showAlertCannotCreateTrackOfType:inSong:
+ (void)registerLastSelectedGenre:(id)arg1 character:(id)arg2;
+ (id)drummerInfoDictForGenre:(id)arg1 character:(id)arg2;
+ (id)trackCreatorWithDocument:(struct CDocumentLogic *)arg1 andFolder:(int)arg2 useUserDefaults:(BOOL)arg3;
+ (id)unitTestTrackCreatorWithDocument:(struct CDocumentLogic *)arg1 andFolder:(int)arg2;
- (id).cxx_construct;
@property(nonatomic) BOOL shouldInitializeGenerativeInstrumentTrackAfterCreation; // @synthesize shouldInitializeGenerativeInstrumentTrackAfterCreation=_shouldInitializeGenerativeInstrumentTrackAfterCreation;
@property(readonly, nonatomic) BOOL pluginInstanciated; // @synthesize pluginInstanciated=_pluginInstanciated;
@property(nonatomic) BOOL automaticallyOpensMusicalTypingKeyboard; // @synthesize automaticallyOpensMusicalTypingKeyboard=_automaticallyOpensMusicalTypingKeyboard;
@property(nonatomic) BOOL useUserDefaults; // @synthesize useUserDefaults=m_useUserDefaults;
@property(readonly, nonatomic) struct TPosOneBasedTrackNr lastGeneratedTrackNumber; // @synthesize lastGeneratedTrackNumber=m_lastGeneratedTrackNumber;
- (int)createTracks:(long long)arg1 behindTrackWithNR:(struct TPosOneBasedTrackNr)arg2 selectLastTrack:(BOOL)arg3;
- (int)createTracks:(long long)arg1 selectLastTrack:(BOOL)arg2;
- (int)appendTracks:(long long)arg1 selectLastTrack:(BOOL)arg2;
- (int)_createTracks:(long long)arg1 behindTrackWithNR:(struct TPosOneBasedTrackNr)arg2 selectLastTrack:(BOOL)arg3;
- (int)_createTracks:(int)arg1 objectType:(struct TAuConfType)arg2 trackType:(BOOL)arg3 format:(int)arg4 behindTrackPos:(struct TPosOneBasedTrackNr)arg5;
- (int)_createLayeredInstrumentTracks:(int)arg1 numLayers:(int)arg2 objectType:(struct TAuConfType)arg3 trackType:(BOOL)arg4 format:(int)arg5 behindTrackPos:(struct TPosOneBasedTrackNr)arg6;
- (int)_internalCreateTracks:(int)arg1 objectType:(struct TAuConfType)arg2 trackType:(BOOL)arg3 format:(int)arg4 atTrackPos:(struct TPosOneBasedTrackNr)arg5;
- (int)_internalCreateExternalMidiTracks:(int)arg1 behindTrackPos:(struct TPosOneBasedTrackNr)arg2;
- (void)_deleteTrack:(long long)arg1;
- (BOOL)_openMusicalTypingKeyboard;
@property(readonly, nonatomic) BOOL hasChannelDefault;
@property(readonly, nonatomic) NSString *defaultChannelCategory;
@property(readonly, nonatomic) NSURL *defaultChannelURL;
@property(nonatomic) NSMutableDictionary *defaultInstrument;
- (void)setDefaultChannelURL:(id)arg1 category:(id)arg2;
- (int)configureTrack:(struct CTrack *)arg1 loadDefaultSetting:(BOOL)arg2 newInstName:(id)arg3 resetSettingsName:(BOOL)arg4;
- (id)_instNameForOldName:(id)arg1;
- (void)_loadExternalMidiPluginIntoTrack:(struct CTrack *)arg1 WithFormat:(int)arg2 withMidiPortUUID:(int)arg3 withMidiChannel:(BOOL)arg4 withInputType:(short)arg5 withInputIndex:(int)arg6;
- (BOOL)_loadAnimalSettingIntoTrack:(struct CTrack *)arg1;
- (void)storeSettings;
- (id)_settings;
- (void)insertPluginForGinst:(int)arg1 withID:(unsigned int)arg2 intoSlot:(int)arg3 channelMode:(int)arg4;
- (int)_multiInstrumentForChannel:(BOOL)arg1 andPort:(unsigned char)arg2;
- (struct TPosOneBasedTrackNr)_nextNonSubColapseableZeroTrack:(struct TPosOneBasedTrackNr)arg1;
- (BOOL)_currentBoolSettingForKey:(id)arg1;
@property(readonly, nonatomic) long long maxTrackCount;
@property(readonly, nonatomic) long long minTrackCount;
@property(nonatomic) BOOL midiChannel;
@property(nonatomic) int midiPortUID;
@property(readonly, nonatomic) BOOL canCreateMultibleTracks;
@property(readonly, nonatomic) BOOL hasMidiChannel;
@property(readonly, nonatomic) BOOL hasInputSource;
@property(readonly, nonatomic) BOOL hasInputDevice;
@property(readonly, nonatomic) NSString *MIDITypeSetting;
@property(nonatomic) BOOL enableRecord;
@property(nonatomic) BOOL monitoring;
@property(nonatomic) BOOL shouldLoadDefaultCstOrPatch;
@property(nonatomic) BOOL accessLibrary;
- (BOOL)_isSurroundAvailable;
@property(readonly, nonatomic) BOOL hastSelectedInput;
- (unsigned char)_currentSelectedMidiOutputPortIndex;
- (void)getOutputType:(short *)arg1 andIndex:(int *)arg2;
- (void)setOutputOfType:(short)arg1 withIndex:(int)arg2;
- (void)getInputType:(short *)arg1 andIndex:(int *)arg2;
- (void)setInputOfType:(short)arg1 withIndex:(int)arg2;
@property(nonatomic) int numberOfInstrumentLayer;
@property(nonatomic) BOOL multiTimbral;
@property(nonatomic) BOOL ascendingMidiOutChannels;
@property(nonatomic) BOOL ascendingOutputs;
@property(nonatomic) BOOL ascendingInputs;
@property(nonatomic) int channelMode;
- (id)drummerInfoDict;
- (void)setDrummerInfoDict:(id)arg1;
- (id)validateDrummerInfoDict:(id)arg1;
- (id)drummerInfoDictInitalizedWithDataFromFirstAvailableCharacter;
- (int)_internalTrackType;
@property(readonly, nonatomic) struct TAuConfType objectType;
- (id)_currentSettings;
- (void)_currentTrackType:(id *)arg1 currentTrackSubType:(id *)arg2;
- (void)_setCurrentTrackType:(id)arg1 currentTrackSubType:(id)arg2;
- (id)trackType;
- (void)setTrackType:(id)arg1;
- (void)dealloc;
- (id)initForTrackWithDocument:(struct CDocumentLogic *)arg1 andFolder:(int)arg2 useUserDefaults:(BOOL)arg3;

@end

