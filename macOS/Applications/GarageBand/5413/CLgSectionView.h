//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <MAToolKit/MAView.h>

#import "CLgAccessibilityTree-Protocol.h"
#import "LgSectionTrackingArea-Protocol.h"
#import "LgSectionView-Protocol.h"
#import "MAIdleCallback-Protocol.h"
#import "MALastClickedParameterHandler-Protocol.h"
#import "MARulerAccessibility-Protocol.h"
#import "NSDraggingDestination-Protocol.h"
#import "NSDraggingSource-Protocol.h"
#import "NSImmediateActionAnimationController-Protocol.h"
#import "NSImmediateActionGestureRecognizerDelegate-Protocol.h"
#import "NSMenuDelegate-Protocol.h"

@class CLgView, NSColor, NSImmediateActionGestureRecognizer, NSMutableArray, NSMutableDictionary, NSString, NSTrackingArea;
@protocol NSDraggingInfo;

@interface CLgSectionView : MAView <MARulerAccessibility, CLgAccessibilityTree, NSDraggingSource, NSDraggingDestination, MAIdleCallback, NSMenuDelegate, NSImmediateActionGestureRecognizerDelegate, NSImmediateActionAnimationController, LgSectionView, LgSectionTrackingArea, MALastClickedParameterHandler>
{
    NSMutableArray *_accessibilityChildren;
    NSMutableDictionary *m_accessibilityDict;
    int section;
    CLgView *parentView;
    NSTrackingArea *m_trackingArea;
    void *m_trackingRectUserData;
    id m_trackingRectOwner;
    long long m_toolTipTag;
    NSString *m_toolTip;
    BOOL m_toolID;
    NSImmediateActionGestureRecognizer *m_gestureRecognizer;
    BOOL m_gestureRecognizerAttached;
    BOOL mouseIsInside;
    id <NSDraggingInfo> _autoscrollDraggingInfo;
}

@property(retain) id <NSDraggingInfo> autoscrollDraggingInfo; // @synthesize autoscrollDraggingInfo=_autoscrollDraggingInfo;
@property(nonatomic) BOOL mouseIsInside; // @synthesize mouseIsInside;
@property CLgView *parentView; // @synthesize parentView;
@property(readonly) int section; // @synthesize section;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)increaseLastClickedParameterBy:(long long)arg1;
- (void)setHandlesDeepClick:(BOOL)arg1;
- (void)idleCallback;
- (void)addAutoScrollTimer:(id)arg1;
@property(readonly) BOOL isAutoScrolling;
- (void)removeAutoScrollTimer;
- (void)removeAutoScrollTimer:(BOOL)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)setCurrentTooltip:(id)arg1;
- (void)_sendToolTipMouseEntered;
- (void)_sendToolTipMouseExited;
- (void)removeTrackingRect:(long long)arg1;
- (long long)addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4;
- (void)print:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)cursorUpdate:(id)arg1;
- (void)setCursor:(BOOL)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)triggerCursorUpdate;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)updateTrackingAreas;
- (void)updateCell:(id)arg1;
@property(readonly) NSColor *backgroundColor;
- (BOOL)isOpaque;
@property(readonly) BOOL isDragging;
@property(readonly) BOOL isContents;
@property(readonly) BOOL hasPlayhead;
- (void)dealloc;
- (void)keyDown:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewVisibilityChange:(BOOL)arg1;
@property(readonly) BOOL scrollsVertically;
@property(readonly) BOOL scrollsHorizontally;
- (id)workSpaceName;
- (id)initWithFrame:(struct CGRect)arg1 section:(int)arg2 parentView:(id)arg3;
- (void)immediateActionRecognizerDidCompleteAnimation:(id)arg1;
- (void)accessibilityChildrenWereCreated:(id)arg1;
- (id)accessibilityChildren;
- (void)generateAccessibilityTree;
- (void)removeAccessibilityChild:(id)arg1;
- (void)addAccessibilityChild:(id)arg1;
- (id)trackHeadersCache;
- (void)setPlayheadThumb:(id)arg1;
- (id)playheadThumb;
@property long long rulerAccessibilitySelectedItemKind;
- (BOOL)isRulerForAccessibility;
- (void)deleteSelectedAccessibilityChild;
- (void)setNeedsUpdateAccessibilityChildren;
- (void)cleanCacheDict;
- (void)deallocAccessibility;
- (void)initAccessibility;
- (void)songMemoryDidChange:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1 forParameter:(id)arg2;
- (id)_convertedValueDescriptionForScreenCoordinate:(struct CGPoint)arg1;
- (id)accessibilityParameterizedAttributeNames;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityIsIgnored;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)updateDraggingItemsForDrag:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (struct TPosOneBasedTrackNr)dragFileTrack;
- (unsigned long long)fileDragUpdate:(id)arg1;
- (BOOL)pasteBoardContainsPatches:(id)arg1;
- (BOOL)pasteBoardContainsFilePromises:(id)arg1;
- (BOOL)pasteBoardContainsFileURLsOrPromises:(id)arg1;
-     // Error parsing type: v68@0:8^{CSong={FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}{FVARS=IssssIisii{TPureClock=q}ccCc{TPosOneBasedTrackNr=s}{TPosOneBasedTrackNr=s}iiiiiicccciiiiiiiqiiiiiccccCCcccccccccc[12c]scccccccCcccccciccCccccccccccccccccciii{TPosOneBasedTrackNr=s}s{TPosOneBasedTrackNr=s}ssscccccciiicciiissccscccCcCcc[8c]cccCccccssscccccccc{TVolatile<TAbsPureClock>=q}{TVolatile<TAbsPureClock>=q}{TAbsPureClock=q}{TAbsPureClock=q}{TSignedPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TAbsPureClock=q}{TAbsPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}{TPureClock=q}i{TPosOneBasedTrackNr=s}ccfccs{TAbsPureClock=q}{TAbsPureClock=q}{TPureLength=q}c{TAbsPureClock=q}ccccccc{TAbsPureClock=q}ii{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}{CEvNote=qq{CEv=qq}}ccc[54c]SS}[120c]cCcc[170c][16C]cccc{CTFlagSet<_SONG::TSelBasedFlags, unsigned char>=C}c{CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char>=C}ccccCcc[95s]{CTFlagSet<_SONG::TGeneralFlags, unsigned short>=S}SSSS[108i][16i]iiiiiiiii{CTronFlags={CTFlagSet<TTronFlags, int>=i}}i{CTFlagSet<_SONG::TVariousEditorFlags, int>=i}iiiiiiiiiiiIif^{CSongObjects}^{tMapGenData}^{GenDataPointerGroup}^{vector<MAMem2, std::__1::allocator<MAMem2> >}^{CAdjustBeats}^{CTrackConductor}^{CTransientContainer}^{CMovieThumbnailUtility}^{CMovieData}^{CChordTypes}^{CAssessmentController}i{TTrackNr=qi}ii{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{MORESEQPARS=sssccs{QUAMOD=ss(?=s{?=cc})sss}{TSignedPureLength=q}cccccc{REALS=qq}iccsIiiicccc}{TAbsPureClock=q}S[16c]i{CTFlagSet<_SONG::TSongRuntimeFlags, int>=i}^{CEvs}c{CNoteRepeatPars=cccccccccccccccccccccccc[8c]}QiiC^{CUndoManager}BB{atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}B{unique_ptr<CSongCategories, std::__1::default_delete<CSongCategories> >={__compressed_pair<CSongCategories *, std::__1::default_delete<CSongCategories> >=^{CSongCategories}}}}16i24^Q28^{TPosOneBasedTrackNr=s}36^@44^@52^@60, name: dragOperationAndHintsForFileDragUpdateWithSong:seqID:dragOperation:trackNr:hint1:hint2:hint3:
- (int)checkDragJobRecursiveForOperation:(int)arg1 pasteBoard:(id)arg2 draggingInfo:(id)arg3;
- (id)filePresenterForItemAtURL:(id)arg1;
- (void)unregisterForDragging;
- (void)registerForDragging;
- (short)dragJob:(int)arg1 withFile:(const struct CFileRef *)arg2 moreToCome:(BOOL)arg3 pasteBoard:(id)arg4 isTemporaryFile:(BOOL)arg5;
- (BOOL)shouldAcceptDraggedFile:(const struct CFileRef *)arg1 ofType:(unsigned int)arg2 optionalPasteboard:(id)arg3;
- (int)dragJobArpeggiator:(id)arg1 dropAtPosOneBasedTrackNr:(struct TPosOneBasedTrackNr)arg2 atAbsClock:(struct TAbsPureClock)arg3;
- (int)dragJobUltraBeat:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

