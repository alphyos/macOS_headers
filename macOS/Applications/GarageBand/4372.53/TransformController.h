//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "SmallScreensetDialogController.h"

@class CrossView, MAKitSegmentedScrubber, MapView, NSButton, NSPopUpButton, NSTextField;

@interface TransformController : SmallScreensetDialogController
{
    NSTextField *transformParameterSetTextField;
    NSPopUpButton *transformParameterSetMenuButton;
    NSPopUpButton *transformMode;
    NSPopUpButton *selectPosition;
    MAKitSegmentedScrubber *selectPosition1;
    MAKitSegmentedScrubber *selectPosition2;
    NSPopUpButton *selectStatus;
    NSPopUpButton *selectStatus1;
    NSPopUpButton *selectChannel;
    MAKitSegmentedScrubber *selectChannel1;
    MAKitSegmentedScrubber *selectChannel2;
    NSPopUpButton *selectByte1;
    MAKitSegmentedScrubber *selectByte1_1;
    MAKitSegmentedScrubber *selectByte1_2;
    NSPopUpButton *selectByte2;
    MAKitSegmentedScrubber *selectByte2_1;
    MAKitSegmentedScrubber *selectByte2_2;
    NSPopUpButton *selectLength;
    MAKitSegmentedScrubber *selectLength1;
    MAKitSegmentedScrubber *selectLength2;
    NSPopUpButton *selectSubPos;
    MAKitSegmentedScrubber *selectSubPos1;
    MAKitSegmentedScrubber *selectSubPos2;
    CrossView *crossView;
    MapView *mapView;
    id textByte1;
    id textByte2;
    NSPopUpButton *operationPosition;
    MAKitSegmentedScrubber *operationPosition1;
    NSPopUpButton *operationPosition1_qua;
    MAKitSegmentedScrubber *operationPosition2;
    NSPopUpButton *operationStatus;
    NSPopUpButton *operationStatus1;
    NSPopUpButton *operationChannel;
    MAKitSegmentedScrubber *operationChannel1;
    MAKitSegmentedScrubber *operationChannel2;
    NSPopUpButton *operationByte1;
    MAKitSegmentedScrubber *operationByte1_1;
    MAKitSegmentedScrubber *operationByte1_2;
    NSPopUpButton *operationByte2;
    MAKitSegmentedScrubber *operationByte2_1;
    MAKitSegmentedScrubber *operationByte2_2;
    NSPopUpButton *operationLength;
    MAKitSegmentedScrubber *operationLength1;
    MAKitSegmentedScrubber *operationLength2;
    id mMapBox;
    MAKitSegmentedScrubber *mappedValue;
    id mMappedToText;
    MAKitSegmentedScrubber *mappedTo;
    NSButton *mInitializeMap;
    NSButton *mReverseMap;
    NSButton *mInvertMap;
    NSButton *mSmoothMap;
    id mFoundEventsText;
    id universalMapText;
    NSButton *mHideUnusedSwitch;
    long long mTransformIndex;
    long long mIndex;
    struct tColumn mColumns[7];
    struct CGRect mOrigFrame;
    BOOL mNotifications;
    BOOL mLink;
}

+ (id)controller;
+ (id)showWithTransform:(long long)arg1 andIndex:(long long)arg2 document:(struct CDocumentLogic *)arg3;
+ (id)nibwID;
+ (void)load;
- (void)displayFoundEvents:(long long)arg1 inSequences:(long long)arg2;
- (void)mapAction:(id)arg1;
- (void)transformParameterSetChosen:(id)arg1;
- (void)hideUnusedClicked:(id)arg1;
- (void)transformModeChanged:(id)arg1;
- (void)selectAndOperateClicked:(id)arg1;
- (void)operateOnlyClicked:(id)arg1;
- (void)selectOnlyClicked:(id)arg1;
- (void)createNewParameterSet:(const char *)arg1 withSet:(long long)arg2;
- (void)renameParameterSet:(int)arg1 as:(const char *)arg2;
- (void)changeValue:(id)arg1;
- (void)updateUI;
- (void)setMinAndMaxValuesForOperationFields;
- (BOOL)editableMapShown;
- (void)flipChange:(id)arg1;
- (struct GTRANSINST *)transInst;
- (void)makeQuantizeMenu;
- (void)makeColumns:(struct GTRANSINST *)arg1;
- (void)setMappedValue:(BOOL)arg1 mappedTo:(BOOL)arg2;
- (void)awakeFromNib;
- (void)updateTransformParameterSetMenu;
- (unsigned long long)transformParameterSetTagOfItemWithStringValue:(id)arg1;
- (unsigned long long)transformParameterSetIndexOfItemWithStringValue:(id)arg1;
- (id)transformParameterSetObjectValueForItemWithTag:(long long)arg1;
- (id)transformParameterSetObjectValueForItemAtIndex:(int)arg1;
- (void)readOnlyMess;
- (void)dealloc;
- (void)menuWillPopUp:(id)arg1;
- (void)handleUM_CHSEL_id:(id)arg1;
- (void)windowWasShown;
- (void)windowWillClose:(id)arg1;
- (id)nibwUserData;
- (void)setNibwUserData:(id)arg1;
- (id)windowTitle;
- (id)windowRightTitle;
- (id)initWithWindowNibName:(id)arg1;

@end

