//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class CLgView, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASSIGN_PARS {
    int _field1;
    int _field2;
    int _field3;
    struct BANK14 _field4;
    char _field5;
    char _field6;
    short _field7[8];
    char _field8[14];
    int _field9;
};

struct AUControlSpacing {
    double _field1;
    double _field2;
};

struct AUDIODEVICE;

struct AUDIOHEADER;

struct AUDIOOUTPUT;

struct AUDIOPLUGIN {
    struct AUDIOHEADER *_field1;
    void *_field2;
    short _field3;
    struct TAuUnionType _field4;
    char _field5;
    long long _field6;
    CDUnknownFunctionPointerType _field7;
    struct AUDIOPLUGIN *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    char _field13;
    char _field14;
    char _field15[12];
    _Bool _field16;
    _Bool _field17;
    long long _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    long long _field23;
    long long _field24;
    unsigned long long _field25;
    unsigned char _field26;
    unsigned char _field27;
    struct TAuUnionType _field28;
    unsigned char _field29;
    double _field30;
    char _field31;
    char _field32;
    short _field33;
    short _field34;
    short _field35;
    unsigned char _field36;
    unsigned char _field37;
    unsigned short _field38;
    struct CFileRef _field39;
    struct __CFURL *_field40;
    short _field41;
    short _field42;
    struct CPlugIn *_field43;
    char _field44[16];
    struct vector<int, std::__1::allocator<int>> _field45;
    struct vector<int, std::__1::allocator<int>> _field46;
    struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> _field47;
    id _field48;
    int _field49;
    struct LgPluginGUIState _field50;
    unsigned char _field51[8];
    long long _field52;
    struct PLUGCONTROL _field53[0];
};

struct AUDIOSEND;

struct AUDIOUNION {
    struct AUDIOHEADER *_field1;
    void *_field2;
    short _field3;
    struct TAuUnionType _field4;
    char _field5;
    long long _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    short _field9;
    short _field10;
    struct SurroundPan _field11;
    char _field12;
    char _field13;
    short _field14;
    long long _field15;
    int _field16;
    int _field17;
    long long _field18;
    long long _field19;
    long long _field20;
    int _field21;
    char _field22;
    char _field23;
    short _field24;
    char _field25;
    char _field26;
    char _field27;
    char _field28;
    char _field29;
    char _field30;
    char _field31;
    int _field32;
    struct AUDIOUNION *_field33;
    void *_field34;
    void *_field35;
    long long _field36;
    char _field37;
    char _field38;
    char _field39;
    struct CFileIO *_field40;
    struct SAUCONFSEND *_field41;
    struct AUDIOSEND *_field42;
    double _field43;
    struct AUDIOPLUGIN *_field44;
    struct AUDIOPLUGIN *_field45;
    struct AUDIOPLUGIN *_field46;
    struct AUDIOPLUGIN *_field47;
    struct CPlugIn *_field48;
};

struct AULEVEL {
    short _field1;
    short _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    unsigned int _field7;
    unsigned int _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    float _field17;
    float _field18;
};

struct Assign;

struct Assign_Host {
    struct Assign *_field1;
    struct Assign *_field2;
    struct Assign *_field3;
    struct Assign *_field4;
    struct Assign *_field5;
    int _field6;
    int _field7;
    struct DDESCR **_field8;
    unsigned char _field9;
    unsigned char _field10;
    int _field11;
    short _field12;
    int _field13;
    char _field14;
    unsigned char _field15;
    unsigned char _field16;
    unsigned char _field17;
    unsigned char _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    short _field22;
    unsigned int _field23;
    int _field24;
    short _field25;
    int _field26;
    char _field27;
    unsigned char _field28;
    unsigned char _field29;
    char _field30[3];
    int _field31;
    unsigned char _field32[1];
};

struct AudioComponentDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct AudioRegion {
    struct AudioRegion *_field1;
    long long _field2;
    long long _field3;
    void *_field4;
    long long _field5;
    float _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    short _field11;
    short _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    short _field17;
    long long _field18;
    void *_field19;
    struct WarpMarker *_field20;
    long long _field21;
    long long _field22;
};

struct AxLogicPos;

struct BANK14 {
    char _field1;
    char _field2;
};

struct BEFEHL {
    int _field1;
    int _field2;
    CDUnknownFunctionPointerType _field3;
    long long _field4;
};

struct BEFGRUPPE {
    struct BEFEHL *_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct BOX {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
};

struct BounceChParam {
    char _field1[1024];
    struct CFileRef _field2;
    struct CFileRef _field3;
    unsigned char _field4;
    struct CFileIO *_field5;
    struct AudioRegion _field6;
    struct AUDIOOUTPUT *_field7;
};

struct CAdjustBeats;

struct CAssessmentController;

struct CBeatAgents;

struct CBeatDetectorParams;

struct CBounce {
    struct CSong *_field1;
    int _field2;
    id _field3;
    char _field4[1024];
    unsigned int _field5;
    struct CFileRef *_field6;
    struct CFileRef _field7;
    struct BounceChParam _field8[11];
    struct AUDIODEVICE *_field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    struct TPureClock _field15;
    struct TPureClock _field16;
    struct TPureClock _field17;
    struct TPureClock _field18;
    struct TPureClock _field19;
    int _field20;
    int _field21;
    struct TPureClock _field22;
    struct TPureClock _field23;
    short _field24;
    char _field25;
    int _field26;
    char _field27;
    char _field28;
    char _field29;
    _Bool _field30;
    _Bool _field31;
    int _field32;
    short _field33;
    char _field34;
    char _field35;
    char _field36;
    char _field37;
    char _field38;
    char _field39;
    _Bool _field40;
    char _field41;
    char _field42;
    _Bool _field43;
    long long _field44;
    _Bool _field45;
    unsigned long long _field46;
    _Bool _field47;
    char _field48;
    char _field49;
    _Bool _field50;
    _Bool _field51;
    char _field52;
};

struct CChord {
    struct CNote mRootNote;
    struct CMySet<CNote> mNoteSet;
    struct CIntvlSet mIntvlSet;
    _Bool mRootNoteSpecified;
    _Bool mIntvlSetAndBassNoteHasIntvlAloneNeedsUpdate;
    _Bool mBassNoteHasIntvlAlone;
};

struct CChordTypeId {
    int _field1;
};

struct CChordTypes;

struct CDiskMenu {
    CDUnknownFunctionPointerType *_field1;
    struct CMenuEntry *_field2;
    struct CMenu *_field3;
    long long _field4;
    long long _field5;
    void *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct CFlagSet<TMenuEntryFlag, 32> _field10;
    unsigned long long _field11;
    int _field12;
    id _field13;
    _Bool _field14;
    struct CMenuEntry *_field15;
    CDUnknownFunctionPointerType _field16;
    struct CMenuEntry *_field17;
    struct CMenuEntry *_field18;
    struct CFileRef _field19;
    id _field20;
};

struct CDocumentLogic {
    struct CDocumentLogic *_field1;
    struct FileRec _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    struct MAMem _field9;
    short _field10;
    unsigned char _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    struct CFileRef _field16;
    struct CFileRef _field17;
    struct __CFDictionary *_field18;
    _Bool _field19;
};

struct CEv {
    long long mLL1;
    long long mLL2;
};

struct CEvExt {
    long long _field1;
    long long _field2;
};

struct CEvLaunch {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
};

struct CEvLaunchAudio {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
    struct CEvExt _field4;
    struct CEvExt _field5;
    struct CEvExt _field6;
};

struct CEvMarker {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
};

struct CEvSignKey;

struct CEvSignTimeCompound;

struct CEvWithExt_Cresc {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
    struct CSingleEvExt _field4;
};

struct CEvWithExt_Graph {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
};

struct CEvWithExt_RepetitionEnd;

struct CEvWithExt_Slur {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
    struct CSingleEvExt _field4;
};

struct CEvWithExt_Text {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
    struct CSingleEvExt _field4;
};

struct CEvs;

struct CFileIO {
    struct CFileRef _field1;
    int _field2;
    long long _field3;
    long long _field4;
    char *_field5;
    long long _field6;
    long long _field7;
    unsigned char _field8;
    long long _field9;
    char *_field10;
    char *_field11;
    int _field12;
    unsigned int _field13;
};

struct CFileRef {
    struct __CFURL *mURL;
    long long mFlags;
    char *mTmpPath;
    struct FSRef mFSRef;
};

struct CFlagSet<TAssignPrintPartBits, 8> {
    struct bitset<8> _field1;
};

struct CFlagSet<TMenuEntryFlag, 32> {
    struct bitset<32> _field1;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGenClaveCaches;

struct CGenDrumMap {
    struct CGenInstTree _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    int _field6;
    struct CGenRange<unsigned char> _field7;
    unsigned char _field8;
    struct CGenRange<unsigned char> _field9;
    unsigned char _field10;
    struct CGenRange<unsigned char> _field11;
    unsigned char _field12;
    struct CGenRange<unsigned char> _field13;
    unsigned char _field14;
    struct CGenRange<unsigned char> _field15;
    unsigned char _field16;
    int _field17;
    unsigned long long _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    unsigned char _field25;
    struct CGenRange<unsigned char> _field26;
    struct CGenRange<unsigned char> _field27;
    struct CGenRange<unsigned char> _field28;
    struct CGenRange<unsigned char> _field29;
    struct CGenRange<unsigned char> _field30;
    struct CGenRange<unsigned char> _field31;
    struct CGenRange<unsigned char> _field32;
    int _field33;
    struct CGenRange<unsigned char> _field34;
    unsigned char _field35;
    struct CGenRange<unsigned char> _field36;
    unsigned char _field37;
    struct CGenRange<unsigned char> _field38;
    unsigned char _field39;
};

struct CGenGenerator {
    struct CGenGeneratorPrefs _field1;
    struct CGenGenreLibs _field2;
    id _field3;
    int _field4;
    int _field5;
    struct unique_ptr<CGenGenerator::GenerateRuntimeData, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> _field6;
    struct unique_ptr<CGeneratorLibraryBundleLocations, std::__1::default_delete<CGeneratorLibraryBundleLocations>> _field7;
    id _field8;
    struct unique_ptr<CGenGenerator::LuaStateCache, std::__1::default_delete<CGenGenerator::LuaStateCache>> _field9;
    struct unique_ptr<CGenClaveCaches, std::__1::default_delete<CGenClaveCaches>> _field10;
};

struct CGenGeneratorPrefs;

struct CGenGenreLib;

struct CGenGenreLibs {
    struct CGenGenreLib *_field1;
    struct CGenGenreLib *_field2;
    struct __compressed_pair<CGenGenreLib *, std::__1::allocator<CGenGenreLib>> {
        struct CGenGenreLib *_field1;
    } _field3;
};

struct CGenInstTree {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct CGenRange<int> _field3;
    int _field4;
    struct CGenRange<long long> _field5;
    unsigned long long _field6;
    struct CGenInstTreeEntry *_field7;
    _Bool _field8;
    int _field9;
    struct CGenInstTreeEntries _field10;
    int _field11;
    struct CKCtr _field12;
    int _field13;
};

struct CGenInstTreeEntries {
    struct CGenInstTreeEntriesPimpl *_field1;
};

struct CGenInstTreeEntriesPimpl;

struct CGenInstTreeEntry;

struct CGenRange<int> {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGenRange<long long> {
    long long _field1;
    long long _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGenRange<unsigned char> {
    unsigned char _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGeneratorLibraryBundleLocations;

struct CHASERESULTS {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct CInst {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
};

struct CIntvlSet {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
    int mWrapIntvl;
};

struct CKCtr {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct CLOCKWORLD {
    struct TSignedPureClock _field1;
    struct TAbsPureClock _field2;
    unsigned char _field3;
    int _field4;
    struct TPureLength _field5;
    struct TPureLength _field6;
    struct TPureLength _field7;
    struct TPureLength _field8;
    unsigned char _field9[8];
    long long _field10[8];
    short _field11;
    struct CEvSignTimeCompound *_field12;
    char _field13;
    char _field14;
    unsigned char _field15;
    unsigned char _field16;
    struct TSignedPureClock _field17;
    struct TAbsPureClock _field18;
    struct CEvSignKey *_field19;
    struct TSignedPureClock _field20;
    struct TSignedPureClock _field21;
    struct TSignedPureClock _field22;
    int _field23;
    struct TAbsPureClock _field24;
    struct TAbsPureClock _field25;
    struct TAbsPureClock _field26;
    short _field27;
    struct TAbsPureClock _field28;
    struct CEv *_field29;
    struct TPureClock _field30;
    struct CEvWithExt_RepetitionEnd *_field31;
};

struct CLgBtnGroup {
    long long _field1;
    id _field2;
    unsigned int _field3;
};

struct CLgString {
    char _field1[512];
};

struct CMSeq {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    struct CLgString _field6;
    struct TPureLength _field7;
    unsigned int _field8;
    short _field9;
    short _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    short _field15;
    char _field16[32];
    unsigned int _field17;
    struct TSignedPureLength _field18;
    int _field19;
    short _field20;
    char _field21;
    char _field22;
    struct SEQPARS _field23;
    struct MEGAPARS _field24;
    int _field25;
    int _field26;
    struct MORESEQPARS _field27;
    int _field28;
    int _field29;
    short _field30;
    struct TPosOneBasedTrackNr _field31;
    short _field32;
    short _field33;
    int _field34;
    struct TSignedPureLength _field35;
    struct TSignedAbsPureClock _field36;
    short _field37;
    struct CHASERESULTS _field38;
    unsigned short _field39;
    struct CTFlagSet<CMSeq::TMSeqFlag2, short> _field40;
    char _field41[2];
    struct SEQPARS_ELASTICPITCH _field42;
    struct vector<CTrack, std::__1::allocator<CTrack>> _field43;
    struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> _field44;
    struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> _field45;
    int _field46;
};

struct CMenu {
    CDUnknownFunctionPointerType *_field1;
    struct CMenuEntry *_field2;
    struct CMenu *_field3;
    long long _field4;
    long long _field5;
    void *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct CFlagSet<TMenuEntryFlag, 32> _field10;
    unsigned long long _field11;
    int _field12;
    id _field13;
    _Bool _field14;
    struct CMenuEntry *_field15;
    CDUnknownFunctionPointerType _field16;
    struct CMenuEntry *_field17;
    struct CMenuEntry *_field18;
};

struct CMenuEntry {
    CDUnknownFunctionPointerType *_field1;
    struct CMenuEntry *_field2;
    struct CMenu *_field3;
    long long _field4;
    long long _field5;
    void *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct CFlagSet<TMenuEntryFlag, 32> _field10;
    unsigned long long _field11;
    int _field12;
    id _field13;
    _Bool _field14;
};

struct CMixerStripList;

struct CMovieData {
    struct CDocumentLogic *_field1;
    id _field2;
    id _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
};

struct CMovieTNUtility {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    int _field8;
    int _field9;
    int _field10;
    double _field11;
    double _field12;
};

struct CMsg {
    int _field1;
    union {
        struct FENSTER *_field1;
        id _field2;
        int _field3;
    } _field2;
    struct CSong *_field3;
    struct {
        unsigned int :1;
        unsigned int :1;
    } _field4;
    long long _field5[5];
};

struct CMySet<CNote> {
    struct __tree<CNote, std::__1::less<CNote>, std::__1::allocator<CNote>> {
        struct __tree_node<CNote, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<CNote, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<CNote>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct CNote {
    long long mNoteNr;
    int mEnh;
};

struct CNoteRepeatPars {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    char _field17;
    char _field18;
    char _field19;
    char _field20;
    char _field21;
    char _field22;
    char _field23;
    char _field24;
    char _field25[8];
};

struct CONTEXTMENUITEM {
    long long _field1;
    union {
        long long _field1;
        int _field2;
        struct ENTRY *_field3;
        int _field4;
        struct CONTEXTMENUITEM *_field5;
        id _field6;
    } _field2;
};

struct CPULoadParam {
    CDUnknownFunctionPointerType _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CPlugIn;

struct CProgressBar;

struct CRegion {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
};

struct CRegionIndex {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CSampleMatrix;

struct CSamplerInst {
    CDUnknownFunctionPointerType *_field1;
    struct CSamplerObject *_field2;
    struct SamplerObject _field3;
    struct SamplerInst _field4;
    struct CFileRef _field5;
    short _field6;
    char _field7;
    char _field8;
    struct map<MDSampler *, int, std::__1::less<MDSampler *>, std::__1::allocator<std::__1::pair<MDSampler *const, int>>> _field9;
    struct CSamplerObject *_field10[20];
    struct CSampleMatrix *_field11;
    _Bool _field12;
    struct CSamplerZone *_field13[32];
    int _field14;
    int _field15;
    int _field16;
    char _field17[128];
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned char _field25[256];
    int _field26;
    int _field27;
    int _field28;
    struct MDDecayedExcitations *_field29;
};

struct CSamplerObject {
    CDUnknownFunctionPointerType *_field1;
    struct CSamplerObject *_field2;
    struct SamplerObject _field3;
};

struct CSamplerZone;

struct CSingleEvExt {
    long long _field1;
    long long _field2;
};

struct CSong {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[193];
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    unsigned char _field13;
    char _field14;
    char _field15;
    short _field16[100];
    int _field17[141];
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    struct CSongObjects *_field27;
    struct tMapGenData *_field28;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field29;
    struct CAdjustBeats *_field30;
    struct CTrackConductor *_field31;
    struct CTransientContainer *_field32;
    struct CMovieTNUtility *_field33;
    struct CMovieData *_field34;
    struct CChordTypes *_field35;
    struct CAssessmentController *_field36;
    int _field37;
    struct TTrackNr _field38;
    int _field39;
    int _field40;
    struct MORESEQPARS _field41;
    struct TAbsPureClock _field42;
    unsigned short _field43;
    char _field44[16];
    int _field45;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field46;
    struct CEvs *_field47;
    char _field48;
    struct CNoteRepeatPars _field49;
};

struct CSongObjectHeader;

struct CSongObjects;

struct CSongSignature {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[193];
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    unsigned char _field13;
    char _field14;
    char _field15;
    short _field16[100];
    int _field17[141];
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    struct CSongObjects *_field27;
    struct tMapGenData *_field28;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field29;
    struct CAdjustBeats *_field30;
    struct CTrackConductor *_field31;
    struct CTransientContainer *_field32;
    struct CMovieTNUtility *_field33;
    struct CMovieData *_field34;
    struct CChordTypes *_field35;
    struct CAssessmentController *_field36;
    int _field37;
    struct TTrackNr _field38;
    int _field39;
    int _field40;
    struct MORESEQPARS _field41;
    struct TAbsPureClock _field42;
    unsigned short _field43;
    char _field44[16];
    int _field45;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field46;
    struct CEvs *_field47;
    char _field48;
    struct CNoteRepeatPars _field49;
};

struct CSongStaffStyle {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[193];
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    unsigned char _field13;
    char _field14;
    char _field15;
    short _field16[100];
    int _field17[141];
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    struct CSongObjects *_field27;
    struct tMapGenData *_field28;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field29;
    struct CAdjustBeats *_field30;
    struct CTrackConductor *_field31;
    struct CTransientContainer *_field32;
    struct CMovieTNUtility *_field33;
    struct CMovieData *_field34;
    struct CChordTypes *_field35;
    struct CAssessmentController *_field36;
    int _field37;
    struct TTrackNr _field38;
    int _field39;
    int _field40;
    struct MORESEQPARS _field41;
    struct TAbsPureClock _field42;
    unsigned short _field43;
    char _field44[16];
    int _field45;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field46;
    struct CEvs *_field47;
    char _field48;
    struct CNoteRepeatPars _field49;
};

struct CStripe_Video {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    struct FENSTER *_field6;
    _Bool _field7;
};

struct CStripes;

struct CTFlagSet<CInst::TInstFlags3Bits, short> {
    short _field1;
};

struct CTFlagSet<CMSeq::TMSeqFlag2, short> {
    short _field1;
};

struct CTFlagSet<CTrack::TTrackFlag, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag2, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag3, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag4, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackMute, char> {
    char _field1;
};

struct CTFlagSet<SAUCONFUNION::TAuConfFlags2Bits, int> {
    int _field1;
};

struct CTFlagSet<_SONG::TSongRuntimeFlags, int> {
    int _field1;
};

struct CT_Flags {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    short _field7[8];
    short _field8;
    int _field9[5];
    char _field10[8];
    int _field11[19];
};

struct CTrack {
    char _field1;
    char _field2;
    struct CTFlagSet<CTrack::TTrackFlag, char> _field3;
    struct CTFlagSet<CTrack::TTrackMute, char> _field4;
    int _field5;
    int _field6;
    unsigned short _field7;
    unsigned char _field8;
    unsigned char _field9;
    struct list<TCollapsedOverviewObject, std::__1::allocator<TCollapsedOverviewObject>> *_field10;
    struct CUUID _field11;
    struct CTFlagSet<CTrack::TTrackFlag2, char> _field12;
    struct CTFlagSet<CTrack::TTrackFlag3, char> _field13;
    struct CTFlagSet<CTrack::TTrackFlag4, char> _field14;
    char _field15;
    struct MEGAPARS _field16;
    struct MEGAPARS _field17;
    int _field18;
    int _field19;
    struct TTrackNr _field20;
};

struct CTrackConductor;

struct CTrackID {
    int m;
};

struct CTransientContainer;

struct CUUID {
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned char _field6;
        unsigned char _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned char _field10;
        unsigned char _field11;
        unsigned char _field12;
        unsigned char _field13;
        unsigned char _field14;
        unsigned char _field15;
        unsigned char _field16;
    } _field1;
};

struct CVirtualTrack {
    struct CSong *_field1;
    int _field2;
    struct TTrackNr _field3;
    struct CUUID _field4;
};

struct ComponentInstanceRecord {
    long long _field1[1];
};

struct DDESCR;

struct DTOAR_Result {
    int _field1;
    double _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct DfAudioFileInfo_s {
    char _field1;
    char _field2;
    char _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct DoubTab {
    short _field1;
    char _field2[12];
};

struct EINSTEIN {
    struct PROOFF_PARA _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    long long _field16;
    long long _field17;
    struct TSignedUnshMidiTickClock _field18;
    struct TSignedUnshMidiTickClock _field19;
    long long _field20;
    long long _field21;
    long long _field22;
    long long _field23;
    long long _field24;
    long long _field25;
    long long _field26;
    long long _field27;
    long long _field28;
    long long _field29;
    long long _field30;
    long long _field31;
    long long _field32;
    long long _field33;
    long long _field34;
    short _field35;
    long long _field36;
    long long _field37;
    char _field38;
    char _field39;
    long long _field40;
    long long _field41;
    struct TSignedUnshMidiTickClock _field42;
    long long _field43;
    long long _field44;
    char _field45;
    char _field46;
    char _field47;
    long long _field48;
};

struct ENTRY {
    short _field1;
    CDUnknownFunctionPointerType _field2;
    int _field3;
    long long _field4;
};

struct FENSTER {
    short _field1;
    void *_field2;
    void *_field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    long long _field8;
    long long _field9;
    int _field10;
    int _field11;
    long long _field12;
    long long _field13;
    CDUnknownFunctionPointerType _field14;
    short _field15;
    short _field16;
    short _field17;
    int _field18;
    int _field19;
    short _field20;
    char _field21;
    char _field22;
    char _field23;
    short _field24;
    char _field25;
    char _field26;
    char _field27;
    char _field28;
    unsigned char _field29;
    unsigned char _field30;
    CDUnion_bcee5e8b _field31;
    char _field32[4];
    short _field33[3];
    short _field34;
    int _field35;
    struct XYH _field36;
    char _field37[4];
    int _field38;
    long long _field39;
    struct MEGAPARS _field40;
    char _field41;
    char _field42;
    char _field43;
    char _field44;
    char _field45;
    char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    char _field53;
    char _field54;
    char _field55;
    struct CT_Flags _field56;
    struct BOX _field57;
    short _field58;
    int _field59;
    int _field60;
    int _field61[12];
    char _field62[256];
    struct TAbsPureClock _field63;
    id _field64;
    id _field65;
    struct TTrackNr _field66;
    int _field67;
    float _field68;
    float _field69;
    float _field70;
    float _field71;
    float _field72;
    struct CEv *_field73;
    struct CDocumentLogic *_field74;
    struct CStripes *_field75;
    struct CMixerStripList *_field76;
    struct vector<int, std::__1::allocator<int>> _field77;
    int _field78;
    CDUnion_59bf9355 _field79;
    struct CSong *_field80;
    struct CInst *_field81;
    struct PlayheadManagement _field82;
    struct TPureClock _field83;
    CDStruct_2c44b449 _field84;
    struct CEvLaunch *_field85;
};

struct FSRef {
    unsigned char hidden[80];
};

struct FVARS {
    unsigned int _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    unsigned int _field6;
    int _field7;
    short _field8;
    int _field9;
    int _field10;
    struct TPureClock _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    struct TPosOneBasedTrackNr _field16;
    struct TPosOneBasedTrackNr _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    char _field41;
    char _field42;
    char _field43;
    char _field44;
    unsigned char _field45;
    unsigned char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    char _field53;
    char _field54;
    char _field55;
    char _field56;
    char _field57[12];
    short _field58;
    char _field59;
    char _field60;
    char _field61;
    char _field62;
    char _field63;
    char _field64;
    char _field65;
    unsigned char _field66;
    char _field67;
    char _field68;
    char _field69;
    char _field70;
    char _field71;
    char _field72;
    int _field73;
    char _field74;
    char _field75;
    unsigned char _field76;
    char _field77;
    char _field78;
    char _field79;
    char _field80;
    char _field81;
    char _field82;
    char _field83;
    char _field84;
    char _field85;
    char _field86;
    char _field87;
    char _field88;
    char _field89;
    char _field90;
    char _field91;
    char _field92;
    char _field93;
    int _field94;
    int _field95;
    int _field96;
    struct TPosOneBasedTrackNr _field97;
    short _field98;
    struct TPosOneBasedTrackNr _field99;
    short _field100;
    short _field101;
    short _field102;
    char _field103;
    char _field104;
    char _field105;
    char _field106;
    char _field107;
    char _field108;
    int _field109;
    int _field110;
    int _field111;
    char _field112;
    char _field113;
    int _field114;
    int _field115;
    int _field116;
    short _field117;
    short _field118;
    char _field119;
    char _field120;
    short _field121;
    char _field122;
    char _field123;
    char _field124;
    unsigned char _field125;
    char _field126;
    unsigned char _field127;
    char _field128;
    char _field129;
    char _field130[8];
    char _field131;
    char _field132;
    char _field133;
    unsigned char _field134;
    char _field135;
    char _field136;
    char _field137;
    char _field138;
    short _field139;
    short _field140;
    short _field141;
    char _field142;
    char _field143;
    char _field144;
    char _field145;
    char _field146;
    char _field147;
    char _field148;
    char _field149;
    struct TVolatile<TAbsPureClock> _field150;
    struct TVolatile<TAbsPureClock> _field151;
    struct TAbsPureClock _field152;
    struct TAbsPureClock _field153;
    struct TSignedPureClock _field154;
    struct TAbsPureClock _field155;
    struct TAbsPureClock _field156;
    struct TPureClock _field157;
    struct TPureClock _field158;
    struct TPureClock _field159;
    struct TAbsPureClock _field160;
    struct TPureClock _field161;
    struct TAbsPureClock _field162;
    struct TAbsPureClock _field163;
    struct TPureClock _field164;
    struct TPureClock _field165;
    struct TPureClock _field166;
    struct TPureClock _field167;
    int _field168;
    struct TPosOneBasedTrackNr _field169;
    char _field170;
    char _field171;
    float _field172;
    char _field173;
    char _field174;
    short _field175;
    struct TAbsPureClock _field176;
    struct TAbsPureClock _field177;
    struct TPureLength _field178;
    char _field179;
    struct TAbsPureClock _field180;
    char _field181;
    char _field182;
    char _field183;
    char _field184;
    char _field185;
    char _field186;
    char _field187;
    struct TAbsPureClock _field188;
    int _field189;
    int _field190;
    struct CEv _field191;
    struct CEv _field192;
    struct CEv _field193;
    struct CEv _field194;
    struct CEv _field195;
    struct CEv _field196;
    struct CEv _field197;
    struct CEv _field198;
    char _field199;
    char _field200;
    char _field201[55];
};

struct FileRec {
    unsigned char _field1;
    struct CFileIO _field2;
};

struct GAUDIOOUT {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    short _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    int _field52;
    struct AULEVEL _field53[12];
    short _field54;
    short _field55;
    char _field56;
    char _field57;
    short _field58;
    char _field59;
    char _field60;
    short _field61;
    int _field62;
    float _field63;
    struct REALS _field64;
    char _field65;
    char _field66;
    unsigned char _field67;
    unsigned char _field68;
    char _field69;
    char _field70;
    char _field71;
    char _field72;
    short _field73;
    int _field74[4];
    char _field75;
    char _field76;
    char _field77[4];
    CDUnknownBlockType _field78;
    id _field79;
};

struct GCColor;

struct GCHORDINST {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    struct DoubTab _field53[12];
};

struct GCLineEditor {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    CDUnknownFunctionPointerType _field5;
    long long _field6;
    int _field7;
    int _field8;
    int _field9;
    id _field10;
};

struct GChSearchData {
    unsigned char _field1;
    int _field2;
    int _field3;
    unsigned char _field4;
    int _field5;
    int _field6;
    struct CChordTypeId _field7;
};

struct GDEVICE {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    char _field47;
    unsigned char _field48;
    struct REALS _field49;
    char _field50;
    char _field51;
    unsigned char _field52;
    unsigned char _field53;
    char _field54;
    char _field55;
    short _field56;
    char _field57;
    char _field58;
    short _field59;
    short _field60;
    short _field61;
    short _field62;
    short _field63;
    short _field64;
    short _field65;
    char _field66;
    char _field67;
    char _field68;
    char _field69;
    short _field70;
    short _field71;
    unsigned char _field72;
    unsigned char _field73;
    short _field74;
    short _field75;
    char _field76[16];
    char _field77[2048];
};

struct GLOGINST {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    char _field47;
    unsigned char _field48;
    struct REALS _field49;
    char _field50;
    char _field51;
    unsigned char _field52;
    unsigned char _field53;
    char _field54;
    char _field55;
    short _field56;
    char _field57;
    char _field58;
    short _field59;
    struct ASSIGN_PARS _field60;
};

struct GLOGINSTOLD {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    char _field47;
    unsigned char _field48;
    struct REALS _field49;
    char _field50;
    char _field51;
    unsigned char _field52;
    unsigned char _field53;
    char _field54;
    char _field55;
    short _field56;
    char _field57;
    char _field58;
    short _field59;
};

struct GTRANSINST {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    char _field10[2];
    int _field11;
    int _field12;
    short _field13;
    char _field14;
    char _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    char _field20;
    char _field21;
    struct BOX _field22;
    struct BOX _field23;
    char _field24;
    char _field25;
    struct BOX _field26;
    short _field27;
    short _field28;
    short _field29;
    struct CTFlagSet<CInst::TInstFlags3Bits, short> _field30;
    char _field31;
    char _field32;
    char _field33[14];
    short _field34;
    char _field35[32];
    short _field36;
    short _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    short _field42;
    struct CLgString _field43;
    struct WsRTMIDIStruct *_field44;
    struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>> *_field45;
    char _field46;
    struct TPROC _field47;
    struct TPROC _field48;
    struct TPROC _field49;
    struct TPROC _field50;
    struct TPROC _field51;
    struct TPROC _field52;
    struct TPROC _field53;
    struct CEv _field54;
    struct CEv _field55;
    char _field56;
    char _field57;
    char _field58;
    char _field59;
    char _field60;
    char _field61;
    unsigned char _field62;
    unsigned char _field63;
    unsigned char _field64;
    unsigned char _field65;
    char _field66;
    char _field67;
    char _field68;
    char _field69;
    char _field70[8];
    char _field71[128];
};

struct GenerateRuntimeData;

struct GlobalTrackConfiguration {
    char marker;
    char signature;
    char arrangement;
    char transposition;
    char tempo;
    char beatMapping;
    char video;
};

struct IGenInstNoteNrHelper;

struct INFO_LAYERIMPORT {
    int _field1;
    int _field2;
    struct CDocumentLogic *_field3;
    struct FENSTER *_field4;
    char _field5;
    char _field6;
};

struct Implementation;

struct JobState_t {
    long long _field1;
    struct CRegionIndex _field2;
};

struct LBOX {
    long long x;
    long long y;
    long long w;
    long long h;
};

struct LOOPAUTHORING {
    short keyType;
    short taggableFileType;
    short numDescriptors;
    char instrumentType[50];
    char instrumentSubtype[50];
    char genre[50];
    char *moods;
};

struct LgPluginGUIState {
    char _field1;
    char _field2;
    char _field3;
    int _field4;
    int _field5;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field6;
    struct map<LgPluginID, short, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, short>>> _field7;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field8;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field9;
    struct pair<float, float> _field10;
    char _field11;
    int _field12;
};

struct LgPluginID {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct LuaStateCache;

struct MADSPEvent;

struct MADSPEvents {
    struct MADSPEvent *_field1;
    struct MADSPEvent *_field2;
    struct __compressed_pair<MADSPEvent *, std::__1::allocator<MADSPEvent>> {
        struct MADSPEvent *_field1;
    } _field3;
};

struct MAMem {
    void *_field1;
    unsigned long long _field2;
};

struct MDDecayedExcitations;

struct MEGAPARS {
    union {
        CDStruct_a06f635e _field1;
        int _field2;
    } _field1;
};

struct MORESEQPARS {
    short _field1;
    short _field2;
    short _field3;
    char _field4;
    char _field5;
    short _field6;
    struct QUAMOD _field7;
    struct TSignedPureLength _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    struct REALS _field15;
    int _field16;
    char _field17;
    char _field18;
    short _field19;
    unsigned int _field20;
    int _field21;
    int _field22;
    int _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
};

struct MenuItemCreationParam {
    id _field1;
    long long _field2;
    id _field3;
    id _field4;
    long long _field5;
    id _field6;
    int _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    char _field11;
    SEL _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    char _field17;
    char _field18;
    char _field19;
    char _field20;
};

struct MixGroupFlags {
    struct bitset<32> bits;
};

struct MixerFENSTER {
    short _field1;
    void *_field2;
    void *_field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    long long _field8;
    long long _field9;
    int _field10;
    int _field11;
    long long _field12;
    long long _field13;
    CDUnknownFunctionPointerType _field14;
    short _field15;
    short _field16;
    short _field17;
    int _field18;
    int _field19;
    short _field20;
    char _field21;
    char _field22;
    char _field23;
    short _field24;
    char _field25;
    char _field26;
    char _field27;
    char _field28;
    unsigned char _field29;
    unsigned char _field30;
    CDUnion_bcee5e8b _field31;
    char _field32[4];
    short _field33[3];
    short _field34;
    int _field35;
    struct XYH _field36;
    char _field37[4];
    int _field38;
    long long _field39;
    struct MEGAPARS _field40;
    char _field41;
    char _field42;
    char _field43;
    char _field44;
    char _field45;
    char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    char _field53;
    char _field54;
    char _field55;
    struct CT_Flags _field56;
    struct BOX _field57;
    short _field58;
    int _field59;
    int _field60;
    int _field61[12];
    char _field62[256];
    struct TAbsPureClock _field63;
    id _field64;
    id _field65;
    struct TTrackNr _field66;
    int _field67;
    float _field68;
    float _field69;
    float _field70;
    float _field71;
    float _field72;
    struct CEv *_field73;
    struct CDocumentLogic *_field74;
    struct CStripes *_field75;
    struct CMixerStripList *_field76;
    struct vector<int, std::__1::allocator<int>> _field77;
    int _field78;
    CDUnion_59bf9355 _field79;
    struct CSong *_field80;
    struct CInst *_field81;
    struct PlayheadManagement _field82;
    struct TPureClock _field83;
    CDStruct_2c44b449 _field84;
    struct CEvLaunch *_field85;
};

struct MouseForm {
    id _field1;
    struct CGPoint _field2;
    int _field3;
    id _field4;
};

struct MxlFont {
    long long font_family;
    long long font_style;
    long long font_size;
    long long font_weight;
};

struct MxlMeasureID {
    long long visibleNumber;
    long long visibleIndex;
    long long visibleCount;
};

struct MxlMinLencode {
    unsigned char maxDiv2;
    unsigned char maxDiv3;
    unsigned char maxDiv5;
    unsigned char maxDiv7;
    unsigned char maxDiv9;
    unsigned char maxDiv11;
};

struct MxlPartGroupData {
    unsigned short braceIndex;
    unsigned short bracketIndex;
    unsigned short barlineIndex;
    unsigned char braceType;
    unsigned char bracketType;
    unsigned char barlineType;
};

struct MxlXPos {
    long long abs_x;
    long long line_x;
};

struct MyPacketListener {
    CDUnknownFunctionPointerType *_field1;
};

struct PLUGCONTROL {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
};

struct PROOFF_PARA {
    long long _field1;
    long long _field2;
    short _field3;
};

struct PacketListener;

struct PlayheadManagement {
    int numFuturePositions;
    int shouldRenderOnTheMainThread;
    double offsetX;
    double offsetY;
    CDStruct_3f0684ed future[30];
    double previousXZoom;
    double lastSeenScrollStartX;
    double previousCurrX;
    double previousCurrY;
    struct TAbsPureClock previousCurrentClock;
    double lastUpdateTime;
    struct CGPoint lastPositionUpdated;
    struct CGRect lastSetPlayheadRect;
    int lastSeenTempoVersioningIndex;
    int lastSeenSPLRepositionVersioningIndex;
    struct TAbsPureClock initialReferenceClock;
    double initialReferenceTime;
    int previousCycleOrSkipMode;
    int previousSkipMode;
    struct TAbsPureClock previousLeftLocator;
    struct TAbsPureClock previousRightLocator;
    int previousArrangeIsShowingAFolder;
    int isPulsing;
    float currentPulsingCount;
    float pulsingCycleLength;
    long long lastSeenLatencySamples;
    double lastSeenLatencyTime;
    int didCycleOnce;
    int isInSPLStoppedModeToCompensateTheLatency;
    double startTimeOfSPLStoppedMode;
    double watchdogTimeEndOfSPLStoppedMode;
    double initialStoppedCurrX;
    double initialStoppedCurrY;
    char lastSeenSongPlayState;
    char lastSeenSongPauseState;
    int previousShouldNotUseSyncedSwapBuffers;
    int lastSeenLatencyCompensationEnabled;
    int isInScrollInPlayMode;
    int isScrollingBlocked;
};

struct QUAMOD {
    short _field1;
    short _field2;
    union {
        short _field1;
        struct {
            char _field1;
            char _field2;
        } _field2;
    } _field3;
    short _field4;
    short _field5;
    short _field6;
};

struct REALS {
    long long _field1;
    long long _field2;
};

struct RegionExportParam {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6;
    void *_field7;
};

struct SAMVIEW;

struct SAUCONFHEADER {
    int _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
};

struct SAUCONFPLUGIN {
    int _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    char _field7[64];
    char _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14[28];
    short _field15;
    short _field16;
    short _field17;
    char _field18;
    char _field19;
    char _field20[12];
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned char _field24;
    unsigned char _field25;
    short _field26;
    int _field27;
    int _field28;
    char _field29[2];
    char _field30[7];
    char _field31;
    unsigned int _field32;
    char _field33;
    char _field34;
    int _field35;
    struct SAUPLUGCONTROL _field36[0];
};

struct SAUCONFSEND;

struct SAUCONFUNION {
    int _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    int _field8;
    short _field9;
    short _field10;
    char _field11;
    char _field12;
    short _field13;
    short _field14[16];
    char _field15[16];
    int _field16;
    struct CTFlagSet<SAUCONFUNION::TAuConfFlags2Bits, int> _field17;
    char _field18;
    char _field19;
    char _field20;
    char _field21;
    char _field22;
    char _field23;
    char _field24;
    char _field25;
    short _field26;
    union {
        short _field1;
        short _field2;
    } _field27;
    char _field28;
    char _field29;
    union {
        struct {
            short _field1;
            unsigned int _field2;
            int _field3[1];
        } _field1;
        struct {
            char _field1;
            char _field2;
            int _field3[2];
        } _field2;
    } _field30;
    char _field31;
    unsigned char _field32;
    short _field33;
    int _field34;
    int _field35;
    char _field36;
    char _field37;
    char _field38;
    char _field39;
    char _field40;
    char _field41;
    char _field42;
    char _field43;
    int _field44;
};

struct SAUPLUGCONTROL {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
};

struct SEARCH_FILE {
    struct CProgressBar *_field1;
    long long _field2;
    long long _field3;
    struct CFileRef _field4;
    short _field5;
    struct CSong *_field6;
    short _field7;
    short _field8;
};

struct SEQPARS {
    short _field1;
    short _field2;
    short _field3;
    char _field4;
    char _field5;
    short _field6;
    struct QUAMOD _field7;
    struct TSignedPureLength _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
};

struct SEQPARS_ELASTICPITCH {
    struct QUAMOD _field1;
    short _field2;
};

struct SETTINGSIMPORTINFO {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct SYSTEMINFO {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
};

struct SamplerInst {
    int _field1[20];
};

struct SamplerObject {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    char _field9[64];
};

struct SamplerShortnTailInfo {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct ScAxis;

struct ScAxisLock;

struct ScAxisPosVct;

struct ScCacheObj;

struct ScDragInfo1 {
    CDUnknownFunctionPointerType *_vptr$ScDragInfo1;
    struct ScDragPoint m_dragPoint;
    struct ScpbElem m_scpbElem1;
    int m_insertChannel;
    int m_insertVelocity;
    short m_textStyle;
    long long m_mdx;
    long long m_mdy;
    long long m_xshift;
    long long m_yshift;
    int m_numEvents;
    _Bool m_isMidiEvent;
    long long m_targetRegionIndex;
    struct CEv *m_ep;
    int m_epValid;
    struct TPureLength m_insQuant;
    int m_insSnap;
    _Bool m_fMulti;
    struct CEv *m_epExtNote;
    struct CEv m_lastEvent;
    int m_kontrollString;
    int m_findNoteMode;
};

struct ScDragMoveState {
    long long _field1;
    long long _field2;
    struct TSignedDontCareLength _field3;
    int _field4;
    int _field5;
    int _field6;
    struct TPureClock _field7;
    struct TPureClock _field8;
};

struct ScDragPoint {
    struct ScVoicePoint m_vp;
    struct ScGlobalPagePoint m_gpp;
    _Bool m_gpp_valid;
    _Bool m_vp_valid;
};

struct ScDragState {
    struct ScStaff *m_axStaff;
    struct ScPage *m_axPage;
    long long m_hysteY;
    int m_voiceIndex1;
};

struct ScDragValidPoint {
    struct ScLocatorLocalRes _field1;
    double _field2;
    double _field3;
    struct ScPage *_field4;
    _Bool _field5;
};

struct ScEditorMetrics {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct ScFontsState {
    int _field1;
    _Bool _field2;
};

struct ScGlobalPagePoint {
    int m_ipage;
    int m_marginZoneX;
    int m_marginZoneY;
    int m_textJustifyX;
    int m_textJustifyY;
    long long m_dx;
    long long m_dy;
};

struct ScLocatorGlobalRes {
    int _field1;
    int _field2;
    int _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    struct ScPage *_field8;
};

struct ScLocatorLocalRes {
    long long _field1;
    struct ScStaffRange _field2;
    struct ScStaff *_field3;
    _Bool _field4;
    struct ScPage *_field5;
    struct ScPageLine *_field6;
};

struct ScNoteSize {
    struct ScResolution m_resol;
    int m_rastralIndex;
    int m_currDpi;
    long long m_currScale100;
    int m_fontForMetrics;
    _Bool m_useFontMetrics0;
    _Bool m_cacheIsValid;
    long long m_vabst;
    long long m_vabst2;
    long long m_vabst_sdpi;
    long long m_vabst2_sdpi;
    long long m_wnote4Legacy_spdi;
    long long m_habstLegacy;
    long long m_wNotehead[28];
    long long m_wRest[9];
    long long m_wFlagUp;
    long long m_wClefG;
    long long m_wClefF;
    long long m_wClefC;
    long long m_wClefP;
    long long m_wClefT;
    long long m_wAccidSimple_coord[5];
    long long m_wAccidGuide_coord[5];
};

struct ScPage {
    CDUnknownFunctionPointerType *_field1;
    short _field2;
    long long _field3;
    struct TPureClock _field4;
    struct TPureClock _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    unsigned long long _field10;
    struct ScPageVct *_field11;
    struct ScPageLineVct *_field12;
};

struct ScPageAxis {
    CDUnknownFunctionPointerType *_field1;
    struct __wrap_iter<AxLogicPos **> {
        struct AxLogicPos **_field1;
    } _field2;
    struct ScViewState *_field3;
    struct ScAxisPosVct *_field4;
    int _field5;
    long long _field6;
    struct ScPageVct *_field7;
};

struct ScPageLine {
    CDUnknownFunctionPointerType *_field1;
    short _field2;
    struct TPureClock _field3;
    struct TPureClock _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    unsigned int _field9;
    int _field10;
    struct ScPageLine *_field11;
    struct ScPageLine *_field12;
    unsigned long long _field13;
    struct ScPageLineVct *_field14;
    struct ScAxisPosVct *_field15;
    struct ScPageStaffVct *_field16;
};

struct ScPageLineVct;

struct ScPageStaff {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    long long _field3;
    long long _field4;
    short _field5;
    struct ScVoicePartInfo _field6;
    struct vector<ScStaffRange, std::__1::allocator<ScStaffRange>> *_field7;
    short _field8;
    _Bool _field9;
    char _field10;
    char _field11;
    long long _field12;
    long long _field13;
    unsigned long long _field14;
    struct ScPageStaffVct *_field15;
};

struct ScPageStaffVct;

struct ScPageVct;

struct ScResolution {
    int m_dpi;
    double m_xFactor;
    double m_yFactor;
    double m_scaleFactor;
    int m_thickadd;
    long long m_scale;
};

struct ScRgnContInfo;

struct ScStaff {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    long long _field3;
    long long _field4;
    short _field5;
    struct ScVoicePartInfo _field6;
    struct vector<ScStaffRange, std::__1::allocator<ScStaffRange>> *_field7;
};

struct ScStaffRange {
    unsigned short m_posIndex;
    short m_globalVoice;
    unsigned int m_unused1:1;
    unsigned int m_rastralIndex:4;
    unsigned int m_clefIndex:6;
    unsigned int m_keyIndex:5;
    unsigned int m_lineBracket:1;
    unsigned int m_curlyBracket:1;
    unsigned int m_squareBracket:1;
    unsigned int m_timeSigNom:7;
    unsigned int m_timeSigDen:3;
    unsigned int m_hideKey:1;
    unsigned int m_timeSigFlags:2;
};

struct ScViewState {
    short _field1;
    short _field2;
    char _field3;
    char _field4;
    int _field5;
    int _field6;
    short _field7;
    struct CEv *_field8;
    struct ScDragMoveState _field9;
    long long _field10;
    long long _field11;
    float _field12;
    long long _field13;
    struct TSignedDontCareClock _field14;
    struct TSignedDontCareClock _field15;
    struct ScAxis *_field16;
    struct ScAxisLock *_field17;
    int _field18;
    struct TDontCareClock _field19;
    struct TDontCareClock _field20;
    int _field21;
    int _field22;
    long long _field23;
    long long _field24;
    long long _field25;
    short _field26;
    struct FENSTER *_field27;
    struct vector<ScVoice *, std::__1::allocator<ScVoice *>> *_field28;
    id _field29;
    struct TPosOneBasedTrackNr _field30;
    struct ScResolution _field31;
    struct vector<ScRgnContInfo, std::__1::allocator<ScRgnContInfo>> _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    char _field37;
    int _field38;
    long long _field39;
    int _field40;
    struct ScpbPresetData _field41;
    struct ScFontsState _field42;
    struct ScEditorMetrics _field43;
};

struct ScVoicePartInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct ScVoicePoint {
    long long m_staffY0;
    int m_iseq2;
    short m_ivoice2;
    struct TPureClock m_clock;
    struct TPureClock m_quantclock;
    struct TPureClock m_snapclock;
    short m_note;
    int m_dy_;
    int m_dxquant;
    int m_dxsnap;
    struct TSignedPureClock m_vgclockoff2;
    _Bool m_isEmptyPos;
    struct ScdrSnapInfo m_snap;
    struct ScdrStaffID m_staffID2;
    int m_partStyleID2;
    int m_partStaffIndex2;
    int m_partVoiceIndex2;
};

struct ScdcData {
    struct CGRect m_wholeEditorRect;
    struct CGRect m_visibleEditorRect;
    CLgView *m_foundScoreView;
};

struct ScdpHotSpot {
    int _field1;
    struct CGRect _field2;
    int _field3;
};

struct ScdpLinkSegm {
    struct ScssLinkSegm_ _field1;
    char _field2;
};

struct ScdpPartData {
    struct CGRect m_rect;
    double m_minX;
    struct vector<ScdpLinkSegm, std::__1::allocator<ScdpLinkSegm>> m_segms;
};

struct ScdpSegmTrack {
    int _field1;
    int _field2;
    struct ScssLinkSegm_ _field3;
    int _field4;
    struct ScdpLinkSegm _field5;
    struct ScdpLinkSegm *_field6;
};

struct ScdpStaffInfo;

struct ScdrSnapInfo {
    int m_snapDy_type;
    int m_snapDy_16ths0;
    struct TDontCareClock m_snapDy_t;
    long long m_snapDy_dx;
    struct ScCacheObj *snap_Obj;
    int m_snapDy_voiceIndex;
    struct ScdrStaffID m_staffID5;
    struct ScNoteSize m_ns5;
};

struct ScdrStaffID {
    short m_pageIndex1;
    short m_pageLineIndex1;
    short m_lineStaffIndex1;
};

struct ScfiOptions {
    _Bool m_showInternalFrame;
    _Bool m_showInternalSymbol;
    _Bool m_showStaffLines;
    _Bool m_bigDisplay;
    _Bool m_showImageRect;
};

struct ScisDataProvider {
    CDUnknownFunctionPointerType *_field1;
    struct CSong *_field2;
};

struct ScisLinkSegm_;

struct SclhPartData {
    int m_scoreTrackIndex;
    int m_staffIndex;
    int m_globalVoice1;
    int m_sclhPartID;
    struct CGRect m_partRect;
};

struct ScpbElem {
    char m_byte1;
    char m_byte2;
    int m_gindex3;
    int m_scpbGroupID;
    int m_scpbElemIndex;
};

struct ScpbEntryElem {
    struct ScpbElem _field1;
    unsigned char _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
};

struct ScpbPresetData {
    int _field1[20];
    int _field2;
    char _field3[20];
    _Bool _field4;
    int _field5;
    id _field6;
    id _field7;
    id _field8;
};

struct ScssDataProvider {
    CDUnknownFunctionPointerType *_field1;
    struct CSong *_field2;
};

struct ScssElemPos {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    char _field7;
    char _field8;
};

struct ScssElemPosSet {
    struct __tree<ScssElemPos, std::__1::less<ScssElemPos>, std::__1::allocator<ScssElemPos>> {
        struct __tree_node<ScssElemPos, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<ScssElemPos, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<ScssElemPos>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
    int m_selType;
};

struct ScssLinkSegm_ {
    unsigned char _field1;
    unsigned char _field2;
};

struct ScssStateMem {
    char m_wasNotEmpty;
    double m_timeStamp;
    int m_partID;
};

struct ScssTrackedControl_stave {
    id m_control;
    _Bool m_flag;
    int m_startValue;
    int m_lastValue;
    struct ScssElemPosSet m_elemPosSet;
    _Bool m_doCheckBounds;
    int m_minValue;
    int m_maxValue;
};

struct SctxDataProvider {
    CDUnknownFunctionPointerType *_field1;
    struct CSong *_field2;
};

struct SocketReceiveMultiplexer {
    struct Implementation *_field1;
};

struct StandardFileReply {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int _field3;
    struct CFileRef _field4;
};

struct SurroundPan {
    short _field1;
    short _field2;
    float _field3[11];
};

struct TAST {
    unsigned char _field1;
    unsigned char _field2;
    char _field3;
    unsigned short _field4;
    unsigned char _field5;
};

struct TAbsClockRange {
    struct TAbsPureClock _field1;
    struct TAbsPureClock _field2;
};

struct TAbsPureClock {
    long long m;
};

struct TAdjustTempoToAOAR_Input {
    struct CSong *song;
    struct CBeatAgents *beatAgents;
    struct CBeatDetectorParams *beatDetectorParams;
    float preferredTempoBpm;
    struct TAbsPureClock leftmostStartVisibleAbsClock;
    long long rightmostFramePos;
};

struct TAdjustTempoToAOAR_Result {
    float _field1;
    unsigned long long _field2;
    int _field3;
    _Bool _field4;
};

struct TAuConfType {
    short m;
};

struct TAuUnionType {
    short _field1;
};

struct TDontCareClock {
    long long m;
};

struct TEXTSTYLE {
    short _field1;
    char _field2;
    char _field3;
    struct BOX _field4;
    short _field5;
    char _field6[24];
    struct __CTFont *_field7;
    char _field8[6];
    char _field9[32];
    int _field10;
    short _field11;
    unsigned char _field12;
    unsigned char _field13;
    short _field14;
    short _field15;
    int _field16;
    struct CLgString _field17;
    struct CLgString _field18;
    struct CLgString _field19;
    int _field20;
    int _field21;
};

struct TEventInfo;

struct TGridInfo;

struct TGrooveMapInfo {
    struct vector<TEventInfo, std::__1::allocator<TEventInfo>> _field1;
    long long _field2;
    _Bool _field3;
};

struct TNoteInfo {
    float _field1;
    float _field2;
    long long _field3;
    long long _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    void *_field14;
    int _field15;
    char _field16;
    int _field17;
    _Bool _field18;
};

struct TPROC {
    char _field1;
    char _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct TPersistentIOPrms {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct CSong *_field5;
    struct CSongObjectHeader *_field6;
    void *_field7;
    void *_field8;
    void *_field9;
    long long _field10;
    unsigned int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct TPosOneBasedTrackNr {
    short m;
};

struct TPrelistenData {
    _Bool active;
    float tempoBpm;
    int savedTempoSeqID;
    int savedClickopt;
    struct TAbsPureClock savedSPL;
    struct TAbsPureClock savedLeftLocator;
    struct TAbsPureClock savedRightLocator;
};

struct TPureClock {
    long long m;
};

struct TPureLength {
    long long m;
};

struct TRegionInfo {
    float _field1;
    float _field2;
    int _field3;
    long long _field4;
    long long _field5;
    int _field6;
    int _field7;
    long long _field8;
    float _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    void *_field13;
};

struct TSignedAbsPureClock {
    long long _field1;
};

struct TSignedDontCareClock {
    long long _field1;
};

struct TSignedDontCareLength {
    long long _field1;
};

struct TSignedPureClock {
    long long m;
};

struct TSignedPureLength {
    long long _field1;
};

struct TSignedUnshMidiTickClock {
    long long _field1;
};

struct TTrackNr {
    long long m;
    int mWithSubTracks;
};

struct TVolatile<TAbsPureClock> {
    long long _field1;
};

struct TrackHeaderConfiguration {
    long long wantedwidth;
    char isshowtrnums;
    int tracknameformattopleft;
    int tracknameformattopright;
    char trackelemShow[32];
};

struct U_VARS {
    void *memmutter;
    void *spec;
    void *ober;
    struct FENSTER *pf;
    CDUnknownFunctionPointerType fun;
    CDUnknownFunctionPointerType crs;
    union {
        CDStruct_1f562172 ;
        struct LBOX box;
    } ;
    long long xmutter;
    long long ymutter;
    int funcid;
    long long uprivate;
    long long uprivate2;
    long long uprivate3;
    void *mem;
    void *locfirst;
    char fprint;
    int textsize;
    struct GCColor *foreColor;
    struct GCColor *backColor;
    CDUnknownFunctionPointerType callbackFunc;
    struct CSong *pSong;
    int printmode;
};

struct UdpListeningReceiveSocket {
    CDUnknownFunctionPointerType *_field1;
    struct Implementation *_field2;
    struct SocketReceiveMultiplexer _field3;
    struct PacketListener *_field4;
};

struct WSEQ {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    char _field5;
    char _field6;
    struct BOX _field7;
    int _field8;
    int _field9;
    short _field10[6];
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    unsigned char _field15;
    unsigned char _field16;
    short _field17;
    short _field18;
    char _field19;
    char _field20;
    short _field21;
    char _field22;
    char _field23;
    char _field24;
    char _field25;
    unsigned char _field26;
    unsigned char _field27;
    short _field28[10];
    char _field29[4];
    short _field30[3];
    short _field31;
    int _field32;
    short _field33[2];
    short _field34;
    short _field35;
    char _field36;
    char _field37;
    int _field38;
    int _field39;
    char _field40[6];
    int _field41;
    short _field42;
    char _field43;
    char _field44;
    char _field45;
    char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    char _field53;
    char _field54;
    char _field55;
    char _field56;
    char _field57;
    char _field58;
    struct CT_Flags _field59;
    float _field60;
    float _field61;
    char _field62[4];
    unsigned int _field63;
    char _field64;
};

struct WarpMarker;

struct WsRTMIDIStruct;

struct XYH {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct _DfEventCachePimpl_t {
    struct multimap<long long, DfEvent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, DfEvent *>>> _field1;
    struct multimap<long long, DfEvent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, DfEvent *>>> _field2;
    long long _field3;
};

struct _DfPlugInDescrSet {
    long long _field1;
    id _field2;
    id _field3;
    char _field4;
    id _field5;
    CDStruct_1f562172 _field6;
    long long _field7[4];
    long long _field8;
    long long _field9[40];
    long long _field10[40];
    id _field11[40];
    id _field12[40];
};

struct _DfRegionPositionCachePimpl_t {
    struct map<long long, DfRegion *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, DfRegion *>>> _field1;
};

struct _LGAACFORMAT {
    char _field1;
    unsigned int _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    unsigned int _field7;
};

struct _LGLOOPAUTHORING {
    short _field1;
    short _field2;
    short _field3;
    char _field4[50];
    char _field5[50];
    char _field6[50];
    char *_field7;
};

struct _LGMP3FORMAT {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    char _field8[7];
};

struct _LGPlugInInfo {
    int cbSize;
    int numInputs;
    int numOutputs;
    int numOutBuses;
    int fInstrument;
    char fIsLogicPlugIn;
    unsigned int manufacturerID;
    unsigned int productID;
    unsigned int plugInID;
    unsigned int architectureID;
    int plugInIndex;
    char fIsMidiPlugin;
    int numOutsForBus[25];
    char fIsLoaded;
    int fCurrent;
    void *reference;
    NSString *nsName;
    NSString *nsShortName;
    unsigned int auComponentType;
};

struct _LGPluginParameter {
    int _field1;
    int _field2;
    long long _field3;
    float _field4;
    id _field5;
    id _field6;
    id _field7;
};

struct _LgFlexZone_t {
    long long _field1;
    long long _field2;
    long long _field3;
    float _field4;
    float _field5;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _ScisLinkSegmData {
    int m_isetID1;
    vector_71404bd1 m_linkSegmVct_line0;
    vector_71404bd1 m_linkSegmVct_lineN;
    vector_71404bd1 m_linkSegmVct_curly;
    vector_71404bd1 m_linkSegmVct_square;
};

struct __CFURL;

struct __list_node_base<CFileRef, void *> {
    struct __list_node_base<CFileRef, void *> *_field1;
    struct __list_node_base<CFileRef, void *> *_field2;
};

struct __list_node_base<CTrack *, void *> {
    struct __list_node_base<CTrack *, void *> *_field1;
    struct __list_node_base<CTrack *, void *> *_field2;
};

struct __list_node_base<unsigned char, void *> {
    struct __list_node_base<unsigned char, void *> *__prev_;
    struct __list_node_base<unsigned char, void *> *__next_;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct auto_ptr<const IGenInstNoteNrHelper> {
    struct IGenInstNoteNrHelper *__ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bitset<32> {
    unsigned long long __first_;
};

struct bitset<4> {
    unsigned long long __first_;
};

struct bitset<8> {
    unsigned long long _field1;
};

struct cssm_data {
    unsigned long long _field1;
    char *_field2;
};

struct list<CFileRef, std::__1::allocator<CFileRef>> {
    struct __list_node_base<CFileRef, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CFileRef, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<CTrack *, std::__1::allocator<CTrack *>> {
    struct __list_node_base<CTrack *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CTrack *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<TCollapsedOverviewObject, std::__1::allocator<TCollapsedOverviewObject>>;

struct list<unsigned char, std::__1::allocator<unsigned char>> {
    struct __list_node_base<unsigned char, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned char, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> {
    struct __tree<std::__1::__value_type<LgPluginID, float>, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, float>, std::__1::less<LgPluginID>, true>, std::__1::allocator<std::__1::__value_type<LgPluginID, float>>> {
        struct __tree_node<std::__1::__value_type<LgPluginID, float>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<LgPluginID, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, float>, std::__1::less<LgPluginID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<LgPluginID, short, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, short>>> {
    struct __tree<std::__1::__value_type<LgPluginID, short>, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, short>, std::__1::less<LgPluginID>, true>, std::__1::allocator<std::__1::__value_type<LgPluginID, short>>> {
        struct __tree_node<std::__1::__value_type<LgPluginID, short>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<LgPluginID, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, short>, std::__1::less<LgPluginID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<MDSampler *, int, std::__1::less<MDSampler *>, std::__1::allocator<std::__1::pair<MDSampler *const, int>>> {
    struct __tree<std::__1::__value_type<MDSampler *, int>, std::__1::__map_value_compare<MDSampler *, std::__1::__value_type<MDSampler *, int>, std::__1::less<MDSampler *>, true>, std::__1::allocator<std::__1::__value_type<MDSampler *, int>>> {
        struct __tree_node<std::__1::__value_type<MDSampler *, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MDSampler *, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<MDSampler *, std::__1::__value_type<MDSampler *, int>, std::__1::less<MDSampler *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TAbsPureClock, RegionPositionCacheEntry, std::__1::less<TAbsPureClock>, std::__1::allocator<std::__1::pair<const TAbsPureClock, RegionPositionCacheEntry>>> {
    struct __tree<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::__map_value_compare<TAbsPureClock, std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::less<TAbsPureClock>, true>, std::__1::allocator<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>>> {
        struct __tree_node<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TAbsPureClock, std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::less<TAbsPureClock>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TAutomationEventDescriptor, TAutomationEvent, std::__1::less<TAutomationEventDescriptor>, std::__1::allocator<std::__1::pair<const TAutomationEventDescriptor, TAutomationEvent>>>;

struct map<int, JobState_t, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, JobState_t>>> {
    struct __tree<std::__1::__value_type<int, JobState_t>, std::__1::__map_value_compare<int, std::__1::__value_type<int, JobState_t>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, JobState_t>>> {
        struct __tree_node<std::__1::__value_type<int, JobState_t>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, JobState_t>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, JobState_t>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> {
    struct __tree<std::__1::__value_type<int, const CEv *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, const CEv *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, const CEv *>>> {
        struct __tree_node<std::__1::__value_type<int, const CEv *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, const CEv *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, const CEv *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long long, DfRegion *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, DfRegion *>>> {
    struct __tree<std::__1::__value_type<long long, DfRegion *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, DfRegion *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, DfRegion *>>> {
        struct __tree_node<std::__1::__value_type<long long, DfRegion *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, DfRegion *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, DfRegion *>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, CGenDrumMapBase *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGenDrumMapBase *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, ProgressBarInfo, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, ProgressBarInfo>>> {
    struct __tree<std::__1::__value_type<unsigned long, ProgressBarInfo>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, ProgressBarInfo>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, ProgressBarInfo>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, ProgressBarInfo>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, ProgressBarInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, ProgressBarInfo>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<long long, DfEvent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, DfEvent *>>> {
    struct __tree<std::__1::__value_type<long long, DfEvent *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, DfEvent *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, DfEvent *>>> {
        struct __tree_node<std::__1::__value_type<long long, DfEvent *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, DfEvent *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, DfEvent *>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<float, float> {
    float _field1;
    float _field2;
};

struct set<TGInstID, std::__1::less<TGInstID>, std::__1::allocator<TGInstID>> {
    struct __tree<TGInstID, std::__1::less<TGInstID>, std::__1::allocator<TGInstID>> {
        struct __tree_node<TGInstID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TGInstID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TGInstID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct tColumn {
    id what;
    id what1;
    id what2;
    id how;
    id how1;
    id how2;
    struct TPROC *proc;
};

struct tMapGenData;

struct unique_ptr<CGenClaveCaches, std::__1::default_delete<CGenClaveCaches>> {
    struct __compressed_pair<CGenClaveCaches *, std::__1::default_delete<CGenClaveCaches>> {
        struct CGenClaveCaches *_field1;
    } _field1;
};

struct unique_ptr<CGenGenerator::GenerateRuntimeData, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> {
    struct __compressed_pair<CGenGenerator::GenerateRuntimeData *, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> {
        struct GenerateRuntimeData *_field1;
    } _field1;
};

struct unique_ptr<CGenGenerator::LuaStateCache, std::__1::default_delete<CGenGenerator::LuaStateCache>> {
    struct __compressed_pair<CGenGenerator::LuaStateCache *, std::__1::default_delete<CGenGenerator::LuaStateCache>> {
        struct LuaStateCache *_field1;
    } _field1;
};

struct unique_ptr<CGeneratorLibraryBundleLocations, std::__1::default_delete<CGeneratorLibraryBundleLocations>> {
    struct __compressed_pair<CGeneratorLibraryBundleLocations *, std::__1::default_delete<CGeneratorLibraryBundleLocations>> {
        struct CGeneratorLibraryBundleLocations *_field1;
    } _field1;
};

struct vector<CRegion *, std::__1::allocator<CRegion *>> {
    struct CRegion **_field1;
    struct CRegion **_field2;
    struct __compressed_pair<CRegion **, std::__1::allocator<CRegion *>> {
        struct CRegion **_field1;
    } _field3;
};

struct vector<CTrack, std::__1::allocator<CTrack>> {
    struct CTrack *_field1;
    struct CTrack *_field2;
    struct __compressed_pair<CTrack *, std::__1::allocator<CTrack>> {
        struct CTrack *_field1;
    } _field3;
};

struct vector<CVirtualTrack, std::__1::allocator<CVirtualTrack>> {
    struct CVirtualTrack *_field1;
    struct CVirtualTrack *_field2;
    struct __compressed_pair<CVirtualTrack *, std::__1::allocator<CVirtualTrack>> {
        struct CVirtualTrack *_field1;
    } _field3;
};

struct vector<MAMem2, std::__1::allocator<MAMem2>>;

struct vector<ScRgnContInfo, std::__1::allocator<ScRgnContInfo>> {
    struct ScRgnContInfo *_field1;
    struct ScRgnContInfo *_field2;
    struct __compressed_pair<ScRgnContInfo *, std::__1::allocator<ScRgnContInfo>> {
        struct ScRgnContInfo *_field1;
    } _field3;
};

struct vector<ScStaffRange, std::__1::allocator<ScStaffRange>>;

struct vector<ScVoice *, std::__1::allocator<ScVoice *>>;

struct vector<ScdpLinkSegm, std::__1::allocator<ScdpLinkSegm>> {
    struct ScdpLinkSegm *__begin_;
    struct ScdpLinkSegm *__end_;
    struct __compressed_pair<ScdpLinkSegm *, std::__1::allocator<ScdpLinkSegm>> {
        struct ScdpLinkSegm *__first_;
    } __end_cap_;
};

struct vector<ScdpStaffInfo, std::__1::allocator<ScdpStaffInfo>> {
    struct ScdpStaffInfo *__begin_;
    struct ScdpStaffInfo *__end_;
    struct __compressed_pair<ScdpStaffInfo *, std::__1::allocator<ScdpStaffInfo>> {
        struct ScdpStaffInfo *__first_;
    } __end_cap_;
};

struct vector<ScisLinkSegm_, std::__1::allocator<ScisLinkSegm_>> {
    struct ScisLinkSegm_ *__begin_;
    struct ScisLinkSegm_ *__end_;
    struct __compressed_pair<ScisLinkSegm_ *, std::__1::allocator<ScisLinkSegm_>> {
        struct ScisLinkSegm_ *__first_;
    } __end_cap_;
};

struct vector<TAbsPureClock, std::__1::allocator<TAbsPureClock>> {
    struct TAbsPureClock *_field1;
    struct TAbsPureClock *_field2;
    struct __compressed_pair<TAbsPureClock *, std::__1::allocator<TAbsPureClock>> {
        struct TAbsPureClock *_field1;
    } _field3;
};

struct vector<TEventInfo, std::__1::allocator<TEventInfo>> {
    struct TEventInfo *_field1;
    struct TEventInfo *_field2;
    struct __compressed_pair<TEventInfo *, std::__1::allocator<TEventInfo>> {
        struct TEventInfo *_field1;
    } _field3;
};

struct vector<TGridInfo, std::__1::allocator<TGridInfo>> {
    struct TGridInfo *_field1;
    struct TGridInfo *_field2;
    struct __compressed_pair<TGridInfo *, std::__1::allocator<TGridInfo>> {
        struct TGridInfo *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    char _field2;
    char _field3;
} CDStruct_d97e3966;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
} CDStruct_2c44b449;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long _field1;
    long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    _Bool _field6;
} CDStruct_41438994;

typedef struct {
    char name[24];
    unsigned int stringTuning[16];
    unsigned int validStrings;
    unsigned int capoPosition;
} CDStruct_c9c61e84;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
} CDStruct_0df1d01a;

typedef struct {
    char isValid;
    long long leftMin;
    long long leftMax;
    long long rightMin;
    long long rightMax;
    long long moveLeftMax;
    long long moveRightMax;
    int moveUpMax;
    int moveDownMax;
} CDStruct_0060c59e;

typedef struct {
    int genCtrlNr;
    unsigned char midiCh;
} CDStruct_5115be14;

typedef struct {
    int srcTimecodeMilliSec;
    int dstTimecodeMilliSec;
    short SMPTELockedEventsImportOption;
} CDStruct_eac64580;

typedef struct {
    int trackNr;
    int folderID;
} CDStruct_3d4e291e;

typedef struct {
    int Type;
    long long MidiRegionID;
    long long AudioFileID;
    long long AudioRegionID;
} CDStruct_ae571156;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    unsigned short _field10;
} CDStruct_66cc36f5;

typedef struct {
    long long _field1;
    long long _field2;
    int _field3;
} CDStruct_8a6d1c2f;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
} CDStruct_db489c38;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    int _field5;
    int _field6;
    long long _field7;
    char _field8;
} CDStruct_ff3c81cc;

typedef struct {
    long long x;
    long long y;
    long long w;
    long long h;
} CDStruct_1f562172;

typedef struct {
    long long beatsPerBar;
    long long beatDenom;
    long long formatDenom;
} CDStruct_e28e794b;

typedef struct {
    long long start;
    long long end;
} CDStruct_b40ec427;

typedef struct {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
    short _field10;
} CDStruct_25ec0c22;

typedef struct {
    float _field1[7];
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11[12];
    id _field12;
    id _field13;
    struct CGPoint _field14;
    id _field15[12];
    id _field16;
    id _field17;
    int _field18;
    struct CGSize _field19;
    float _field20;
    struct CGSize _field21;
} CDStruct_3f069a4a;

typedef struct {
    CDStruct_e28e794b _field1;
    int _field2;
    char _field3;
    int _field4;
} CDStruct_0a279e4b;

typedef struct {
    struct CGPoint pos;
    double time;
    struct TAbsPureClock clock;
    int isAForcedJump;
} CDStruct_3f0684ed;

typedef struct {
    struct TPosOneBasedTrackNr TrackID;
    int Folder;
    int Gindex;
    int GinstType;
    char IsMidiPlugin;
    int PluginSlot;
    struct TAuConfType DefaultType;
    char IsKitPieceSelection;
    char IsRightCSSelection;
    char IsHoneydew;
    char RightCSNote;
} CDStruct_9e44aee5;

typedef struct {
    double _field1;
    struct CGRect _field2;
    int _field3;
    long long _field4;
    long long _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
} CDStruct_e12519cf;

// Template types
typedef struct CFlagSet<TAssignPrintPartBits, 8> {
    struct bitset<8> _field1;
} CFlagSet_a167d792;

typedef struct auto_ptr<const IGenInstNoteNrHelper> {
    struct IGenInstNoteNrHelper *__ptr_;
} auto_ptr_9f8f0b23;

typedef struct bitset<4> {
    unsigned long long __first_;
} bitset_dc343b9a;

typedef struct list<CFileRef, std::__1::allocator<CFileRef>> {
    struct __list_node_base<CFileRef, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CFileRef, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_64efcd68;

typedef struct list<CTrack *, std::__1::allocator<CTrack *>> {
    struct __list_node_base<CTrack *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CTrack *, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_c34d0e69;

typedef struct set<TGInstID, std::__1::less<TGInstID>, std::__1::allocator<TGInstID>> {
    struct __tree<TGInstID, std::__1::less<TGInstID>, std::__1::allocator<TGInstID>> {
        struct __tree_node<TGInstID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TGInstID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TGInstID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_5dab13f5;

typedef struct vector<CRegion *, std::__1::allocator<CRegion *>> {
    struct CRegion **_field1;
    struct CRegion **_field2;
    struct __compressed_pair<CRegion **, std::__1::allocator<CRegion *>> {
        struct CRegion **_field1;
    } _field3;
} vector_e75b7d21;

typedef struct vector<CVirtualTrack, std::__1::allocator<CVirtualTrack>> {
    struct CVirtualTrack *_field1;
    struct CVirtualTrack *_field2;
    struct __compressed_pair<CVirtualTrack *, std::__1::allocator<CVirtualTrack>> {
        struct CVirtualTrack *_field1;
    } _field3;
} vector_e94a763c;

typedef struct vector<ScisLinkSegm_, std::__1::allocator<ScisLinkSegm_>> {
    struct ScisLinkSegm_ *__begin_;
    struct ScisLinkSegm_ *__end_;
    struct __compressed_pair<ScisLinkSegm_ *, std::__1::allocator<ScisLinkSegm_>> {
        struct ScisLinkSegm_ *__first_;
    } __end_cap_;
} vector_71404bd1;

typedef struct vector<TAbsPureClock, std::__1::allocator<TAbsPureClock>> {
    struct TAbsPureClock *_field1;
    struct TAbsPureClock *_field2;
    struct __compressed_pair<TAbsPureClock *, std::__1::allocator<TAbsPureClock>> {
        struct TAbsPureClock *_field1;
    } _field3;
} vector_92e605ca;

typedef struct vector<TGridInfo, std::__1::allocator<TGridInfo>> {
    struct TGridInfo *_field1;
    struct TGridInfo *_field2;
    struct __compressed_pair<TGridInfo *, std::__1::allocator<TGridInfo>> {
        struct TGridInfo *_field1;
    } _field3;
} vector_b720f2ec;

#pragma mark Typedef'd Unions

typedef union {
    short _field1[10];
    CDStruct_25ec0c22 _field2;
    CDStruct_25ec0c22 _field3;
    CDStruct_25ec0c22 _field4;
    CDStruct_25ec0c22 _field5;
    CDStruct_25ec0c22 _field6;
    char _field7[20];
    struct {
        short _field1;
        short _field2;
        short _field3;
        short _field4;
        short _field5;
        short _field6;
        short _field7[2];
        short _field8;
        short _field9;
    } _field8;
    CDStruct_25ec0c22 _field9;
    CDStruct_25ec0c22 _field10;
    CDStruct_25ec0c22 _field11;
    struct {
        short _field1;
        short _field2;
        short _field3;
        short _field4;
        short _field5[4];
        short _field6;
        short _field7;
    } _field12;
    CDStruct_25ec0c22 _field13;
} CDUnion_bcee5e8b;

typedef union {
    struct ScViewState *_field1;
    struct SAMVIEW *_field2;
} CDUnion_59bf9355;

