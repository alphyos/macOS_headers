//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSApplicationDelegate.h"
#import "NSWindowDelegate.h"

@class NSMenuItem, NSMutableArray, NSString, NSTimer, NSWindow, aboutController, advancedController, defaultsController, sparkleDelegate, taskViewController;

@interface kekaController : NSObject <NSApplicationDelegate, NSWindowDelegate>
{
    NSMutableArray *advancedObjects;
    advancedController *activeAdvancedWindow;
    struct KTaskAdvancedSettings partialSessionAdvancedSettings;
    defaultsController *defaultsObj;
    sparkleDelegate *sparkleObj;
    aboutController *aboutObj;
    BOOL firstActiveTime;
    BOOL ignoreActivation;
    BOOL ignoreTerminateAfterLastWindowClosed;
    BOOL checkedROOTAccess;
    BOOL activeApp;
    BOOL showPrompts;
    int launchTimes;
    BOOL quitting;
    BOOL autoExitActivated;
    BOOL skipOpenFilesTimer;
    NSTimer *openFilesTimer;
    NSMutableArray *openFilesList;
    NSMutableArray *tasks;
    int totalTasks;
    int activeTasks;
    int activeCompressionTasks;
    int activeExtractionTasks;
    int tasksNeedAttention;
    BOOL checkingTasksQueue;
    BOOL checkQueueAgain;
    BOOL deleteTarAfeterExtraction;
    int deleteTarAfeterExtractionId;
    int numberOfErrors;
    NSWindow *tasksWindow;
    taskViewController *tasksView;
    NSMenuItem *helpMenuItem;
    NSMenuItem *debugMenuItem;
    NSMenuItem *debugSessionMenuItem;
    NSMenuItem *enableDebugMenuItem;
    NSMenuItem *saveDebugMenuItem;
}

- (void)serviceDo:(int)arg1 for:(id)arg2;
- (void)serviceCompress:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)serviceExtract:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)serviceHandle:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)deleteOldServices;
- (void)finderExtensionErrorNotification:(id)arg1;
- (void)finderExtensionInputNotification:(id)arg1;
- (void)finderExtensionFromSharedDefaults;
- (void)finderExtensionExecuteOperation:(id)arg1;
- (void)finderExtensionDoAction:(int)arg1 forItems:(id)arg2;
- (void)startFinderExtension;
- (void)callExtraction:(id)arg1;
- (void)callExtractionWithChecks:(id)arg1;
- (BOOL)extractionChecks:(id)arg1;
- (void)callCompression:(id)arg1;
- (void)callCompressionWithChecks:(id)arg1;
- (BOOL)compressionChecks:(id)arg1;
- (void)callTasks:(id)arg1;
- (void)callTask:(id)arg1;
- (void)newTask:(id)arg1 type:(int)arg2;
- (void)newTask:(id)arg1;
- (id)newCompressionTaskWithFiles:(id)arg1;
- (void)saveSettingsInUse;
- (struct KTaskAdvancedSettings)getSettingsInUse;
- (struct KTaskAdvancedSettings *)getSettingsReferenceInUse;
- (struct KTaskAdvancedSettings)getSessionSettings;
- (BOOL)checkCompressionSettings;
- (void)openFiles:(id)arg1 fromFinderExtension:(BOOL)arg2;
- (void)openFiles:(id)arg1;
- (void)openFiles;
- (id)checkListOfFilesToExtract:(id)arg1;
- (BOOL)application:(id)arg1 openFiles:(id)arg2;
- (void)taskRetryPasswordShake;
- (void)listResized:(id)arg1;
- (void)showTasksWindow:(BOOL)arg1;
- (void)showTasksWindow;
- (void)timedShowTasksWindow;
- (void)tasksDelegate:(id)arg1;
- (void)waitForTasksToEnd;
- (void)finishTasks;
- (void)autoResumeTasks;
- (void)autoPauseTasks;
- (BOOL)runningTasksCheckCancelled:(BOOL)arg1;
- (BOOL)runningTasksNotCancelled;
- (BOOL)runningTasks;
- (BOOL)someTasks;
- (BOOL)visibleTasks;
- (BOOL)waitingForPasswordTasks;
- (void)resumeQueuedTask:(id)arg1;
- (void)taskFinished:(id)arg1;
- (void)taskStopped:(id)arg1;
- (void)taskReady:(id)arg1;
- (void)taskNeedsAttention:(id)arg1;
- (void)taskCanAskForPassword:(id)arg1;
- (void)activeTask:(int)arg1 didEnded:(BOOL)arg2;
- (void)updateQueueBadge;
- (BOOL)queueExtractionIsFull;
- (BOOL)queueExtractionLimitIsActive;
- (BOOL)queueCompressionIsFull;
- (BOOL)queueCompressionLimitIsActive;
- (BOOL)queueIsFull;
- (BOOL)queueLimitIsActive;
- (void)checkQueue;
- (id)getQueuedTasks;
- (int)getUnfinishedTasksCount;
- (id)getTasksCopy;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)taskWindowStateChanged;
- (BOOL)windowShouldClose:(id)arg1;
- (void)makeTaskWindowKeyOrOrderFront;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)welcomeWithAdvancedWindow;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)beforeQuit;
- (void)closeAllWindows;
- (BOOL)tasksFinishedBeforeQuit;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (BOOL)quitKeka;
- (BOOL)askToForceQuit;
- (void)autoQuit;
- (void)disableAutoExit;
- (void)tasksListClean;
- (void)compressLogs;
- (void)defaultAppDialog;
- (void)bounceFix;
- (void)userPrompts;
- (void)showLogsPath;
- (void)openLogsAction:(id)arg1;
- (void)saveDebugAction:(id)arg1;
- (void)enableDebugAction:(id)arg1;
- (void)createDebugSessionAction:(id)arg1;
- (void)printInitialDebugInfo;
- (void)releasePreferencesWindow;
- (void)openFileAccessPreferences;
- (void)closePreferencesWindow;
- (void)openPreferences;
- (void)preparePreferencesWindow;
- (void)closeAllAdvancedWindows;
- (void)releaseAdvancedWindow:(id)arg1;
- (void)newAdvancedWindow;
- (BOOL)openLastAdvancedWindow;
- (id)getActiveAdvancedWindow;
- (void)advancedWindowBecomeActive:(id)arg1;
- (id)applicationDockMenu:(id)arg1;
- (void)dockMenuSetFormat:(id)arg1;
- (void)dockMenuSetMethod:(id)arg1;
- (void)dockMenuSetAction:(id)arg1;
- (void)openAboutWindow:(id)arg1;
- (void)openTermsOfUseInBrowser:(id)arg1;
- (void)openPrivacyPolicyInBrowser:(id)arg1;
- (void)openHelpInBrowser:(id)arg1;
- (void)checkForUpdates:(id)arg1;
- (void)openPreferences:(id)arg1;
- (void)newAdvancedWindow:(id)arg1;
- (void)checkForUpdates;
- (void)enableAutomaticSparkleChecks:(id)arg1;
- (void)stopSparkle;
- (void)startSparkle;
- (id)assureSparkleObj;
- (void)openLovePreferences;
- (void)openLoveWebSection;
- (void)addLoveMenu;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

