//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "NSWindowDelegate.h"

@class KIntegerTextField, NSButton, NSMenu, NSPanel, NSPopUpButton, NSSegmentedControl, NSStepper, NSString, NSTableView, NSTextField, NSTimer, NSToolbar, NSToolbarItem, NSView;

@interface defaultsController : NSWindowController <NSWindowDelegate>
{
    id parentController;
    BOOL chargingDefaults;
    float localizationWidthFix;
    BOOL defaultAppSheetAlert;
    BOOL windowOpened;
    NSPanel *namePanel;
    BOOL limitChangedNotificationOn;
    NSTimer *limitChangedNotificationTimer;
    NSView *_generalView;
    NSView *_compressionView;
    NSView *_compressionNameView;
    NSView *_extractionView;
    NSView *_fileAccessView;
    NSView *_performanceView;
    NSView *_finderExtensionView;
    NSToolbar *_toolbar;
    NSToolbarItem *_generalToolbarItem;
    NSToolbarItem *_compressionToolbarItem;
    NSToolbarItem *_extractionToolbarItem;
    NSToolbarItem *_fileAccessToolbarItem;
    NSToolbarItem *_performanceToolbarItem;
    NSToolbarItem *_finderExtensionToolbarItem;
    NSToolbarItem *_loveToolbarItem;
    NSButton *_notificationsOption;
    NSButton *_unifiedToolbarOption;
    NSButton *_checkUpdatesOption;
    NSButton *_askCancelOption;
    NSButton *_closeOption;
    NSButton *_defaultApp;
    NSPopUpButton *_autoAction;
    NSTextField *_actionDescription;
    NSPopUpButton *_format;
    NSMenu *_formatMenu;
    NSPopUpButton *_method;
    NSButton *_single;
    NSButton *_AES256encryption;
    NSButton *_exclude;
    NSPopUpButton *_locationCompression;
    NSTextField *_locationCompressionDescription;
    NSButton *_deleteCompression;
    NSButton *_finderCompression;
    NSPopUpButton *_nameMenu;
    NSTextField *_customNameSingleFile;
    NSTextField *_customNameMultipleFiles;
    NSButton *_nameOKButton;
    NSButton *_nameCancelButton;
    NSButton *_nameParentOption;
    NSButton *_nameCustomWithMultipleFilesOption;
    NSPopUpButton *_soundCompression;
    NSPopUpButton *_keepExtensionSelector;
    NSButton *_bzip2DMGCompression;
    NSPopUpButton *_locationExtraction;
    NSTextField *_locationExtractionDescription;
    NSButton *_deleteExtraction;
    NSButton *_finderExtraction;
    NSButton *_quarantineExtraction;
    NSButton *_modificationDateExtraction;
    NSPopUpButton *_soundExtraction;
    NSButton *_removeBadPasswordExtraction;
    NSButton *_useIntermediateFolder;
    NSPopUpButton *_fallbackSelector;
    NSButton *_macAccess;
    NSButton *_volumesAccess;
    NSButton *_homeAccess;
    NSSegmentedControl *_fileAccessListControl;
    NSTableView *_fileAccessList;
    NSButton *_limitTotalOperations;
    KIntegerTextField *_limitTotalOperationsNumber;
    NSStepper *_limitTotalOperationsStepper;
    NSButton *_limitCompressionOperations;
    KIntegerTextField *_limitCompressionOperationsNumber;
    NSStepper *_limitCompressionOperationsStepper;
    NSButton *_limitExtractionOperations;
    KIntegerTextField *_limitExtractionOperationsNumber;
    NSStepper *_limitExtractionOperationsStepper;
    NSButton *_limitThreads;
    KIntegerTextField *_limitThreadsNumber;
    NSStepper *_limitThreadsStepper;
    NSButton *_enableFinderExtensionMenu;
    NSButton *_useFinderExtensionOnlyIfFileAccess;
    NSButton *_useSubMenuInFinderExtension;
    NSButton *_useOpenWithKekaInFinderExtension;
    NSButton *_showIconsInFinderExtensionMenu;
    NSButton *_showIconsInFinderExtensionSubMenu;
    NSButton *_finderExtensionEnableInSystemPreferences;
}

@property(retain, nonatomic) NSButton *finderExtensionEnableInSystemPreferences; // @synthesize finderExtensionEnableInSystemPreferences=_finderExtensionEnableInSystemPreferences;
@property(retain, nonatomic) NSButton *showIconsInFinderExtensionSubMenu; // @synthesize showIconsInFinderExtensionSubMenu=_showIconsInFinderExtensionSubMenu;
@property(retain, nonatomic) NSButton *showIconsInFinderExtensionMenu; // @synthesize showIconsInFinderExtensionMenu=_showIconsInFinderExtensionMenu;
@property(retain, nonatomic) NSButton *useOpenWithKekaInFinderExtension; // @synthesize useOpenWithKekaInFinderExtension=_useOpenWithKekaInFinderExtension;
@property(retain, nonatomic) NSButton *useSubMenuInFinderExtension; // @synthesize useSubMenuInFinderExtension=_useSubMenuInFinderExtension;
@property(retain, nonatomic) NSButton *useFinderExtensionOnlyIfFileAccess; // @synthesize useFinderExtensionOnlyIfFileAccess=_useFinderExtensionOnlyIfFileAccess;
@property(retain, nonatomic) NSButton *enableFinderExtensionMenu; // @synthesize enableFinderExtensionMenu=_enableFinderExtensionMenu;
@property(retain, nonatomic) NSStepper *limitThreadsStepper; // @synthesize limitThreadsStepper=_limitThreadsStepper;
@property(retain, nonatomic) KIntegerTextField *limitThreadsNumber; // @synthesize limitThreadsNumber=_limitThreadsNumber;
@property(retain, nonatomic) NSButton *limitThreads; // @synthesize limitThreads=_limitThreads;
@property(retain, nonatomic) NSStepper *limitExtractionOperationsStepper; // @synthesize limitExtractionOperationsStepper=_limitExtractionOperationsStepper;
@property(retain, nonatomic) KIntegerTextField *limitExtractionOperationsNumber; // @synthesize limitExtractionOperationsNumber=_limitExtractionOperationsNumber;
@property(retain, nonatomic) NSButton *limitExtractionOperations; // @synthesize limitExtractionOperations=_limitExtractionOperations;
@property(retain, nonatomic) NSStepper *limitCompressionOperationsStepper; // @synthesize limitCompressionOperationsStepper=_limitCompressionOperationsStepper;
@property(retain, nonatomic) KIntegerTextField *limitCompressionOperationsNumber; // @synthesize limitCompressionOperationsNumber=_limitCompressionOperationsNumber;
@property(retain, nonatomic) NSButton *limitCompressionOperations; // @synthesize limitCompressionOperations=_limitCompressionOperations;
@property(retain, nonatomic) NSStepper *limitTotalOperationsStepper; // @synthesize limitTotalOperationsStepper=_limitTotalOperationsStepper;
@property(retain, nonatomic) KIntegerTextField *limitTotalOperationsNumber; // @synthesize limitTotalOperationsNumber=_limitTotalOperationsNumber;
@property(retain, nonatomic) NSButton *limitTotalOperations; // @synthesize limitTotalOperations=_limitTotalOperations;
@property(retain, nonatomic) NSTableView *fileAccessList; // @synthesize fileAccessList=_fileAccessList;
@property(retain, nonatomic) NSSegmentedControl *fileAccessListControl; // @synthesize fileAccessListControl=_fileAccessListControl;
@property(retain, nonatomic) NSButton *homeAccess; // @synthesize homeAccess=_homeAccess;
@property(retain, nonatomic) NSButton *volumesAccess; // @synthesize volumesAccess=_volumesAccess;
@property(retain, nonatomic) NSButton *macAccess; // @synthesize macAccess=_macAccess;
@property(retain, nonatomic) NSPopUpButton *fallbackSelector; // @synthesize fallbackSelector=_fallbackSelector;
@property(retain, nonatomic) NSButton *useIntermediateFolder; // @synthesize useIntermediateFolder=_useIntermediateFolder;
@property(retain, nonatomic) NSButton *removeBadPasswordExtraction; // @synthesize removeBadPasswordExtraction=_removeBadPasswordExtraction;
@property(retain, nonatomic) NSPopUpButton *soundExtraction; // @synthesize soundExtraction=_soundExtraction;
@property(retain, nonatomic) NSButton *modificationDateExtraction; // @synthesize modificationDateExtraction=_modificationDateExtraction;
@property(retain, nonatomic) NSButton *quarantineExtraction; // @synthesize quarantineExtraction=_quarantineExtraction;
@property(retain, nonatomic) NSButton *finderExtraction; // @synthesize finderExtraction=_finderExtraction;
@property(retain, nonatomic) NSButton *deleteExtraction; // @synthesize deleteExtraction=_deleteExtraction;
@property(retain, nonatomic) NSTextField *locationExtractionDescription; // @synthesize locationExtractionDescription=_locationExtractionDescription;
@property(retain, nonatomic) NSPopUpButton *locationExtraction; // @synthesize locationExtraction=_locationExtraction;
@property(retain, nonatomic) NSButton *bzip2DMGCompression; // @synthesize bzip2DMGCompression=_bzip2DMGCompression;
@property(retain, nonatomic) NSPopUpButton *keepExtensionSelector; // @synthesize keepExtensionSelector=_keepExtensionSelector;
@property(retain, nonatomic) NSPopUpButton *soundCompression; // @synthesize soundCompression=_soundCompression;
@property(retain, nonatomic) NSButton *nameCustomWithMultipleFilesOption; // @synthesize nameCustomWithMultipleFilesOption=_nameCustomWithMultipleFilesOption;
@property(retain, nonatomic) NSButton *nameParentOption; // @synthesize nameParentOption=_nameParentOption;
@property(retain, nonatomic) NSButton *nameCancelButton; // @synthesize nameCancelButton=_nameCancelButton;
@property(retain, nonatomic) NSButton *nameOKButton; // @synthesize nameOKButton=_nameOKButton;
@property(retain, nonatomic) NSTextField *customNameMultipleFiles; // @synthesize customNameMultipleFiles=_customNameMultipleFiles;
@property(retain, nonatomic) NSTextField *customNameSingleFile; // @synthesize customNameSingleFile=_customNameSingleFile;
@property(retain, nonatomic) NSPopUpButton *nameMenu; // @synthesize nameMenu=_nameMenu;
@property(retain, nonatomic) NSButton *finderCompression; // @synthesize finderCompression=_finderCompression;
@property(retain, nonatomic) NSButton *deleteCompression; // @synthesize deleteCompression=_deleteCompression;
@property(retain, nonatomic) NSTextField *locationCompressionDescription; // @synthesize locationCompressionDescription=_locationCompressionDescription;
@property(retain, nonatomic) NSPopUpButton *locationCompression; // @synthesize locationCompression=_locationCompression;
@property(retain, nonatomic) NSButton *exclude; // @synthesize exclude=_exclude;
@property(retain, nonatomic) NSButton *AES256encryption; // @synthesize AES256encryption=_AES256encryption;
@property(retain, nonatomic) NSButton *single; // @synthesize single=_single;
@property(retain, nonatomic) NSPopUpButton *method; // @synthesize method=_method;
@property(retain, nonatomic) NSMenu *formatMenu; // @synthesize formatMenu=_formatMenu;
@property(retain, nonatomic) NSPopUpButton *format; // @synthesize format=_format;
@property(retain, nonatomic) NSTextField *actionDescription; // @synthesize actionDescription=_actionDescription;
@property(retain, nonatomic) NSPopUpButton *autoAction; // @synthesize autoAction=_autoAction;
@property(retain, nonatomic) NSButton *defaultApp; // @synthesize defaultApp=_defaultApp;
@property(retain, nonatomic) NSButton *closeOption; // @synthesize closeOption=_closeOption;
@property(retain, nonatomic) NSButton *askCancelOption; // @synthesize askCancelOption=_askCancelOption;
@property(retain, nonatomic) NSButton *checkUpdatesOption; // @synthesize checkUpdatesOption=_checkUpdatesOption;
@property(retain, nonatomic) NSButton *unifiedToolbarOption; // @synthesize unifiedToolbarOption=_unifiedToolbarOption;
@property(retain, nonatomic) NSButton *notificationsOption; // @synthesize notificationsOption=_notificationsOption;
@property(retain, nonatomic) NSToolbarItem *loveToolbarItem; // @synthesize loveToolbarItem=_loveToolbarItem;
@property(retain, nonatomic) NSToolbarItem *finderExtensionToolbarItem; // @synthesize finderExtensionToolbarItem=_finderExtensionToolbarItem;
@property(retain, nonatomic) NSToolbarItem *performanceToolbarItem; // @synthesize performanceToolbarItem=_performanceToolbarItem;
@property(retain, nonatomic) NSToolbarItem *fileAccessToolbarItem; // @synthesize fileAccessToolbarItem=_fileAccessToolbarItem;
@property(retain, nonatomic) NSToolbarItem *extractionToolbarItem; // @synthesize extractionToolbarItem=_extractionToolbarItem;
@property(retain, nonatomic) NSToolbarItem *compressionToolbarItem; // @synthesize compressionToolbarItem=_compressionToolbarItem;
@property(retain, nonatomic) NSToolbarItem *generalToolbarItem; // @synthesize generalToolbarItem=_generalToolbarItem;
@property(retain, nonatomic) NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) NSView *finderExtensionView; // @synthesize finderExtensionView=_finderExtensionView;
@property(retain, nonatomic) NSView *performanceView; // @synthesize performanceView=_performanceView;
@property(retain, nonatomic) NSView *fileAccessView; // @synthesize fileAccessView=_fileAccessView;
@property(retain, nonatomic) NSView *extractionView; // @synthesize extractionView=_extractionView;
@property(retain, nonatomic) NSView *compressionNameView; // @synthesize compressionNameView=_compressionNameView;
@property(retain, nonatomic) NSView *compressionView; // @synthesize compressionView=_compressionView;
@property(retain, nonatomic) NSView *generalView; // @synthesize generalView=_generalView;
- (void)showIconsInFinderExtensionSubMenu:(id)arg1;
- (void)showIconsInFinderExtensionMenu:(id)arg1;
- (void)useSubMenuInFinderExtension:(id)arg1;
- (void)useOpenWithKekaInFinderExtension:(id)arg1;
- (void)useFinderExtensionOnlyIfFileAccess:(id)arg1;
- (void)enableFinderExtensionMenu:(id)arg1;
- (void)enableFinderExtensionMenuCheckUpdated:(BOOL)arg1;
- (void)callFinderExtensionToUpdateConfiguration;
- (void)enableFinderExtensionInSystemPreferences;
- (void)checkFinderExtensionStatus;
- (void)limitMaximumThreads:(id)arg1;
- (void)limitThreads:(id)arg1;
- (void)limitExtractionOperationsLimit:(id)arg1;
- (void)limitExtractionOperations:(id)arg1;
- (void)limitCompressionOperationsLimit:(id)arg1;
- (void)limitCompressionOperations:(id)arg1;
- (void)limitTotalOperationsLimit:(id)arg1;
- (void)limitTotalOperations:(id)arg1;
- (void)limitCheckChangedState:(BOOL)arg1 numberField:(id)arg2;
- (void)scheduleLimitChangedNotification;
- (void)timedLimitChangedNotification;
- (void)setPerformaceSteppers;
- (void)refreshFileAccessView;
- (void)addOrRemoveFromFileAccessList:(id)arg1;
- (void)addRecommendedAccess:(id)arg1;
- (void)removeFileAccessItem:(long long)arg1;
- (void)removeSelectedFileAccessItems;
- (void)removeClickedFileAccessItem;
- (void)showListItemOnFinder;
- (void)setFallbackPath:(id)arg1;
- (void)useIntermediateFolder:(id)arg1;
- (void)removeBadPasswordExtraction:(id)arg1;
- (void)soundExtraction:(id)arg1;
- (void)modificationDateExtraction:(id)arg1;
- (void)quarantineExtraction:(id)arg1;
- (void)finderExtraction:(id)arg1;
- (void)deleteExtraction:(id)arg1;
- (void)locationExtractionDescriptionString;
- (void)locationExtraction:(id)arg1;
- (void)bzip2DMGCompression:(id)arg1;
- (void)keepExtension:(id)arg1;
- (void)soundCompression:(id)arg1;
- (void)finderCompression:(id)arg1;
- (void)deleteCompression:(id)arg1;
- (void)single:(id)arg1;
- (void)AES256excryption:(id)arg1;
- (void)nameCustomWithMultipleFilesAction:(id)arg1;
- (void)nameParentAction:(id)arg1;
- (void)nameParentSetAvailable;
- (void)namePanelResult:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)nameMenu:(id)arg1;
- (void)nameSet;
- (void)nameMenuOptionSet:(int)arg1;
- (void)locationCompressionDescriptionString;
- (void)locationCompression:(id)arg1;
- (void)exclude:(id)arg1;
- (void)method:(id)arg1;
- (void)format:(id)arg1;
- (void)setAutoActionDescription;
- (void)autoAction:(id)arg1;
- (void)updateSelectedAction;
- (void)closeOption:(id)arg1;
- (void)askCancelOption:(id)arg1;
- (void)checkUpdates:(id)arg1;
- (void)unifiedToolbar:(id)arg1;
- (void)useNotifications:(id)arg1;
- (void)defaultApp:(id)arg1;
- (void)defaultAppExecute:(BOOL)arg1;
- (void)defaultAppButtonPushed:(id)arg1;
- (void)defaultAppExecuteHelper:(id)arg1;
- (void)defaultAppDelegate:(id)arg1;
- (void)defaultAppAlert:(id)arg1 setInformativeText:(id)arg2 setStyle:(int)arg3;
- (void)addLocationToMenu:(id)arg1 addPath:(id)arg2;
- (void)removeCustomLocationFromMenu:(id)arg1;
- (void)defaultsDelegate:(id)arg1;
- (void)toolbarAction:(id)arg1;
- (void)showLoveView;
- (void)showFileAccessView;
- (void)resizeToFitToolbarItems;
- (void)increaseWindowWithIncrement:(int)arg1;
- (void)openPreferencesWindow;
- (void)afterAwakeFromNib;
- (void)awakeFromNib;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)isWindowOpened;
- (BOOL)isKeyWindow;
- (void)setParentController:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

