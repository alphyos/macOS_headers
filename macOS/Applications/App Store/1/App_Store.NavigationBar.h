//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import "NSScrollViewDelegate-Protocol.h"

@class NSButton, NSScrollView, NSString;

@interface App_Store.NavigationBar : NSView <NSScrollViewDelegate>
{
    // Error parsing type: , name: layoutMargins
    // Error parsing type: , name: spacing
    // Error parsing type: , name: wantsRevealOnMouseOver
    // Error parsing type: , name: delegate
    // Error parsing type: , name: backButton
    // Error parsing type: , name: backgroundView
    // Error parsing type: , name: titleAlpha
    // Error parsing type: , name: titleView
    // Error parsing type: , name: accessoriesFollowLargeTitle
    // Error parsing type: , name: accessoriesAlpha
    // Error parsing type: , name: leadingView
    // Error parsing type: , name: trailingView
    // Error parsing type: , name: largeTitlePaletteView
    // Error parsing type: , name: snapToLargeTitle
    // Error parsing type: , name: isLargeTitleHidden
    // Error parsing type: , name: percentageLargeTitleVisible
    // Error parsing type: , name: largeTitleScrollObserver
    // Error parsing type: , name: automaticallySetsScrollView
    // Error parsing type: , name: scrollView
    // Error parsing type: , name: layoutDependencies
    // Error parsing type: , name: revealTrackingArea
    // Error parsing type: , name: axSettings
}

+ (id)makeBackButton;
+ (struct CGSize)backButtonSize;
+ (double)revealMouseTrackingSlop;
+ (double)largeTitleHiddenMinPercent;
+ (double)intrinsicHeight;
+ (id)standard;
- (CDUnknownBlockType).cxx_destruct;
- (void)scrollViewBeganMomentum:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(struct CGPoint *)arg3;
- (void)setAccessibilityFocused:(BOOL)arg1;
@property(nonatomic, readonly) BOOL acceptsFirstResponder;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityTitleUIElement;
- (id)accessibilityChildrenInNavigationOrder;
- (id)accessibilityChildren;
- (id)accessibilityRole;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)isAccessibilityElement;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)updateTrackingAreas;
- (void)layout;
- (struct CGRect)preferredFrameWithin:(struct CGRect)arg1 isFlipped:(BOOL)arg2;
@property(nonatomic, readonly) struct CGRect contentFrame;
@property(nonatomic, readonly) struct CGRect backgroundFrame;
@property(nonatomic, readonly) struct NSEdgeInsets safeAreaInsets;
- (BOOL)isFlipped;
- (struct JEMeasurements)measurementsWithFitting:(struct CGSize)arg1 in:(id)arg2;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
@property(nonatomic, readonly) double contentInsetTop;
- (void)invalidateIntrinsicContentSize;
- (void)viewDidMoveToSuperview;
- (void)takeStateFrom:(id)arg1;
@property(nonatomic, retain) NSScrollView *scrollView; // @synthesize scrollView;
@property(nonatomic) BOOL automaticallySetsScrollView; // @synthesize automaticallySetsScrollView;
@property(nonatomic) BOOL snapToLargeTitle; // @synthesize snapToLargeTitle;
@property(nonatomic, retain) NSView *largeTitleView;
@property(nonatomic, retain) NSView *trailingView; // @synthesize trailingView;
@property(nonatomic, retain) NSView *leadingView; // @synthesize leadingView;
@property(nonatomic) double accessoriesAlpha; // @synthesize accessoriesAlpha;
@property(nonatomic) BOOL accessoriesFollowLargeTitle; // @synthesize accessoriesFollowLargeTitle;
@property(nonatomic, retain) NSView *titleView; // @synthesize titleView;
@property(nonatomic) double titleAlpha; // @synthesize titleAlpha;
@property(nonatomic, retain) NSView *backgroundView; // @synthesize backgroundView;
@property(nonatomic, readonly) NSButton *backButton; // @synthesize backButton;
@property(nonatomic) BOOL wantsRevealOnMouseOver; // @synthesize wantsRevealOnMouseOver;
@property(nonatomic) double spacing; // @synthesize spacing;
@property(nonatomic) struct NSEdgeInsets layoutMargins; // @synthesize layoutMargins;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setLargeTitleAccessoryView:(id)arg1;
- (void)setTrailingViews:(id)arg1;
- (void)setLeadingViews:(id)arg1;
@property(nonatomic) BOOL wantsLargeTitle;
@property(nonatomic, copy) NSString *title;

// Remaining properties
@property(nonatomic, readonly) BOOL flipped;

@end

