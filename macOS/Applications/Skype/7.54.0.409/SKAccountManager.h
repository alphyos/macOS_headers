//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSError, NSString, NSTimer, SKAccount, SKSession;
@protocol SKAccountManagerLoginDelegate;

@interface SKAccountManager : NSObject
{
    BOOL _didHandleINITIALIZING;
    BOOL _didHandleLOGGED_OUT;
    BOOL _didSuccessfullyLogIn;
    BOOL _didPostLogoutDidBeginNotification;
    BOOL _isUpgradingDB;
    BOOL _isRegisteringAccount;
    SKAccount *_currentAccount;
    unsigned long long _lastLogoutReason;
    unsigned long long _loginSource;
    NSString *_failedMSAScope;
    NSString *_logoutRefreshToken;
    SKAccount *_sessionAccount;
    SKSession *_session;
    NSError *_underlyingLogoutError;
    id <SKAccountManagerLoginDelegate> _loginDelegate;
    NSTimer *_loginProgressTimer;
    NSTimer *_waitForContactsSyncTimer;
    unsigned long long _loginType;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)sharedManager;
+ (long long)maximumProfileFieldLengthInBytesForPropertyKey:(id)arg1;
+ (BOOL)validateUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;
+ (BOOL)validateProfileFieldWithPropertyKey:(id)arg1 value:(id)arg2 forRegistration:(BOOL)arg3 error:(id *)arg4;
@property(nonatomic) BOOL isRegisteringAccount; // @synthesize isRegisteringAccount=_isRegisteringAccount;
@property(nonatomic) BOOL isUpgradingDB; // @synthesize isUpgradingDB=_isUpgradingDB;
@property(nonatomic) BOOL didPostLogoutDidBeginNotification; // @synthesize didPostLogoutDidBeginNotification=_didPostLogoutDidBeginNotification;
@property(nonatomic) BOOL didSuccessfullyLogIn; // @synthesize didSuccessfullyLogIn=_didSuccessfullyLogIn;
@property(nonatomic) BOOL didHandleLOGGED_OUT; // @synthesize didHandleLOGGED_OUT=_didHandleLOGGED_OUT;
@property(nonatomic) BOOL didHandleINITIALIZING; // @synthesize didHandleINITIALIZING=_didHandleINITIALIZING;
@property(nonatomic) unsigned long long loginType; // @synthesize loginType=_loginType;
@property(nonatomic) __weak NSTimer *waitForContactsSyncTimer; // @synthesize waitForContactsSyncTimer=_waitForContactsSyncTimer;
@property(nonatomic) __weak NSTimer *loginProgressTimer; // @synthesize loginProgressTimer=_loginProgressTimer;
@property(nonatomic) __weak id <SKAccountManagerLoginDelegate> loginDelegate; // @synthesize loginDelegate=_loginDelegate;
@property(retain, nonatomic) NSError *underlyingLogoutError; // @synthesize underlyingLogoutError=_underlyingLogoutError;
@property(retain, nonatomic) SKSession *session; // @synthesize session=_session;
@property(retain, nonatomic) SKAccount *sessionAccount; // @synthesize sessionAccount=_sessionAccount;
@property(retain) NSString *logoutRefreshToken; // @synthesize logoutRefreshToken=_logoutRefreshToken;
@property(retain) NSString *failedMSAScope; // @synthesize failedMSAScope=_failedMSAScope;
@property(nonatomic) unsigned long long loginSource; // @synthesize loginSource=_loginSource;
@property(nonatomic) unsigned long long lastLogoutReason; // @synthesize lastLogoutReason=_lastLogoutReason;
@property(retain, nonatomic) SKAccount *currentAccount; // @synthesize currentAccount=_currentAccount;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)clearRemoteLogoutInfo;
- (void)onRemoteLogout:(unsigned long long)arg1 failedMSAScope:(id)arg2 refreshToken:(id)arg3;
- (void)_finishDidLogout;
- (void)_processDidLogout;
- (void)_setUnderlyingLogoutError:(id)arg1;
- (void)_loginDidFailWithError:(id)arg1;
- (void)_loginDidFinish;
- (void)_commonCleanup;
- (void)_addEcho123Buddy;
- (void)_waitForContactsSyncTimer:(id)arg1;
- (void)_accountDidStopContactsSync;
- (void)_accountDidStartContactsSync;
- (void)contactManagerDidLoadNotification:(id)arg1;
- (void)_loginProgressTimer:(id)arg1;
- (void)_loginWillFinish;
- (void)_loginDidChangeStatus:(id)arg1;
- (void)_loginDidBegin;
- (void)_performLogout;
- (void)performLogout;
- (BOOL)canLogout;
- (void)performLoginWithAccount:(id)arg1 partnerID:(unsigned long long)arg2 token:(id)arg3 refreshToken:(id)arg4 savePassword:(BOOL)arg5 saveDataLocally:(BOOL)arg6 delegate:(id)arg7;
- (void)performLoginWithAccount:(id)arg1 delegate:(id)arg2;
- (void)performLoginWithAccount:(id)arg1 password:(id)arg2 savePassword:(BOOL)arg3 delegate:(id)arg4;
@property(readonly, nonatomic) NSArray *existingAccountIdentities;
- (void)_setSessionAccount:(id)arg1;
- (void)dealloc;
- (id)init;

@end

