//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IdleMonitorDelegate-Protocol.h"
#import "PowerSourceMonitorDelegate-Protocol.h"

@class CPULoadInfo, IdleMonitor, NSDate, NSMutableDictionary, NSString, PowerSourceMonitor, SKDispatcher, SKFTIFetchItemsContext, SKIndexBundle;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source;

@interface SKFullTextIndexer : NSObject <IdleMonitorDelegate, PowerSourceMonitorDelegate>
{
    SKDispatcher *_dispatcher;
    NSObject<OS_dispatch_queue> *_mainIndexerQueue;
    NSObject<OS_dispatch_queue> *_textIndexingSubQueue;
    NSObject<OS_dispatch_group> *_indexingGroup;
    NSObject<OS_dispatch_semaphore> *_indexingSemaphore;
    NSObject<OS_dispatch_source> *_coalescingFlushTimer;
    NSObject<OS_dispatch_source> *_delayedFlushTimer;
    NSMutableDictionary *_indexProperties;
    long long _queueSuspensionCount;
    BOOL _indexing;
    BOOL _indexingAllowed;
    BOOL _canUpdateMaxIndexedObjectID;
    float _indexingProgress;
    unsigned int _currentMaxIndexedObjectID;
    struct __SKIndex *_currentIndex;
    unsigned long long _indexedCount;
    unsigned long long _indexableCount;
    unsigned long long _indexingBatchSize;
    SKIndexBundle *_currentIndexBundle;
    unsigned long long _numberOfIndexBatches;
    SKFTIFetchItemsContext *_indexingContext;
    SKFTIFetchItemsContext *_unindexingContext;
    CPULoadInfo *_cpuLoadInfo;
    IdleMonitor *_idleMonitor;
    NSDate *_idleBeginDate;
    PowerSourceMonitor *_powerSourceMonitor;
}

+ (BOOL)canIndexMessageItem:(id)arg1;
+ (id)messageIndexURLForItem:(id)arg1;
+ (id)conversationIndexURLForItem:(id)arg1;
+ (id)indexBaseURL;
+ (id)acceptedMessageTypes;
+ (id)sharedIndexer;
@property(retain) PowerSourceMonitor *powerSourceMonitor; // @synthesize powerSourceMonitor=_powerSourceMonitor;
@property(retain) NSDate *idleBeginDate; // @synthesize idleBeginDate=_idleBeginDate;
@property(retain) IdleMonitor *idleMonitor; // @synthesize idleMonitor=_idleMonitor;
@property(retain) CPULoadInfo *cpuLoadInfo; // @synthesize cpuLoadInfo=_cpuLoadInfo;
@property unsigned int currentMaxIndexedObjectID; // @synthesize currentMaxIndexedObjectID=_currentMaxIndexedObjectID;
@property BOOL canUpdateMaxIndexedObjectID; // @synthesize canUpdateMaxIndexedObjectID=_canUpdateMaxIndexedObjectID;
@property(retain) SKFTIFetchItemsContext *unindexingContext; // @synthesize unindexingContext=_unindexingContext;
@property(retain) SKFTIFetchItemsContext *indexingContext; // @synthesize indexingContext=_indexingContext;
@property unsigned long long numberOfIndexBatches; // @synthesize numberOfIndexBatches=_numberOfIndexBatches;
@property(copy) SKIndexBundle *currentIndexBundle; // @synthesize currentIndexBundle=_currentIndexBundle;
@property unsigned long long indexingBatchSize; // @synthesize indexingBatchSize=_indexingBatchSize;
@property unsigned long long indexableCount; // @synthesize indexableCount=_indexableCount;
@property unsigned long long indexedCount; // @synthesize indexedCount=_indexedCount;
@property BOOL indexingAllowed; // @synthesize indexingAllowed=_indexingAllowed;
@property struct __SKIndex *currentIndex; // @synthesize currentIndex=_currentIndex;
@property float indexingProgress; // @synthesize indexingProgress=_indexingProgress;
@property(getter=isIndexing) BOOL indexing; // @synthesize indexing=_indexing;
- (void).cxx_destruct;
- (void)handleIndexingChanged;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingIndexer;
- (void)startObservingIndexer;
- (void)externalPowerSourceDidDisconnect:(id)arg1;
- (void)externalPowerSourceDidConnect:(id)arg1;
- (void)idleMonitorUserDidStopIdling:(id)arg1;
- (void)idleMonitorUserDidStartIdling:(id)arg1;
- (void)reindexMessageForNotification:(id)arg1;
- (void)unindexMessageForNotification:(id)arg1;
- (void)handleStartingNotification:(id)arg1;
- (void)handleStoppingNotification:(id)arg1;
- (void)clearIndex;
- (void)changeNameOfDocument:(void *)arg1 toName:(id)arg2;
- (void)unindexConversationItem:(id)arg1;
- (void)unindexMessageItem:(id)arg1;
- (void)_unindexItemWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)indexMessageItem:(id)arg1;
- (void)enumerateMessageItemsWithDeltaTypes:(id)arg1 withContext:(id)arg2 withBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_startIndexingWithIndexBundle:(id)arg1;
- (CDUnknownBlockType)_enumarateBlockForIndexingType:(unsigned long long)arg1;
- (void)_computeDeltaDictionaries;
- (void)_computeDeltaUnindexingDictionary;
- (void)_computeDeltaIndexingDictionary;
- (void)closeIndex;
- (void)suspendIndexing;
- (void)resumeIndexing;
- (void)setIndexBundleLocation:(id)arg1;
- (void)_deleteAndLogURL:(id)arg1 ofType:(id)arg2;
- (void)_cleanUpOldIndexIfExistsForIndexBundle:(id)arg1;
- (void)_cancelScheduledFlushing;
- (void)_scheduleFlushing;
- (void)_flushIndex;
@property(readonly) NSMutableDictionary *indexProperties;
- (void)_resetIndexPropertiesIfNeeded;
- (BOOL)_buildIndexBundle:(id)arg1;
@property(retain) NSMutableDictionary *deltaUnindexingDictionary;
@property(retain) NSMutableDictionary *deltaIndexingDictionary;
- (void)dealloc;
- (id)initWithDispatcher:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

