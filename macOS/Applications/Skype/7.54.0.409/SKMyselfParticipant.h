//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "SKParticipant.h"

@class NSMutableDictionary, NSMutableSet, SKVideo;

@interface SKMyselfParticipant : SKParticipant
{
    SKVideo *_videoSend;
    SKVideo *_screenshareSend;
    NSMutableDictionary *_videoToPreviewMap;
    SKVideo *_videoPreview;
    SKVideo *_screensharePreview;
    NSMutableSet *_stoppingVideos;
    NSMutableSet *_videosToAttach;
    struct CGRect _screensharingCaptureRect;
    unsigned long long _screensharingCaptureWindow;
    long long _autostartMediaType;
    long long _lastAutostartMediaType;
    BOOL _startVideoWhenStoppingScreenSharing;
    BOOL _canSendMultipleStreams;
    BOOL _isObservingVideoDevicesNotifications;
    BOOL _isObservingPreviews;
}

+ (id)previewKeyPathsToObserve;
@property(readonly, nonatomic) BOOL isObservingVideoDevicesNotifications; // @synthesize isObservingVideoDevicesNotifications=_isObservingVideoDevicesNotifications;
- (void).cxx_destruct;
- (void)handleParticipantBecameNonLive;
- (void)handleParticipantBecameLive;
- (BOOL)isMyself;
- (void)dealloc;
- (id)initWithSkyLibObjectID:(unsigned int)arg1;
- (void)didResumeVideo:(id)arg1;
- (void)didPauseVideo:(id)arg1;
- (void)didStopVideo:(id)arg1;
- (void)willStopVideo:(id)arg1;
- (void)didStartVideo:(id)arg1;
- (void)clearLiveSessionState;
- (void)applyLiveSessionState:(id)arg1;
- (id)liveSessionState;
- (BOOL)shouldAutostartVideo:(id)arg1;
- (void)handleConversationLiveStatusChanged;
- (void)handleSelectedDeviceChanged:(id)arg1;
- (id)_fetchStreams;
- (void)toggleSendVideo;
- (void)stopVideoForMediaType:(long long)arg1;
- (void)startVideoForMediaType:(long long)arg1;
- (void)startVideo:(id)arg1;
- (id)_sendVideoForMediaType:(long long)arg1;
- (void)updateVideoObjects;
- (void)_syncVideoObjectsWithIDs:(id)arg1;
- (void)willRemoveVideoObjects:(id)arg1;
- (BOOL)canClearDelegateForVideo:(id)arg1;
- (void)didAddVideoObjects:(id)arg1;
- (id)_makeVideoForObjectID:(unsigned int)arg1;
- (id)existingVideoForMediaType:(long long)arg1;
- (id)existingVideoForMediaType:(long long)arg1 device:(id)arg2;
- (void)updatePreviewObjects;
- (BOOL)canPrestartPreviewForMediaType:(long long)arg1;
- (id)previewObjectForVideo:(id)arg1;
- (id)_makePreviewVideoForMediaType:(long long)arg1;
- (void)setVideo:(id)arg1 forMediaType:(long long)arg2;
- (void)setStoppingVideos:(id)arg1;
- (id)stoppingVideos;
- (id)videoToPreviewMap;
- (void)setVideoToPreviewMap:(id)arg1;
@property(readonly, nonatomic) SKVideo *screensharePreview;
- (void)setScreensharePreview:(id)arg1;
@property(readonly, nonatomic) SKVideo *screenshareSend;
- (void)setScreenshareSend:(id)arg1;
@property(readonly, nonatomic) SKVideo *videoPreview;
- (void)setVideoPreview:(id)arg1;
@property(readonly, nonatomic) SKVideo *videoSend;
- (void)setVideoSend:(id)arg1;
@property(nonatomic) struct CGRect screensharingCaptureRect;
@property(nonatomic) unsigned long long screensharingCaptureWindow;
@property(nonatomic) BOOL canSendMultipleStreams;
@property(readonly, nonatomic) BOOL shouldAutostartScreensharingNextTime;
@property(readonly, nonatomic) BOOL shouldAutostartVideoNextTime;
@property(readonly, nonatomic) long long lastAutostartMediaType;
@property(nonatomic) long long autostartMediaType;
@property(nonatomic, getter=shouldStartVideoWhenStoppingScreenSharing) BOOL startVideoWhenStoppingScreenSharing;
- (BOOL)isPendingRestart;
- (void)setPendingRestart:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofVideo:(id)arg2 change:(id)arg3;
- (void)stopObservingPreviews;
- (void)startObservingPreviews;

@end

