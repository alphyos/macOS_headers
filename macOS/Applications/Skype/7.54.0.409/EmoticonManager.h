//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "EmoticonManagerCloudSource-Protocol.h"
#import "EmoticonManagerRecentlyUsed-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString;
@protocol OS_dispatch_queue;

@interface EmoticonManager : NSObject <EmoticonManagerRecentlyUsed, EmoticonManagerCloudSource>
{
    BOOL _needsToClearEmoticonMappings;
    double _animationFrameDuration;
    unsigned long long _emoticonDisplayStyle;
    unsigned long long _emoticonSource;
    NSMutableDictionary *_emoticonIdentifierToEmoticonMap;
    NSMutableSet *_requestedSingleEmoticonIdentifiers;
    NSMutableDictionary *_emoticonPackIdentifierToEmoticonsMap;
    NSMutableDictionary *_emoticonTabsToPacksMap;
    NSObject<OS_dispatch_queue> *_cloudEmoticonsQueue;
    NSObject<OS_dispatch_queue> *_emoticonManagerQueue;
    NSMutableArray *_allEmoticonTabs;
    NSMutableArray *_allDownloadTasks;
    NSNumber *_currentDownloadTaskContext;
}

+ (id)defaultManager;
+ (void)removeEmoticonCacheBundle;
+ (void)initialize;
@property(retain) NSNumber *currentDownloadTaskContext; // @synthesize currentDownloadTaskContext=_currentDownloadTaskContext;
@property(retain) NSMutableArray *allDownloadTasks; // @synthesize allDownloadTasks=_allDownloadTasks;
@property(retain) NSMutableArray *allEmoticonTabs; // @synthesize allEmoticonTabs=_allEmoticonTabs;
@property(retain) NSObject<OS_dispatch_queue> *emoticonManagerQueue; // @synthesize emoticonManagerQueue=_emoticonManagerQueue;
@property(retain) NSObject<OS_dispatch_queue> *cloudEmoticonsQueue; // @synthesize cloudEmoticonsQueue=_cloudEmoticonsQueue;
@property(retain) NSMutableDictionary *emoticonTabsToPacksMap; // @synthesize emoticonTabsToPacksMap=_emoticonTabsToPacksMap;
@property(retain) NSMutableDictionary *emoticonPackIdentifierToEmoticonsMap; // @synthesize emoticonPackIdentifierToEmoticonsMap=_emoticonPackIdentifierToEmoticonsMap;
@property(retain) NSMutableSet *requestedSingleEmoticonIdentifiers; // @synthesize requestedSingleEmoticonIdentifiers=_requestedSingleEmoticonIdentifiers;
@property(retain) NSMutableDictionary *emoticonIdentifierToEmoticonMap; // @synthesize emoticonIdentifierToEmoticonMap=_emoticonIdentifierToEmoticonMap;
@property BOOL needsToClearEmoticonMappings; // @synthesize needsToClearEmoticonMappings=_needsToClearEmoticonMappings;
@property unsigned long long emoticonSource; // @synthesize emoticonSource=_emoticonSource;
@property(nonatomic) unsigned long long emoticonDisplayStyle; // @synthesize emoticonDisplayStyle=_emoticonDisplayStyle;
@property(nonatomic) double animationFrameDuration; // @synthesize animationFrameDuration=_animationFrameDuration;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)videoEmoticonWithIdentifier:(id)arg1;
- (id)emoticonWithIdentifier:(id)arg1;
- (id)emoticonOrVideoEmoticonWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *allEmoticons;
- (id)emoticonTabsForEmoticonSet:(id)arg1;
- (id)smsEmoticonTab;
@property(readonly, nonatomic) NSArray *emoticonTabs;
- (id)recentlyUsedEmoticonPack;
- (id)recentlyUsedEmoticonTab;
- (id)emoticonsInAllTabsMap;
- (void)loadBakedInEmoticons;
- (void)dealloc;
- (id)init;
@property(nonatomic) BOOL showsVideoEmoticonWelcomeText;
@property(copy, nonatomic) NSString *selectedEmoticonPackIdentifier;
- (void)noteUserSelectedEmoticon:(id)arg1;
- (id)recentlyUsedEmoticonIdentifiers;
- (void)downloadEmoticonWithIdentifier:(id)arg1;
- (void)consumeEmoticonTab;
- (void)tryToConsumeOrDownload;
- (void)emoticonDownloadTaskChanged;
- (void)setUpEmoticonDownloadTasks;
- (void)loadCloudEmoticons;
- (void)teardownCloudEmoticonSource;
- (void)setupCloudEmoticonSource;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

