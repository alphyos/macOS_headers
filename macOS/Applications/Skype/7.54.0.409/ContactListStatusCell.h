//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "ContactListViewCell.h"

#import "NSAccessibility-Protocol.h"
#import "NSAccessibilityContainsTransientUI-Protocol.h"
#import "NSAccessibilityElement-Protocol.h"

@class GlyphButton, NSArray, NSAttributedString, NSLayoutConstraint, NSStackView, NSString, NSURL, NSView;

@interface ContactListStatusCell : ContactListViewCell <NSAccessibility, NSAccessibilityContainsTransientUI, NSAccessibilityElement>
{
    BOOL _groupSelectionNotPossible;
    BOOL _observing;
    NSString *_moodMessage;
    NSView *_hoverControls;
    GlyphButton *_videoCallButton;
    GlyphButton *_audioCallButton;
    GlyphButton *_imButton;
    NSStackView *_callButtonStackView;
    NSLayoutConstraint *_stackViewWidthConstraint;
    NSLayoutConstraint *_subtitleLeadingConstraint;
    NSLayoutConstraint *_subtitleLeftConstraint;
    unsigned long long _useAlternateStateAccessibility;
}

+ (id)keyPathsForValuesAffectingIsAccessibilityAlternateUIVisible;
+ (id)keyPathsForValuesAffectingHideStatus;
+ (id)keyPathsForValuesAffectingSubtitle;
@property unsigned long long useAlternateStateAccessibility; // @synthesize useAlternateStateAccessibility=_useAlternateStateAccessibility;
@property(retain) NSLayoutConstraint *subtitleLeftConstraint; // @synthesize subtitleLeftConstraint=_subtitleLeftConstraint;
@property(retain) NSLayoutConstraint *subtitleLeadingConstraint; // @synthesize subtitleLeadingConstraint=_subtitleLeadingConstraint;
@property(retain) NSLayoutConstraint *stackViewWidthConstraint; // @synthesize stackViewWidthConstraint=_stackViewWidthConstraint;
@property __weak NSStackView *callButtonStackView; // @synthesize callButtonStackView=_callButtonStackView;
@property __weak GlyphButton *imButton; // @synthesize imButton=_imButton;
@property __weak GlyphButton *audioCallButton; // @synthesize audioCallButton=_audioCallButton;
@property __weak GlyphButton *videoCallButton; // @synthesize videoCallButton=_videoCallButton;
@property(retain) NSView *hoverControls; // @synthesize hoverControls=_hoverControls;
@property(retain) NSString *moodMessage; // @synthesize moodMessage=_moodMessage;
@property(getter=isObserving) BOOL observing; // @synthesize observing=_observing;
@property BOOL groupSelectionNotPossible; // @synthesize groupSelectionNotPossible=_groupSelectionNotPossible;
- (void).cxx_destruct;
@property(getter=isAccessibilityAlternateUIVisible) BOOL accessibilityAlternateUIVisible;
- (BOOL)accessibilityPerformShowDefaultUI;
- (BOOL)accessibilityPerformShowAlternateUI;
@property(copy) NSString *accessibilityTitle;
@property(getter=isAccessibilityEnabled) BOOL accessibilityEnabled;
@property(copy) NSArray *accessibilityChildren;
@property(readonly, nonatomic) BOOL hideStatus;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setHovered:(BOOL)arg1;
@property(readonly, nonatomic) NSAttributedString *subtitle;
@property(readonly, nonatomic) double minimumHoverControlsWidth;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handlePresenceImageChanged;
- (void)handleObjectValueChanged;
- (void)stopObserving;
- (void)startObserving;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property struct CGPoint accessibilityActivationPoint;
@property(copy) NSArray *accessibilityAllowedValues;
@property(retain) id accessibilityApplicationFocusedUIElement;
@property(retain) id accessibilityCancelButton;
@property(retain) id accessibilityClearButton;
@property(retain) id accessibilityCloseButton;
@property long long accessibilityColumnCount;
@property(copy) NSArray *accessibilityColumnHeaderUIElements;
@property struct _NSRange accessibilityColumnIndexRange;
@property(copy) NSArray *accessibilityColumnTitles;
@property(copy) NSArray *accessibilityColumns;
@property(copy) NSArray *accessibilityContents;
@property(retain) id accessibilityCriticalValue;
@property(retain) id accessibilityDecrementButton;
@property(retain) id accessibilityDefaultButton;
@property(getter=isAccessibilityDisclosed) BOOL accessibilityDisclosed;
@property __weak id accessibilityDisclosedByRow;
@property(retain) id accessibilityDisclosedRows;
@property long long accessibilityDisclosureLevel;
@property(copy) NSString *accessibilityDocument;
@property(getter=isAccessibilityEdited) BOOL accessibilityEdited;
@property(getter=isAccessibilityElement) BOOL accessibilityElement;
@property(getter=isAccessibilityExpanded) BOOL accessibilityExpanded;
@property __weak id accessibilityExtrasMenuBar;
@property(copy) NSString *accessibilityFilename;
@property(getter=isAccessibilityFocused) BOOL accessibilityFocused;
@property(retain) id accessibilityFocusedWindow;
@property struct CGRect accessibilityFrame;
@property(getter=isAccessibilityFrontmost) BOOL accessibilityFrontmost;
@property(retain) id accessibilityFullScreenButton;
@property(retain) id accessibilityGrowArea;
@property(copy) NSArray *accessibilityHandles;
@property(retain) id accessibilityHeader;
@property(copy) NSString *accessibilityHelp;
@property(getter=isAccessibilityHidden) BOOL accessibilityHidden;
@property(retain) id accessibilityHorizontalScrollBar;
@property(copy) NSString *accessibilityHorizontalUnitDescription;
@property long long accessibilityHorizontalUnits;
@property(copy) NSString *accessibilityIdentifier;
@property(retain) id accessibilityIncrementButton;
@property long long accessibilityIndex;
@property long long accessibilityInsertionPointLineNumber;
@property(copy) NSString *accessibilityLabel;
@property(copy) NSArray *accessibilityLabelUIElements;
@property float accessibilityLabelValue;
@property(copy) NSArray *accessibilityLinkedUIElements;
@property(getter=isAccessibilityMain) BOOL accessibilityMain;
@property(retain) id accessibilityMainWindow;
@property(retain) id accessibilityMarkerGroupUIElement;
@property(copy) NSString *accessibilityMarkerTypeDescription;
@property(copy) NSArray *accessibilityMarkerUIElements;
@property(retain) id accessibilityMarkerValues;
@property(retain) id accessibilityMaxValue;
@property __weak id accessibilityMenuBar;
@property(retain) id accessibilityMinValue;
@property(retain) id accessibilityMinimizeButton;
@property(getter=isAccessibilityMinimized) BOOL accessibilityMinimized;
@property(getter=isAccessibilityModal) BOOL accessibilityModal;
@property(copy) NSArray *accessibilityNextContents;
@property long long accessibilityNumberOfCharacters;
@property(getter=isAccessibilityOrderedByRow) BOOL accessibilityOrderedByRow;
@property long long accessibilityOrientation;
@property(retain) id accessibilityOverflowButton;
@property __weak id accessibilityParent;
@property(copy) NSString *accessibilityPlaceholderValue;
@property(copy) NSArray *accessibilityPreviousContents;
@property(getter=isAccessibilityProtectedContent) BOOL accessibilityProtectedContent;
@property(retain) id accessibilityProxy;
@property(getter=isAccessibilityRequired) BOOL accessibilityRequired;
@property(copy) NSString *accessibilityRole;
@property(copy) NSString *accessibilityRoleDescription;
@property long long accessibilityRowCount;
@property(copy) NSArray *accessibilityRowHeaderUIElements;
@property struct _NSRange accessibilityRowIndexRange;
@property(copy) NSArray *accessibilityRows;
@property long long accessibilityRulerMarkerType;
@property(retain) id accessibilitySearchButton;
@property(retain) id accessibilitySearchMenu;
@property(getter=isAccessibilitySelected) BOOL accessibilitySelected;
@property(copy) NSArray *accessibilitySelectedCells;
@property(copy) NSArray *accessibilitySelectedChildren;
@property(copy) NSArray *accessibilitySelectedColumns;
@property(copy) NSArray *accessibilitySelectedRows;
@property(copy) NSString *accessibilitySelectedText;
@property struct _NSRange accessibilitySelectedTextRange;
@property(copy) NSArray *accessibilitySelectedTextRanges;
@property(copy) NSArray *accessibilityServesAsTitleForUIElements;
@property struct _NSRange accessibilitySharedCharacterRange;
@property(copy) NSArray *accessibilitySharedFocusElements;
@property(copy) NSArray *accessibilitySharedTextUIElements;
@property(retain) id accessibilityShownMenu;
@property long long accessibilitySortDirection;
@property(copy) NSArray *accessibilitySplitters;
@property(copy) NSString *accessibilitySubrole;
@property(copy) NSArray *accessibilityTabs;
@property __weak id accessibilityTitleUIElement;
@property(retain) id accessibilityToolbarButton;
@property __weak id accessibilityTopLevelUIElement;
@property(copy) NSURL *accessibilityURL;
@property(copy) NSString *accessibilityUnitDescription;
@property long long accessibilityUnits;
@property(retain) id accessibilityValue;
@property(copy) NSString *accessibilityValueDescription;
@property(retain) id accessibilityVerticalScrollBar;
@property(copy) NSString *accessibilityVerticalUnitDescription;
@property long long accessibilityVerticalUnits;
@property(copy) NSArray *accessibilityVisibleCells;
@property struct _NSRange accessibilityVisibleCharacterRange;
@property(copy) NSArray *accessibilityVisibleChildren;
@property(copy) NSArray *accessibilityVisibleColumns;
@property(copy) NSArray *accessibilityVisibleRows;
@property(retain) id accessibilityWarningValue;
@property __weak id accessibilityWindow;
@property(copy) NSArray *accessibilityWindows;
@property(retain) id accessibilityZoomButton;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

