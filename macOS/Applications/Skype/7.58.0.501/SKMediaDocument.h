//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "SKObjectInterface.h"

#import "SKMediaDocumentTaskDelegate-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSObject, NSString, NSURL, SKConversation;
@protocol OS_dispatch_queue, SKMediaDocumentDelegate;

@interface SKMediaDocument : SKObjectInterface <SKMediaDocumentTaskDelegate>
{
    NSURL *_bookmarkURL;
    BOOL _hasUploadError;
    float _uploadProgress;
    float _uploadTotalSize;
    float _uploadSizeSent;
    id <SKMediaDocumentDelegate> _delegate;
    NSError *_lastError;
    NSArray *_cachedDocumentTypeAndVersion;
    NSObject<OS_dispatch_queue> *_documentQueue;
    NSDictionary *_errorsInProfiles;
    NSDictionary *_mediaURLs;
    NSObject<OS_dispatch_queue> *_tasksQueue;
    NSMutableArray *_tasks;
    unsigned long long _uploadStatus;
}

+ (id)keyPathsForValuesAffectingUploadProgress;
+ (id)contentIdForDocumentType:(unsigned long long)arg1;
+ (id)keyPathsForValuesAffectingCanRequestMediaLink;
+ (id)keyPathsForValuesAffectingConversation;
+ (id)keyPathsForValuesAffectingOriginalName;
+ (id)keyPathsForValuesAffectingMIMEType;
+ (id)keyPathsForValuesAffectingDocumentURI;
+ (id)keyPathsForValuesAffectingDocumentTitle;
+ (id)keyPathsForValuesAffectingDocumentDescription;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)keyPathsForValuesAffectingMediaDocumentType;
+ (id)keyPathsForValuesAffectingDocumentCategory;
+ (id)keyPathsForValuesAffectingDocumentType;
+ (id)propertyKeyPrefixes;
+ (id)keyPathsForValuesAffectingFilename;
+ (id)mediaDocumentWithAvatarConversation:(id)arg1;
+ (id)keyPathsForValuesAffectingWebURL;
+ (id)mediaDocumentWithURL:(id)arg1;
+ (BOOL)URLSchemeIsSupported:(id)arg1;
+ (id)keyPathsForValuesAffectingConsumptionStatus;
+ (id)emoticonListForPackIdentifier:(id)arg1;
+ (id)emoticonPacksForTab:(id)arg1;
+ (id)emoticonTabs;
+ (id)mediaDocumentWithEmoticonPackIdentifier:(id)arg1;
+ (id)mediaDocumentWithEmoticonIdentifier:(id)arg1;
+ (id)keyPathsForValuesAffectingDraggingUserInfo;
+ (id)keyPathsForValuesAffectingPreviewSource;
+ (id)keyPathsForValuesAffectingImageDescription;
+ (id)keyPathsForValuesAffectingImageTitle;
+ (id)supportedImageTypes;
+ (struct CGSize)maximumImagePixelSize;
+ (unsigned long long)maximumImageFileSize;
+ (unsigned long long)maximumCloudFileSize;
+ (unsigned long long)maximumFileSizeForContentID:(id)arg1;
@property(nonatomic) unsigned long long uploadStatus; // @synthesize uploadStatus=_uploadStatus;
@property(nonatomic) float uploadSizeSent; // @synthesize uploadSizeSent=_uploadSizeSent;
@property(nonatomic) float uploadTotalSize; // @synthesize uploadTotalSize=_uploadTotalSize;
@property(nonatomic) float uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(readonly) NSMutableArray *tasks; // @synthesize tasks=_tasks;
@property(readonly) NSObject<OS_dispatch_queue> *tasksQueue; // @synthesize tasksQueue=_tasksQueue;
@property(copy) NSDictionary *mediaURLs; // @synthesize mediaURLs=_mediaURLs;
@property BOOL hasUploadError; // @synthesize hasUploadError=_hasUploadError;
@property(copy) NSDictionary *errorsInProfiles; // @synthesize errorsInProfiles=_errorsInProfiles;
@property(readonly) NSObject<OS_dispatch_queue> *documentQueue; // @synthesize documentQueue=_documentQueue;
@property(copy) NSArray *cachedDocumentTypeAndVersion; // @synthesize cachedDocumentTypeAndVersion=_cachedDocumentTypeAndVersion;
@property(retain) NSError *lastError; // @synthesize lastError=_lastError;
@property __weak id <SKMediaDocumentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)validateMediaDocumentTask:(id)arg1;
- (void)resumeMediaDocumentTask:(id)arg1;
- (void)detachMediaDocumentTask:(id)arg1;
- (void)cancelMediaDocumentTask:(id)arg1;
- (void)updateDownloadTask:(id)arg1 mediaStatus:(unsigned long long)arg2 mediaURL:(id)arg3 hasError:(BOOL)arg4 validatingCache:(BOOL)arg5;
- (void)updateDownloadTasksWithProfile:(id)arg1 mediaStatus:(unsigned long long)arg2 mediaURL:(id)arg3 hasError:(BOOL)arg4 validatingCache:(BOOL)arg5;
- (void)updateDocumentPropertiesForProfile:(id)arg1 mediaStatus:(unsigned long long)arg2 mediaURL:(id)arg3 hasError:(BOOL)arg4 validatingCache:(BOOL)arg5 handlingChangeCallback:(BOOL)arg6;
- (void)updateMediaStatus:(unsigned long long)arg1 forProfile:(id)arg2 atPath:(id)arg3 validatingCache:(BOOL)arg4 requestingTask:(id)arg5 handlingChangeCallback:(BOOL)arg6;
- (void)handleError:(id)arg1 downloading:(BOOL)arg2;
- (void)onMediaLinkStatusChange:(id)arg1;
- (void)onUploadProgress:(id)arg1;
- (void)onUploadStatusChanged:(id)arg1;
- (void)onMetadataUpdated;
- (void)onMediaLinkProgress:(id)arg1;
- (void)onUploadError:(id)arg1;
- (void)onDownloadError:(id)arg1;
- (unsigned long long)requestMediaLinkForProfile:(id)arg1 usingGetPolicy:(unsigned long long)arg2;
- (id)webURLForProfile:(id)arg1;
- (unsigned long long)requestMediaLinkForProfile:(id)arg1 usingGetPolicy:(unsigned long long)arg2 task:(id)arg3;
- (void)setMediaURL:(id)arg1 forProfile:(id)arg2;
- (id)mediaURLForProfile:(id)arg1;
- (void)removeFileAtDestinationURLForProfile:(id)arg1;
- (id)uniqueFileURLContextForProfile:(id)arg1;
@property(readonly, nonatomic) BOOL canRequestMediaLink;
- (void)setHasError:(BOOL)arg1 forProfile:(id)arg2;
- (BOOL)hasErrorInProfile:(id)arg1;
@property(readonly, nonatomic) SKConversation *conversation;
@property(readonly, nonatomic) NSString *originalName;
@property(readonly, nonatomic) NSString *MIMEType;
@property(readonly, nonatomic) NSString *documentURI;
@property(readonly, nonatomic) NSString *documentTitle;
@property(readonly, nonatomic) NSString *documentDescription;
@property(readonly, nonatomic) unsigned long long status;
- (id)mediaDocumentVersionTypes;
- (void)didChangeMEDIADOCUMENT_TYPE;
- (id)mediaDocumentType;
@property(readonly, nonatomic) unsigned long long documentCategory;
@property(readonly, nonatomic) unsigned long long documentType;
- (id)initWithSkyLibObjectID:(unsigned int)arg1;
- (id)initWithSkyLibObjectRef:(void *)arg1 freeWhenDone:(BOOL)arg2;
- (void)commonMediaDocumentInit;
- (BOOL)upload:(id)arg1;
- (BOOL)setMediaWithProfileId:(id)arg1 path:(id)arg2 storagePolicy:(unsigned long long)arg3;
- (BOOL)setMediaWithContentId:(id)arg1 path:(id)arg2 storagePolicy:(unsigned long long)arg3;
- (BOOL)linkFromProfile:(id)arg1 toProfile:(id)arg2;
- (BOOL)linkProfile:(id)arg1 toContentId:(id)arg2;
- (void)setDocumentAliasData:(id)arg1;
- (id)dataForDocumentAlias;
- (BOOL)retryUpload;
@property(readonly, nonatomic) NSString *filename;
@property(retain) NSURL *bookmarkURL;
- (id)initWithMediaFile:(id)arg1 thumbnailFile:(id)arg2 mediaType:(unsigned long long)arg3 storagePolicy:(unsigned long long)arg4;
@property(readonly) NSURL *webURL;
@property(readonly) unsigned long long trustType;
- (id)downloadTaskWithProfile:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)markAsConsumed;
@property(readonly, getter=isConsumed) BOOL consumed;
- (long long)integerForMetadataKey:(id)arg1;
- (id)stringForMetadataKey:(id)arg1;
- (BOOL)deleteFromServer;
@property(readonly) long long cloudFileSize;
@property(readonly, nonatomic) NSDictionary *draggingUserInfo;
@property(readonly, nonatomic) NSString *previewSource;
@property(readonly, nonatomic) NSString *imageDescription;
@property(readonly, nonatomic) NSString *imageTitle;
@property(getter=isFileUploadCancelled) BOOL fileUploadCancelled;
@property(getter=isOriginalFileDownloadPending) BOOL originalFileDownloadPending;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) NSString *author;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

