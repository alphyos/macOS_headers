//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface EPEImage : NSObject
{
}

+ (void)mapNonPartitionedFixedDrawableLayout:(id)arg1 toTextContainer:(id)arg2 textContainerTransformInRoot:(struct CGAffineTransform)arg3 state:(id)arg4;
+ (void)mapReflowableGroup:(id)arg1 toTextContainer:(id)arg2 state:(id)arg3;
+ (struct CGRect)contentBoundsOfGroup:(id)arg1;
+ (void)addBoundsForChildrenOfGroupLayout:(id)arg1 parentTransform:(struct CGAffineTransform)arg2 toRectangle:(struct CGRect *)arg3;
+ (void)mapNonPartitionedReflowableDrawable:(id)arg1 toTextContainer:(id)arg2 state:(id)arg3;
+ (void)mapReflowableDrawablesAsOneImage:(id)arg1 toTextContainer:(id)arg2 state:(id)arg3;
+ (void)mapReflowableDrawablesAsOneObject:(id)arg1 toTextContainer:(id)arg2 state:(id)arg3;
+ (void)mapDrawables:(id)arg1 toTextContainer:(id)arg2 mapIndividualDrawables:(BOOL)arg3 collectiveSpanGeometry:(id)arg4 spanIsOriented:(BOOL)arg5 geometryAdjustBlock:(CDUnknownBlockType)arg6 state:(id)arg7;
+ (void)mapDrawableInfoMovie:(struct EPEDrawableInfo *)arg1 alternateText:(id)arg2 properties:(id)arg3 textContainer:(id)arg4;
+ (id)dictionaryByAddingEntriesFromDictionary:(id)arg1 toDictionary:(id)arg2;
+ (void)mapDrawableOrDrawableArray:(id)arg1 toDrawableInfo:(struct EPEDrawableInfo *)arg2 state:(id)arg3;
+ (id)pngDataAndRelativeGeometryForStrokeOfDrawable:(id)arg1;
+ (BOOL)groupContainsDrawableWithShadowOrReflection:(id)arg1;
+ (BOOL)drawableHasShadowOrReflection:(id)arg1;
+ (BOOL)drawableHasReflection:(id)arg1;
+ (BOOL)drawableHasShadow:(id)arg1;
+ (id)propertiesForSpanForDrawable:(id)arg1 state:(id)arg2;
+ (id)propertiesForGeometry:(id)arg1 state:(id)arg2;
+ (id)propertiesForPosition:(struct CGPoint)arg1 measureFromRight:(BOOL)arg2 state:(id)arg3;
+ (id)propertiesForSize:(struct CGSize)arg1 state:(id)arg2;
+ (id)lengthAsStringProperty:(double)arg1 state:(id)arg2;
+ (void)mapFill:(id)arg1 rect:(struct CGRect)arg2 toTextContainer:(id)arg3 state:(id)arg4;
+ (void)mapStroke:(id)arg1 rect:(struct CGRect)arg2 toTextContainer:(id)arg3 state:(id)arg4;
+ (void)addImage:(id)arg1 withRect:(struct CGRect)arg2 toTextContainer:(id)arg3 state:(id)arg4;
+ (id)imageDataForStroke:(id)arg1 rect:(struct CGRect)arg2 returnClipRect:(struct CGRect *)arg3 state:(id)arg4;
+ (id)imageDataForFill:(id)arg1 rect:(struct CGRect)arg2 state:(id)arg3;
+ (id)imageDataWithSize:(struct CGSize)arg1 drawInContextUsingBlock:(CDUnknownBlockType)arg2;
+ (void)mapDrawablesAsImage:(id)arg1 toDrawableInfo:(struct EPEDrawableInfo *)arg2 state:(id)arg3;
+ (id)validatedDrawableForRendering:(id)arg1;
+ (id)mapGifMovie:(id)arg1 state:(id)arg2;
+ (BOOL)movieIsGifImage:(id)arg1;
+ (id)mapSimpleImage:(id)arg1 state:(id)arg2;
+ (struct CGRect)cropBoundsOfSimpleImage:(id)arg1;
+ (BOOL)imageIsSimple:(id)arg1;
+ (id)mapBoxStyleAndFloatDirection:(int *)arg1 fromDrawable:(id)arg2 state:(id)arg3;
+ (int)translateTextWrapAutomatic:(id)arg1 documentRoot:(id)arg2;
+ (struct CGRect)fixedPositionRectOfDrawable:(id)arg1 withinPageLayout:(id)arg2;
+ (struct CGRect)boundsForDrawable:(id)arg1 state:(id)arg2;
+ (BOOL)needOwnParagraphForDrawable:(id)arg1 returnAlignment:(int *)arg2 state:(id)arg3;
+ (id)mapImageBinary:(id)arg1 naturalCropBounds:(struct CGRect)arg2 imageSize:(struct CGSize)arg3 tintColor:(id)arg4 state:(id)arg5;
+ (id)TSUImageFromCGPDFDocument:(struct CGPDFDocument *)arg1 scaleX:(float)arg2 scaleY:(float)arg3 naturalCropBounds:(struct CGRect)arg4 angle:(float)arg5;
+ (float)calculateMaxScaleFactor:(struct CGSize)arg1 withDesiredFactor:(float)arg2;

@end

