//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDMediaRep.h"

#import "TSDAudioHUDControllerDelegate-Protocol.h"
#import "TSDPlayableMediaRep-Protocol.h"
#import "TSKMediaPlayerControllerDelegate-Protocol.h"

@class AVAsset, CALayer, NSObject, NSString, TSDMacAudioHUDKnob, TSDMovieInfo, TSKAVPlayerController;
@protocol TSDAudioHUDController, TSKMediaPlayerController;

@interface TSDAudioRep : TSDMediaRep <TSKMediaPlayerControllerDelegate, TSDAudioHUDControllerDelegate, TSDPlayableMediaRep>
{
    TSKAVPlayerController *mPlayerController;
    BOOL mDidCheckPlayability;
    BOOL mIsPlayable;
    AVAsset *mAssetForPlayabilityCheck;
    CALayer *mSpinnerLayer;
    float mDynamicVolume;
    BOOL mIsChangingDynamicVolume;
    id <TSDAudioHUDController> mAudioHUDController;
    TSDMacAudioHUDKnob *mAudioHUDKnob;
    CALayer *mAudioImageLayer;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3;
@property(readonly, nonatomic, getter=isPlayable) BOOL playable; // @synthesize playable=mIsPlayable;
@property(readonly, nonatomic) CALayer *audioImageLayer; // @synthesize audioImageLayer=mAudioImageLayer;
@property(readonly, nonatomic) id <TSDAudioHUDController> audioHUDController; // @synthesize audioHUDController=mAudioHUDController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_updateDownloadSpinnerState;
- (void)p_listenForDataChangesIfAppropriate;
- (void)p_teardownAudioHUD;
- (void)p_updateAudioHUDWithFrame:(struct CGRect)arg1;
- (void)setupPlayerControllerForAudioHUDController:(id)arg1;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
@property(readonly, nonatomic) NSObject<TSKMediaPlayerController> *playerController;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerControllerIfNecessary;
- (BOOL)p_shouldPlayerControllerExistThroughoutSelection;
- (void)dynamicVolumeChangeDidEnd;
- (void)dynamicVolumeUpdateToValue:(float)arg1;
- (void)dynamicVolumeChangeDidBegin;
@property(readonly, nonatomic) float volume;
- (void)p_setupSpinnerAnimationIfNeeded;
- (void)p_updateButtonForPlaying:(BOOL)arg1 pressed:(BOOL)arg2;
- (id)textureWithContext:(id)arg1;
- (BOOL)canDrawDownloadProgressPlaceholderImage;
- (id)downloadProgressPlaceholderImage;
- (BOOL)isDataCurrentlyDownloading;
- (BOOL)shouldShowDownloadProgressIndicator;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (void)didEndZooming;
- (void)willBeginZooming;
- (BOOL)exclusivelyProvidesGuidesWhileAligning;
- (BOOL)providesGuidesWhileAligning;
- (struct CGRect)boundsForStandardKnobs;
- (struct CGRect)p_scaledLayerFrameInRoot;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (BOOL)shouldShowKnobs;
- (struct CGAffineTransform)transformForCollaboratorCursorLayer;
- (BOOL)p_isEditingAnimations;
- (BOOL)shouldShowSelectionHighlight;
- (BOOL)shouldShowSizesInRulers;
- (BOOL)shouldShowDragHUD;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (BOOL)shouldCreateSelectionKnobs;
- (id)newTrackerForKnob:(id)arg1;
@property(readonly, nonatomic) BOOL shouldBecomeSelectedWhenPlaying;
- (void)p_updateEndTime;
- (void)p_updateStartTime;
- (void)p_updateVolume;
- (void)p_updateRepeatMode;
- (void)processChangedProperty:(int)arg1;
- (BOOL)p_isPlaying;
- (void)p_cancelPlayabilityCheck;
- (void)p_updatePlayabilityIfNecessary;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerForKnob:(id)arg1 atPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (BOOL)shouldAllowReplacementFromDrop;
- (BOOL)shouldAllowReplacementFromPaste;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (void)updatePlayButtonForPoint:(struct CGPoint)arg1;
- (BOOL)hitPlayPauseButtonWithPoint:(struct CGPoint)arg1;
- (void)willBeginReadMode;
- (void)willBeRemoved;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)willUpdateLayer:(id)arg1;
- (BOOL)p_shouldShowDownloadSpinner;
- (BOOL)p_shouldShowPlayPauseLayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(BOOL)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(BOOL)arg4 forAlphaOnly:(BOOL)arg5 drawChildren:(BOOL)arg6;
- (BOOL)shouldShowMediaReplaceUI;
- (Class)layerClass;
- (BOOL)directlyManagesLayerContent;
- (void)dealloc;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

