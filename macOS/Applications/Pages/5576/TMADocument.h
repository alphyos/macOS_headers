//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSDocument.h>

#import "NSUserActivityDelegate-Protocol.h"
#import "TMAScriptCommandExecutionResolving-Protocol.h"
#import "TSADocumentRootDelegate-Protocol.h"
#import "TSAImportDelegate-Protocol.h"
#import "TSAUndoManagerDelegate-Protocol.h"
#import "TSAViewStateSidecarDelegate-Protocol.h"
#import "TSKDocumentRootProvider-Protocol.h"
#import "TSPObjectContextDelegate-Protocol.h"
#import "TSPViewStateValidator-Protocol.h"

@class NSAlert, NSArray, NSData, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableSet, NSObject, NSProgress, NSRecursiveLock, NSSet, NSString, NSURL, NSUUID, SFUCryptoKey, TMADocumentAlternateContents, TMADocumentConflictAlert, TMADocumentSharingStateObserver, TMADocumentWindowController, TMAManagedTemporarySupportDirectory, TMAProgressPanelController, TSACollaborationContext, TSACollaborationErrorAction, TSACollaborationResponsiveness, TSADocumentInfo, TSADocumentRoot, TSANetworkHealthMonitor, TSATemplateInfo, TSAViewStateSidecar, TSKCollaborationDocumentSessionController, TSKSharingState, TSPObjectContext, TSUBasicProgress, TSUImage, TSUManagedTemporaryDirectory, TSUNSProgressObserver, TSUTemporaryDirectory;
@protocol NSFilePresenter, NSOpenSavePanelDelegate, OS_dispatch_queue, TSKDocumentInfo, TSKExporter, TSULogContext;

@interface TMADocument : NSDocument <TMAScriptCommandExecutionResolving, NSUserActivityDelegate, TSPViewStateValidator, TSAViewStateSidecarDelegate, TSPObjectContextDelegate, TSAImportDelegate, TSADocumentRootDelegate, TSAUndoManagerDelegate, TSKDocumentRootProvider>
{
    // Error parsing type: Ai, name: _userActivityNeedsSaveCount
    // Error parsing type: Ai, name: _userInterfaceItemsPausedCount
    // Error parsing type: AQ, name: _changeCountForNonUserEdits
    // Error parsing type: AQ, name: _changeCountForExpensiveCalculation
    TSPObjectContext *_context;
    TMAManagedTemporarySupportDirectory *_temporaryDocumentSupportDirectory;
    NSURL *_importSourceURL;
    NSData *_importSourceURLBookmarkData;
    NSURL *_importURL;
    TSUTemporaryDirectory *_importTemporaryDirectory;
    NSString *_importDisplayName;
    NSData *_templateURLBookmarkData;
    TSUTemporaryDirectory *_temporaryAutosavedContentsDirectory;
    NSURL *_temporaryAutosavedContentsURL;
    TSUTemporaryDirectory *_temporaryDraftDirectory;
    NSObject<OS_dispatch_queue> *_persistenceWarningsQueue;
    NSMutableSet *_persistenceWarnings;
    NSMutableArray *_scheduledOperationOnDocumentWindowBlocks;
    NSMutableArray *_scheduledActivityOnSheetBlocks;
    id <TSKExporter> _exporter;
    BOOL _importWasCancelled;
    NSProgress *_openProgress;
    BOOL _isShowingOpenProgress;
    BOOL _isInitializingFromURL;
    BOOL _isDelayingDocumentDidLoadForStateRestoration;
    BOOL _didMakeWindowControllers;
    BOOL _windowsDidShow;
    BOOL _willAttemptToClose;
    BOOL _ignoreClose;
    BOOL _isClosing;
    BOOL _isClosed;
    BOOL _isReading;
    BOOL _isReverting;
    BOOL _isRevertingForCollaborationModeChange;
    BOOL _ignoreFileModificationDateOnNextSave;
    BOOL _forcePreviewOnNextSave;
    BOOL _isDuplicating;
    BOOL _willDuplicateWhileEndingCollaboration;
    BOOL _requiresFileExtensionChangeAtSave;
    BOOL _originatedFromSage;
    BOOL _originatedFromSageInTef;
    BOOL _shouldForceDocumentWindowKeyAndFront;
    long long _dataLossTypeOnSave;
    BOOL _didProcessScheduledOperationOnDocumentWindowBlocks;
    BOOL _documentLoadingWasCancelled;
    BOOL _willUpgradeToSingleFile;
    BOOL _didUnblockUserInteractionInWriteToURL;
    BOOL _didResolveCollaborativeConflict;
    BOOL _isHandlingRestoreVersionClick;
    BOOL _isRestoringVersion;
    BOOL _isWaitingForWriter;
    BOOL _failedVersionBrowserRestoreWhileWaitingForDocserver;
    BOOL _postponedRefreshingSharingState;
    BOOL _shouldPresentOfflineUserEditErrorWhenSyncAlertsAreResumed;
    NSURL *_newFileURL;
    unsigned long long _presentedItemOperationQueueSuspensionCount;
    unsigned long long _networkHealthMonitorSuspensionCount;
    TSANetworkHealthMonitor *_suspendedNetworkHealthMonitor;
    NSError *_errorFromRevert;
    BOOL _didCheckNeedsMediaCompatibilityUpgrade;
    struct os_unfair_lock_s _encodeRestorableStateLock;
    BOOL _hasEncodeRestorableStateLockOnWrite;
    NSObject<OS_dispatch_queue> *_viewStateWriteQueue;
    NSRecursiveLock *_sharingStateLock;
    TSKSharingState *_sharingState;
    TSKSharingState *_previousSharingState;
    TSACollaborationErrorAction *_collaborationDisallowedErrorAction;
    NSObject<OS_dispatch_queue> *_collaborationDisallowedErrorActionQueue;
    TMADocumentAlternateContents *_alternateContentsToReadFrom;
    TSKSharingState *_sharingStateForRead;
    NSObject<OS_dispatch_queue> *_collaborativeDocumentUpdateQueue;
    BOOL _isWaitingForCollaborativeDocumentUpdate;
    BOOL _isWaitingForCollaborativeDocumentUpdateToBeginCollaboration;
    unsigned long long _autosaveSuspensionCount;
    unsigned long long _saveAndAutosaveSuspensionCount;
    BOOL _needsSaveAfterSaveOrAutosaveResume;
    BOOL _shouldAbortRecoveryAttempt;
    NSObject<OS_dispatch_queue> *_userActivityQueue;
    NSSet *_preferredResourceRequestTags;
    BOOL _askedToCloseVersionBrowser;
    long long _synchronousActivityOnMainThreadCount;
    long long _synchronousFileAccessOnMainThreadCount;
    TSKCollaborationDocumentSessionController *_suspendedCollaborationDocumentSessionControllerVersionBrowser;
    id <TSULogContext> _logContext;
    BOOL openedWithNeverInteractFlag;
    BOOL _savingForSharing;
    BOOL _hasShownCollaborationDataSizeWarning;
    BOOL _didShowPostponedErrorActionAlertOnce;
    BOOL _isExportingNativeDocument;
    BOOL _recoveringFromError;
    BOOL _lastSaveNeedsProgress;
    BOOL _waitingForMailboxToSendCommandsOnClose;
    BOOL _duplicateOfSharedToMeDocument;
    BOOL _shouldSaveReplaceableContentData;
    BOOL _disallowUserInteraction;
    TSADocumentInfo *_documentInfo;
    NSString *_documentPasswordHint;
    unsigned long long _numberOfParticipants;
    SFUCryptoKey *_encryptionKey;
    unsigned long long _documentSource;
    NSArray *_documentWarnings;
    TSUManagedTemporaryDirectory *_documentCacheDirectory;
    TSUImage *_previewImage;
    TMAProgressPanelController *_progressPanelController;
    NSData *_viewStateDataToDecode;
    NSURL *_templateURL;
    NSString *_templateDisplayName;
    id _windowRestorationObserver;
    TMADocumentSharingStateObserver *_sharingStateObserver;
    id _collaborationRevisionUpdateObserver;
    id _collaborationCommandsCommittedObserver;
    id _collaborationOutgoingCommandTooLargeObserver;
    id _networkHealthOnlineListener;
    id _networkHealthOfflineListener;
    id _networkReachabilityListener;
    CDUnknownBlockType _allCollaborativeCommandsCommittedHandler;
    TMADocumentConflictAlert *_collaboratorConflictAlert;
    TSUBasicProgress *_collaborationProgress;
    TSACollaborationResponsiveness *_collaborationResponsiveness;
    TSACollaborationErrorAction *_postponedErrorAction;
    NSString *_passphraseForVersionRestoration;
    id <NSOpenSavePanelDelegate> _exportSavePanelDelegate;
    SFUCryptoKey *_exportEncryptionKey;
    NSString *_exportPasswordHint;
    NSDate *_tsp_fileModificationDate;
    TSUNSProgressObserver *_saveProgressObserver;
    NSProgress *_lastSaveProgress;
    NSAlert *_collaborationPermissionAlert;
    NSAlert *_collaborationOfflineAlert;
    TSACollaborationContext *_collaborationContextBeingStarted;
    TSAViewStateSidecar *_viewStateSidecar;
    NSError *_recoveryError;
}

+ (BOOL)suppressDocumentSizeThresholdAlert;
+ (void)resumeConcurrentDocumentReading;
+ (void)suspendConcurrentDocumentReading;
+ (BOOL)canConcurrentlyReadDocumentsOfType:(id)arg1;
+ (BOOL)p_isDuplicatingDocumentForErrorRecovery;
+ (BOOL)p_isDuplicatingDocument;
+ (BOOL)autosavesInPlace;
+ (Class)documentWindowControllerClass;
+ (id)tangierEditingFormatDocumentType;
+ (BOOL)isTangierEditingFormatDocumentType:(id)arg1;
+ (id)nativeType;
+ (BOOL)isNativeOrTangierEditingFormatDocumentType:(id)arg1;
+ (BOOL)isNativeType:(id)arg1;
+ (id)keyPathsForValuesAffectingDocumentRoot;
@property(nonatomic) BOOL disallowUserInteraction; // @synthesize disallowUserInteraction=_disallowUserInteraction;
@property(copy, nonatomic) NSError *recoveryError; // @synthesize recoveryError=_recoveryError;
@property(retain, nonatomic) TSAViewStateSidecar *viewStateSidecar; // @synthesize viewStateSidecar=_viewStateSidecar;
@property(retain, nonatomic) TSACollaborationContext *collaborationContextBeingStarted; // @synthesize collaborationContextBeingStarted=_collaborationContextBeingStarted;
@property(nonatomic) BOOL shouldSaveReplaceableContentData; // @synthesize shouldSaveReplaceableContentData=_shouldSaveReplaceableContentData;
@property(nonatomic, getter=isDuplicateOfSharedToMeDocument) BOOL duplicateOfSharedToMeDocument; // @synthesize duplicateOfSharedToMeDocument=_duplicateOfSharedToMeDocument;
@property(nonatomic) BOOL waitingForMailboxToSendCommandsOnClose; // @synthesize waitingForMailboxToSendCommandsOnClose=_waitingForMailboxToSendCommandsOnClose;
@property(retain, nonatomic) NSAlert *collaborationOfflineAlert; // @synthesize collaborationOfflineAlert=_collaborationOfflineAlert;
@property(nonatomic) __weak NSAlert *collaborationPermissionAlert; // @synthesize collaborationPermissionAlert=_collaborationPermissionAlert;
@property(retain, nonatomic) NSProgress *lastSaveProgress; // @synthesize lastSaveProgress=_lastSaveProgress;
@property(nonatomic) BOOL lastSaveNeedsProgress; // @synthesize lastSaveNeedsProgress=_lastSaveNeedsProgress;
@property(retain, nonatomic) TSUNSProgressObserver *saveProgressObserver; // @synthesize saveProgressObserver=_saveProgressObserver;
@property(copy, nonatomic) NSDate *tsp_fileModificationDate; // @synthesize tsp_fileModificationDate=_tsp_fileModificationDate;
@property(nonatomic, getter=isRecoveringFromError) BOOL recoveringFromError; // @synthesize recoveringFromError=_recoveringFromError;
@property(copy, nonatomic) NSString *exportPasswordHint; // @synthesize exportPasswordHint=_exportPasswordHint;
@property(retain, nonatomic) SFUCryptoKey *exportEncryptionKey; // @synthesize exportEncryptionKey=_exportEncryptionKey;
@property(nonatomic) BOOL isExportingNativeDocument; // @synthesize isExportingNativeDocument=_isExportingNativeDocument;
@property(retain, nonatomic) id <NSOpenSavePanelDelegate> exportSavePanelDelegate; // @synthesize exportSavePanelDelegate=_exportSavePanelDelegate;
@property(readonly, nonatomic) id <TSKExporter> exporter; // @synthesize exporter=_exporter;
@property(copy, nonatomic) NSString *passphraseForVersionRestoration; // @synthesize passphraseForVersionRestoration=_passphraseForVersionRestoration;
@property(nonatomic) BOOL didShowPostponedErrorActionAlertOnce; // @synthesize didShowPostponedErrorActionAlertOnce=_didShowPostponedErrorActionAlertOnce;
@property(retain, nonatomic) TSACollaborationErrorAction *postponedErrorAction; // @synthesize postponedErrorAction=_postponedErrorAction;
@property(retain, nonatomic) TSACollaborationResponsiveness *collaborationResponsiveness; // @synthesize collaborationResponsiveness=_collaborationResponsiveness;
@property(retain, nonatomic) TSUBasicProgress *collaborationProgress; // @synthesize collaborationProgress=_collaborationProgress;
@property(retain, nonatomic) TMADocumentConflictAlert *collaboratorConflictAlert; // @synthesize collaboratorConflictAlert=_collaboratorConflictAlert;
@property(nonatomic) BOOL hasShownCollaborationDataSizeWarning; // @synthesize hasShownCollaborationDataSizeWarning=_hasShownCollaborationDataSizeWarning;
@property(copy, nonatomic) CDUnknownBlockType allCollaborativeCommandsCommittedHandler; // @synthesize allCollaborativeCommandsCommittedHandler=_allCollaborativeCommandsCommittedHandler;
@property(retain, nonatomic) id networkReachabilityListener; // @synthesize networkReachabilityListener=_networkReachabilityListener;
@property(retain, nonatomic) id networkHealthOfflineListener; // @synthesize networkHealthOfflineListener=_networkHealthOfflineListener;
@property(retain, nonatomic) id networkHealthOnlineListener; // @synthesize networkHealthOnlineListener=_networkHealthOnlineListener;
@property(retain, nonatomic) id collaborationOutgoingCommandTooLargeObserver; // @synthesize collaborationOutgoingCommandTooLargeObserver=_collaborationOutgoingCommandTooLargeObserver;
@property(retain, nonatomic) id collaborationCommandsCommittedObserver; // @synthesize collaborationCommandsCommittedObserver=_collaborationCommandsCommittedObserver;
@property(retain, nonatomic) id collaborationRevisionUpdateObserver; // @synthesize collaborationRevisionUpdateObserver=_collaborationRevisionUpdateObserver;
@property(retain, nonatomic) TMADocumentSharingStateObserver *sharingStateObserver; // @synthesize sharingStateObserver=_sharingStateObserver;
@property(retain) id windowRestorationObserver; // @synthesize windowRestorationObserver=_windowRestorationObserver;
@property(copy, nonatomic) NSString *templateDisplayName; // @synthesize templateDisplayName=_templateDisplayName;
@property(copy, nonatomic) NSURL *templateURL; // @synthesize templateURL=_templateURL;
@property(retain, nonatomic) NSData *viewStateDataToDecode; // @synthesize viewStateDataToDecode=_viewStateDataToDecode;
@property(retain, nonatomic) TMAProgressPanelController *progressPanelController; // @synthesize progressPanelController=_progressPanelController;
@property(retain, nonatomic) TSUImage *previewImage; // @synthesize previewImage=_previewImage;
@property(retain) TSUManagedTemporaryDirectory *documentCacheDirectory; // @synthesize documentCacheDirectory=_documentCacheDirectory;
@property(readonly, nonatomic) long long synchronousFileAccessOnMainThreadCount; // @synthesize synchronousFileAccessOnMainThreadCount=_synchronousFileAccessOnMainThreadCount;
@property(readonly, nonatomic) long long synchronousActivityOnMainThreadCount; // @synthesize synchronousActivityOnMainThreadCount=_synchronousActivityOnMainThreadCount;
@property(copy, nonatomic) NSArray *documentWarnings; // @synthesize documentWarnings=_documentWarnings;
@property(nonatomic) unsigned long long documentSource; // @synthesize documentSource=_documentSource;
@property(retain, nonatomic) SFUCryptoKey *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(nonatomic) BOOL savingForSharing; // @synthesize savingForSharing=_savingForSharing;
@property(nonatomic) unsigned long long numberOfParticipants; // @synthesize numberOfParticipants=_numberOfParticipants;
@property(copy, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;
@property(readonly, nonatomic) TSADocumentInfo *documentInfo; // @synthesize documentInfo=_documentInfo;
@property(readonly, nonatomic) TSPObjectContext *context; // @synthesize context=_context;
@property(nonatomic) BOOL openedWithNeverInteractFlag; // @synthesize openedWithNeverInteractFlag;
- (void).cxx_destruct;
- (void)presentAlertForPurgedUbiquitousDocumentWithFormerAlternateContents:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_willRestoreVersion:(id)arg1 restoreVersionHandler:(CDUnknownBlockType)arg2 finishedRevertHandler:(CDUnknownBlockType)arg3;
- (void)willRestoreVersion:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) BOOL canBrowseVersions;
- (BOOL)preservesLocalVersions;
- (BOOL)canRestoreLocalVersions;
- (BOOL)isConnectedToCollaborationServer;
- (unsigned long long)sharingState;
- (void)_moveSageInTefToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)i_continueWorkOnMainThreadContinuingActivity:(BOOL)arg1 waitingForDocumentWindow:(BOOL)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)p_continueWorkOnMainThreadUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_dispatchAsyncOnQueue:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)p_performBlockOnMainThread:(CDUnknownBlockType)arg1;
- (void)p_document:(id)arg1 didSaveWithReplaceableContent:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)p_document:(id)arg1 didDuplicate:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)p_duplicateDocumentForErrorRecoveryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)p_handleReadErrorForURL:(id)arg1 error:(id)arg2 didExitVersionBrowser:(BOOL)arg3;
- (id)p_willPresentError:(id)arg1 isOpening:(BOOL)arg2 canRestore:(BOOL)arg3;
- (id)willPresentError:(id)arg1;
- (void)p_setupUndoManager;
- (BOOL)canRedo;
- (BOOL)canUndo;
- (double)p_intervalToWaitForMailboxOnClose;
- (double)p_progressThreshold;
- (double)p_progressShowDelay;
- (void)p_cleanupTemporaryDocument;
- (void)p_cleanupImportTemporaryDocument;
- (void)p_removeAndInvalidateCache;
- (id)p_documentCacheURLWithDocumentProperties:(id)arg1 validate:(BOOL)arg2 create:(BOOL)arg3;
- (void)p_invalidateDocumentCacheForDocumentURLIfNeeded:(id)arg1;
- (void)updateDocumentCacheProperties;
@property(readonly, nonatomic) NSString *documentCachePath;
- (void)p_showRemoteVersionRestorationAlertWithUnsavedChanges:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_showCollaborationDataSizeWarningThresholdAlertIfNeededForContext:(id)arg1;
- (void)p_showCollaboratorConflictAlertWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_presentCollaboratorConflictAlert:(id)arg1;
- (void)p_replaceCollaboratorConflictAfterIfNeededWithWasConflictResolved:(BOOL)arg1;
- (id)p_prepareCollaboratorConflictAlertWithHadChanges:(BOOL)arg1 wasConflictResolved:(BOOL)arg2 conflictHasOldVersion:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)p_showOwnerConflictWithSaveACopyAlertWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_showDocumentSizeThresholdAlertIfNeededForContext:(id)arg1 onDocumentLoad:(BOOL)arg2;
- (BOOL)p_shouldShowDocumentSizeThresholdAlertForContext:(id)arg1;
- (void)p_showUnsupportedFeaturesAlertIfNeededForContext:(id)arg1;
- (BOOL)shouldLoadAllComponentsForContext:(id)arg1 documentURL:(id)arg2;
- (void)updateChangeCountWithToken:(id)arg1 forSaveOperation:(unsigned long long)arg2;
- (id)changeCountTokenForSaveOperation:(unsigned long long)arg1;
- (void)dirtyDocumentForExpensiveCalculationIfNeeded;
- (void)requestAutosaveForExpensiveCalculation;
- (void)requestAutosaveForNonUserEdit;
- (void)requestAutosave;
- (void)p_requestAutosaveIfNotSuspendedAndIfNeeded;
- (void)resumeSaveAndAutosaveWithReason:(id)arg1;
- (void)suspendSaveAndAutosaveWithReason:(id)arg1;
- (void)resumeAutosaveWithReason:(id)arg1;
- (void)suspendAutosaveWithReason:(id)arg1;
@property(readonly, nonatomic) BOOL isAttemptingToRecover;
- (BOOL)isDocumentSupportRequiredForContext:(id)arg1;
- (BOOL)didCollaborationContextValidateWithServerForContext:(id)arg1;
- (void)context:(id)arg1 canPerformUserActionUsingBlock:(CDUnknownBlockType)arg2;
- (BOOL)isCollaborationOfflineForContext:(id)arg1;
- (BOOL)isInReadOnlyModeForContext:(id)arg1;
@property(readonly, nonatomic) BOOL isInReadOnlyMode;
@property(readonly, nonatomic) BOOL hasUnmaterializedRemoteData;
- (BOOL)p_isInCollaborationModeForContext:(id)arg1;
- (BOOL)isInCollaborationModeForContext:(id)arg1;
- (BOOL)isInCollaborationMode;
- (void)context:(id)arg1 didDownloadRemoteData:(id)arg2 error:(id)arg3;
- (void)context:(id)arg1 didDownloadDocumentResources:(id)arg2;
- (id)persistenceWarningsForData:(id)arg1 flags:(unsigned long long)arg2;
- (BOOL)preserveDocumentRevisionIdentifierForSaveURL:(id)arg1;
- (id)documentPasswordHintForWrite;
- (id)additionalResourceRequestsForObjectContext:(id)arg1;
- (id)preferredResourceRequestTagsForContext:(id)arg1;
@property(readonly, nonatomic) NSDictionary *additionalDocumentSupportPropertiesForWrite;
@property(readonly, nonatomic) NSDictionary *additionalDocumentPropertiesForWrite;
- (id)packageDataForWrite;
- (void)addPersistenceWarnings:(id)arg1;
- (void)presentPersistenceError:(id)arg1;
- (id)supportDirectoryURLReturningIsBundleURL:(char *)arg1;
@property(readonly, nonatomic) BOOL isDocumentSupportTemporary;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
- (void)importControllerDidCancelImport:(id)arg1;
- (void)importControllerDidFinishResourceAccess:(id)arg1;
- (void)importController:(id)arg1 willBeginResourceAccessWithProgress:(id)arg2 title:(id)arg3 estimatedMissingResourcesSize:(unsigned long long)arg4;
- (void)willHandleConflictsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_revertCollaborativeDocumentToICloudVersionSavingLocalChanges:(BOOL)arg1 didResolveCollaborativeConflict:(BOOL)arg2 allowBeginCollaboration:(BOOL)arg3 forceRefreshingSharingState:(BOOL)arg4 showError:(BOOL)arg5 flags:(unsigned long long)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)p_revertCollaborativeDocumentToICloudVersionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_didResolveCollaborativeDocumentConflict;
- (void)promptUserAboutCollaborationPrivacySettingsIfNeededWithServiceType:(unsigned long long)arg1 isInitiatingCollaboration:(BOOL)arg2 hasActivityLock:(BOOL)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(readonly) NSUUID *uniqueCacheIdentifier;
- (void)p_presentOfflineUserEditError;
- (void)presentOfflineUserEditError;
- (void)documentRootDidRollbackOfflineCommands:(id)arg1;
- (BOOL)showPostponedErrorActionIfNeeded;
- (void)documentRoot:(id)arg1 didReceiveDocumentStatusNotification:(id)arg2;
@property(readonly, nonatomic) NSString *name;
- (BOOL)isPlayingCollaborationTrace;
- (BOOL)isInCollaborationTracePlayerMode;
@property(readonly, nonatomic) id <TSKDocumentInfo> tskDocumentInfo;
@property(readonly, nonatomic) id <NSFilePresenter> cloudFilePresenter;
@property(readonly, nonatomic) id <TSULogContext> logContext;
- (void)performActivityWithSynchronousWaiting:(BOOL)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)performSynchronousFileAccessUsingBlock:(CDUnknownBlockType)arg1;
- (void)performActivityWithSynchronousWaiting:(BOOL)arg1 pauseIncomingICloudWritesDuringActivity:(BOOL)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)performActivityWithSynchronousWaiting:(BOOL)arg1 suspendCollaboration:(BOOL)arg2 iCloudTeardownBlock:(CDUnknownBlockType)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)performActivityWithSynchronousWaiting:(BOOL)arg1 iCloudTeardownBlock:(CDUnknownBlockType)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)resumeNetworkHealthMonitorWithReason:(id)arg1;
- (void)pauseNetworkHealthMonitorWithReason:(id)arg1;
- (void)resumeSyncAlertsWithReason:(id)arg1;
- (void)pauseSyncAlertsWithReason:(id)arg1;
- (void)_requestViewControllerForDocumentTitlebarPopover:(id)arg1 thenDisplayPopoverUsingBlock:(CDUnknownBlockType)arg2;
- (BOOL)userInterfaceItemsPaused;
- (int)resumeUserInterfaceItemsWithReason:(id)arg1;
- (int)pauseUserInterfaceItemsWithReason:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)hasPersistenceWarningsOfKind:(long long)arg1;
- (void)consolidateDocumentWarnings;
- (void)showDocumentOpenErrorsOrWarningsIfNecessary;
@property(nonatomic) BOOL shouldShowDocumentWarningsOnOpen;
- (void)presentError:(id)arg1 modalForWindow:(id)arg2 delegate:(id)arg3 didPresentSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)p_presentErrors:(id)arg1 withMessageText:(id)arg2 windowForSheet:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)p_didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)p_presentError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resumeShowingDelayedProgressUnlessUserDidCancel:(BOOL)arg1;
- (void)suspendShowingDelayedProgress;
- (void)showOpenProgressIfNeededForURL:(id)arg1;
- (void)showImportProgressIfNeededForURL:(id)arg1 importController:(id)arg2 progressContext:(id)arg3;
- (void)hideProgressShouldDismissImmediately:(BOOL)arg1 performBlock:(CDUnknownBlockType)arg2;
- (void)hideProgress;
- (void)showProgressForType:(unsigned long long)arg1 modalForWindow:(id)arg2 reason:(id)arg3 withTitle:(id)arg4 message:(id)arg5 cancelButtonTitle:(id)arg6 confirmCancelMessage:(id)arg7 confirmCancelInformativeText:(id)arg8 documentURL:(id)arg9 isPasswordProtected:(BOOL)arg10 progress:(id)arg11 progressThreshold:(double)arg12 afterDelay:(double)arg13 cancelHandler:(CDUnknownBlockType)arg14;
- (void)showProgressForType:(unsigned long long)arg1 modalForWindow:(id)arg2 reason:(id)arg3 withTitle:(id)arg4 message:(id)arg5 documentURL:(id)arg6 progress:(id)arg7 progressThreshold:(double)arg8 afterDelay:(double)arg9 cancelHandler:(CDUnknownBlockType)arg10;
- (void)willSaveAsTemplate;
- (void)willUpgradeIncompatibleMediaFromImportControllerOrWithSynchronousWaiting;
- (void)p_upgradeIncompatibleMediaContainersWithUpgrader:(id)arg1 requiredCompatibilityLevel:(long long)arg2 windowForSheet:(id)arg3 anyMediaDownloading:(BOOL)arg4 mediaContainerDataHintMap:(id)arg5 allowUndo:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (id)progressMessageForUpgradingIncompatibleMediasWithUpgrader:(id)arg1 requiredCompatibilityLevel:(long long)arg2 mediaContainerDataHintMap:(id)arg3;
- (void)p_upgradeIncompatibleMediaFromImportController:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_upgradeIncompatibleMediaContainersFromEnumeratorFromBlock:(CDUnknownBlockType)arg1 targetDocumentRoot:(id)arg2 fromEntireDocument:(BOOL)arg3 requiredCompatibilityLevel:(long long)arg4 preset:(long long)arg5 shouldAllowUndo:(BOOL)arg6 warnIfNone:(BOOL)arg7 withSynchronousWaiting:(BOOL)arg8 reduceFileSize:(BOOL)arg9 windowForSheet:(id)arg10 completionHandler:(CDUnknownBlockType)arg11;
- (void)p_reduceFileSizeIfNeededForDocumentRoot:(id)arg1 reduceImages:(BOOL)arg2 reduceMovies:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)p_upgradeAllIncompatibleMediaContainersIfNeededWithSynchronousWaiting:(BOOL)arg1;
- (void)upgradeIncompatibleMediaForAllDevicesInMediaContainers:(id)arg1 usingPreset:(long long)arg2 windowForSheet:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)showReduceFileSizeProgressForSaveACopy:(BOOL)arg1;
- (void)upgradeAllIncompatibleMediaForAllDevicesUsingPreset:(long long)arg1 saveCopy:(BOOL)arg2 reduceImages:(BOOL)arg3 reduceMovies:(BOOL)arg4 windowForSheet:(id)arg5 continuingActivity:(BOOL)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)p_saveCopyAndUpgradeAllIncompatibleMediaForAllDevicesUsingPreset:(long long)arg1 reduceImages:(BOOL)arg2 reduceMovies:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) NSString *stringForCheckingMoviesAndImages;
- (BOOL)p_importFromURL:(id)arg1 type:(id)arg2 isInCollaborationMode:(BOOL)arg3 passphrase:(id)arg4 error:(id *)arg5;
- (BOOL)urlIsInSyncedDocumentsDirectory:(id)arg1;
- (void)p_presentExportWarnings:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_exportToURL:(id)arg1 ofType:(id)arg2 options:(id)arg3 progressMessage:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)cancelExport;
- (void)exportToURL:(id)arg1 ofType:(id)arg2 options:(id)arg3 progressMessage:(id)arg4 isContinuingActivity:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)p_exportAsType:(id)arg1 options:(id)arg2 askForSaveLocation:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)exportAsType:(id)arg1 options:(id)arg2 askForSaveLocation:(BOOL)arg3 isContinuingActivity:(BOOL)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id *)arg3;
- (void)exportAsNativeForSharingWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)accommodatePresentedItemDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentedItemDidResolveConflictVersion:(id)arg1;
- (void)presentedItemDidGainVersion:(id)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)continueAsynchronousWorkOnMainThreadUsingBlock:(CDUnknownBlockType)arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (void)relinquishPresentedItemToWriter:(CDUnknownBlockType)arg1;
- (id)p_showDownloadProgress:(id)arg1 estimatedDownloadSize:(unsigned long long)arg2 forDocumentURL:(id)arg3 afterDelay:(double)arg4;
- (void)p_downloadForURL:(id)arg1 newObjectContext:(id)arg2 isInCollaborationMode:(BOOL)arg3;
- (void)i_deleteDocument;
- (void)p_collaborationDocumentSessionControllerDidCommitAllCommands:(id)arg1;
- (void)p_networkDidDisconnect:(id)arg1;
- (void)p_networkDidReconnect:(id)arg1;
- (void)checkForOrphanedCollaborationDocument;
- (void)checkIfProcessingManyCommands;
- (id)p_showAlertForWindow:(id)arg1 messageText:(id)arg2 informativeText:(id)arg3 autoDismiss:(BOOL)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)p_presentCollaborationSheetContinuingActivity:(BOOL)arg1 pauseSyncAlerts:(BOOL)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)p_presentCollaborationError:(id)arg1 isContinuingActivity:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)p_prepareToRevertCollaborativeDocumentWithBlock:(CDUnknownBlockType)arg1 allowBeginCollaboration:(BOOL)arg2 forceRefreshingSharingState:(BOOL)arg3 passphrase:(id)arg4 flags:(unsigned long long)arg5 showProgress:(BOOL)arg6 progressCancelButtonTitle:(id)arg7 showError:(BOOL)arg8 thenRevertWithBlock:(CDUnknownBlockType)arg9 finishedRevertHandler:(CDUnknownBlockType)arg10;
- (void)p_checkForPreviouslyDivergedCollaborationCache;
- (void)p_promptForDivergedCollaborationCache:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissCollaborationOfflineAlertIfNeeded;
- (void)p_promptUserWithCollaborationErrorAction:(id)arg1 becauseOffline:(BOOL)arg2 isContinuingActivity:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)p_endCollaborationModeByDisconnectingWithIgnoreCleanDocuments:(BOOL)arg1 isContinuingActivity:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)p_endCollaborationModeDueToCollaborationDisallowedContinuingActivity:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_endCollaborativeModeByReverting;
- (void)p_endCollaborativeModeByRevertingContinuingActivity:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_endCollaborativeModeBySavingLocalChangesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)p_updateCollaborativeModeByCheckingNetworkStatusWithLastKnownStatus:(long long)arg1;
- (void)p_updateCollaborativeModeBySettingCollaborationDisallowedErrorAction:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)p_setCollaborationDisallowedErrorAction:(id)arg1;
@property(readonly) TSACollaborationErrorAction *collaborationDisallowedErrorAction;
- (void)mergeAlternateContentsToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)isAlternateContentsMergeRequiredWhenMovingFromURL:(id)arg1 toURL:(id)arg2;
- (void)disassociateAlternateContentsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)prepareToDisassociateAlternateContentsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_handleCollaborationErrorAction:(id)arg1 withSelectedButton:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)i_stopSharingDocumentContinuingActivity:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_showCollaborationErrorAction:(id)arg1 documentRoot:(id)arg2 ignoreCleanDocuments:(BOOL)arg3 isContinuingActivity:(BOOL)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)showCollaborationErrorAction:(id)arg1 documentRoot:(id)arg2;
- (void)p_endCollaborativeModeForCollaboratorWithWasReadOnly:(BOOL)arg1 isContinuingActivity:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)p_handleCollaborativePermissionUpdateWithType:(long long)arg1 sharingState:(id)arg2 isContinuingActivity:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)p_beginCollaborativeModeWithSharingState:(id)arg1 isUserInitiated:(BOOL)arg2 isContinuingActivity:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (BOOL)p_needsUpdateCollaborationModeToIsCollaborative:(BOOL)arg1;
- (void)prepareForCollaborationSessionIfNeeded;
- (void)sharingStateRefreshed:(id)arg1 isUserInitiated:(BOOL)arg2 isContinuingActivity:(BOOL)arg3 serializationToken:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)refreshSharingStateWithReason:(id)arg1 isUserInitiated:(BOOL)arg2 flags:(unsigned long long)arg3 canCoalesce:(BOOL)arg4 isContinuingActivity:(BOOL)arg5 queue:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)refreshSharingStateWithReason:(id)arg1 isUserInitiated:(BOOL)arg2 flags:(unsigned long long)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)refreshSharingStateWithReason:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)refreshSharingStateWithReason:(id)arg1 flags:(unsigned long long)arg2;
- (void)refreshSharingStateWithReason:(id)arg1;
- (id)bodyForShareURL:(id)arg1 forService:(id)arg2;
- (id)_documentLinkStringForShareInvitationWithShareURL:(id)arg1;
- (void)shareUbiquitousDocumentWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)thumbnailImageForSharingPanel;
- (void)p_document:(id)arg1 didPrint:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)printDocumentWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 delegate:(id)arg3 didPrintSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (id)_moveToURLRecoveryErrorForURL:(id)arg1;
- (void)moveToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)moveDocumentToiCloudWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)didReplaceDocumentRoot;
- (void)willReplaceDocumentRoot;
- (BOOL)_revertToVersion:(id)arg1 preservingFirst:(BOOL)arg2 error:(id *)arg3;
- (BOOL)p_revertToContents:(id)arg1 ofType:(id)arg2 isAlternateContents:(BOOL)arg3 error:(id *)arg4;
- (BOOL)revertToAlternateContents:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)didReadFromTemplateURL:(id)arg1;
- (void)documentDidLoad;
- (void)didReadFromNativeURL:(id)arg1;
- (BOOL)p_readFromURL:(id)arg1 alternateContents:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromAlternateContents:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)willBeginReadingFromURL:(id)arg1;
- (BOOL)retrievePassphraseWithConsumer:(id)arg1 error:(id *)arg2;
- (BOOL)isEntireFileLoaded;
- (void)learnMoreAboutConflictWithOldVersion:(id)arg1;
- (void)learnMoreAboutSingleFile:(id)arg1;
- (void)usePackageFormat:(id)arg1;
- (void)useSingleFileFormat:(id)arg1;
- (void)changeFileType:(id)arg1;
- (BOOL)p_isPackageFileType;
- (void)p_setPreferredPackageTypeToPackage:(BOOL)arg1 onDocumentLoad:(BOOL)arg2;
@property(readonly, nonatomic) BOOL shouldSaveAsPackage;
- (BOOL)shouldSaveAsPackageToURL:(id)arg1 autosavedContentsURL:(id)arg2 sharingState:(id)arg3 saveOperation:(unsigned long long)arg4;
- (BOOL)p_shouldSaveAsPackageToURL:(id)arg1 autosavedContentsURL:(id)arg2 preferredPackageType:(long long)arg3 sharingState:(id)arg4 saveOperation:(unsigned long long)arg5;
@property(readonly, nonatomic) BOOL userCanChoosePackageType;
- (BOOL)_checkFileModificationDateBeforeSavingToURL:(id)arg1 saveOperation:(unsigned long long)arg2;
- (void)p_updateTspFileModificationDateForURL:(id)arg1;
- (void)setFileModificationDate:(id)arg1;
- (id)p_tspFileModificationDateForURL:(id)arg1;
- (id)p_fileModificationDateForURL:(id)arg1;
- (BOOL)hasUnautosavedChanges;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)isDocumentEdited;
- (BOOL)_shouldSaveDuplicateAtDestinationWithUserEnteredName:(BOOL)arg1;
- (id)duplicateAndReturnError:(id *)arg1;
- (void)p_performDocumentDuplicateUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (id)p_encryptionKeyForSaveOperation;
- (void)p_closeOpenDocumentsAtURL:(id)arg1;
- (id)p_originalContentsURLWithURL:(id)arg1;
- (id)p_defaultOriginalContentsURL;
- (id)p_duplicateDocumentWithUnmaterializedDataError;
- (id)p_overwriteRecoveryErrorForExistingPath:(id)arg1 destinationURL:(id)arg2 documentType:(id)arg3 saveOperation:(unsigned long long)arg4;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)didPresentSavingAllowedErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)checkIfSavingAllowedForExplicitSave:(BOOL)arg1 andContinue:(CDUnknownBlockType)arg2;
- (void)checkIfSavingAllowedAndContinue:(CDUnknownBlockType)arg1;
- (void)unlockWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)checkAutosavingSafetyForExplicitSave:(BOOL)arg1 andReturnError:(id *)arg2;
- (BOOL)checkAutosavingSafetyAndReturnError:(id *)arg1;
- (BOOL)_checkAutosavingThenUpdateChangeCountShouldInterruptMainThreadBlocking;
- (void)saveDocumentWithReplaceableContentAs:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocument:(id)arg1;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)p_isAutosaveForUntitledDocumentOperation:(unsigned long long)arg1;
- (BOOL)p_isSaveAsOperation:(unsigned long long)arg1;
- (BOOL)p_isSaveForVersionPreservationOperation:(unsigned long long)arg1;
- (BOOL)p_isSaveForDuplicateOperation:(unsigned long long)arg1;
- (BOOL)p_isSaveElsewhereOperation:(unsigned long long)arg1;
- (BOOL)p_isAutosaveOperation:(unsigned long long)arg1;
- (void)_asynchronousWritingDidEnd;
- (void)p_hideSaveProgressIfNeeded;
- (void)_asynchronousWritingDidBeginAfterUnblockingUserInteraction;
- (void)_didUnblockUserInteraction;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
@property(readonly, nonatomic) BOOL isClosedOrClosing;
- (BOOL)p_isClosingOrTerminating;
- (void)refreshPassword;
- (void)setPassphraseSavedInKeychain:(BOOL)arg1;
- (void)setEncryptionKeyWithPassphrase:(id)arg1 updateKeychain:(BOOL)arg2 cleanKeychain:(BOOL)arg3;
- (BOOL)isPasswordProtectedButNotProtectedOnDiskYet;
@property(readonly, nonatomic) BOOL isPasswordProtected;
- (void)updateUserActivityState:(id)arg1;
- (BOOL)prepareAndValidateSidecarViewStateObjectWithVersionUUIDMismatch:(id)arg1 originalDocumentViewStateObject:(id)arg2;
- (BOOL)prepareAndValidateViewStateObjectWithVersionUUIDMismatch:(id)arg1;
@property(readonly, nonatomic) NSString *viewStateFilename;
- (BOOL)p_decodingViewStateNeedsDocumentVersionUUID;
- (void)p_decodeViewState;
- (void)p_encodeViewStateWithCoder:(id)arg1;
- (void)p_encodeViewStateObject:(id)arg1 withCoder:(id)arg2;
- (void)p_retrieveViewStateDataFromCoder:(id)arg1;
- (void)p_unlockEncodeRestorableStateIfNeeded;
- (void)p_lockEncodeRestorableState;
- (id)decodeURLForKey:(id)arg1 options:(unsigned long long)arg2 fromCoder:(id)arg3;
- (id)encodeBookmarkDataForURL:(id)arg1 options:(unsigned long long)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2 withCoder:(id)arg3;
- (void)p_restoreDocumentWithTemplateURL:(id)arg1 templateDisplayName:(id)arg2 templateIdentifier:(id)arg3 documentLocale:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)p_restoreDocumentFromImportURL:(id)arg1 withCoder:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)restoreDocumentWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)p_userActivityNeedsSave;
- (void)invalidateRestorableState;
- (void)p_suspendCollaborationForVersionBrowser;
- (void)p_stopBrowsingVersionsOnCollaborativeUpdateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_stopBrowsingVersionsIfNeccessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_autosaveAndCloseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_autosaveAndCloseAsync;
- (void)close;
- (void)p_document:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)p_allowMailboxTimeToSendCommandsOnCloseWithCompletion:(CDUnknownBlockType)arg1;
- (id)p_stringForSavingToCloudStorageForServiceType:(unsigned long long)arg1;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)p_appPersistenceIsJustOff;
- (void)updateDocumentTitlebarButtonState;
- (void)windowControllerDidExitVersionBrowser:(id)arg1;
- (void)windowControllerWillExitVersionBrowser:(id)arg1;
- (void)windowControllerDidEnterVersionBrowser:(id)arg1;
- (void)windowControllerWillEnterVersionBrowser:(id)arg1;
- (void)performAsynchronousActivityOnSheetPausingIncomingICloudWrites:(BOOL)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)performAsynchronousActivityOnSheetUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_performOperationOnDocumentWindowUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_windowsDidShow;
- (void)showWindows;
- (void)p_processScheduledOperationsOnDocumentWindowWhileDuplicating:(BOOL)arg1;
@property(readonly, nonatomic) TMADocumentWindowController *documentWindowController;
- (id)newDocumentWindowController;
- (void)removeWindowController:(id)arg1;
- (void)addWindowController:(id)arg1;
- (void)makeWindowControllers;
- (id)documentWindowNibName;
@property(readonly, nonatomic) NSArray *tags;
@property(readonly) BOOL isUbiquitousItem;
@property(readonly) BOOL isShareable;
- (void)p_updateSharingStateWithSharingState:(id)arg1;
- (id)sharingStateForContext:(id)arg1;
@property(readonly, nonatomic) TSKSharingState *tskSharingState;
- (BOOL)p_isRecoveringFromCorruptedSharedDocument;
- (id)p_alternateContents;
- (void)setAlternateContents:(id)arg1;
- (id)alternateContents;
- (void)markFileAsDraftInTemporaryDirectory:(id)arg1;
- (void)setAutosavedContentsFileURL:(id)arg1;
- (void)setFileURLWithoutDocumentMove:(id)arg1;
- (void)setFileURL:(id)arg1;
@property(readonly, nonatomic) NSUUID *documentUUID;
@property(readonly, nonatomic) BOOL isUntitled;
- (void)didMakeWindowControllers;
- (id)displayName;
@property(readonly, nonatomic) NSString *defaultDraftName;
- (void)setContext:(id)arg1 documentURL:(id)arg2 fromImport:(BOOL)arg3;
- (unsigned long long)p_documentDataSizeThreshold;
- (void)dealloc;
- (BOOL)isTemplateType:(id)arg1;
@property(readonly, nonatomic) TSADocumentRoot *documentRoot;
- (void)p_endInitializingFromURL;
- (void)p_beginInitializingFromURL;
- (id)initWithTemplateInfo:(id)arg1 type:(id)arg2 locale:(id)arg3 error:(id *)arg4;
- (id)initForURL:(id)arg1 withAlternateContents:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (id)init;
- (id)processExportOptions:(id)arg1;
- (id)exportInfoForURL:(id)arg1 scriptExportFormat:(id)arg2 options:(id)arg3;
- (id)handleExportScriptCommand:(id)arg1;
@property(readonly, nonatomic) TSATemplateInfo *templateDescription;
- (BOOL)canExecuteCommand:(id)arg1;
- (id)objectSpecifier;
- (id)scriptIdentifier;

// Remaining properties
@property(readonly, nonatomic) BOOL areNewExternalReferencesToDataAllowed;
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSURL *fileURL;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL ignoreDocumentSupport;
@property(readonly) Class superclass;

@end

