//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDCanvasMessageHUDControllerDelegate-Protocol.h"
#import "TSDDragAndDropDestination-Protocol.h"
#import "TSDMagicMoveMatching-Protocol.h"

@class CALayer, CAShapeLayer, NSArray, NSDictionary, NSSet, NSString, NSView, TSDCanvas, TSDCanvasMessageHUDController, TSDInteractiveCanvasController, TSDKnob, TSDKnobTracker, TSDLayout, TSDLayoutGeometry, TSDTilingBackgroundQueue, TSKCommandController, TSUColor, TSUImage, TSUOnce;
@protocol OS_dispatch_queue, TSDContainerRep, TSDInfo;

@interface TSDRep : NSObject <TSDMagicMoveMatching, TSDDragAndDropDestination, TSDCanvasMessageHUDControllerDelegate>
{
    TSDCanvas *mCanvas;
    TSDRep<TSDContainerRep> *mParentRep;
    TSDKnobTracker *mKnobTracker;
    BOOL mSelectionHighlightLayerValid;
    CALayer *mSelectionHighlightLayer;
    BOOL mCollaboratorCursorLayerValid;
    CALayer *mCollaboratorCursorLayer;
    NSDictionary *mTextureAnimationInfo;
    BOOL mShowTemporaryHighlight;
    CALayer *mTemporaryHighlightLayer;
    BOOL mShowDragAndDropHighlight;
    CALayer *mDragAndDropHighlightLayer;
    TSDLayout *mTemporaryMixingLayout;
    // Error parsing type: Ac, name: mWantsToRedrawWithOpenGL
    TSDLayout *mLayout;
    struct CGColor *mDefaultSelectionHighlightColor;
    TSDLayoutGeometry *mLastGeometryInRoot;
    struct CGRect mOriginalLayerFrameInScaledCanvas;
    TSDTilingBackgroundQueue *mTileQueue;
    TSUOnce *mTileQueueOnce;
    NSObject<OS_dispatch_queue> *mKnobsAccessQueue;
    NSArray *mKnobs;
    BOOL mKnobPositionsInvalid;
    BOOL mShowKnobsWhenManipulated;
    BOOL mKnobsAreShowing;
    BOOL mHasBeenRemoved;
    TSDCanvasMessageHUDController *mCanvasMessageHUDController;
    CALayer *mProgressBarLayer;
    BOOL mProgressBarLayerIsOverCheckerboard;
    CAShapeLayer *mProgressBarWhiteBackingLayer;
}

+ (struct CGPath *)newDownloadProgressIndicatorPathOfSize:(struct CGSize)arg1;
+ (double)downloadProgressIndicatorDuration;
@property(readonly, nonatomic) BOOL shouldShowDragAndDropHighlight; // @synthesize shouldShowDragAndDropHighlight=mShowDragAndDropHighlight;
@property(copy, nonatomic) NSDictionary *textureAnimationInfo; // @synthesize textureAnimationInfo=mTextureAnimationInfo;
@property(readonly, nonatomic, getter=isSelectionHighlightLayerValid) BOOL selectionHighlightLayerValid; // @synthesize selectionHighlightLayerValid=mSelectionHighlightLayerValid;
@property(readonly, nonatomic) BOOL knobsAreShowing; // @synthesize knobsAreShowing=mKnobsAreShowing;
@property(nonatomic) BOOL showKnobsDuringManipulation; // @synthesize showKnobsDuringManipulation=mShowKnobsWhenManipulated;
@property(nonatomic) __weak TSDKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) __weak TSDRep<TSDContainerRep> *parentRep; // @synthesize parentRep=mParentRep;
@property(retain, nonatomic) TSDLayout *temporaryMixingLayout; // @synthesize temporaryMixingLayout=mTemporaryMixingLayout;
@property(readonly, nonatomic) __weak TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(readonly, nonatomic, getter=isCollaboratorCursorLayerValid) BOOL collaboratorCursorLayerValid; // @synthesize collaboratorCursorLayerValid=mCollaboratorCursorLayerValid;
- (void).cxx_destruct;
- (struct CGRect)p_scaledRectInRootForProgressIndicatorWithPlaceholderImage:(BOOL)arg1;
- (struct CGSize)p_scaledSizeForProgressIndicator;
@property(readonly, nonatomic) struct CGRect naturalBoundsForDownloadProgressPlaceholderImage;
- (BOOL)p_progessIndicatorCanFitInLayoutWithPlaceholderImage:(BOOL)arg1;
- (struct CGRect)p_unscaledRectForIndicator;
@property(readonly, nonatomic) BOOL canDrawDownloadProgressPlaceholderImage;
@property(readonly, nonatomic) TSUImage *downloadProgressPlaceholderImage;
@property(readonly, nonatomic) BOOL shouldShowCheckerboard;
@property(readonly, nonatomic) BOOL isDataCurrentlyDownloading;
- (void)teardownProgressIndicator;
- (void)moveProgressIndictatorToEndOfLayerArray:(id)arg1;
@property(readonly, nonatomic) BOOL shouldShowDownloadProgressIndicator;
- (id)p_newAnimatedDownloadProgressIndicatorLayerOverCheckerboard:(BOOL)arg1;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
@property(readonly, nonatomic) BOOL wantsToDistortWithImagerContext;
@property(readonly, nonatomic) NSView *contentPlatformView;
@property(readonly, nonatomic) BOOL directlyManagesContentPlatformView;
- (void)i_shutdownTileQueue;
- (id)i_tileQueue;
@property(readonly, nonatomic) BOOL mustDrawOnMainThreadForInteractiveCanvas;
@property(readonly, nonatomic) BOOL canDrawInParallel;
@property(readonly, nonatomic) BOOL canDrawInBackgroundDuringScroll;
@property(readonly, nonatomic) int tilingMode;
- (BOOL)shouldSelectInfoWhenTargetOfDrag:(id)arg1;
- (id)p_highlightLayer;
@property(readonly, nonatomic) CALayer *dragAndDropHighlightLayer;
- (struct CGPath *)newHighlightPathInScaledSpace;
- (void)hideDragAndDropUI;
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 dragInfo:(id)arg2;
- (BOOL)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (id)repToHighlightForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct CGPoint centerForRotation;
@property(readonly, nonatomic) BOOL directlyManagesLayerContent;
@property(readonly, nonatomic) struct CGRect boundsForResizeGuideUI;
@property(readonly, nonatomic) BOOL wantsGuidesWhileResizing;
@property(readonly, nonatomic) NSObject<TSDInfo> *infoForTransforming;
@property(readonly, nonatomic) BOOL canFlipDuringResize;
@property(readonly, nonatomic) BOOL resizeFromCenterOnly;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (struct CGRect)targetRectForEditMenu;
- (id)itemsToAddToEditMenu;
- (BOOL)handlesEditMenu;
@property(readonly, nonatomic) BOOL isLocked;
@property(readonly, nonatomic) BOOL isPlaceholder;
@property(readonly, nonatomic) BOOL shouldSuppressFontSmoothing;
@property(readonly, nonatomic) BOOL shouldShowSizesInRulers;
@property(readonly, nonatomic) BOOL shouldShowDragHUD;
@property(readonly, nonatomic) BOOL isOpaque;
@property(readonly, nonatomic) double opacity;
@property(readonly, nonatomic) BOOL masksToBounds;
@property(readonly, nonatomic) NSArray *allLayers;
- (void)invalidateAnnotationColor;
- (void)invalidateComments;
@property(readonly, nonatomic) BOOL shouldShowCommentHighlight;
@property(readonly, nonatomic) BOOL wantsActivityLine;
@property(readonly, nonatomic) NSArray *additionalLayersOverLayer;
- (id)p_addDownloadProgressIndicatorLayerIfNeeded:(id)arg1;
- (void)p_addAnimationToDownloadProgressIndicatorLayerIfNeeded;
@property(readonly, nonatomic) NSArray *additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (BOOL)canEditWithEditor:(id)arg1;
- (void)willBeRemoved;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (BOOL)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (BOOL)mustDrawTilingLayerOnMainThread:(id)arg1;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (BOOL)shouldLayoutTilingLayer:(id)arg1;
@property(readonly, nonatomic) struct CGRect frameForMagicMove;
- (void)didDisplayTextureWithDescription:(id)arg1 isAtEndOfBuild:(BOOL)arg2;
- (id)textureForDescription:(id)arg1;
- (void)setTextureAttributes:(id)arg1 textureBounds:(struct CGRect)arg2;
- (struct CGAffineTransform)unRotatedTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) BOOL wantsToHandleTapsWhenLocked;
@property(readonly, nonatomic) BOOL wantsToHandleTapsOnContainingGroup;
@property(readonly, nonatomic) BOOL canClipThemeContentToCanvas;
- (BOOL)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)willHandleResizingLayoutForRep:(id)arg1;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
@property(readonly, nonatomic) NSString *actionStringForResize;
@property(readonly, nonatomic) BOOL isBeingResized;
- (id)dynamicResizeDidBegin;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;
- (void)p_dynamicRotateDidEnd;
- (void)dynamicallyRotatingWithTracker:(id)arg1;
@property(readonly, nonatomic) BOOL shouldRasterizeLayerDuringRotation;
@property(readonly, nonatomic) struct CGPoint unscaledGuidePosition;
@property(readonly, nonatomic) double angleForRotation;
@property(readonly, nonatomic) NSString *actionStringForRotate;
@property(readonly, nonatomic) BOOL isBeingRotated;
- (void)p_dynamicRotateDidBegin;
- (void)dynamicRotateDidBegin;
- (void)endDragInlineWithText;
- (void)beginDragInlineWithText;
@property(readonly, nonatomic) BOOL allowDragAcrossPageBoundaries;
@property(readonly, nonatomic) BOOL demandsExclusiveSelection;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
@property(readonly, nonatomic) BOOL allowRotateDelegate;
@property(readonly, nonatomic) BOOL allowResizeDelegate;
@property(readonly, nonatomic) BOOL allowDragDelegate;
- (void)dynamicDragDidEnd;
- (BOOL)positionAttachmentUsingLayoutIfNeeded:(struct CGPoint)arg1;
- (id)commandForAcceptingPasteWithImageInfo:(id)arg1 outSelectionBehavior:(out id *)arg2;
- (BOOL)canPasteDataFromPhysicalKeyboard:(id)arg1;
- (BOOL)shouldAllowReplacementFromDrop;
- (BOOL)shouldAllowReplacementFromPaste;
- (BOOL)dragDidChangeGeometry;
- (BOOL)p_dragDidChangeGeometry;
- (struct CGRect)i_originalLayerFrameInScaledCanvas;
- (struct CGPoint)i_dragOffset;
- (void)i_dynamicDragDidEnd;
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint)arg1;
- (BOOL)resetGuidesAfterDragAfterReset;
@property(readonly, nonatomic) BOOL exclusivelyProvidesGuidesWhileAligning;
@property(readonly, nonatomic) BOOL providesGuidesWhileAligning;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL isBeingDragged;
- (void)p_dynamicDragDidBegin;
@property(readonly, nonatomic) NSString *actionStringForDrag;
- (void)dynamicDragDidBegin;
@property(readonly, nonatomic) BOOL isInDynamicOperation;
- (void)p_dynamicOperationDidEnd;
- (void)dynamicOperationDidEnd;
- (void)p_dynamicOperationDidBegin;
- (void)dynamicOperationDidBegin;
- (id)pencilOverlayLayersForPencilOverlayDetails:(id)arg1;
- (id)pencilOverlayDetails;
- (void)selectPencilAnnotation:(id)arg1 shouldPushOverEmptySelection:(BOOL)arg2;
- (BOOL)shouldSelectPencilAnnotation:(id)arg1 atPoint:(struct CGPoint)arg2;
- (id)pencilAnnotationAtHitPoint:(struct CGPoint)arg1;
- (id)containedPencilAnnotations;
- (id)selectedPencilAnnotation;
- (id)pencilAnnotationContainer;
- (void)invalidatePencilOverlayLayersCache;
@property(readonly, nonatomic) NSArray *pencilOverlayLayers;
@property(readonly, nonatomic) double contentsScale;
- (void)positionDidUpdateForCanvasMessageHUDController:(id)arg1;
- (void)p_updatePosition:(struct CGPoint)arg1 forCanvasMessageHUDController:(id)arg2;
- (void)removeCanvasMessageHUDController:(id)arg1;
- (void)addCanvasMessageHUDController:(id)arg1;
- (void)presentCanvasMessageHUDAtUnscaledPoint:(struct CGPoint)arg1 withString:(id)arg2;
@property(readonly, nonatomic) NSArray *popoutLayers;
@property(readonly, nonatomic) NSArray *overlayLayers;
- (id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(BOOL)arg3;
- (struct CGPoint)convertKnobPositionFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)i_invalidateSelectionHighlightLayer;
- (void)updateSelectionHighlightLayer:(id)arg1;
- (id)makeSelectionHighlightLayer;
@property(readonly, nonatomic) CALayer *selectionHighlightLayer;
- (void)invalidateSelectionHighlightLayer;
- (struct CGAffineTransform)transformForHighlightLayer;
@property(readonly, nonatomic) struct CGRect boundsForHighlightLayer;
@property(nonatomic) struct CGColor *selectionHighlightColor;
@property(readonly, nonatomic) double selectionHighlightWidth;
- (BOOL)knobTrackingShouldFailForForceTouchOnKnob:(id)arg1 atNaturalPoint:(struct CGPoint)arg2;
- (BOOL)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)fadeKnobsOut;
- (void)fadeKnobsIn;
- (void)turnKnobsOn;
@property(readonly, nonatomic) BOOL shouldShowKnobs;
@property(readonly, nonatomic) BOOL shouldDisplayHyperlinkUI;
@property(readonly, nonatomic) BOOL isEditingPath;
- (struct CGPoint)unscaledActivityLineEndPointForAnnotation:(id)arg1 withSearchReference:(id)arg2;
@property(readonly, nonatomic) BOOL shouldShowCommentUIDirectlyOverRep;
@property(readonly, nonatomic) BOOL shouldCreateCommentKnob;
@property(readonly, nonatomic) BOOL shouldCreateLockedKnobs;
@property(readonly, nonatomic) BOOL shouldCreateSelectionKnobs;
@property(readonly, nonatomic) BOOL shouldCreateKnobs;
@property(readonly, nonatomic) BOOL shouldShowSelectionHighlight;
@property(readonly, nonatomic) struct CGAffineTransform knobPositionTransformForInspectorResize;
@property(readonly, nonatomic) TSDKnob *knobForInspectorResize;
@property(readonly, nonatomic) double additionalRotationForKnobOrientation;
- (id)knobForTag:(unsigned long long)arg1;
- (void)p_actionGhostKnobHit;
- (void)p_toggleHyperlinkUIVisibility;
- (void)p_toggleCommentVisibility;
- (id)newTrackerForKnob:(id)arg1;
- (void)invalidateKnobPositions;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGPoint)p_positionOfActionGhostKnobForBounds:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGPoint positionOfActionGhostKnob;
@property(readonly, nonatomic) struct CGPoint positionOfHyperlinkKnob;
@property(readonly, nonatomic) BOOL forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;
@property(readonly, nonatomic) struct CGRect trackingBoundsForStandardKnobs;
@property(readonly, nonatomic) NSSet *additionalRepsToResize;
- (void)addActionGhostKnobToArrayIfNecessary:(id)arg1;
- (void)addHyperlinkKnobToArray:(id)arg1;
- (void)addCommentKnobToArray:(id)arg1;
- (void)addLockedKnobsToArray:(id)arg1;
- (void)addSelectionKnobsToArray:(id)arg1;
- (id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2;
- (void)addKnobsToArray:(id)arg1;
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
- (void)invalidateKnobs;
@property(readonly, nonatomic) NSArray *knobs;
@property(readonly, nonatomic) struct CGRect boundsForStandardKnobs;
@property(readonly, nonatomic) CALayer *collaboratorCursorLayer;
- (void)addCollaboratorCursorHoverKnobsToArray:(id)arg1;
- (void)collaborationParticipantsDidChange;
- (void)invalidateDragAndDropHighlightLayer;
@property(readonly, nonatomic, getter=isDragAndDropHighlightLayerValid) BOOL dragAndDropHighlightLayerValid;
- (void)invalidateCollaboratorCursorLayer;
@property(readonly, nonatomic) struct CGAffineTransform transformForCollaboratorCursorLayer;
@property(readonly, nonatomic) struct CGRect boundsForCollaboratorCursorLayer;
- (void)hideCollaboratorCursors;
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;
@property(readonly, nonatomic) TSUColor *currentCollaboratorCursorColor;
- (id)p_currentCollaboratorLobbySession;
@property(readonly, nonatomic) BOOL shouldShowCollaboratorCursorHighlight;
@property(readonly, nonatomic) BOOL shouldAddCollaboratorLayerToOverlays;
- (void)becameNotSelected;
- (void)becameSelected;
- (BOOL)isSelected;
- (BOOL)isSelectedIgnoringLocking;
- (void)i_configureFontSmoothingForContext:(struct CGContext *)arg1 layer:(id)arg2;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
@property(readonly, nonatomic) struct CGRect clipRect;
@property(readonly, nonatomic) BOOL isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (id)colorBehindLayer:(id)arg1;
@property(readonly, nonatomic) Class layerClass;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScaleDidChange;
- (void)wideGamutValueDidChange;
- (void)screenScaleDidChange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)processChanges:(id)arg1;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnLayoutGeometry:(id)arg3;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnTransform:(struct CGAffineTransform)arg3 andSize:(struct CGSize)arg4;
- (void)antiAliasDefeatLayerFrame:(struct CGRect *)arg1 forTransform:(struct CGAffineTransform)arg2;
- (void)antiAliasDefeatLayerTransform:(struct CGAffineTransform *)arg1 forFrame:(struct CGRect)arg2;
- (void)updateLayerGeometryFromLayout:(id)arg1;
@property(readonly, nonatomic) struct CGAffineTransform layerTransformInRootForZeroAnchor;
@property(readonly, nonatomic) struct CGAffineTransform parentLayerInverseTransformInRootForZeroAnchor;
- (struct CGAffineTransform)layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (void)updateChildrenFromLayout;
@property(readonly, nonatomic) TSDRep *repForHandleSingleTap;
@property(readonly, nonatomic) TSDRep *repForRotating;
- (id)p_repForSelectingIgnoringTopLevelEditing:(BOOL)arg1;
- (id)i_repForSelectingIgnoringTopLevelEditing;
@property(readonly, nonatomic) TSDRep *repForSelecting;
@property(readonly, nonatomic) NSSet *additionalRepsForDragging;
- (id)p_repForDraggingIgnoringTopLevelEditing:(BOOL)arg1;
- (id)i_repForDraggingIgnoringTopLevelEditing;
@property(readonly, nonatomic) TSDRep *repForDragging;
- (BOOL)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(char *)arg2;
@property(readonly, nonatomic) BOOL shouldExpandHitRegionWhenSmall;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(BOOL)arg2;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(BOOL)arg2 passingTest:(CDUnknownBlockType)arg3;
- (BOOL)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1 withPrecision:(BOOL)arg2;
- (struct CGRect)convertNaturalRectFromLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGPoint)convertNaturalPointFromLayerRelative:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToLayerRelative:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalFromLayerRelative;
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalToLayerRelative;
@property(readonly, nonatomic) struct CGPoint layerOffsetForDragging;
@property(readonly, nonatomic) struct CGRect layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
@property(readonly, nonatomic) struct CGRect layerFrameInScaledCanvas;
@property(readonly, nonatomic) struct CGRect frameInScreenSpace;
@property(readonly, nonatomic) struct CGRect frameInUnscaledCanvasIncludingChrome;
@property(readonly, nonatomic) struct CGRect frameInUnscaledCanvas;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPath *)newPathInScaledCanvasFromNaturalRect:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGRect naturalBounds;
@property(readonly, nonatomic) double angleInRoot;
- (void)addToSet:(id)arg1;
- (id)ancestorRepForDrawingIntoLayer;
- (id)parentRepToPerformSelecting;
- (void)willEndSharedReadOnlyMode;
- (void)willBeginSharedReadOnlyMode;
@property(readonly, nonatomic) BOOL hasBeenRemoved;
- (void)i_willBeRemoved;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)p_setNeedsDisplayForParentChangeIfNeeded;
- (void)setWantsToRedrawWithOpenGL;
- (id)p_connectedReps;
@property(readonly, nonatomic) TSKCommandController *commandController;
@property(readonly, nonatomic) NSObject<TSDInfo> *info;
@property(readonly, nonatomic) TSDLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)layerHostContainerFocusDidChange;
@property(readonly, nonatomic) CALayer *temporaryHighlightLayer;
@property(nonatomic) BOOL shouldShowTemporaryHighlight;
@property(readonly, nonatomic) BOOL supportsCopyAsPDF;
- (BOOL)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (BOOL)wantsContextMenuAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (void)updateCommentHoverAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseExitedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseMovedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseEnteredAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)p_handleMouseInsideRepAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)p_comment;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerForKnob:(id)arg1 atPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGRect)i_partition_deepClipRect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

