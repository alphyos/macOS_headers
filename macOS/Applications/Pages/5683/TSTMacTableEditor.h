//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSTTableEditor.h"

#import "NSMenuDelegate-Protocol.h"
#import "TSDMacInspectorRefreshDelegate-Protocol.h"
#import "TSDMacTouchBarAwareEditor-Protocol.h"
#import "TSTMacTableTouchBarProviderDelegate-Protocol.h"

@class NSDocument, NSSet, NSString, TSDEditorController, TSKDocumentRoot, TSTCellInspectorPropertyVendor, TSTMacTableTouchBarProvider;
@protocol TSKSearchReference;

@interface TSTMacTableEditor : TSTTableEditor <TSDMacInspectorRefreshDelegate, TSDMacTouchBarAwareEditor, TSTMacTableTouchBarProviderDelegate, NSMenuDelegate>
{
    BOOL mEditingConditionalStyles;
    NSDocument *mEditorDocument;
    TSTCellInspectorPropertyVendor *mCellInspectorPropertyVendor;
    TSTMacTableTouchBarProvider *_touchBarProvider;
}

+ (void)initialize;
+ (Class)cellEditorClass;
+ (Class)tableNameEditorClass;
@property(nonatomic, getter=isEditingConditionalStyles) BOOL editingConditionalStyles; // @synthesize editingConditionalStyles=mEditingConditionalStyles;
@property(retain, nonatomic) TSTMacTableTouchBarProvider *touchBarProvider; // @synthesize touchBarProvider=_touchBarProvider;
@property(retain, nonatomic) TSTCellInspectorPropertyVendor *cellInspectorPropertyVendor; // @synthesize cellInspectorPropertyVendor=mCellInspectorPropertyVendor;
- (void)touchBarToggleFrozenHeaderRows;
- (BOOL)touchBarHeaderRowsFrozen;
- (void)touchBarToggleFrozenHeaderColumns;
- (BOOL)touchBarHeaderColumnsFrozen;
- (void)touchBarRemoveRow;
- (BOOL)touchBarCanRemoveRow;
- (void)touchBarAddRow;
- (BOOL)touchBarCanAddRow;
- (void)touchBarRemoveColumn;
- (BOOL)touchBarCanRemoveColumn;
- (void)touchBarAddColumn;
- (BOOL)touchBarCanAddColumn;
- (void)touchBarAddColumns;
- (BOOL)touchBarCanAddColumns;
- (void)touchBarAddRows;
- (BOOL)touchBarCanAddRows;
- (void)tableNameEditorBecameInactive;
- (void)didProcessAllChanges;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (id)cursorAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)p_updateSingleColumnContextMenu:(id)arg1;
- (unsigned long long)p_countCustomFilterMenuItemsForSelectedColumnWithQuickFilterItems:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)didReplaceTopLevelInspectors;
- (BOOL)shouldReplaceTopLevelInspectorPanesForChangeRecords:(id)arg1 forChangeSource:(id)arg2;
- (id)observableModelsForTopLevelInspectorReplacement;
- (id)rangeSortMenuItemsForCellSelection:(id)arg1 sortColumn:(unsigned char)arg2;
- (void)rangeSortTableDescending:(id)arg1;
- (void)rangeSortTableAscending:(id)arg1;
- (BOOL)canRangeSortTableWithRule:(id)arg1;
- (id)quickFilterMenuItemsForCellSelection:(id)arg1;
- (void)toggleFilterRuleFromColumnMenu:(id)arg1;
- (BOOL)canManageQuickFilters;
- (id)cellSelectionForManagingFilters;
- (void)addPresetFromSender:(id)arg1 withImage:(id)arg2;
- (BOOL)canAddPresetFromImage;
- (id)textContainerProxies;
- (id)paragraphSelectionProxies;
- (id)paragraphSelectionProxy;
- (id)characterSelectionProxies;
- (id)characterSelectionProxy;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (void)populateReplacePasteboard:(id)arg1;
- (void)populateFindPasteboard:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)convertToHeaderColumnFromContextMenu:(id)arg1;
- (void)convertToFooterRowFromContextMenu:(id)arg1;
- (void)convertToHeaderRowFromContextMenu:(id)arg1;
- (void)fitRowContentFromContextMenu:(id)arg1;
- (void)fitColumnContentFromContextMenu:(id)arg1;
- (void)showContainedColumnsFromContextMenu:(id)arg1;
- (void)showRightColumnsFromContextMenu:(id)arg1;
- (void)showLeftColumnsFromContextMenu:(id)arg1;
- (void)showContainedRowsFromContextMenu:(id)arg1;
- (void)showBelowRowsFromContextMenu:(id)arg1;
- (void)showAboveRowsFromContextMenu:(id)arg1;
- (void)hideColumnsFromContextMenu:(id)arg1;
- (void)hideRowsFromContextMenu:(id)arg1;
- (void)deleteColumnsFromContextMenu:(id)arg1;
- (void)deleteRowsFromContextMenu:(id)arg1;
- (void)addHeaderColumnBeforeFromContextMenu:(id)arg1;
- (void)addFooterRowBelowFromContextMenu:(id)arg1;
- (void)addHeaderRowAboveFromContextMenu:(id)arg1;
- (void)addColumnsAfterFromContextMenu:(id)arg1;
- (void)addColumnsBeforeFromContextMenu:(id)arg1;
- (void)addRowsBelowFromContextMenu:(id)arg1;
- (void)addRowAboveFromContextMenu:(id)arg1;
- (BOOL)canUpdateStateForUserInterfaceItemWithAction:(SEL)arg1;
- (long long)relativeDirectionForAddingDimensionWithEditAction:(SEL)arg1;
- (long long)additionDimensionForEditAction:(SEL)arg1;
- (void)sortDescendingFromContextMenu:(id)arg1;
- (void)sortAscendingFromContextMenu:(id)arg1;
- (void)preflightEditorAction;
- (void)addContextualMenuItemsToMenu:(id)arg1 clickAtPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (void)beginStockFormulaEditing;
- (void)insertStockUI:(id)arg1;
- (void)insertFunctionViaMenu:(id)arg1;
- (BOOL)commitEditingAndReturnError:(id *)arg1;
- (void)discardEditing;
- (BOOL)commitEditing;
- (id)editorForArrowKeyEvents;
- (void)containedEditorDidBecomeTextInputEditor:(id)arg1;
- (void)endContainedTextEditing;
- (void)beginContainedTextEditingAtCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2 setTextSelectionAtUnscaledCanvasPoint:(struct CGPoint)arg3;
- (id)p_documentToBeginEditing;
- (BOOL)supportsTextEditingInControlCellsWithFormat:(int)arg1 forcingFormulaEditing:(BOOL)arg2;
- (void)delete:(id)arg1;
- (void)paste:(id)arg1 viaKeyboard:(BOOL)arg2;
- (BOOL)p_selectionTypeIsCellSubselection:(long long)arg1;
- (void)fitRowContentFromInspector:(id)arg1;
- (void)fitColumnContentFromInspector:(id)arg1;
- (id)selectedCellRegionForEditorAction:(id)arg1;
- (id)selectionForEditorActionWithObject:(id)arg1;
- (BOOL)canToggleCellEditor;
- (BOOL)canShowConditionalHighlightingInspector;
- (BOOL)canDrag;
- (void)p_updateMenuStateForLigatureAction:(SEL)arg1 withMenuItem:(id)arg2;
- (void)p_updateMenuStateForCapsAction:(SEL)arg1 withMenuItem:(id)arg2;
- (void)p_updateMenuStateForAlignmentAction:(SEL)arg1 withMenuItem:(id)arg2;
- (void)updateStateForUserInterfaceItem:(id)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (id)selectionForEditorAction:(SEL)arg1;
- (id)p_chromeOrExpandedSelectionForColumnOrRow:(long long)arg1;
- (void)setNumberOfFooterRows:(id)arg1;
- (void)setNumberOfHeaderRows:(id)arg1;
- (void)setNumberOfHeaderColumns:(id)arg1;
- (void)p_emptyFilteredStateDidChange:(id)arg1;
- (void)clearAll:(id)arg1;
- (void)tableSubselectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)tableNameEditorBecameActive;
- (id)permittedSharedReadOnlyActions;
- (void)willResignCurrentEditor;
- (void)setInfos:(id)arg1;
- (void)trimSelectionBeyondCellSelectionIfNecessary;
- (void)p_cleanup;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (id)tma_formatInspectorPaneSelectedPaneIdentifierForIdentifiers:(id)arg1 previousIdentifier:(id)arg2 editorsDidChange:(BOOL)arg3 newCanvasObject:(BOOL)arg4;
- (BOOL)tma_formatInspectorPanesShouldContinueEditorStackTraversal;
- (id)tma_formatInspectorPaneIdentifiers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) id <TSKSearchReference> editingSearchReference;
@property(retain, nonatomic) TSDEditorController *editorController;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAttribution;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly) Class superclass;

@end

