//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSTTableKnobTracker.h"

#import "CALayerDelegate-Protocol.h"
#import "TSTTableAnimationController-Protocol.h"
#import "TSTTableAnimationObserver-Protocol.h"
#import "TSTTableDragMoveToCanvasStarter-Protocol.h"
#import "TSTTableDragStarter-Protocol.h"

@class CALayer, CAShapeLayer, NSMutableIndexSet, NSString, TSTAdaptiveLayoutMediator, TSTRowColDraggingSource, TSTTableAnimationDirector, TSTTableRowColMoveTableAnimation, TSUBezierPath, TSUImage;

@interface TSTMacTableRowColMoverKnobTracker : TSTTableKnobTracker <CALayerDelegate, TSTTableAnimationController, TSTTableAnimationObserver, TSTTableDragStarter, TSTTableDragMoveToCanvasStarter>
{
    BOOL _startAnimationCompleted;
    BOOL _endMovingKnobStarted;
    BOOL _targetMoverDrawn;
    BOOL _draggingSessionBegan;
    BOOL _copyMode;
    BOOL _moveModeAllowed;
    BOOL _dynamicRowColHidingAllowed;
    BOOL _didEndKnobTracking;
    long long _direction;
    struct TSUCellRect _targetCellRange;
    struct TSUCellRect _entireCellRange;
    CALayer *_target;
    CALayer *_targetMover;
    CALayer *_targetShadow;
    TSUImage *_targetImage;
    CAShapeLayer *_startZone;
    CAShapeLayer *_startZoneMask;
    TSTAdaptiveLayoutMediator *_adaptiveLayoutMediator;
    double _tableNameHeight;
    TSTTableAnimationDirector *_animationDirector;
    double _mergeCellAdjust;
    struct TSUCellRect _targetDrawnCellRange;
    CALayer *_targetContent;
    TSUBezierPath *_targetShadowBezierPath;
    TSTTableRowColMoveTableAnimation *_targetAnimation;
    NSMutableIndexSet *_currentUnmergedGridIndices;
    TSTRowColDraggingSource *_draggingSource;
    unsigned long long _finalDragOperation;
    struct CGPoint _position;
    struct CGPoint _targetPosition;
    struct CGPoint _targetMoverPosition;
    struct CGSize _targetImageInfo;
    struct CGPoint _targetImageCenterShift;
    struct CGPoint _targetMoverCenterShift;
    struct CGRect _targetKnobFrame;
    struct CGRect _breakawayFrame;
    struct CGAffineTransform _scaleTransform;
    struct CGAffineTransform _scaledTransformInRoot;
}

@property(nonatomic) struct CGRect breakawayFrame; // @synthesize breakawayFrame=_breakawayFrame;
@property(nonatomic) BOOL didEndKnobTracking; // @synthesize didEndKnobTracking=_didEndKnobTracking;
@property(nonatomic) unsigned long long finalDragOperation; // @synthesize finalDragOperation=_finalDragOperation;
@property(readonly, nonatomic) BOOL dynamicRowColHidingAllowed; // @synthesize dynamicRowColHidingAllowed=_dynamicRowColHidingAllowed;
@property(nonatomic) BOOL moveModeAllowed; // @synthesize moveModeAllowed=_moveModeAllowed;
@property(nonatomic) BOOL copyMode; // @synthesize copyMode=_copyMode;
@property(retain, nonatomic) TSTRowColDraggingSource *draggingSource; // @synthesize draggingSource=_draggingSource;
@property(nonatomic) BOOL draggingSessionBegan; // @synthesize draggingSessionBegan=_draggingSessionBegan;
@property(retain, nonatomic) NSMutableIndexSet *currentUnmergedGridIndices; // @synthesize currentUnmergedGridIndices=_currentUnmergedGridIndices;
@property(nonatomic) struct CGPoint targetMoverCenterShift; // @synthesize targetMoverCenterShift=_targetMoverCenterShift;
@property(nonatomic) struct CGPoint targetImageCenterShift; // @synthesize targetImageCenterShift=_targetImageCenterShift;
@property(retain, nonatomic) TSTTableRowColMoveTableAnimation *targetAnimation; // @synthesize targetAnimation=_targetAnimation;
@property(nonatomic) struct CGSize targetImageInfo; // @synthesize targetImageInfo=_targetImageInfo;
@property(retain, nonatomic) TSUBezierPath *targetShadowBezierPath; // @synthesize targetShadowBezierPath=_targetShadowBezierPath;
@property(nonatomic) struct CGRect targetKnobFrame; // @synthesize targetKnobFrame=_targetKnobFrame;
@property(retain, nonatomic) CALayer *targetContent; // @synthesize targetContent=_targetContent;
@property(nonatomic) BOOL targetMoverDrawn; // @synthesize targetMoverDrawn=_targetMoverDrawn;
@property(nonatomic) struct CGPoint targetMoverPosition; // @synthesize targetMoverPosition=_targetMoverPosition;
@property(nonatomic) struct CGPoint targetPosition; // @synthesize targetPosition=_targetPosition;
@property(nonatomic) struct TSUCellRect targetDrawnCellRange; // @synthesize targetDrawnCellRange=_targetDrawnCellRange;
@property(nonatomic) double mergeCellAdjust; // @synthesize mergeCellAdjust=_mergeCellAdjust;
@property(nonatomic) BOOL endMovingKnobStarted; // @synthesize endMovingKnobStarted=_endMovingKnobStarted;
@property(retain, nonatomic) TSTTableAnimationDirector *animationDirector; // @synthesize animationDirector=_animationDirector;
@property(nonatomic) double tableNameHeight; // @synthesize tableNameHeight=_tableNameHeight;
@property(nonatomic) struct CGAffineTransform scaledTransformInRoot; // @synthesize scaledTransformInRoot=_scaledTransformInRoot;
@property(nonatomic) struct CGAffineTransform scaleTransform; // @synthesize scaleTransform=_scaleTransform;
@property(retain, nonatomic) TSTAdaptiveLayoutMediator *adaptiveLayoutMediator; // @synthesize adaptiveLayoutMediator=_adaptiveLayoutMediator;
@property(retain, nonatomic) CAShapeLayer *startZoneMask; // @synthesize startZoneMask=_startZoneMask;
@property(retain, nonatomic) CAShapeLayer *startZone; // @synthesize startZone=_startZone;
@property(retain, nonatomic) TSUImage *targetImage; // @synthesize targetImage=_targetImage;
@property(retain, nonatomic) CALayer *targetShadow; // @synthesize targetShadow=_targetShadow;
@property(retain, nonatomic) CALayer *targetMover; // @synthesize targetMover=_targetMover;
@property(retain, nonatomic) CALayer *target; // @synthesize target=_target;
@property(nonatomic) struct TSUCellRect entireCellRange; // @synthesize entireCellRange=_entireCellRange;
@property(nonatomic) struct TSUCellRect targetCellRange; // @synthesize targetCellRange=_targetCellRange;
@property(nonatomic) BOOL startAnimationCompleted; // @synthesize startAnimationCompleted=_startAnimationCompleted;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(nonatomic) long long direction; // @synthesize direction=_direction;
- (void).cxx_destruct;
- (void)didPerformDragOperationMoveOnCanvasWithNewDrawable:(id)arg1;
- (void)willPerformDragOperationMoveOnCanvas;
- (id)contentDescriptionDragDetails;
- (struct CGRect)imageForDraggingFrame:(struct CGPoint)arg1;
- (id)imageForDragging;
- (void)updatingDraggingOperation:(unsigned long long)arg1;
- (void)draggingSessionEnded:(unsigned long long)arg1;
- (void)p_hideContentWithRange:(struct TSUCellRect)arg1;
- (void)draggingSessionWillBegin;
- (void)beginDraggingSessionWithEvent:(id)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)readyToBeginDraggingSession;
- (BOOL)dynamicContentMustDrawOnMainThread;
- (int)allowedAutoscrollDirections;
- (struct TSUCellRect)p_expandInvalidationCellRange:(struct TSUCellRect)arg1 adjust:(unsigned short)arg2;
- (void)animationObserverAllCompleted:(BOOL)arg1;
- (void)animationObserverTaskCompleted:(id)arg1;
- (void)validateUnderlayLayers;
- (void)validateOverlayLayers;
- (BOOL)shouldRenderTableRep;
- (id)getAnimationUnderlayLayers;
- (id)getAnimationOverlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_PositionLayers;
- (void)p_pixelAlign:(id)arg1;
- (void)p_AddMoverToLayer:(id)arg1 tableRep:(id)arg2;
- (id)p_moverImage;
- (void)p_addTargetSublayers;
- (void)p_prepareTargetLayer;
- (void)endMovingKnobWorkCleanup;
- (void)p_EndMovingKnobWorkAfterNSDragging;
- (void)p_deleteSourceRowsColumns;
- (id)newSelection;
- (void)p_callEndMovingKnobWorkIfSafe;
- (BOOL)shouldEndMovingKnobOnESC;
- (BOOL)allowHUDToDisplay;
- (double)delay;
- (BOOL)shouldHideSelectionHighlight;
- (BOOL)shouldHideOtherKnobs;
- (void)endMovingKnob;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
- (void)beginMovingKnob;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

