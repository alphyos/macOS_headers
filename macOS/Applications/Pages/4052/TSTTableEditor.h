//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDDrawableEditor.h"

#import "TSDDrawableInsertionEditor-Protocol.h"
#import "TSDKeyValueProxyVendingEditor-Protocol.h"
#import "TSDStylePresetsInspectorPaneDelegate-Protocol.h"
#import "TSDTextInput-Protocol.h"
#import "TSKChangeSourceObserver-Protocol.h"
#import "TSTAdaptiveLayoutMediatorOngoingDelegate-Protocol.h"
#import "TSTCanvasReferenceProvider-Protocol.h"
#import "TSTWPTextEditorRawArrowKeyEventDelegate-Protocol.h"
#import "TSWPFontInspecting-Protocol.h"
#import "TSWPTextInspecting-Protocol.h"

@class NSArray, NSLock, NSMutableArray, NSSet, NSString, TSDEditorController, TSDFill, TSKDocumentRoot, TSKSelection, TSTCellRegion, TSTCellSelection, TSTEditingState, TSTFormulaFieldEditor, TSTReferenceColorHelper, TSTTableInfo, TSTTableModel, TSWPTextEditor;
@protocol TSDTextSelection;

@interface TSTTableEditor : TSDDrawableEditor <TSDKeyValueProxyVendingEditor, TSTCanvasReferenceProvider, TSTWPTextEditorRawArrowKeyEventDelegate, TSKChangeSourceObserver, TSTAdaptiveLayoutMediatorOngoingDelegate, TSWPTextInspecting, TSWPFontInspecting, TSDTextInput, TSDDrawableInsertionEditor, TSDStylePresetsInspectorPaneDelegate>
{
    NSMutableArray *mActionSelectors;
    int mCurrentSortingType;
    struct TSUCellRect mDragSourceRange;
    BOOL mLastCopyWasDrag;
    BOOL mIsCurrentEditor;
    BOOL mResignedTextInput;
    BOOL mSwappingActiveCell;
    BOOL mDidSwapActiveCell;
    BOOL mInsertingText;
    BOOL mEditCellFont;
    NSArray *_biuProperties;
    BOOL mProvidingReferences;
    NSSet *mCachedReferences;
    NSSet *mCachedIdentifiers;
    TSTReferenceColorHelper *mReferenceColorHelper;
    NSLock *mReferenceColorLock;
    struct set<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> mMergeRegionRemaindersToSkip;
    struct TSUCellCoord mCachedCursorOverCellIDForRemainders;
    struct TSUCellCoord mCachedNextOverCellIDForRemainders;
    struct TSUCellCoord mCachedCursorDownCellIDForRemainders;
    struct TSUCellCoord mCachedNextDownCellIDForRemainders;
    BOOL mEndingContainedTextEditing;
    BOOL mPreviousSelectionWasCellEditing;
    BOOL _ignoreChangeNotificationsWhileSyncingReferences;
    BOOL _willSyncReferenceHighlightsAfterSelectionChange;
    TSTFormulaFieldEditor *mFormulaFieldEditor;
}

+ (id)p_propertyMapForProperty:(int)arg1 withValue:(id)arg2;
+ (id)dragPasteboard;
+ (id)drawableFromAsyncProvider:(id)arg1 withContext:(id)arg2 error:(id *)arg3;
+ (Class)tableNameEditorClass;
+ (Class)cellEditorClass;
+ (id)editorFromEditorController:(id)arg1;
+ (id)keysResolvedByKeyValueProxy;
@property(readonly, nonatomic) TSTFormulaFieldEditor *formulaFieldEditor; // @synthesize formulaFieldEditor=mFormulaFieldEditor;
@property(readonly, nonatomic) BOOL endingContainedTextEditing; // @synthesize endingContainedTextEditing=mEndingContainedTextEditing;
@property(nonatomic) BOOL editCellFont; // @synthesize editCellFont=mEditCellFont;
@property(nonatomic) BOOL didSwapActiveCell; // @synthesize didSwapActiveCell=mDidSwapActiveCell;
@property(nonatomic) BOOL swappingActiveCell; // @synthesize swappingActiveCell=mSwappingActiveCell;
@property(nonatomic) BOOL isCurrentEditor; // @synthesize isCurrentEditor=mIsCurrentEditor;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)p_cellRangeIsSingleCell:(struct TSUCellRect)arg1 outOriginCellID:(struct TSUCellCoord *)arg2;
- (void)beginFormulaEditingOnSelectedCell;
- (void)transitionToFormulaEditing;
- (void)transitionFromFormulaEditing;
- (void)toggleCellEditor:(id)arg1;
- (BOOL)p_isPercentCellAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)selectionIsSingleCellWithFormula;
- (BOOL)editingCellIsControlCell;
- (BOOL)editingCellIsExplicitText;
- (id)selectedCellRegionForEditorAction:(id)arg1;
- (id)selectionForEditorAction:(id)arg1;
- (int)nextOverCellState;
- (int)nextDownCellState;
- (struct TSUCellCoord)nextOverCellID;
- (struct TSUCellCoord)nextDownCellID;
- (void)updateRemainders;
- (void)resetMergeRemainders;
- (void)resetRemainders;
- (void)resetRemaindersCache;
- (void)removeCharacterSpacing:(id)arg1;
- (void)decreaseCharacterSpacing:(id)arg1;
- (void)increaseCharacterSpacing:(id)arg1;
- (void)useAllLigatures:(id)arg1;
- (void)useStandardLigatures:(id)arg1;
- (void)turnOffLigatures:(id)arg1;
- (void)outline:(id)arg1;
- (void)strikethrough:(id)arg1;
- (void)underline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (BOOL)inspectingShapeForInspector:(id)arg1;
- (BOOL)inspectableForInspector:(id)arg1;
- (id)documentRootForInspector:(id)arg1;
- (id)interactiveCanvasControllerForInspector:(id)arg1;
- (int)valueForVerticalAlignmentPropertyForInspector:(id)arg1;
- (int)valueForWritingDirectionPropertyForInspector:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)reverseTableDirection:(id)arg1;
- (void)reverseDirection:(id)arg1;
- (void)alignNatural:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignLeft:(id)arg1;
- (int)valueForParagraphAlignmentPropertyForInspector:(id)arg1;
- (void)inspector:(id)arg1 applyWritingDirection:(long long)arg2;
- (id)valueForBIUProperties:(id)arg1 forInspector:(id)arg2;
- (void)inspector:(id)arg1 applyShapeValue:(id)arg2 forProperty:(int)arg3;
- (void)inspector:(id)arg1 applyFormatValue:(id)arg2 forProperty:(int)arg3 coalesceable:(BOOL)arg4;
- (void)inspector:(id)arg1 applyListStyle:(id)arg2 createVariationUsingPropertyMap:(id)arg3;
- (void)inspector:(id)arg1 applyListStyleOverrideForCurrentSelectionWithValue:(id)arg2 forProperty:(int)arg3;
- (void)inspector:(id)arg1 applyTextStylePreset:(id)arg2 stripCharacterStyles:(BOOL)arg3;
- (void)inspector:(id)arg1 applyListStyle:(id)arg2 createVariationUsingPropertyMap:(id)arg3 withName:(id)arg4;
- (void)inspector:(id)arg1 applyParagraphStyle:(id)arg2 stripCharacterStyles:(BOOL)arg3;
- (void)inspector:(id)arg1 toggleIntProperty:(int)arg2 onValue:(int)arg3 offValue:(int)arg4;
- (void)inspector:(id)arg1 toggleBoolProperty:(int)arg2;
- (id)currentParagraphStyleForInspector:(id)arg1;
- (BOOL)canProvideTextStylePresets;
- (void)setBaselineShift:(id)arg1;
- (id)baselineShift;
- (void)lowerBaseline:(id)arg1;
- (void)raiseBaseline:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)unscript:(id)arg1;
- (void)applyCaps:(id)arg1;
- (id)selectionPathFromSelection:(id)arg1 forArrowKeyReceivedInDirection:(int)arg2 withModifierKeys:(int)arg3 suppressWrap:(BOOL)arg4;
- (id)selectionPathFromSelection:(id)arg1 forArrowKeyReceivedInDirection:(int)arg2 withModifierKeys:(int)arg3;
- (id)selectionPathForSelectingCellID:(struct TSUCellCoord)arg1;
- (id)selectionPathForSelectingCellSelection:(id)arg1;
- (id)selectionPathToEndContainedTextEditing;
- (void)arrowKeyReceivedInDirection:(int)arg1 withModifierKeys:(int)arg2;
- (BOOL)canAddColumnsFromKeyboardBefore:(BOOL)arg1;
- (BOOL)canAddRowsFromKeyboardAbove:(BOOL)arg1;
- (void)p_hideAllTableChromeContextMenus;
- (void)p_hideAllErrorWarningPopovers;
@property(readonly) BOOL wantsRawArrowKeyEvents;
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(BOOL)arg2;
- (void)clearMarkedRange;
@property(readonly, nonatomic) struct _NSRange markedRange;
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(BOOL)arg2;
- (id)selectionWithRange:(struct _NSRange)arg1;
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (void)extendSelectionForward;
- (void)extendSelectionBackward;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward;
- (void)deleteBackward;
- (BOOL)canInsertText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (id)validAttributesForMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)moveToNextRowAndLastTouchedColumnAndCanAddRow:(BOOL)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)handleInsertTab:(id)arg1 ignoringFieldEditor:(BOOL)arg2;
- (void)navigateToNextCell;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)p_updateRangeOfCellsWithText:(id)arg1;
- (void)p_beginEditingCellWithText:(id)arg1 forceFormulaEditor:(BOOL)arg2 selectedRange:(struct _NSRange)arg3;
- (BOOL)p_textShouldPreservePercent:(id)arg1;
- (BOOL)p_cellIsMostRecentlyExplicitPercent:(id)arg1;
- (id)newFieldEditorWithDelegate:(id)arg1 nibName:(id)arg2;
- (void)p_trimSelectionPath:(id)arg1 toClass:(Class)arg2;
- (id)startEditingFieldWithDelegate:(id)arg1 nibName:(id)arg2;
- (void)insertText:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)handleInsertNewline:(id)arg1 ignoringFieldEditor:(BOOL)arg2 shift:(BOOL)arg3;
- (void)p_setTableSelection:(id)arg1;
- (void)p_setTableSubSelections:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)p_setTableSubSelections:(id)arg1;
- (unsigned long long)textLength;
- (BOOL)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (void)endEditing;
- (id)editorForArrowKeyEvents;
- (BOOL)wantsKeyboard;
@property(retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
- (struct _NSRange)editRange;
- (void)dragCutTableSubselection:(id)arg1;
- (void)dragClearTableSubselection:(id)arg1;
- (void)dragCopyAndClearTableSubselection:(id)arg1;
- (BOOL)dragCopyTableSubselection:(id)arg1;
- (void)p_clearCellsForAction:(id)arg1;
- (void)clearCells:(id)arg1;
- (void)deleteCellContents:(id)arg1;
- (void)selectAllTableSubselection:(id)arg1;
- (void)selectTableSubselection:(id)arg1;
- (void)customPaste:(id)arg1;
- (void)pasteTableSubselection:(id)arg1;
- (void)copyTableSubselection:(id)arg1;
- (void)cutTableSubselection:(id)arg1;
- (void)clearAllImportWarnings;
- (void)clearImportWarningInAllCells:(id)arg1;
- (void)p_applyCellDiffToAllTables:(id)arg1 withSelectionBehavior:(id)arg2;
- (void)clearImportWarningInSelectedCell:(id)arg1;
- (void)setMultipleChoiceListFormatInitialValue:(int)arg1 emptyCellUIDs:(id)arg2;
- (void)setMultipleChoiceListFormatByMovingItemfromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)setMultipleChoiceListFormatByDeletingItemAtIndex:(unsigned long long)arg1;
- (void)setMultipleChoiceListFormatEditingItemAtIndex:(unsigned long long)arg1 withNewContent:(id)arg2;
- (void)p_setMultipleChoiceListFormatDeletingOrEditingItemAtIndex:(unsigned long long)arg1 editedContent:(id)arg2;
- (void)setSelectedCellsToMultipleChoiceList:(char *)arg1;
- (void)p_setSelectedCellsToMultipleChoiceList:(id)arg1 initialValue:(int)arg2 action:(int)arg3;
- (CDStruct_28403e59)popupMenuFormatForCurrentSelection;
- (CDStruct_28403e59)p_popupMenuFormatForCellRegion:(id)arg1;
- (id)emptyCellUIDListforPopupMenu;
- (void)setSelectedCellsToCustom:(CDStruct_28403e59)arg1;
- (void)coerceSelectedCellsTo:(int)arg1 formatIsGenericNumber:(BOOL)arg2;
- (void)setAutomaticFormat;
- (void)setSelectedControlCellsDisplayNumberFormatType:(int)arg1 forControlType:(int)arg2;
- (void)setSliderIncrement:(double)arg1;
- (void)setSliderMaximum:(double)arg1;
- (void)setSliderMinimum:(double)arg1;
- (double)sliderIncrement;
- (double)sliderMaximum;
- (double)sliderMinimum;
- (double)p_doubleValueFromPopupCell:(id)arg1 default:(double)arg2;
- (void)setStepperIncrement:(double)arg1;
- (void)setStepperMaximum:(double)arg1;
- (void)setStepperMinimum:(double)arg1;
- (double)stepperIncrement;
- (double)stepperMaximum;
- (double)stepperMinimum;
- (void)setIncrement:(double)arg1 forControlType:(int)arg2;
- (void)setMaximum:(double)arg1 forControlType:(int)arg2;
- (void)setMinimum:(double)arg1 forControlType:(int)arg2;
- (void)setDurationUnitSmallest:(int)arg1 largest:(int)arg2;
- (int)durationUnitLargest;
- (int)durationUnitSmallest;
- (void)setDurationStyle:(int)arg1;
- (int)durationStyle;
- (void)setAutomaticDurationUnits:(BOOL)arg1;
- (BOOL)automaticDurationUnits;
- (void)setTimeFormatString:(id)arg1;
- (void)setDateFormatString:(id)arg1;
- (id)dateTimeFormatString;
- (void)setCurrencyCode:(id)arg1 forControlFormat:(int)arg2;
- (id)currencyCode;
- (void)setUseAccountingStyle:(BOOL)arg1 forControlFormat:(int)arg2;
- (BOOL)useAccountingStyle;
- (void)setShowThousandsSeparator:(BOOL)arg1 coercingToFormatType:(int)arg2 forControlFormat:(int)arg3;
- (BOOL)showThousandsSeparatorForFormatType:(int)arg1;
- (void)setNumberOfDecimalPlaces:(long long)arg1 coercingToFormatType:(int)arg2 forControlFormat:(int)arg3;
- (long long)numberOfDecimalPlacesForFormatType:(int)arg1;
- (void)setNegativeNumberStyle:(int)arg1 coercingToFormatType:(int)arg2 forControlFormat:(int)arg3;
- (int)negativeNumberStyleForFormatType:(int)arg1;
- (void)setBaseUseMinusSign:(BOOL)arg1;
- (BOOL)baseUseMinusSign;
- (void)setBasePlaces:(unsigned char)arg1;
- (unsigned char)basePlaces;
- (void)setBase:(unsigned char)arg1;
- (unsigned char)base;
- (void)setFractionAccuracy:(int)arg1 forControlFormat:(int)arg2;
- (int)fractionAccuracy;
- (CDStruct_28403e59)currentFormatForCurrentSelection;
- (CDStruct_28403e59)spareFormatForCurrentSelectionOfType:(int)arg1;
- (id)p_cellForNumberFormatInspector;
- (struct CGSize)imageSizeForPreset:(id)arg1 swatchSize:(struct CGSize)arg2;
- (id)imageForPreset:(id)arg1 size:(struct CGSize)arg2;
- (void)redefinePresetFromSelection:(id)arg1;
- (void)stylePresetInspector:(id)arg1 removePreset:(id)arg2;
- (void)addPresetFromSelection:(id)arg1;
- (BOOL)canAddPresetFromSelection;
- (void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2 useAlternateApplicationBehavior:(BOOL)arg3;
- (void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2;
- (id)stylePresetKindForInspector;
- (void)selectCellsWithEquivalentConditionalStyles;
- (void)setConditionalStyles:(id)arg1;
- (void)mergeConditionalStyles:(id)arg1;
- (void)removeConditionalStyles:(id)arg1;
- (double)currentFontSizeForFontSizeController:(id)arg1;
- (void)fontSizeController:(id)arg1 choseFontSize:(double)arg2;
- (void)applyDiffToAllFontSizes:(int)arg1;
- (void)fontPicker:(id)arg1 choseFont:(id)arg2 preserveFace:(BOOL)arg3;
- (id)currentFontForFontPicker:(id)arg1;
- (struct TSUCellCoord)p_cellIDForSelectedCellWithComment;
- (void)addOrShowComment:(id)arg1;
- (BOOL)canAddOrShowComment;
- (void)resetFillToDefault;
- (void)setCellFill:(id)arg1;
- (void)setCellStrokePresetNumber:(unsigned long long)arg1 stroke:(id)arg2;
- (id)cellFill;
- (void)setTextShadow:(id)arg1;
- (id)textShadow;
- (void)setTextStyle:(id)arg1;
- (void)setFontColor:(id)arg1;
- (id)currentFontColor;
- (void)setStrokeChangeInformation:(id)arg1;
@property(nonatomic) int tableWritingDirection;
- (void)setHasFooterRowDividers:(BOOL)arg1;
- (BOOL)hasFooterRowDividers;
- (void)setHasHeaderRowDividers:(BOOL)arg1;
- (BOOL)hasHeaderRowDividers;
- (void)setHasHeaderColumnDividers:(BOOL)arg1;
- (BOOL)hasHeaderColumnDividers;
- (void)setHasVerticalStrokes:(BOOL)arg1;
- (BOOL)hasVerticalStrokes;
- (void)setHasHorizontalStrokes:(BOOL)arg1;
- (BOOL)hasHorizontalStrokes;
- (void)deleteFilterRule:(unsigned long long)arg1 inFilter:(unsigned long long)arg2;
- (void)addFilterRule:(id)arg1 inFilter:(unsigned long long)arg2;
- (void)setFilterRule:(id)arg1 atIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (void)deleteFilterAtIndex:(unsigned long long)arg1;
- (void)setFilterSetType:(int)arg1;
- (int)filterSetType;
- (void)setFiltersEnabled:(BOOL)arg1;
- (BOOL)filtersEnabled;
- (BOOL)canFilterTable;
@property(nonatomic) BOOL tableAutoResizeEnabled;
@property(nonatomic) TSDFill *bandedFillObject;
@property(nonatomic) BOOL hasAlternatingRows;
- (void)setBorderStroke:(id)arg1 forTable:(id)arg2;
@property(nonatomic) BOOL hasTableBorder;
- (id)p_commandToSetTable:(id)arg1 withIntProperty:(int)arg2 value:(int)arg3 actionString:(id)arg4;
- (id)p_commandToSetTable:(id)arg1 withBoolProperty:(int)arg2 value:(BOOL)arg3 actionString:(id)arg4;
- (void)p_transposeTable:(id)arg1 withOptionalCommandGroup:(id)arg2;
- (void)transposeTable;
- (void)transposeTable:(id)arg1;
- (BOOL)canTransposeTable;
- (id)editingSearchReference;
- (void)setSortOrder:(id)arg1 sortNow:(BOOL)arg2;
- (void)setSortOrder:(id)arg1;
- (id)sortOrder;
- (void)sortTable:(id)arg1;
- (id)p_regionForSortingTableWithEditorAction:(id)arg1;
- (void)sortDescending:(id)arg1;
- (void)sortAscending:(id)arg1;
- (void)sortWithRule:(id)arg1 region:(id)arg2;
- (void)toggleSorting;
- (unsigned short)numberOfFooterRows;
- (void)disableFreezeHeaderRows;
- (void)enableFreezeHeaderRows;
- (int)headerRowsFrozen;
- (unsigned short)numberOfHeaderRows;
- (void)disableRepeatingHeaderColumns;
- (void)enableRepeatingHeaderColumns;
- (void)disableRepeatingHeaderRows;
- (void)enableRepeatingHeaderRows;
- (int)repeatingHeaderColumnsEnabled;
- (int)repeatingHeaderRowsEnabled;
- (void)disableFreezeHeaderColumns;
- (void)enableFreezeHeaderColumns;
- (void)freezeHeaderColumns:(id)arg1;
- (void)freezeHeaderRows:(id)arg1;
- (int)headerColumnsFrozen;
- (int)p_mixedStateOfSelectedTablesForBlock:(CDUnknownBlockType)arg1;
- (BOOL)footerRowsPermitted:(unsigned short)arg1 outMixedState:(int *)arg2;
- (BOOL)headerRowsPermitted:(unsigned short)arg1 outMixedState:(int *)arg2;
- (BOOL)headerColumnsPermitted:(unsigned short)arg1 outMixedState:(int *)arg2;
- (int)p_mixedStateForNumberOfHeaders:(unsigned short)arg1 gettingNumberOfHeadersEnabled:(char *)arg2 numberOfHeadersAvailableFunction:(CDUnknownBlockType)arg3 numberOfHeadersFunction:(CDUnknownBlockType)arg4 testMergeIntersectionFunction:(CDUnknownBlockType)arg5;
- (void)applyTableAreaTransition:(unsigned long long)arg1 toRange:(struct _NSRange)arg2;
- (void)setNumberOfFooterRowsByIndex:(unsigned short)arg1;
- (void)setNumberOfHeaderRowsByIndex:(unsigned short)arg1;
- (void)setNumberOfHeaderColumnsByIndex:(unsigned short)arg1;
- (void)setNumberOfFooterRows:(id)arg1;
- (void)setNumberOfHeaderColumns:(id)arg1;
- (void)setNumberOfHeaderRows:(id)arg1;
- (unsigned short)numberOfHeaderColumns;
- (BOOL)isNumberOfFooterRowsMixed;
- (BOOL)isNumberOfHeaderColumnsMixed;
- (BOOL)isNumberOfHeaderRowsMixed;
- (void)toggleTextStyleProperty:(int)arg1;
- (id)p_propertyMapWithToggledTextStyleProperty:(int)arg1 currentValue:(int)arg2;
- (BOOL)isSubscript;
- (BOOL)isSuperscript;
- (BOOL)isOutline;
- (BOOL)isStrike;
- (BOOL)isUnderline;
- (BOOL)isItalic;
- (BOOL)isBold;
- (BOOL)p_hasBIUProperty:(int)arg1;
- (BOOL)p_storageHasBIUProperty:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (id)p_biuProperties;
- (void)setVerticalAlignment:(int)arg1;
- (int)verticalAlignment;
- (void)setWritingDirection:(int)arg1;
- (void)setParagraphAlignment:(int)arg1;
- (int)paragraphAlignment;
- (BOOL)p_canSetWritingDirectionTo:(int)arg1;
- (int)paragraphDirection;
- (void)disableTextWrap;
- (void)enableTextWrap;
- (void)p_setTextWrapEnabled:(BOOL)arg1;
- (void)p_getValueOfFirstSelectedCellForProperty:(int)arg1 intValuePtr:(int *)arg2 cgFloatValuePtr:(double *)arg3 objectValuePtr:(id *)arg4 ORbiuProperties:(id)arg5 biuSetPtr:(id *)arg6;
- (id)p_valueSetForBIUPropertiesOfParagraphStyle:(id)arg1;
- (void)p_applyPropertiesToTableName:(id)arg1;
- (void)p_applyPropertiesWithTextEditor:(id)arg1;
- (void)p_applyPropertiesToTableNameWithTextEditor:(id)arg1;
- (void)p_applyProperties:(id)arg1 toParagraphStyle:(id)arg2;
- (id)p_valueForPropertyInTextEditor:(int)arg1;
- (id)p_valueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (double)p_CGFloatValueForPropertyInTextEditor:(int)arg1;
- (int)p_intValueForPropertyInTextEditor:(int)arg1;
- (double)p_CGFloatValueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (int)p_intValueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (void)p_beginEditingTableNameWithText:(id)arg1;
- (void)setTableNameBorderEnabled:(BOOL)arg1 forTable:(id)arg2;
- (BOOL)tableNameBorderEnabled;
- (void)disableTableNameAndEndEditingIfNeeded:(BOOL)arg1;
- (void)disableTableName;
- (void)disableTableName:(id)arg1;
- (void)enableTableName;
- (void)enableTableName:(id)arg1;
- (BOOL)tableNameEnabled;
- (void)preserveGeometryForTable:(id)arg1 withFrame:(struct CGRect)arg2 modifiedDirection:(long long)arg3;
- (void)distributeColumnsEvenly:(id)arg1;
- (void)distributeRowsEvenly:(id)arg1;
- (void)distributeRowsOrColumnsEvenly:(id)arg1 direction:(long long)arg2;
- (void)distributeColumnsEvenlyWorker:(id)arg1 cellRegion:(id)arg2;
- (void)distributeRowsEvenlyWorker:(id)arg1 cellRegion:(id)arg2;
- (BOOL)canDistributeColumnsEvenly;
- (BOOL)canDistributeRowsEvenly;
- (void)setColumnWidths:(id)arg1 selection:(id)arg2 columnWidths:(id)arg3 mediator:(id)arg4;
- (void)setColumnWidths:(double)arg1;
- (void)setRowHeights:(id)arg1 selection:(id)arg2 rowHeights:(id)arg3 mediator:(id)arg4;
- (void)setRowHeights:(double)arg1;
- (BOOL)canInspectCellBorders;
- (BOOL)canInspectCellFill;
- (void)toggleWrapTextInCell:(id)arg1;
- (BOOL)canInspectTextWrap;
- (BOOL)textWrapEnabled;
- (void)showAllColumns:(id)arg1;
- (void)showContainedColumns:(id)arg1;
- (void)showRightColumns:(id)arg1;
- (void)showLeftColumns:(id)arg1;
- (void)showColumns:(id)arg1;
- (void)showColumnsWorker:(id)arg1 expandLeft:(BOOL)arg2 expandRight:(BOOL)arg3;
- (void)hideColumns:(id)arg1;
- (void)showAllRows:(id)arg1;
- (void)showContainedRows:(id)arg1;
- (void)showBelowRows:(id)arg1;
- (void)showAboveRows:(id)arg1;
- (void)showRows:(id)arg1;
- (void)showRowsWorker:(id)arg1 expandUp:(BOOL)arg2 expandDown:(BOOL)arg3;
- (void)hideRows:(id)arg1;
- (void)unmergeCells:(id)arg1;
- (void)mergeCells:(id)arg1;
- (void)setRepeatingHeaderColumnsEnabled:(id)arg1;
- (void)setRepeatingHeaderRowsEnabled:(id)arg1;
- (void)p_FillCellSelection:(int)arg1;
- (void)fillCellsWithinSelectionDown:(id)arg1;
- (void)fillCellsWithinSelectionUp:(id)arg1;
- (void)fillCellsWithinSelectionLeft:(id)arg1;
- (void)fillCellsWithinSelectionRight:(id)arg1;
- (void)fillCells:(id)arg1;
- (void)fitColumnContent:(id)arg1;
- (struct CGRect)p_frameBeforeGeometryChangeForTableInfo:(id)arg1;
- (void)fitColumnContentInCellRegion:(id)arg1;
- (void)fitRowContent:(id)arg1;
- (void)fitRowContentInCellRegion:(id)arg1;
- (void)deleteColumns:(id)arg1 selection:(id)arg2 mediator:(id)arg3 ignoreSelectionBehavior:(BOOL)arg4;
- (void)deleteLastColumn:(id)arg1 ignoreSelectionBehavior:(BOOL)arg2;
- (void)deleteColumns:(id)arg1;
- (void)addColumnsAfter:(id)arg1;
- (void)addColumnsBefore:(id)arg1;
- (void)addHeaderColumnBefore:(id)arg1;
- (void)deleteRows:(id)arg1 selection:(id)arg2 mediator:(id)arg3 ignoreSelectionBehavior:(BOOL)arg4;
- (void)deleteLastRow:(id)arg1 ignoreSelectionBehavior:(BOOL)arg2;
- (void)deleteRows:(id)arg1;
- (void)addRowsBelow:(id)arg1;
- (void)addRowsAbove:(id)arg1;
- (void)addFooterRowBelow:(id)arg1;
- (void)addHeaderRowAbove:(id)arg1;
- (id)p_adjustedSelectedCellRegionFromTable:(id)arg1 allowMergeFragments:(BOOL)arg2;
- (id)p_adjustedSelectedCellRegionFromTable:(id)arg1;
- (id)p_cellRegionFromRegion:(id)arg1 subtractingIneligibleMergeCellsInTable:(id)arg2;
- (id)p_cellRegionFromRegion:(id)arg1 subtractingHiddenCellsInTable:(id)arg2;
- (BOOL)canRedefinePresetFromSelection;
- (BOOL)canToggleCellEditor;
- (BOOL)canFillCellsWithinSelection:(int)arg1;
- (BOOL)canHideColumns:(id)arg1;
- (BOOL)canHideColumns;
- (BOOL)canHideRows:(id)arg1;
- (BOOL)canHideRows;
- (BOOL)canShowAllColumns;
- (BOOL)canShowColumns;
- (BOOL)canShowAllRows;
- (BOOL)canShowRows;
- (BOOL)canDrag;
- (BOOL)canDeleteRows;
- (BOOL)canDeleteRowsForTable:(id)arg1 selection:(id)arg2;
- (BOOL)canDeleteColumns;
- (BOOL)canDeleteColumnsForTable:(id)arg1 selection:(id)arg2;
- (BOOL)needToFitColumnContentForTable:(id)arg1 selection:(id)arg2;
- (BOOL)needToFitColumnContent;
- (BOOL)needToFitRowContentForTable:(id)arg1 selection:(id)arg2;
- (BOOL)needToFitRowContent;
- (BOOL)selectionPartiallyIntersectsMergeRange;
- (BOOL)selectionComprisedOfSingleMergeRange;
- (BOOL)canUnmerge;
- (BOOL)canMerge;
- (BOOL)p_canSortTableWithSortOrder:(id)arg1;
- (BOOL)canSortTable;
- (BOOL)canSortColumns;
- (BOOL)canSortSelectedColumns:(id)arg1;
- (BOOL)canSortByColumns:(id)arg1 region:(id)arg2;
- (id)permittedSharedReadOnlyActions;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (void)insertDrawables:(id)arg1 withInsertionContext:(id)arg2 postProcessBlock:(CDUnknownBlockType)arg3;
- (void)prepareGeometryForInsertingDrawables:(id)arg1 withInsertionContext:(id)arg2;
- (BOOL)canHandleInsertionOfDrawables:(id)arg1 insertionContext:(id)arg2;
- (BOOL)p_canInsertAttachments;
- (void)endEditingAndSelectParent:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (BOOL)canCancelOperation;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)p_hideEditMenuIfShowing;
- (void)paste:(id)arg1 viaKeyboard:(BOOL)arg2;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)syncReferenceHighlightsAndSelection:(id)arg1;
- (void)pasteCopiedColumnsValues:(id)arg1;
- (void)pasteCopiedColumns:(id)arg1;
- (void)pasteCopiedRowsValues:(id)arg1;
- (void)pasteCopiedRows:(id)arg1;
- (void)pasteExactly:(id)arg1;
- (void)pasteStyle:(id)arg1;
- (void)pasteValues:(id)arg1;
- (void)pasteTableSubselectionForDragMove:(id)arg1 pasteType:(int)arg2;
- (void)pasteTableSubselectionForDrag:(id)arg1;
- (void)pasteUpdateWithPasteboard:(id)arg1;
- (void)applyNewImageFill:(id)arg1 forSelection:(id)arg2 andBehavior:(id)arg3;
- (void)pasteWithType:(int)arg1 withPasteboard:(id)arg2;
- (BOOL)canPasteCopiedRows;
- (BOOL)canPasteCopiedColumns;
- (BOOL)canPasteStyle;
- (BOOL)canPaste;
- (BOOL)canPasteWithPasteboard:(id)arg1;
- (BOOL)canPasteValues;
- (BOOL)p_isTableLinkedToAForm:(id)arg1;
- (BOOL)p_pasteWillFit;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)canDelete;
- (void)copyStyle:(id)arg1;
- (void)copy:(id)arg1;
- (void)copy:(id)arg1 withPasteboard:(id)arg2;
- (BOOL)canCopyStyle;
- (BOOL)canCopy;
- (void)_editorControllerSelectionPathDidChange:(id)arg1;
- (void)didBecomeTextInputEditor;
- (void)willResignTextInputEditor;
- (void)willResignCurrentEditor;
- (void)didBecomeCurrentEditorForEditorController:(id)arg1;
@property(readonly, nonatomic) BOOL shouldZoomOutDueToSelectionChange;
- (void)tableSubselectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)didEndTableNameEditing;
- (void)willEndTableNameEditing;
- (void)willBeginTableNameEditing;
- (void)tableNameEditorBecameInactive;
- (void)tableNameEditorBecameActive;
- (void)cellEditorDidResign;
- (BOOL)wantsToReceiveTextInput;
- (id)model;
- (BOOL)shouldDiscardAllSubselectionsStartingWithSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (id)nextEditorForSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;
@property(readonly, nonatomic) BOOL isEditingTableName;
@property(readonly, nonatomic) BOOL isTableNameSelected;
@property(readonly, nonatomic) BOOL isEditingStroke;
@property(readonly, nonatomic) BOOL isEditingControlCell;
@property(readonly, nonatomic) BOOL isEditingCell;
@property(readonly, nonatomic) BOOL hasSubselection;
@property(readonly, nonatomic) BOOL hasSingleTableInfo;
@property(readonly, nonatomic) BOOL hasCellSubselection;
@property(readonly, nonatomic) long long cellSubselectionType;
@property(readonly, nonatomic) long long deprecatedTableSubselectionType;
- (int)editingMode;
@property(readonly, nonatomic) TSTCellRegion *selectedCellRegion;
- (id)selectedCellRegionForTableInfo:(id)arg1;
- (void)changeEditingMode:(int)arg1;
- (void)cancelOngoingAdaptiveLayout;
- (void)containedEditorDidBecomeTextInputEditor:(id)arg1;
- (void)containedEditorWillResign:(id)arg1;
- (void)p_annotationFieldEditingWillBeginWhileEditing:(id)arg1;
- (void)p_styleWillUpdateWhileEditing:(id)arg1;
- (BOOL)p_commandPermittedDuringEditing:(id)arg1;
- (void)p_commandWillExecuteWhileEditing:(id)arg1;
- (void)p_commandWillUndoOrRedo:(id)arg1;
- (void)p_unregisterFromNotificationsWhileEditing;
- (void)p_registerForNotificationsWhileEditing;
- (void)beginContainedTextEditingAtCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2 setTextSelectionAtUnscaledCanvasPoint:(struct CGPoint)arg3;
- (void)p_endContainedTextEditingDuringSelectionChange:(BOOL)arg1;
- (void)endContainedTextEditing;
@property(readonly, nonatomic) TSWPTextEditor *containedTextEditor;
- (id)p_repForCellID:(struct TSUCellCoord)arg1 createIfNeeded:(BOOL)arg2;
- (void)p_modifySelectedTablesForFormatParameterWithTargetFormatType:(int)arg1 controlFormatType:(int)arg2 commandBlock:(CDUnknownBlockType)arg3;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 withActionString:(id)arg2 withSetCellBlock:(CDUnknownBlockType)arg3;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 textStyleProperties:(id)arg2;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 withActionString:(id)arg2 cellDiff:(id)arg3;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 cellDiff:(id)arg2;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 commandBlock:(CDUnknownBlockType)arg2;
- (void)p_modifySelectedTablesWithSingleTableSelectionBehavior:(id)arg1 adaptiveLayoutDirection:(int)arg2 commandBlock:(CDUnknownBlockType)arg3;
- (id)p_simplestSelectionBehavior;
@property(readonly, nonatomic) BOOL hasMergedBodyRows;
- (void)setCellSubselection:(id)arg1 withFlags:(unsigned long long)arg2;
@property(retain, nonatomic) TSTCellSelection *cellSubselection;
- (id)selection;
@property(readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) TSTTableModel *firstTableModel;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) BOOL multipleTableInfos;
@property(readonly, nonatomic) TSTTableInfo *firstTableInfo;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
@property(readonly, nonatomic) TSTCellSelection *deprecatedTableSubselection;
- (void)preflightEditorAction;
- (id)localeSpecificStorage;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (id)keyValueProxy;
- (id)p_selectionPathByRemovingUnsupportedCellEditingSelectionInPath:(id)arg1;
- (void)addColumns:(id)arg1 before:(BOOL)arg2 selection:(id)arg3 setSelectionOnCommit:(BOOL)arg4 mediator:(id)arg5;
- (void)appendColumn:(id)arg1 setSelectionOnCommit:(BOOL)arg2;
- (void)addColumnsWithObject:(id)arg1 before:(BOOL)arg2 setSelectionOnCommit:(BOOL)arg3;
- (void)addHeaderColumnBeforeSelection:(id)arg1;
- (void)addHeaderRowAboveSelection:(id)arg1;
- (void)addFooterRowBelowSelection:(id)arg1;
- (void)addRows:(id)arg1 before:(BOOL)arg2 selection:(id)arg3 setSelectionOnCommit:(BOOL)arg4 mediator:(id)arg5;
- (void)appendRow:(id)arg1 setSelectionOnCommit:(BOOL)arg2;
- (void)addRowsWithObject:(id)arg1 before:(BOOL)arg2 setSelectionOnCommit:(BOOL)arg3;
- (BOOL)shouldPreserveGeometryForTable:(id)arg1 modifiedDirection:(long long)arg2;
- (BOOL)canAddRowBelow;
- (BOOL)canAddFooterRow;
- (BOOL)canAddFooterRowsForTable:(id)arg1 selection:(id)arg2 numberOfRows:(unsigned short)arg3;
- (BOOL)canAddHeaderRow;
- (BOOL)canAddHeaderRowsForTable:(id)arg1 selection:(id)arg2 numberOfRows:(unsigned short)arg3;
- (BOOL)canAddRow;
- (BOOL)canAddRowsForTable:(id)arg1 selection:(id)arg2 numberOfRows:(unsigned short)arg3;
- (BOOL)canAddHeaderColumn;
- (BOOL)canAddHeaderColumnsForTable:(id)arg1 selection:(id)arg2 numberOfColumns:(unsigned short)arg3;
- (BOOL)canAddColumn;
- (BOOL)canAddColumnsForTable:(id)arg1 selection:(id)arg2 numberOfColumns:(unsigned short)arg3;
- (void)insertRangeFunctionWithIndex:(int)arg1;
- (id)p_commandForSettingRangeFunctionWithIndex:(int)arg1 argumentRange:(struct TSCERangeCoordinate)arg2 atCellID:(struct TSUCellCoord)arg3;
- (id)p_commandToEnsureDestinationRange:(struct TSUCellRect)arg1 existsForSourceRange:(struct TSUCellRect)arg2;
- (BOOL)canInsertRangeFunction;
- (BOOL)p_validateRangeFunctionReturningSourceRange:(struct TSUCellRect *)arg1 destinationRange:(struct TSUCellRect *)arg2;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionInColumns:(id)arg1;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionInRows:(id)arg1;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionSourceRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)p_sourceRangeForFunctionInsertionDestination:(struct TSUCellRect)arg1;
- (BOOL)p_cellRangeIsFunctionInsertionSource:(struct TSUCellRect)arg1;
- (BOOL)p_cellRangeHasData:(struct TSUCellRect)arg1;
- (BOOL)isEditingDrawable:(id)arg1;
- (id)canvasReferenceController;
- (void)endEditingReference:(void *)arg1;
- (void)startEditingReference:(void *)arg1;
- (id)editingCanvasReferenceForRange:(CDStruct_fc93c73e)arg1;
- (CDStruct_fc93c73e)resizeReference:(void *)arg1 toRange:(CDStruct_fc93c73e)arg2;
- (CDStruct_fc93c73e)moveReference:(void *)arg1 toRange:(CDStruct_fc93c73e)arg2;
- (id)references;
- (int)editingType;
- (void)syncReferenceHighlightingState;
@property(readonly, nonatomic) TSTReferenceColorHelper *referenceColorHelper;
- (id)p_referenceColorHelper;
- (void)p_addReferencesToSet:(id)arg1 fromFormulaErrorStorage:(id)arg2;
- (void)p_addReferencesToSet:(id)arg1 fromFormulaCell:(id)arg2 atCellID:(struct TSUCellCoord)arg3;
- (id)p_cellForReferenceHighlightsReturningCellID:(struct TSUCellCoord *)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(retain, nonatomic) TSDEditorController *editorController;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly) Class superclass;

@end

