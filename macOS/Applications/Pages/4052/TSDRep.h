//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDCanvasMessageHUDControllerDelegate-Protocol.h"
#import "TSDMagicMoveMatching-Protocol.h"

@class CALayer, NSArray, NSDictionary, NSString, TSDCanvas, TSDCanvasMessageHUDController, TSDInteractiveCanvasController, TSDKnobTracker, TSDLayout, TSDLayoutGeometry, TSDTextureContext, TSDTextureSet, TSDTilingBackgroundQueue, TSUColor;
@protocol OS_dispatch_queue, TSDContainerRep;

@interface TSDRep : NSObject <TSDMagicMoveMatching, TSDCanvasMessageHUDControllerDelegate>
{
    TSDCanvas *mCanvas;
    TSDRep<TSDContainerRep> *mParentRep;
    TSDKnobTracker *mKnobTracker;
    BOOL mSelectionHighlightLayerValid;
    CALayer *mSelectionHighlightLayer;
    BOOL mCollaboratorCursorLayerValid;
    CALayer *mCollaboratorCursorLayer;
    unsigned long long mTextureDeliveryStyle;
    int mTextureByGlyphStyle;
    TSDTextureContext *mTextureContext;
    unsigned long long mTextureStage;
    NSDictionary *mTextureActionAttributes;
    NSDictionary *mTextureAnimationInfo;
    BOOL mShowTemporaryHighlight;
    CALayer *mTemporaryHighlightLayer;
    BOOL mShowDragAndDropHighlight;
    CALayer *mDragAndDropHighlightLayer;
    TSDLayout *mTemporaryMixingLayout;
    BOOL mWantsToRedrawWithOpenGL;
    TSDLayout *mLayout;
    TSDTextureSet *mTexture;
    NSObject<OS_dispatch_queue> *mTextureAccessQueue;
    struct CGColor *mDefaultSelectionHighlightColor;
    TSDLayoutGeometry *mLastGeometryInRoot;
    struct CGRect mOriginalLayerFrameInScaledCanvas;
    TSDTilingBackgroundQueue *mTileQueue;
    long long mTileQueueOnce;
    long long mTileProviderQueueLock;
    NSObject<OS_dispatch_queue> *mTileProviderQueue;
    NSObject<OS_dispatch_queue> *mKnobsAccessQueue;
    NSArray *mKnobs;
    BOOL mKnobPositionsInvalid;
    BOOL mShowKnobsWhenManipulated;
    BOOL mKnobsAreShowing;
    BOOL mHasBeenRemoved;
    TSDCanvasMessageHUDController *mCanvasMessageHUDController;
}

@property(retain, nonatomic) NSDictionary *textureAnimationInfo; // @synthesize textureAnimationInfo=mTextureAnimationInfo;
@property(retain, nonatomic) NSDictionary *textureActionAttributes; // @synthesize textureActionAttributes=mTextureActionAttributes;
@property(nonatomic) unsigned long long textureStage; // @synthesize textureStage=mTextureStage;
@property(copy) TSDTextureContext *textureContext; // @synthesize textureContext=mTextureContext;
@property(nonatomic) int textureByGlyphStyle; // @synthesize textureByGlyphStyle=mTextureByGlyphStyle;
@property(nonatomic) unsigned long long textureDeliveryStyle; // @synthesize textureDeliveryStyle=mTextureDeliveryStyle;
@property(readonly, nonatomic) BOOL knobsAreShowing; // @synthesize knobsAreShowing=mKnobsAreShowing;
@property(nonatomic) BOOL showKnobsDuringManipulation; // @synthesize showKnobsDuringManipulation=mShowKnobsWhenManipulated;
@property(nonatomic) TSDKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) TSDRep<TSDContainerRep> *parentRep; // @synthesize parentRep=mParentRep;
@property(retain, nonatomic) TSDLayout *temporaryMixingLayout; // @synthesize temporaryMixingLayout=mTemporaryMixingLayout;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
- (BOOL)wantsToDistortWithImagerContext;
- (void)i_shutdownTileQueue;
- (id)i_tileQueue;
- (id)i_queueForTileProvider;
- (BOOL)mustDrawOnMainThreadForInteractiveCanvas;
- (BOOL)canDrawInParallel;
- (BOOL)canDrawInBackgroundDuringScroll;
- (int)tilingMode;
- (BOOL)directlyManagesLayerContent;
- (struct CGPoint)centerForRotation;
- (struct CGRect)boundsForResizeGuideUI;
- (BOOL)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (BOOL)resizeFromCenterOnly;
- (double)opacity;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (struct CGRect)targetRectForEditMenu;
- (id)itemsToAddToEditMenu;
- (BOOL)handlesEditMenu;
- (BOOL)isLocked;
- (BOOL)isPlaceholder;
- (id)selectionPathForTapToTextEditAtNaturalPoint:(struct CGPoint)arg1 forTextRep:(id)arg2;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;
- (id)repForAlternatePressureDragAtPoint:(struct CGPoint)arg1;
- (BOOL)supportsAlternatePressureDrag;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)shouldSuppressFontSmoothing;
- (BOOL)shouldShowSizesInRulers;
- (BOOL)shouldShowDragHUD;
- (BOOL)isOpaque;
- (BOOL)masksToBounds;
- (id)allLayers;
- (void)invalidateAnnotationColor;
- (void)invalidateComments;
- (BOOL)shouldShowCommentHighlight;
- (BOOL)wantsActivityLine;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (BOOL)canEditWithEditor:(id)arg1;
- (void)willBeRemoved;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (BOOL)repDirectlyManagesContentsScaleOfLayer:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (BOOL)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (BOOL)mustDrawTilingLayerOnMainThread:(id)arg1;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (BOOL)shouldLayoutTilingLayer:(id)arg1;
@property(readonly, nonatomic) struct CGRect frameForMagicMove;
- (id)textureForContext:(id)arg1;
- (void)setTextureAttributes:(id)arg1 textureBounds:(struct CGRect)arg2;
- (struct CGAffineTransform)unRotatedTransform:(struct CGAffineTransform)arg1;
- (void)markTextureDirty;
@property(readonly, nonatomic) double textureAngle;
@property(retain) TSDTextureSet *texture; // @synthesize texture=mTexture;
- (BOOL)wantsToHandleTapsWhenLocked;
- (BOOL)wantsToHandleTapsOnContainingGroup;
- (BOOL)canClipThemeContentToCanvas;
- (BOOL)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (id)actionStringForResize;
- (BOOL)isBeingResized;
- (id)dynamicResizeDidBegin;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;
- (void)p_dynamicRotateDidEnd;
- (void)dynamicallyRotatingWithTracker:(id)arg1;
- (BOOL)shouldRasterizeLayerDuringRotation;
- (struct CGPoint)unscaledGuidePosition;
- (double)angleForRotation;
- (id)actionStringForRotate;
- (BOOL)isBeingRotated;
- (void)p_dynamicRotateDidBegin;
- (void)dynamicRotateDidBegin;
- (void)endDragInlineWithText;
- (void)beginDragInlineWithText;
- (BOOL)allowDragAcrossPageBoundaries;
- (BOOL)demandsExclusiveSelection;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (BOOL)allowRotateDelegate;
- (BOOL)allowResizeDelegate;
- (BOOL)allowDragDelegate;
- (void)dynamicDragDidEnd;
- (BOOL)positionAttachmentUsingLayoutIfNeeded:(struct CGPoint)arg1;
- (BOOL)dragDidChangeGeometry;
- (BOOL)p_dragDidChangeGeometry;
- (struct CGRect)i_originalLayerFrameInScaledCanvas;
- (struct CGPoint)i_dragOffset;
- (void)i_dynamicDragDidEnd;
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint)arg1;
- (BOOL)resetGuidesAfterDragAfterReset;
- (BOOL)exclusivelyProvidesGuidesWhileAligning;
- (BOOL)providesGuidesWhileAligning;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
- (BOOL)isBeingDragged;
- (void)p_dynamicDragDidBegin;
- (id)actionStringForDrag;
- (void)dynamicDragDidBegin;
- (BOOL)isInDynamicOperation;
- (void)p_dynamicOperationDidEnd;
- (void)dynamicOperationDidEnd;
- (void)p_dynamicOperationDidBegin;
- (void)dynamicOperationDidBegin;
@property(readonly, nonatomic) double contentsScale;
- (void)positionDidUpdateForCanvasMessageHUDController:(id)arg1;
- (void)p_updatePosition:(struct CGPoint)arg1 forCanvasMessageHUDController:(id)arg2;
- (void)removeCanvasMessageHUDController:(id)arg1;
- (void)addCanvasMessageHUDController:(id)arg1;
- (void)presentCanvasMessageHUDAtUnscaledPoint:(struct CGPoint)arg1 withString:(id)arg2;
- (id)popoutLayers;
- (id)overlayLayers;
- (id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(BOOL)arg3;
- (struct CGPoint)convertKnobPositionFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)i_invalidateSelectionHighlightLayer;
- (id)selectionHighlightLayer;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (double)selectionHighlightWidth;
- (BOOL)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)fadeKnobsOut;
- (void)fadeKnobsIn;
- (void)turnKnobsOn;
- (BOOL)shouldShowKnobs;
- (BOOL)shouldDisplayHyperlinkUI;
@property(readonly, nonatomic) BOOL isEditingPath;
- (struct CGPoint)unscaledActivityLineEndPointForEntry:(id)arg1;
- (BOOL)shouldShowCommentUIDirectlyOverRep;
- (BOOL)shouldCreateCommentKnob;
- (BOOL)shouldCreateLockedKnobs;
- (BOOL)shouldCreateSelectionKnobs;
- (BOOL)shouldCreateKnobs;
- (BOOL)shouldShowSelectionHighlight;
- (struct CGAffineTransform)knobPositionTransformForInspectorResize;
- (id)knobForInspectorResize;
- (double)additionalRotationForKnobOrientation;
- (id)knobForTag:(unsigned long long)arg1;
- (void)p_actionGhostKnobHit;
- (void)p_toggleHyperlinkUIVisibility;
- (void)p_toggleCommentVisibility;
- (id)newTrackerForKnob:(id)arg1;
- (void)invalidateKnobPositions;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGPoint)p_positionOfActionGhostKnobForBounds:(struct CGRect)arg1;
- (struct CGPoint)positionOfActionGhostKnob;
- (struct CGPoint)positionOfHyperlinkKnob;
- (BOOL)forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)trackingBoundsForStandardKnobs;
- (struct CGRect)boundsForStandardKnobs;
- (BOOL)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addActionGhostKnobToArrayIfNecessary:(id)arg1;
- (void)addHyperlinkKnobToArray:(id)arg1;
- (void)addCommentKnobToArray:(id)arg1;
- (void)addLockedKnobsToArray:(id)arg1;
- (void)addSelectionKnobsToArray:(id)arg1;
- (id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2;
- (void)addKnobsToArray:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (void)invalidateKnobs;
@property(readonly, nonatomic) NSArray *knobs;
- (id)collaboratorCursorLayer;
- (void)addCollaboratorCursorHoverKnobsToArray:(id)arg1;
- (void)collaborationParticipantsDidChange:(id)arg1;
- (void)invalidateCollaboratorCursorLayer;
@property(readonly, nonatomic) struct CGAffineTransform transformForCollaboratorCursorLayer;
@property(readonly, nonatomic) struct CGRect boundsForCollaboratorCursorLayer;
- (void)hideCollaboratorCursors;
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;
@property(readonly, nonatomic) TSUColor *currentCollaboratorCursorColor;
- (id)p_currentCollaboratorLobbySession;
- (BOOL)shouldShowCollaboratorCursorHighlight;
- (BOOL)shouldAddCollaboratorLayerToOverlays;
- (void)becameNotSelected;
- (void)becameSelected;
- (BOOL)isSelected;
- (BOOL)isSelectedIgnoringLocking;
- (void)i_configureFontSmoothingForContext:(struct CGContext *)arg1 layer:(id)arg2;
- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (struct CGRect)clipRect;
- (BOOL)isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (id)colorBehindLayer:(id)arg1;
- (Class)layerClass;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScaleDidChange;
- (void)wideGamutValueDidChange;
- (void)screenScaleDidChange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)processChanges:(id)arg1;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnLayoutGeometry:(id)arg3;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnTransform:(struct CGAffineTransform)arg3 andSize:(struct CGSize)arg4;
- (void)antiAliasDefeatLayerFrame:(struct CGRect *)arg1 forTransform:(struct CGAffineTransform)arg2;
- (void)antiAliasDefeatLayerTransform:(struct CGAffineTransform *)arg1 forFrame:(struct CGRect)arg2;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (struct CGAffineTransform)layerTransformInRootForZeroAnchor;
- (struct CGAffineTransform)parentLayerInverseTransformInRootForZeroAnchor;
- (struct CGAffineTransform)layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (void)updateChildrenFromLayout;
- (id)repForHandleSingleTap;
- (id)repForRotating;
- (id)p_repForSelectingIgnoringTopLevelEditing:(BOOL)arg1;
- (id)i_repForSelectingIgnoringTopLevelEditing;
- (id)repForSelecting;
- (id)additionalRepsForDragging;
- (id)p_repForDraggingIgnoringTopLevelEditing:(BOOL)arg1;
- (id)i_repForDraggingIgnoringTopLevelEditing;
- (id)repForDragging;
- (BOOL)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(char *)arg2;
- (BOOL)shouldExpandHitRegionWhenSmall;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (BOOL)containsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertNaturalRectFromLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGPoint)convertNaturalPointFromLayerRelative:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToLayerRelative:(struct CGPoint)arg1;
- (struct CGAffineTransform)transformToConvertNaturalFromLayerRelative;
- (struct CGAffineTransform)transformToConvertNaturalToLayerRelative;
- (struct CGPoint)layerOffsetForDragging;
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
- (struct CGRect)layerFrameInScaledCanvas;
- (struct CGRect)frameInScreenSpace;
- (struct CGRect)frameInUnscaledCanvasIncludingChrome;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPath *)newPathInScaledCanvasFromNaturalRect:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)naturalBounds;
- (double)angleInRoot;
- (void)addToSet:(id)arg1;
- (id)parentRepToPerformSelecting;
- (void)willEndSharedReadOnlyMode;
- (void)willBeginSharedReadOnlyMode;
- (BOOL)hasBeenRemoved;
- (void)i_willBeRemoved;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (id)connectedReps;
- (id)commandController;
- (id)info;
@property(readonly, nonatomic) TSDLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (BOOL)i_hasInteractiveCanvasController;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)layerHostContainerFocusDidChange;
- (id)dragAndDropHighlightLayer;
- (struct CGPath *)newHighlightPathInScaledSpace;
- (BOOL)shouldShowDragAndDropHighlight;
- (void)hideDragAndDropUI;
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (id)temporaryHighlightLayer;
- (id)p_highlightLayer;
@property(nonatomic) BOOL shouldShowTemporaryHighlight;
- (BOOL)wantsToPreventDragOperationForSender:(id)arg1 atPoint:(struct CGPoint)arg2;
- (BOOL)handleDragOperation:(unsigned long long)arg1 withSender:(id)arg2 atPoint:(struct CGPoint)arg3 withPromisedFiles:(id)arg4;
- (unsigned long long)dragOperationForSender:(id)arg1 atPoint:(struct CGPoint)arg2 withPromisedTypes:(id)arg3;
- (BOOL)supportsCopyAsPDF;
- (BOOL)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (BOOL)wantsContextMenuAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (void)updateCommentHoverAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseExitedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseMovedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseEnteredAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)p_handleMouseInsideRepAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)p_comment;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerForKnob:(id)arg1 atPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGRect)i_partition_deepClipRect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

