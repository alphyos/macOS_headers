//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSWPTextHostRep.h"

#import "CALayerDelegate-Protocol.h"
#import "TSDDecorator-Protocol.h"
#import "TSKChangeSourceObserver-Protocol.h"
#import "TSTLayoutDynamicContentProtocol-Protocol.h"
#import "TSWPHyperlinkHostRepProtocol-Protocol.h"
#import "TSWPStorageObserver-Protocol.h"
#import "TSWPTextEditingDelegate-Protocol.h"

@class CALayer, CAShapeLayer, NSMutableArray, NSMutableDictionary, NSSet, NSString, TSDCanvasView, TSDEditorController, TSDKnobTracker, TSDTilingLayer, TSKHighlightArrayController, TSTAnimation, TSTCellSelection, TSTEditingState, TSTLayout, TSTMasterLayout, TSTSearchReference, TSTSelectionDragController, TSTTableCellTextEditingRep, TSTTableEditor, TSTTableInfo, TSTTableModel, TSTTableReferences, TSWPHyperlinkField, TSWPStorage, TSWPTextEditing;
@protocol TSTCanvasReferenceController, TSTTableAnimationController, TSTTableChromeProvider, TSTTableKnobTrackerVisitorProtocol, TSTTableRepDelegate;

@interface TSTTableRep : TSWPTextHostRep <TSTLayoutDynamicContentProtocol, TSKChangeSourceObserver, TSDDecorator, TSWPHyperlinkHostRepProtocol, TSWPTextEditingDelegate, TSWPStorageObserver, CALayerDelegate>
{
    struct CGRect mCanvasVisibleRect;
    struct CGRect mSearchSelectionBounds;
    TSDTilingLayer *mOverlayTableName;
    TSDTilingLayer *mOverlayFrozenHeaderCorner;
    TSDTilingLayer *mOverlayFrozenHeaderRows;
    TSDTilingLayer *mOverlayFrozenHeaderColumns;
    CALayer *mOverlayFrozenHeaderRowsMask;
    CALayer *mOverlayFrozenHeaderColumnsMask;
    CALayer *mOverlayFrozenHeaderTableBodyMask;
    CALayer *mOverlayFrozenHeaderTableNameMask;
    double mCurrentScreenScale;
    struct TSUCellRect mDirtyCellRange;
    BOOL mRecursivelyDrawingInContext;
    NSMutableArray *mAnimationStack;
    id <TSTTableAnimationController> mAnimationController;
    TSTTableCellTextEditingRep *mContainedTextEditingRep;
    TSWPTextEditing *mTableNameTextEditing;
    struct TSUCellCoord mRatingsDragCellID;
    id <TSTTableChromeProvider> mTableChrome;
    TSTTableReferences *mReferences;
    CAShapeLayer *mHighlightedHyperlinkLayer;
    BOOL mIsAspectOperationInProgress;
    BOOL mIsZoomOperationInProgress;
    BOOL mIsZoomToEditOperationInProgress;
    struct TSUCellRect mZoomToEditVisibleCellRange;
    CAShapeLayer *mFindSelectionHighlightLayer;
    CALayer *mTableCollaboratorCursorLayer;
    TSTCellSelection *mSourceFillSelection;
    TSTCellSelection *mTargetFillSelection;
    BOOL mWPEndedTableNameEditing;
    BOOL _settingSelection;
    TSTSelectionDragController *mCellDragController;
    BOOL mSelectionDragAbortedOnNewSelection;
    BOOL mDragByHandleOnly;
    BOOL mSelectionUsesBezierPath;
    BOOL mSelectsCellOnInitialTap;
    BOOL mUsesWholeChromeResizer;
    id <TSTCanvasReferenceController> mCanvasReferenceController;
    id <TSTTableRepDelegate> mDelegate;
    TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *mVisitorKnobTracker;
    NSSet *mVisibleFillKnobs;
    struct TSUCellCoord mEditingHyperlinkCellID;
    TSWPStorage *mHyperlinkParentStorage;
    BOOL mHyperlinkModified;
    BOOL mInspectingHyperlinkInEditingStorage;
    TSWPHyperlinkField *mHyperlinkField;
    CAShapeLayer *mCellEditingMaskLayer;
    TSKHighlightArrayController *mBodyHighlightArrayController;
    TSKHighlightArrayController *mFrozenCornerHighlightArrayController;
    TSKHighlightArrayController *mFrozenColumnsHighlightArrayController;
    TSKHighlightArrayController *mFrozenRowsHighlightArrayController;
    TSKHighlightArrayController *mBodyPulseArrayController;
    TSKHighlightArrayController *mFrozenCornerPulseArrayController;
    TSKHighlightArrayController *mFrozenColumnsPulseArrayController;
    TSKHighlightArrayController *mFrozenRowsPulseArrayController;
    TSTSearchReference *mPreviousSearchReference;
    BOOL mTableNameValid;
    BOOL mSuppressingConditionalStylesForHyperlink;
    NSMutableDictionary *mChildTextReps;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3;
+ (unsigned long long)p_countOfIdenticalCellsBetweenOutgoingTableModel:(id)arg1 incomingTableModel:(id)arg2;
+ (Class)tableRepDelegateClass;
@property(nonatomic, getter=isSuppressingConditionalStylesForHyperlink) BOOL suppressingConditionalStylesForHyperlink; // @synthesize suppressingConditionalStylesForHyperlink=mSuppressingConditionalStylesForHyperlink;
@property(nonatomic, getter=isTableNameValid) BOOL tableNameValid; // @synthesize tableNameValid=mTableNameValid;
@property(retain, nonatomic) NSMutableDictionary *childTextReps; // @synthesize childTextReps=mChildTextReps;
@property(readonly, nonatomic) BOOL isZoomToEditOperationInProgress; // @synthesize isZoomToEditOperationInProgress=mIsZoomToEditOperationInProgress;
@property(readonly, nonatomic) TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *visitorKnobTracker; // @synthesize visitorKnobTracker=mVisitorKnobTracker;
@property(nonatomic) struct TSUCellCoord ratingsDragCellID; // @synthesize ratingsDragCellID=mRatingsDragCellID;
@property(readonly, nonatomic) TSWPTextEditing *tableNameTextEditing; // @synthesize tableNameTextEditing=mTableNameTextEditing;
@property(nonatomic) BOOL settingSelection; // @synthesize settingSelection=_settingSelection;
@property(retain, nonatomic) TSTTableCellTextEditingRep *containedTextEditingRep; // @synthesize containedTextEditingRep=mContainedTextEditingRep;
@property(readonly, nonatomic) TSTCellSelection *sourceFillSelection; // @synthesize sourceFillSelection=mSourceFillSelection;
@property(nonatomic) TSTSelectionDragController *cellDragController; // @synthesize cellDragController=mCellDragController;
@property(readonly, nonatomic) id <TSTTableRepDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) id <TSTTableChromeProvider> tableChrome; // @synthesize tableChrome=mTableChrome;
@property(nonatomic) id <TSTTableAnimationController> animationController; // @synthesize animationController=mAnimationController;
@property(readonly, nonatomic) id <TSTCanvasReferenceController> canvasReferenceController; // @synthesize canvasReferenceController=mCanvasReferenceController;
@property(readonly, copy) NSString *description;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (struct CGRect)boundsForResizeGuideUI;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(BOOL)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)p_editingDidEnd;
- (void)p_hideSelectionLayers;
- (struct CGPath *)p_newPathForSearchReference:(id)arg1;
- (id)p_textImageForPath:(struct CGPath *)arg1 shouldPulsate:(BOOL)arg2;
- (void)pulseAnimationDidStop:(id)arg1;
- (void)updateFindAnimationWithAnimatingPulse:(BOOL)arg1;
- (void)p_setUpPulseController:(id)arg1 inHeaderLayer:(id)arg2 withPulse:(BOOL)arg3;
@property(retain, nonatomic) TSTSearchReference *activeSearchReference; // @dynamic activeSearchReference;
- (void)p_deactivatePulseArrayControllers;
- (void)updateHighlights;
- (BOOL)useFindOverlayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (int)tilingMode;
- (BOOL)canDrawInParallel;
- (BOOL)mustDrawOnMainThreadForInteractiveCanvas;
- (BOOL)canDrawInBackgroundDuringScroll;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (void)inspectorUIIsDismissing:(id)arg1;
- (void)inspectorUIIsPresenting:(id)arg1;
- (void)viewDidTransition;
- (void)viewScrollDidChange;
- (void)didEndScrollingOperation;
- (void)willBeginScrollingOperation;
- (void)didEndZoomingOperation;
- (void)willBeginZoomingOperation;
- (void)didEndDynamicOperation;
- (void)willBeginDynamicOperation;
- (id)decoratorOverlayLayers;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (void)invalidateFrozenHeaders;
- (void)validateFrozenHeaderTableBodyMask;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)validateFrozenHeaderColumns;
- (void)validateFrozenHeaderRows;
- (void)validateFrozenHeaderCorner;
- (struct CGRect)p_alignedLayerFrameForLayoutSpace:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_frozenHeaderOverlayLayers;
- (void)validateTableName;
- (id)p_tableNameOverlayLayers;
- (void)didUpdateLayer:(id)arg1;
- (id)additionalLayersUnderLayer;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)textureForContext:(id)arg1;
- (void)setTextureStage:(unsigned long long)arg1;
- (void)popAnimation;
- (void)pushAnimation:(id)arg1;
@property(readonly, nonatomic) TSTAnimation *currentAnimation;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)processChanges:(id)arg1;
- (void)p_processChangeActions:(id)arg1;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;
- (void)didDrawCellImageFill:(id)arg1 inCellRange:(struct TSUCellRect)arg2;
- (void)transitionEditingMode;
- (struct CGPoint)unscaledActivityLineEndPointForEntry:(id)arg1;
- (BOOL)wantsActivityLine;
- (void)invalidateComments;
- (void)invalidateAnnotationColor;
- (void)p_invalidateCellCommentBadges;
- (void)dirtyCellRange:(struct TSUCellRect)arg1;
- (void)setNeedsDisplayInCellRange:(struct TSUCellRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)invalidateTableName;
- (void)invalidateCellRange:(struct TSUCellRect)arg1 fittingRange:(struct TSUCellRect)arg2 invalidateSize:(BOOL)arg3;
- (void)invalidateCellRange:(struct TSUCellRect)arg1;
- (void)invalidateSelection;
- (void)p_resetDynamicModePropertiesForContainedTextEditing;
- (void)p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:(struct TSUCellRect)arg1;
- (void)p_updateDynamicModePropertiesForContainedTextEditing;
- (void)screenScaleDidChange;
- (void)viewScaleDidChange;
- (BOOL)isFullyVisibleWithBorder:(int)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)validateVisibleRect;
- (void)validateStrokesInEditingSpillingTextRange;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (id)hyperlinkRegions;
- (id)hyperlinkContainerRep;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(id)arg1;
- (void)setHighlightedHyperlinkField:(id)arg1;
- (void)p_updateHighlightedHyperlinkLayerFromLayout;
- (struct CGAffineTransform)p_horizontalAlignmentTransformForHyperlinkWithBounds:(struct CGRect)arg1 inCell:(struct TSUCellCoord)arg2;
- (struct TSUCellCoord)p_cellIDForHyperlinkField:(id)arg1;
- (id)smartFieldAtPoint:(struct CGPoint)arg1;
- (id)p_columnForCellID:(struct TSUCellCoord)arg1;
@property(readonly, nonatomic) TSTCellSelection *editorSelection;
- (struct CGRect)frameInUnscaledCanvasIncludingChrome;
- (void)setCurrentKnobTracker:(id)arg1;
- (void)contentsRectForCellRangeAcrossSpaces:(struct TSUCellRect)arg1 contentsCenterInfo:(CDStruct_08b9d696 *)arg2 canvasFrame:(struct CGRect *)arg3 contentsRect:(struct CGRect *)arg4;
- (struct CGRect)boundsForCellSelection:(struct TSUCellCoord)arg1;
- (struct CGRect)canvasBoundsForCellRange:(struct TSUCellRect)arg1;
- (struct CGRect)deviceBoundsForCellRange:(struct TSUCellRect)arg1;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)isDraggable;
- (id)stringValueOfEditingCell;
- (BOOL)p_shouldPerformOnChildTextReps:(SEL)arg1;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (id)childReps;
- (void)updateChildrenFromLayout;
@property(nonatomic) struct TSUCellCoord editingCellID;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)beginEditingControlCellID:(struct TSUCellCoord)arg1 canvasPoint:(struct CGPoint)arg2;
- (void)endTableNameEditing;
- (BOOL)disableInspector;
- (BOOL)suppressInvisiblePathHighlight;
- (BOOL)suppressPhonetics;
- (BOOL)suppressBreaks;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (id)infoGeometryForTextSize:(struct CGSize)arg1;
- (void)beginTableNameEditingAtUnscaledCanvasPoint:(struct CGPoint)arg1 withDefaultText:(id)arg2;
- (void)beginTableNameEditingAtUnscaledCanvasPoint:(struct CGPoint)arg1;
- (void)changeEditingMode:(int)arg1 maybeBecomePrimary:(BOOL)arg2;
- (void)changeEditingMode:(int)arg1;
- (int)editingMode;
@property(readonly, nonatomic) TSTTableEditor *tableEditor;
- (id)tableNameEditor;
- (void)willBeRemoved;
- (void)invalidateEditingCell;
- (void)asyncPostTextChangedInRange:(struct TSUCellRect)arg1;
- (BOOL)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (id)beginEditing;
- (id)lineSearchReferencesForSearchReference:(id)arg1;
- (BOOL)doesRepContainSearchReference:(id)arg1;
- (void)canvasReferenceEditingModeChanged:(id)arg1;
- (BOOL)p_selectionChangedOfClass:(Class)arg1 fromOldPath:(id)arg2 toNewPath:(id)arg3;
- (BOOL)p_strokeSelectionRemovedFromOldPath:(id)arg1 toNewPath:(id)arg2;
- (void)editorControllerSelectionDidChange:(id)arg1;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (BOOL)shouldDismissHyperlinkUIOnApplicationEnterBackground;
- (void)didEndHyperlinkSessionForHyperlinkField:(id)arg1;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(BOOL)arg2;
- (void)p_stopSuppressingConditionalStylesForHyperlink;
- (void)p_startSuppressingConditionalStylesForHyperlinkAtCellID:(struct TSUCellCoord)arg1;
- (void)p_endHyperlinkTextEditingAtCellID:(struct TSUCellCoord)arg1;
- (void)p_beginHyperlinkTextEditingInStorage:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (BOOL)shouldUseHyperlinkHighlight;
- (id)p_beginHyperlinkEditing:(id)arg1 inCell:(struct TSUCellCoord)arg2;
- (id)hyperlinkFieldForEditingHyperlinkField:(id)arg1;
- (BOOL)hyperlinkEditingReadonlyForCellID:(struct TSUCellCoord)arg1;
- (BOOL)wantsContextMenuAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (BOOL)handlesEditMenu;
- (BOOL)shouldShowContextMenu;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)p_addObservers;
- (void)p_removeObservers;
- (void)dealloc;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (struct CGRect)layerFrameInScaledCanvas;
- (id)repForDragging;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
@property(readonly, nonatomic) long long selectionType;
@property(readonly, nonatomic) TSTCellSelection *selection;
@property(readonly, nonatomic) CALayer *layerForRep;
@property(readonly, nonatomic) struct CGRect canvasVisibleRect;
@property(readonly, nonatomic) struct CGAffineTransform transformFromCanvas;
@property(readonly, nonatomic) struct CGAffineTransform transformToCanvas;
@property(readonly, nonatomic) TSDEditorController *editorController;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *tableLayout;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
- (struct CGRect)p_convertRectIntoZoomCoordinates:(struct CGRect)arg1;
- (void)updateUniversalAccessZoomWindow;
- (void)hideDragAndDropUI;
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 draggingInfo:(id)arg2;
- (id)dragAndDropHighlightLayer;
- (BOOL)shouldShowDragAndDropHighlight;
- (BOOL)handleDragOperation:(unsigned long long)arg1 withSender:(id)arg2 atPoint:(struct CGPoint)arg3 withPromisedFiles:(id)arg4;
- (unsigned long long)dragOperationForSender:(id)arg1 atPoint:(struct CGPoint)arg2 withPromisedTypes:(id)arg3;
- (void)addCollaborationDebugItemsToMenuItems:(id)arg1;
- (id)tableContextMenuItems;
- (id)cellContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (id)rowContextMenuItemsForRow:(unsigned short)arg1 inColumn:(unsigned char)arg2;
- (id)rowContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (id)columnContextMenuItemsForColumn:(unsigned char)arg1;
- (id)columnContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (BOOL)shouldPreventSelectionChangeForMouseDownAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)p_selectionPathForContextMenuClickAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (void)mouseExitedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseEnteredAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseMovedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerForKnob:(id)arg1 atPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (id)p_newMouseEventHandler:(id)arg1 delayedByKnob:(id)arg2;
- (id)newMouseEventHandlerAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)macTableEditor;
- (BOOL)dynamicContentMustDrawOnMainThread;
- (BOOL)cell:(id *)arg1 forCellID:(struct TSUCellCoord)arg2;
- (void)endKnobTrackerVisit:(id)arg1;
- (void)beginKnobTrackerVisit:(id)arg1;
- (void)willBeginTextOrFormulaEditing;
- (void)setupContainedTextEditingRep:(struct TSUCellCoord)arg1;
- (void)endTextEditing;
- (void)beginTextEditingAtCellID:(struct TSUCellCoord)arg1 setTextSelectionAtUnscaledCanvasPoint:(struct CGPoint)arg2;
- (void)p_beginTextEditingAtCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2;
- (void)beginTextEditingAtCellID:(struct TSUCellCoord)arg1;
- (void)p_selectTableAsOnlyInfoIfNecessary;
- (void)p_swapActiveCellToCellID:(struct TSUCellCoord)arg1;
- (void)p_swapActiveCellToCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2;
- (void)willBeginEditingContainedRep;
- (BOOL)canEditWithEditor:(id)arg1;
- (void)endRatingsDrag;
- (void)moveRatingsDragToPoint:(struct CGPoint)arg1;
- (void)startRatingsDragAtPoint:(struct CGPoint)arg1;
- (BOOL)canStartRatingsDragAtPoint:(struct CGPoint)arg1 isLongPress:(BOOL)arg2;
- (void)p_hideStepperHUDIfVisibleAsync:(BOOL)arg1;
- (void)hideStepperHUDIfVisible;
- (void)stepperHUDWillDisappear;
- (void)stepperHUDWillAppear;
- (BOOL)stepperHUDIsVisible;
- (id)sharedStepperHUDViewController;
- (BOOL)hitReferenceBadgesWithPoint:(struct CGPoint)arg1 includeCells:(BOOL)arg2;
- (BOOL)shouldShowKnobs;
- (BOOL)shouldCreateKnobs;
- (void)hideAllFillKnobs;
- (id)p_knobsForRangeSelection;
- (id)p_knobsForWholeTab;
- (id)p_knobsForFillMode;
- (void)validateFillDirections:(id)arg1 withinSelection:(BOOL)arg2 canFillUp:(char *)arg3 canFillDown:(char *)arg4 canFillLeading:(char *)arg5 canFillTrailing:(char *)arg6;
- (void)validateFillDirections:(id)arg1 withinSelection:(BOOL)arg2 canFillUp:(char *)arg3 canFillDown:(char *)arg4 canFillLeft:(char *)arg5 canFillRight:(char *)arg6;
- (id)p_knobsForTableResize;
- (id)p_tableKnobWithTag:(unsigned long long)arg1 knobVariant:(int)arg2;
- (id)p_knobsForReferences;
- (void)p_updateKnobReferenceIdentifiers;
- (Class)knobClassForVariant:(int)arg1;
- (BOOL)fillKnobsEnabled;
- (id)newTrackerForKnob:(id)arg1;
- (struct CGPoint)positionOfKnob:(id)arg1 forTableSelectionBounds:(struct CGRect)arg2 withContentsRect:(struct CGRect)arg3 andCellRange:(struct TSUCellRect)arg4;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)boundsForTableKnobsAndCellRange:(struct TSUCellRect *)arg1;
- (struct CGRect)boundsForStandardKnobs;
- (BOOL)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (BOOL)shouldCreateSelectionKnobs;
- (unsigned long long)enabledKnobMask;
- (void)invalidateKnobs;
- (id)knobs;
- (BOOL)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)dismissControlCellEditor;
- (void)p_enumerateCollabCursorSelectionHighlightLayers:(CDUnknownBlockType)arg1;
- (void)addCollaboratorCursorHoverKnobsToArray:(id)arg1;
- (id)currentCollaboratorCursorColor;
- (id)collaboratorCursorLayer;
- (void)invalidateCollaboratorCursorLayer;
- (void)hideCollaboratorCursors;
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;
- (id)selectionPathForTapToTextEditAtNaturalPoint:(struct CGPoint)arg1 forTextRep:(id)arg2;
- (BOOL)isEditingAnimations;
- (void)endTabDragSelection:(id)arg1;
- (void)updateTabDragSelection:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)startTabDragSelection:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)selectionDragDidAbortWithInitialSelection:(id)arg1 currentSelection:(id)arg2;
- (int)chromeMode;
- (void)becameNotSelected;
- (void)becameSelected;
- (BOOL)shouldShowSelectionHighlight;
- (id)selectionHighlightLayer;
- (BOOL)wantsToHandleTapsWhenLocked;
- (void)p_beginEditingCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 unscaledCanvasPoint:(struct CGPoint)arg3;
- (BOOL)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)wantsToHandleTapsOnContainingGroup;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)p_shouldHandleTap;
- (BOOL)p_didHitWarningIconInCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 atPoint:(struct CGPoint)arg3;
- (BOOL)p_didHitFormulaErrorInCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 atPoint:(struct CGPoint)arg3;
- (BOOL)cellFormatUsesInputProxy:(int)arg1;
- (int)formatTypeForCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForWarningIndicatorInCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForFormulaErrorIndicatorInCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForCell:(struct TSUCellCoord)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

