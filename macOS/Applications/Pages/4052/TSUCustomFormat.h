//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSSPAutoEncodable-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSMutableCopying-Protocol.h"

@class NSMutableArray, NSString, TSUCustomFormatData;

@interface TSUCustomFormat : NSObject <GSSPAutoEncodable, NSCopying, NSMutableCopying>
{
    NSString *mFormatName;
    NSString *mFormatNameStem;
    NSString *mFormatNameTag;
    int mFormatType;
    TSUCustomFormatData *mDefaultFormatData;
    NSMutableArray *mConditionList;
}

@property(readonly, nonatomic) NSMutableArray *conditionList; // @synthesize conditionList=mConditionList;
- (id)description;
- (id)conditionalFormatDataForKey:(unsigned long long)arg1;
- (id)conditionalFormatAtIndex:(unsigned long long)arg1;
- (id)conditionalFormatDataForValue:(double)arg1 outKey:(unsigned long long *)arg2;
- (id)conditionalFormatDataForValue:(double)arg1;
@property(readonly, nonatomic) TSUCustomFormatData *defaultFormatData;
@property(readonly, nonatomic) int formatType;
@property(readonly, nonatomic) NSString *formatName; // @synthesize formatName=mFormatName;
- (BOOL)isEqualWithStemNameMatching:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)p_isEqual:(id)arg1 matchingFullName:(BOOL)arg2;
@property(readonly, nonatomic) NSString *formatNameTag;
@property(readonly, nonatomic) NSString *formatNameStem;
- (void)p_makeFormatNameStemAndTag;
- (unsigned long long)hash;
- (void)p_addConditionOfType:(int)arg1 value:(double)arg2 data:(id)arg3;
@property(readonly, nonatomic) unsigned long long conditionCount;
- (id)customFormatWithNewName:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 formatType:(int)arg2 data:(id)arg3;
- (id)initWithName:(id)arg1 formatType:(int)arg2 data:(id)arg3 conditionList:(id)arg4;
- (id)formattedBodyStringForDoubleValue:(double)arg1 customFormatListKey:(id)arg2 formatType:(int)arg3 locale:(id)arg4;
- (void)populateGSSPCustomFormat:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

@end

