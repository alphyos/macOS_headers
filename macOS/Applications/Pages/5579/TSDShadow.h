//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSSPAutoEncodable-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSMutableCopying-Protocol.h"
#import "TSDMixing-Protocol.h"
#import "TSSPreset-Protocol.h"
#import "TSSPresetSource-Protocol.h"
#import "TSSPropertyValueArchiving-Protocol.h"

@class NSString, TSUColor;

@interface TSDShadow : NSObject <GSSPAutoEncodable, TSSPropertyValueArchiving, TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    double mAngle;
    double mOffset;
    double mRadius;
    double mOpacity;
    TSUColor *mColor;
    BOOL mEnabled;
}

+ (id)mixableObjectClasses;
+ (BOOL)canMixWithNilObjects;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (BOOL)automaticallyNotifiesObserversOfTSUColor;
+ (id)keyPathsForValuesAffectingTSUColor;
+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(id)arg6 enabled:(BOOL)arg7;
+ (id)shadowWithNSShadow:(id)arg1;
+ (id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(id)arg6 enabled:(BOOL)arg7;
+ (id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(id)arg5 enabled:(BOOL)arg6;
+ (id)defaultDisabledShadow;
+ (id)defaultShadow;
+ (id)p_defaultShadowEnabled:(BOOL)arg1;
+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=mEnabled;
@property(readonly, copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) double radius; // @synthesize radius=mRadius;
@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
- (id)NSShadow;
- (id)shadowByTransformingByTransform:(struct CGAffineTransform)arg1;
- (id)mixedBaseObjectWithObject:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) NSString *presetKind;
- (BOOL)differenceRequiresRebuilding:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalAngle:(double)arg2;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(BOOL)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(BOOL)arg3 extraOffset:(struct CGSize)arg4;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(BOOL)arg3;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2;
@property(readonly, nonatomic) struct CGPoint offsetDelta;
- (BOOL)usesOpenGL;
- (id)typeDescription;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (BOOL)showForEditingText;
- (BOOL)isCurvedShadow;
- (BOOL)isDropShadow;
- (BOOL)isContactShadow;
- (unsigned long long)hash;
- (void)dealloc;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)clampOpacity:(double)arg1;
- (double)clampRadius:(double)arg1;
- (double)clampOffset:(double)arg1;
- (id)initWithGQDRCIFilterInfo:(id)arg1 state:(id)arg2;
- (id)initWithQDShadow:(id)arg1 dropShadowOnly:(BOOL)arg2;
- (id)initWithQDShadowAllowingAllTypes:(id)arg1;
- (id)initWithQDShadow:(id)arg1;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;
- (void)populateGSSPShadow:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
- (struct CGImage *)i_newEmptyImage;
- (id)i_initWithOpacity:(double)arg1 color:(id)arg2 enabled:(BOOL)arg3;

@end

