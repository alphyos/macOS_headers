//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class NSDate, NSIndexSet, NSMutableArray, NSObject, NSSet, NSString, NSUUID, TSCEFunctionSpec, TSCEReferenceSetWrapper, TSCH3DAnimationInterpolation, TSCH3DChartRep, TSCH3DScene, TSCH3DShaderVariable, TSCHChartInfo, TSCHChartSeriesType, TSCHChartType, TSDDrawableInfo, TSDTexturedRectangle, TSKBooleanFormat, TSKCustomFormatWrapper, TSKDateTimeFormat, TSUCustomFormat, TSWPStorage, WDBorder, WDShading;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTNodeArrayArchive;

struct ASTNodeArrayArchive_ASTStickyBits;

struct ASTNodeArrayArchive_ASTUidList;

struct ASTNodeArrayArchive_ASTUidTract {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive_ASTUidList *_field5;
    struct ASTNodeArrayArchive_ASTUidList *_field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
};

struct ASTNodeArrayArchive_ASTUidTractList {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> _field5;
    struct ASTNodeArrayArchive_ASTStickyBits *_field6;
};

struct AbstractGuideCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSD::UserDefinedGuideArchive> _field6;
    struct RepeatedPtrField<TSD::UserDefinedGuideArchive> _field7;
};

struct AbstractStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
};

struct AccumulatorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
    struct CellValueArchive *_field13;
    struct CellValueArchive *_field14;
    struct CellValueArchive *_field15;
    struct CellValueArchive *_field16;
    double _field17;
    double _field18;
};

struct Action {
    CDUnknownFunctionPointerType *_field1;
};

struct ActionFinder;

struct ActiveLabelsTypeBounds {
    long long _field1;
    struct ObjcSharedPtr<NSMutableIndexSet> _field2;
    struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> _field3;
};

struct AddCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct UUID *_field7;
};

struct AddFlowInfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    unsigned int _field8;
    unsigned int _field9;
    struct Reference *_field10;
};

struct AddIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
};

struct Address {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Address *_field6;
};

struct AdjustedColor {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct AllFootnoteSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct AnchorAttachmentCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    float _field8;
    unsigned int _field9;
    float _field10;
    unsigned int _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned int _field15;
    float _field16;
};

struct ApplyPlaceholderTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct UndoTransaction *_field9;
    basic_string_23d93216 *_field10;
};

struct ApplyRubyTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    basic_string_23d93216 *_field9;
    struct UndoTransaction *_field10;
};

struct ArchiveInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long identifier_;
    struct RepeatedPtrField<TSP::MessageInfo> message_infos_;
    _Bool should_merge_;
};

struct ArgumentPlaceholderNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ArrayNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AttributeCollection {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> _field2;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> _field3;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> _field4;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> _field5;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field6;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> _field7;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> _field8;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> _field9;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> _field10;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> _field11;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> _field12;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> _field13;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> _field14;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> _field15;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> _field16;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> _field17;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> _field18;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> _field19;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> _field20;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> _field21;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> _field22;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> _field23;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> _field24;
};

struct AttributeSpecs {
    unsigned long long stride;
    unsigned long long offset;
    unsigned long long components;
};

struct Attribution {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioUnitMeterClipping {
    float peakValueSinceLastCall;
    unsigned char sawInfinity;
    unsigned char sawNotANumber;
};

struct AxisGridLocation {
    char _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    tvec3_17f03ce0 _field4;
};

struct AxisLabelCacheItem;

struct AxisParentChildren {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct ChVector<int> _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct BarElementInfo {
    char _field1;
    float _field2;
    char _field3;
    unsigned long long _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    char hasTopBevel;
    char hasBottomBevel;
    char isCylindrical;
    char isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BarIntercept {
    double _field1;
    id _field2;
};

struct BaseApplyPresetCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct BaseShapeStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFillArchive *_field5;
    struct SpecStrokeArchive *_field6;
    struct SpecDoubleArchive *_field7;
    struct SpecShadowArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct SpecReflectionArchive *_field16;
    struct SpecLineEndArchive *_field17;
    struct SpecLineEndArchive *_field18;
};

struct BaseStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct BezierPathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct Size *_field6;
    struct Path *_field7;
};

struct BookmarkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_23d93216 *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct BooleanCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormatStructArchive *_field5;
    _Bool _field6;
    _Bool _field7;
};

struct BooleanNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    _Bool _field6;
};

struct BufferStates {
    struct array<TSCH3D::GLSingleState, 2> states;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CC_SHA1state_st {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8[16];
    int _field9;
};

struct CDESelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct CFUUIDArchive;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGContext;

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CHDDataPoint {
    unsigned long long index;
    struct EDValue value;
    unsigned long long contentFormatId;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct CachedLabelBounds {
    tvec3_17f03ce0 _field1;
    box_80622335 _field2;
    tvec2_84d5962d _field3;
    struct ObjcSharedPtr<NSString> _field4;
};

struct CalloutPathSourceArchive;

struct CategoryOrderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
};

struct CategoryOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive> _field6;
};

struct CategoryOwnerArchive_GroupByArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct RepeatedPtrField<TST::GroupColumnArchive> _field6;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive *_field7;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggregatorArchive> _field8;
    struct RepeatedPtrField<TST::ColumnAggregateArchive> _field9;
    struct CellCoordinateArchive *_field10;
    struct CellCoordinateArchive *_field11;
    struct CellCoordinateArchive *_field12;
    struct CellCoordinateArchive *_field13;
    struct CellCoordinateArchive *_field14;
    struct CellCoordinateArchive *_field15;
    _Bool _field16;
};

struct CategoryOwnerArchive_GroupByArchive_AggNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CellCoordinateArchive *_field5;
    struct AccumulatorArchive *_field6;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggNodeArchive> _field7;
};

struct CategoryOwnerArchive_GroupByArchive_AggregatorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct CategoryOwnerArchive_GroupByArchive_AggNodeArchive *_field6;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive *_field6;
    struct CellValueArchive *_field7;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive> _field8;
    RepeatedPtrField_bfda3daa _field9;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field10;
    struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive *_field11;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CellValueArchive *_field5;
    struct RepeatedPtrField<TSK::FormatStructArchive> _field6;
    struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive> _field7;
};

struct CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_GroupValueTupleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field5;
};

struct CategoryReferenceArchive;

struct CellBorderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    int _field7;
    int _field8;
    struct StrokeArchive *_field9;
    struct StrokeArchive *_field10;
    int _field11;
    int _field12;
};

struct CellCoordinateArchive;

struct CellCoordinateVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field5;
};

struct CellFillStandIn {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct CellID;

struct CellRange;

struct CellReferenceArchive;

struct CellRegion {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
};

struct CellSpecArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaArchive *_field5;
    double _field6;
    double _field7;
    double _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
    struct Reference *_field12;
};

struct CellStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CellStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CellStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    _Bool _field8;
    int _field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct PaddingArchive *_field12;
    struct StrokeArchive *_field13;
    struct StrokeArchive *_field14;
    struct StrokeArchive *_field15;
    struct StrokeArchive *_field16;
};

struct CellUIDListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    RepeatedPtrField_bfda3daa _field6;
    RepeatedField_c2891982 _field7;
    RepeatedField_c2891982 _field8;
};

struct CellUIDRegionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::UUIDRectArchive> _field5;
};

struct CellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BooleanCellValueArchive *_field5;
    struct DateCellValueArchive *_field6;
    struct NumberCellValueArchive *_field7;
    struct StringCellValueArchive *_field8;
    struct ErrorCellValueArchive *_field9;
    int _field10;
};

struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> {
    struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> _field1;
};

struct ChMap<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdCharacterProperties *>>> _field1;
};

struct ChMap<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdParagraphProperties *>>> _field1;
};

struct ChMap<unsigned int, WrdTableProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdTableProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdTableProperties *>>> _field1;
};

struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> {
    struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> _field1;
};

struct ChMap<unsigned int, int, CsLess<unsigned int>> {
    struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field1;
};

struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> {
    struct map<unsigned int, unsigned int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _field1;
};

struct ChStack<EshHeader> {
    struct EshHeader *_field1;
    struct EshHeader *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChStack<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<CsString *> {
    struct CsString **_field1;
    struct CsString **_field2;
    struct __compressed_pair<CsString **, ChAllocator<CsString *>> {
        struct CsString **_field1;
    } _field3;
};

struct ChVector<EshComputedRect> {
    struct EshComputedRect *_field1;
    struct EshComputedRect *_field2;
    struct __compressed_pair<EshComputedRect *, ChAllocator<EshComputedRect>> {
        struct EshComputedRect *_field1;
    } _field3;
};

struct ChVector<EshComputedValue> {
    struct EshComputedValue *_field1;
    struct EshComputedValue *_field2;
    struct __compressed_pair<EshComputedValue *, ChAllocator<EshComputedValue>> {
        struct EshComputedValue *_field1;
    } _field3;
};

struct ChVector<EshFormula> {
    struct EshFormula *_field1;
    struct EshFormula *_field2;
    struct __compressed_pair<EshFormula *, ChAllocator<EshFormula>> {
        struct EshFormula *_field1;
    } _field3;
};

struct ChVector<EshHeader *> {
    struct EshHeader **_field1;
    struct EshHeader **_field2;
    struct __compressed_pair<EshHeader **, ChAllocator<EshHeader *>> {
        struct EshHeader **_field1;
    } _field3;
};

struct ChVector<EshPathCommand> {
    struct EshPathCommand *_field1;
    struct EshPathCommand *_field2;
    struct __compressed_pair<EshPathCommand *, ChAllocator<EshPathCommand>> {
        struct EshPathCommand *_field1;
    } _field3;
};

struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    struct __compressed_pair<OcText *, ChAllocator<OcText>> {
        struct OcText *_field1;
    } _field3;
};

struct ChVector<WrdAnnotation *> {
    struct WrdAnnotation **_field1;
    struct WrdAnnotation **_field2;
    struct __compressed_pair<WrdAnnotation **, ChAllocator<WrdAnnotation *>> {
        struct WrdAnnotation **_field1;
    } _field3;
};

struct ChVector<WrdBookmark *> {
    struct WrdBookmark **_field1;
    struct WrdBookmark **_field2;
    struct __compressed_pair<WrdBookmark **, ChAllocator<WrdBookmark *>> {
        struct WrdBookmark **_field1;
    } _field3;
};

struct ChVector<WrdFieldPosition *> {
    struct WrdFieldPosition **_field1;
    struct WrdFieldPosition **_field2;
    struct __compressed_pair<WrdFieldPosition **, ChAllocator<WrdFieldPosition *>> {
        struct WrdFieldPosition **_field1;
    } _field3;
};

struct ChVector<WrdFileShapeAddress *> {
    struct WrdFileShapeAddress **_field1;
    struct WrdFileShapeAddress **_field2;
    struct __compressed_pair<WrdFileShapeAddress **, ChAllocator<WrdFileShapeAddress *>> {
        struct WrdFileShapeAddress **_field1;
    } _field3;
};

struct ChVector<WrdFontFamilyName *> {
    struct WrdFontFamilyName **_field1;
    struct WrdFontFamilyName **_field2;
    struct __compressed_pair<WrdFontFamilyName **, ChAllocator<WrdFontFamilyName *>> {
        struct WrdFontFamilyName **_field1;
    } _field3;
};

struct ChVector<WrdListLevelFormat *> {
    struct WrdListLevelFormat **_field1;
    struct WrdListLevelFormat **_field2;
    struct __compressed_pair<WrdListLevelFormat **, ChAllocator<WrdListLevelFormat *>> {
        struct WrdListLevelFormat **_field1;
    } _field3;
};

struct ChVector<WrdListLevelFormatOverride *> {
    struct WrdListLevelFormatOverride **_field1;
    struct WrdListLevelFormatOverride **_field2;
    struct __compressed_pair<WrdListLevelFormatOverride **, ChAllocator<WrdListLevelFormatOverride *>> {
        struct WrdListLevelFormatOverride **_field1;
    } _field3;
};

struct ChVector<WrdNote *> {
    struct WrdNote **_field1;
    struct WrdNote **_field2;
    struct __compressed_pair<WrdNote **, ChAllocator<WrdNote *>> {
        struct WrdNote **_field1;
    } _field3;
};

struct ChVector<WrdStory *> {
    struct WrdStory **_field1;
    struct WrdStory **_field2;
    struct __compressed_pair<WrdStory **, ChAllocator<WrdStory *>> {
        struct WrdStory **_field1;
    } _field3;
};

struct ChVector<WrdStyle *> {
    struct WrdStyle **_field1;
    struct WrdStyle **_field2;
    struct __compressed_pair<WrdStyle **, ChAllocator<WrdStyle *>> {
        struct WrdStyle **_field1;
    } _field3;
};

struct ChVector<WrdTabDescriptor *> {
    struct WrdTabDescriptor **_field1;
    struct WrdTabDescriptor **_field2;
    struct __compressed_pair<WrdTabDescriptor **, ChAllocator<WrdTabDescriptor *>> {
        struct WrdTabDescriptor **_field1;
    } _field3;
};

struct ChVector<WrdTableCellDescriptor *> {
    struct WrdTableCellDescriptor **_field1;
    struct WrdTableCellDescriptor **_field2;
    struct __compressed_pair<WrdTableCellDescriptor **, ChAllocator<WrdTableCellDescriptor *>> {
        struct WrdTableCellDescriptor **_field1;
    } _field3;
};

struct ChVector<XlBrk *> {
    struct XlBrk **_field1;
    struct XlBrk **_field2;
    struct __compressed_pair<XlBrk **, ChAllocator<XlBrk *>> {
        struct XlBrk **_field1;
    } _field3;
};

struct ChVector<XlCell *> {
    struct XlCell **_field1;
    struct XlCell **_field2;
    struct __compressed_pair<XlCell **, ChAllocator<XlCell *>> {
        struct XlCell **_field1;
    } _field3;
};

struct ChVector<XlCellRow *> {
    struct XlCellRow **_field1;
    struct XlCellRow **_field2;
    struct __compressed_pair<XlCellRow **, ChAllocator<XlCellRow *>> {
        struct XlCellRow **_field1;
    } _field3;
};

struct ChVector<XlChartBinaryReader::PlotDescriptor> {
    struct PlotDescriptor *_field1;
    struct PlotDescriptor *_field2;
    struct __compressed_pair<XlChartBinaryReader::PlotDescriptor *, ChAllocator<XlChartBinaryReader::PlotDescriptor>> {
        struct PlotDescriptor *_field1;
    } _field3;
};

struct ChVector<XlChartBinaryReader::SeriesDescriptor> {
    struct SeriesDescriptor *_field1;
    struct SeriesDescriptor *_field2;
    struct __compressed_pair<XlChartBinaryReader::SeriesDescriptor *, ChAllocator<XlChartBinaryReader::SeriesDescriptor>> {
        struct SeriesDescriptor *_field1;
    } _field3;
};

struct ChVector<XlChartCustomLabelText *> {
    struct XlChartCustomLabelText **_field1;
    struct XlChartCustomLabelText **_field2;
    struct __compressed_pair<XlChartCustomLabelText **, ChAllocator<XlChartCustomLabelText *>> {
        struct XlChartCustomLabelText **_field1;
    } _field3;
};

struct ChVector<XlChartCustomLegend *> {
    struct XlChartCustomLegend **_field1;
    struct XlChartCustomLegend **_field2;
    struct __compressed_pair<XlChartCustomLegend **, ChAllocator<XlChartCustomLegend *>> {
        struct XlChartCustomLegend **_field1;
    } _field3;
};

struct ChVector<XlChartFBI> {
    struct XlChartFBI *_field1;
    struct XlChartFBI *_field2;
    struct __compressed_pair<XlChartFBI *, ChAllocator<XlChartFBI>> {
        struct XlChartFBI *_field1;
    } _field3;
};

struct ChVector<XlChartPlot::DefText> {
    struct DefText *_field1;
    struct DefText *_field2;
    struct __compressed_pair<XlChartPlot::DefText *, ChAllocator<XlChartPlot::DefText>> {
        struct DefText *_field1;
    } _field3;
};

struct ChVector<XlChartSeriesFormat *> {
    struct XlChartSeriesFormat **_field1;
    struct XlChartSeriesFormat **_field2;
    struct __compressed_pair<XlChartSeriesFormat **, ChAllocator<XlChartSeriesFormat *>> {
        struct XlChartSeriesFormat **_field1;
    } _field3;
};

struct ChVector<XlChartTextFrame::TextRun> {
    struct TextRun *_field1;
    struct TextRun *_field2;
    struct __compressed_pair<XlChartTextFrame::TextRun *, ChAllocator<XlChartTextFrame::TextRun>> {
        struct TextRun *_field1;
    } _field3;
};

struct ChVector<XlConditionalFormat *> {
    struct XlConditionalFormat **_field1;
    struct XlConditionalFormat **_field2;
    struct __compressed_pair<XlConditionalFormat **, ChAllocator<XlConditionalFormat *>> {
        struct XlConditionalFormat **_field1;
    } _field3;
};

struct ChVector<XlFmtPtg *> {
    struct XlFmtPtg **_field1;
    struct XlFmtPtg **_field2;
    struct __compressed_pair<XlFmtPtg **, ChAllocator<XlFmtPtg *>> {
        struct XlFmtPtg **_field1;
    } _field3;
};

struct ChVector<XlFont *> {
    struct XlFont **_field1;
    struct XlFont **_field2;
    struct __compressed_pair<XlFont **, ChAllocator<XlFont *>> {
        struct XlFont **_field1;
    } _field3;
};

struct ChVector<XlGraphicsInfo::XlObjData *> {
    struct XlObjData **_field1;
    struct XlObjData **_field2;
    struct __compressed_pair<XlGraphicsInfo::XlObjData **, ChAllocator<XlGraphicsInfo::XlObjData *>> {
        struct XlObjData **_field1;
    } _field3;
};

struct ChVector<XlLink *> {
    struct XlLink **_field1;
    struct XlLink **_field2;
    struct __compressed_pair<XlLink **, ChAllocator<XlLink *>> {
        struct XlLink **_field1;
    } _field3;
};

struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    struct __compressed_pair<XlPtg **, ChAllocator<XlPtg *>> {
        struct XlPtg **_field1;
    } _field3;
};

struct ChVector<XlRecord *> {
    struct XlRecord **_field1;
    struct XlRecord **_field2;
    struct __compressed_pair<XlRecord **, ChAllocator<XlRecord *>> {
        struct XlRecord **_field1;
    } _field3;
};

struct ChVector<XlXf *> {
    struct XlXf **_field1;
    struct XlXf **_field2;
    struct __compressed_pair<XlXf **, ChAllocator<XlXf *>> {
        struct XlXf **_field1;
    } _field3;
};

struct ChVector<XlXti *> {
    struct XlXti **_field1;
    struct XlXti **_field2;
    struct __compressed_pair<XlXti **, ChAllocator<XlXti *>> {
        struct XlXti **_field1;
    } _field3;
};

struct ChVector<float> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, ChAllocator<float>> {
        float *_field1;
    } _field3;
};

struct ChVector<int> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, ChAllocator<int>> {
        int *_field1;
    } _field3;
};

struct ChVector<long> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long *, ChAllocator<long>> {
        long long *_field1;
    } _field3;
};

struct ChVector<short *> {
    short **_field1;
    short **_field2;
    struct __compressed_pair<short **, ChAllocator<short *>> {
        short **_field1;
    } _field3;
};

struct ChVector<short> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, ChAllocator<short>> {
        short *_field1;
    } _field3;
};

struct ChVector<unsigned int> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, ChAllocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct ChVector<unsigned short> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, ChAllocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct ChangeDocumentPackageTypeCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    int _field6;
    int _field7;
};

struct ChangePageTemplateForSectionCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    _Bool _field10;
};

struct CharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CharacterStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    float _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    basic_string_23d93216 *_field9;
    struct Color *_field10;
    basic_string_23d93216 *_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    struct Color *_field23;
    struct ShadowArchive *_field24;
    float _field25;
    float _field26;
    struct Color *_field27;
    struct Color *_field28;
    float _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct Color *_field34;
    float _field35;
    int _field36;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field37;
    basic_string_23d93216 *_field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    basic_string_23d93216 *_field44;
    int _field45;
};

struct CharacterStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecDoubleArchive *_field4;
    struct SpecIntegerArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecStringArchive *_field7;
    struct SpecBoolArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecBoolArchive *_field17;
    struct SpecColorArchive *_field18;
    struct SpecFontFeaturesArchive *_field19;
    struct SpecStringArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecStringArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecDoubleArchive *_field34;
    struct SpecColorArchive *_field35;
    struct SpecShadowArchive *_field36;
    struct SpecColorArchive *_field37;
    struct SpecIntegerArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecIntegerArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecColorArchive *_field49;
    struct SpecDoubleArchive *_field50;
    struct SpecColorArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecDoubleArchive *_field53;
    struct SpecBoolArchive *_field54;
    struct SpecBoolArchive *_field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    struct SpecIntegerArchive *_field63;
    struct SpecBoolArchive *_field64;
    struct SpecBoolArchive *_field65;
    int _field66;
};

struct Chart3DBaseImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    float _field6;
};

struct Chart3DDiffuseMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DDirectionalLightArchive;

struct Chart3DEmissiveMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DEnvironmentMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> _field6;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field7;
    _Bool _field8;
};

struct Chart3DEnvironmentPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> _field5;
};

struct Chart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DLightingModelArchive *_field5;
    basic_string_23d93216 *_field6;
    int _field7;
    unsigned int _field8;
};

struct Chart3DFixedFunctionLightingModelArchive;

struct Chart3DImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DBaseImageTextureTilingArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
};

struct Chart3DLightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct Chart3DVectorArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    struct Chart3DVectorArchive *_field9;
    float _field10;
    unsigned int _field11;
    struct Chart3DPointLightArchive *_field12;
    struct Chart3DDirectionalLightArchive *_field13;
    struct Chart3DSpotLightArchive *_field14;
    _Bool _field15;
};

struct Chart3DLightingModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DPhongLightingModelArchive *_field5;
    struct Chart3DFixedFunctionLightingModelArchive *_field6;
    struct Chart3DEnvironmentPackageArchive *_field7;
};

struct Chart3DLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct RepeatedPtrField<TSCH::Chart3DLightArchive> _field6;
};

struct Chart3DModulateMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DPhongLightingModelArchive;

struct Chart3DPhongMaterialPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DEmissiveMaterialArchive *_field5;
    struct Chart3DDiffuseMaterialArchive *_field6;
    struct Chart3DModulateMaterialArchive *_field7;
    struct Chart3DSpecularMaterialArchive *_field8;
    struct Chart3DShininessMaterialArchive *_field9;
};

struct Chart3DPointLightArchive;

struct Chart3DShininessMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpecularMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpotLightArchive;

struct Chart3DTSPImageDataTextureArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DataReference *_field5;
    struct DataReference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct Chart3DTexturesMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> _field6;
};

struct Chart3DVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct ChartAnimationElementInfo {
    id _field1;
    id _field2;
    float _field3;
    id _field4;
    id _field5;
    tvec2_3b141483 _field6;
    unsigned long long _field7;
    id _field8;
};

struct ChartAnimationTimeRanges {
    box_e9f23397 elementsRange;
    box_e9f23397 valueLabelsRange;
    box_e9f23397 gridlinesRange;
    box_e9f23397 labelsRange;
    box_e9f23397 shadowBlendRange;
    char gridlinesEaseInEaseOut;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> growPerElementInterpolation;
    char blendDynamicShadows;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> labelsInterpolation;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> valueLabelsInterpolation;
};

struct ChartArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    int _field6;
    int _field7;
    struct RectArchive *_field8;
    struct Reference *_field9;
    struct ChartGridArchive *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    RepeatedPtrField_a0d2dbe7 _field16;
    RepeatedPtrField_a0d2dbe7 _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedPtrField_a0d2dbe7 _field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    RepeatedPtrField_a0d2dbe7 _field24;
    struct SparseReferenceArray *_field25;
    struct SparseReferenceArray *_field26;
    RepeatedPtrField_a0d2dbe7 _field27;
    struct Reference *_field28;
    unsigned int _field29;
};

struct ChartAxisGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct FormatStructArchive *_field4;
    struct FormatStructArchive *_field5;
    struct StrokeArchive *_field6;
    float _field7;
    int _field8;
    struct FormatStructArchive *_field9;
    struct FormatStructArchive *_field10;
    int _field11;
    int _field12;
    float _field13;
    float _field14;
    struct ShadowArchive *_field15;
    struct StrokeArchive *_field16;
    struct ShadowArchive *_field17;
    struct StrokeArchive *_field18;
    float _field19;
    int _field20;
    struct FormatStructArchive *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    int _field37;
    basic_string_23d93216 *_field38;
    struct ChartsNSNumberDoubleArchive *_field39;
    int _field40;
    int _field41;
    struct ChartsNSNumberDoubleArchive *_field42;
    int _field43;
};

struct ChartAxisIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    unsigned int _field6;
};

struct ChartAxisNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecFormatObjectArchive *_field4;
    struct SpecNumberFormatArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecFormatObjectArchive *_field7;
    struct SpecFormatObjectArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecNumberFormatArchive *_field17;
    struct SpecIntegerArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecIntegerArchive *_field20;
    struct SpecIntegerArchive *_field21;
    struct SpecBoolArchive *_field22;
    struct SpecIntegerArchive *_field23;
    struct SpecBoolArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecBoolArchive *_field33;
    struct SpecBoolArchive *_field34;
    struct SpecBoolArchive *_field35;
    struct SpecBoolArchive *_field36;
    struct SpecBoolArchive *_field37;
    struct SpecBoolArchive *_field38;
    struct SpecStringArchive *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    struct SpecStringArchive *_field47;
    struct SpecChartsOptionalDoubleArchiveArchive *_field48;
    struct SpecChartsOptionalDoubleArchiveArchive *_field49;
    int _field50;
};

struct ChartAxisStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct SpecDoubleArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecStrokeArchive *_field7;
    struct SpecStrokeArchive *_field8;
    struct SpecIntegerArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecIntegerArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecIntegerArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecDoubleArchive *_field24;
    struct SpecDoubleArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecShadowArchive *_field34;
    struct SpecShadowArchive *_field35;
    struct SpecStrokeArchive *_field36;
    struct SpecStrokeArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecShadowArchive *_field40;
    struct SpecShadowArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecStrokeArchive *_field50;
    struct SpecStrokeArchive *_field51;
    struct SpecBoolArchive *_field52;
    struct SpecBoolArchive *_field53;
    struct SpecBoolArchive *_field54;
    struct SpecBoolArchive *_field55;
    struct SpecBoolArchive *_field56;
    struct SpecBoolArchive *_field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct SpecBoolArchive *_field66;
    struct SpecBoolArchive *_field67;
    struct SpecBoolArchive *_field68;
    struct SpecBoolArchive *_field69;
    struct SpecBoolArchive *_field70;
    struct SpecBoolArchive *_field71;
    struct SpecIntegerArchive *_field72;
    struct SpecIntegerArchive *_field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    struct SpecIntegerArchive *_field82;
    struct SpecIntegerArchive *_field83;
    struct SpecIntegerArchive *_field84;
    struct SpecIntegerArchive *_field85;
    _Bool _field86;
};

struct ChartCDESelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UUIDPath *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct ChartFillSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    basic_string_23d93216 *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    unsigned int _field8;
};

struct ChartGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    int _field4;
    float _field5;
    struct Chart3DLightingPackageArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    float _field9;
    float _field10;
    struct Chart3DVectorArchive *_field11;
    struct FillArchive *_field12;
    struct StrokeArchive *_field13;
    struct ShadowArchive *_field14;
    struct StrokeArchive *_field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    int _field20;
    float _field21;
    int _field22;
    int _field23;
    float _field24;
    struct FillArchive *_field25;
    float _field26;
    float _field27;
    float _field28;
    int _field29;
    float _field30;
    float _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    struct Color *_field37;
    basic_string_23d93216 *_field38;
    int _field39;
    int _field40;
};

struct ChartGridArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_236b8a23 _field5;
    RepeatedPtrField_236b8a23 _field6;
    int _field7;
    _Bool _field8;
    struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> _field9;
};

struct ChartGrowAnimationState {
    float _field1;
    struct ClipPlaneState _field2;
    char _field3;
    char _field4;
    char _field5;
    tmat4x4_3074befe _field6;
    tmat4x4_3074befe _field7;
};

struct ChartInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct ChartModelArchive *_field6;
    struct Reference *_field7;
    struct LegendModelArchive *_field8;
    struct RectArchive *_field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
    RepeatedPtrField_a0d2dbe7 _field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    int _field15;
    int _field16;
    struct SparseReferenceArray *_field17;
    struct SparseReferenceArray *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Point *_field21;
    struct Reference *_field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    int _field24;
    int _field25;
    _Bool _field26;
};

struct ChartLabelsContainingLabelRenderInfo {
    id _field1;
    tvec2_3b141483 _field2;
    tvec2_3b141483 _field3;
    id _field4;
    tvec3_17f03ce0 _field5;
    tvec3_17f03ce0 _field6;
    unsigned int _field7;
    tvec2_84d5962d _field8;
    float _field9;
    tvec2_84d5962d _field10;
    float _field11;
};

struct ChartLegendNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct ChartLegendStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFillArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecDoubleArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct SpecShadowArchive *_field13;
    struct SpecStrokeArchive *_field14;
};

struct ChartMediatorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
};

struct ChartModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    RepeatedField_27dfe32f _field7;
    struct ChartGridArchive *_field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecIntegerArchive *_field4;
    struct SpecBoolArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecChart3dVectorArchive *_field7;
    struct SpecChart3dVectorArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecChart3dVectorArchive *_field17;
    struct SpecChart3dVectorArchive *_field18;
    struct SpecChart3dVectorArchive *_field19;
    struct SpecChart3dVectorArchive *_field20;
    struct SpecChart3dVectorArchive *_field21;
    struct SpecChart3dVectorArchive *_field22;
    struct SpecIntegerArchive *_field23;
    struct SpecIntegerArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecIntegerArchive *_field34;
    struct SpecIntegerArchive *_field35;
    struct SpecIntegerArchive *_field36;
    struct SpecIntegerArchive *_field37;
    struct SpecIntegerArchive *_field38;
    struct SpecIntegerArchive *_field39;
    struct SpecBoolArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecDoubleArchive *_field49;
    struct SpecIntegerArchive *_field50;
    struct SpecBoolArchive *_field51;
    struct SpecDoubleArchive *_field52;
    struct SpecIntegerArchive *_field53;
    struct SpecDoubleArchive *_field54;
    struct SpecBoolArchive *_field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    struct SpecBoolArchive *_field63;
    struct SpecBoolArchive *_field64;
    struct SpecStringArchive *_field65;
    int _field66;
};

struct ChartProjectedBoundsConverter {
    struct ChartProjectedBoundsSpaces *_field1;
    float _field2;
    _Bool _field3;
    tvec2_84d5962d _field4;
};

struct ChartProjectedBoundsSpaces {
    box_80622335 mChart;
    box_80622335 mOrient;
    box_80622335 mDrawing;
    box_80622335 mLayout;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayout;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
};

struct ChartRefLineSubselectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSubselectionTransformerHelperArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
};

struct ChartReferenceLineNonStyleItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct UUID *_field6;
};

struct ChartReferenceLineNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecChartsOptionalDoubleArchiveArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecBoolArchive *_field7;
    struct SpecBoolArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    struct SpecBoolArchive *_field15;
    struct SpecIntegerArchive *_field16;
};

struct ChartReferenceLineStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecIntegerArchive *_field5;
    struct SpecShadowArchive *_field6;
    struct SpecStrokeArchive *_field7;
    struct SpecIntegerArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct ChartRepRenderIndexSet {
    TSCH3DChartRep *rep;
    char built;
    struct ObjcSharedPtr<NSIndexSet> series;
    long long seriesIndex;
    struct ObjcSharedPtr<NSIndexSet> values;
    long long currentChunk;
};

struct ChartSceneInfo {
    TSCH3DScene *scene;
    TSCHChartInfo *chartInfo;
    TSCHChartType *chartType;
    TSCHChartSeriesType *seriesType;
    CDStruct_6d1c4171 layoutSettings;
};

struct ChartScenePropertyAccessor {
    id _field1;
    id _field2;
};

struct ChartSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionArchive *_field5;
    struct Reference *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> _field7;
};

struct ChartSelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSelectionPathTypeArchive *_field5;
    struct ChartSelectionPathArchive *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> _field7;
};

struct ChartSelectionPathTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    basic_string_23d93216 *_field6;
};

struct ChartSeriesGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct FormatStructArchive *_field5;
    struct FormatStructArchive *_field6;
    float _field7;
    float _field8;
    struct LineEndArchive *_field9;
    struct LineEndArchive *_field10;
    struct StrokeArchive *_field11;
    struct FormatStructArchive *_field12;
    struct FormatStructArchive *_field13;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field14;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field15;
    int _field16;
    float _field17;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field18;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field19;
    struct LineEndArchive *_field20;
    float _field21;
    float _field22;
    struct LineEndArchive *_field23;
    float _field24;
    int _field25;
    struct ShadowArchive *_field26;
    int _field27;
    float _field28;
    struct StrokeArchive *_field29;
    float _field30;
    int _field31;
    struct StrokeArchive *_field32;
    struct FillArchive *_field33;
    int _field34;
    float _field35;
    int _field36;
    int _field37;
    struct FormatStructArchive *_field38;
    int _field39;
    float _field40;
    struct FormatStructArchive *_field41;
    int _field42;
    int _field43;
    struct ShadowArchive *_field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
    _Bool _field52;
    int _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    struct StrokeArchive *_field58;
    struct FillArchive *_field59;
    struct StrokeArchive *_field60;
    float _field61;
    int _field62;
    float _field63;
    float _field64;
    basic_string_23d93216 *_field65;
    int _field66;
    int _field67;
    float _field68;
    float _field69;
    struct ShadowArchive *_field70;
    _Bool _field71;
    _Bool _field72;
    _Bool _field73;
    int _field74;
    struct StrokeArchive *_field75;
    float _field76;
    int _field77;
    float _field78;
    int _field79;
    int _field80;
    int _field81;
    float _field82;
    int _field83;
};

struct ChartSeriesNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[6];
    struct SpecFormatObjectArchive *_field4;
    struct SpecNumberFormatArchive *_field5;
    struct SpecNumberFormatArchive *_field6;
    struct SpecDoubleArchive *_field7;
    struct SpecDoubleArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecFormatObjectArchive *_field17;
    struct SpecFormatObjectArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecIntegerArchive *_field20;
    struct SpecIntegerArchive *_field21;
    struct SpecIntegerArchive *_field22;
    struct SpecIntegerArchive *_field23;
    struct SpecIntegerArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecIntegerArchive *_field34;
    struct SpecIntegerArchive *_field35;
    struct SpecChartErrorBarCustomDataArchive *_field36;
    struct SpecChartErrorBarCustomDataArchive *_field37;
    struct SpecChartErrorBarCustomDataArchive *_field38;
    struct SpecChartErrorBarCustomDataArchive *_field39;
    struct SpecDoubleArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecDoubleArchive *_field49;
    struct SpecDoubleArchive *_field50;
    struct SpecDoubleArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecIntegerArchive *_field53;
    struct SpecDoubleArchive *_field54;
    struct SpecDoubleArchive *_field55;
    struct SpecIntegerArchive *_field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    struct SpecIntegerArchive *_field65;
    struct SpecDoubleArchive *_field66;
    struct SpecIntegerArchive *_field67;
    struct SpecIntegerArchive *_field68;
    struct SpecIntegerArchive *_field69;
    struct SpecIntegerArchive *_field70;
    struct SpecNumberFormatArchive *_field71;
    struct SpecNumberFormatArchive *_field72;
    _Bool _field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    struct SpecIntegerArchive *_field81;
    struct SpecIntegerArchive *_field82;
    struct SpecNumberFormatArchive *_field83;
    struct SpecIntegerArchive *_field84;
    struct SpecBoolArchive *_field85;
    struct SpecBoolArchive *_field86;
    struct SpecBoolArchive *_field87;
    struct SpecBoolArchive *_field88;
    _Bool _field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
    _Bool _field94;
    _Bool _field95;
    _Bool _field96;
    struct SpecBoolArchive *_field97;
    struct SpecBoolArchive *_field98;
    struct SpecBoolArchive *_field99;
    struct SpecBoolArchive *_field100;
    struct SpecBoolArchive *_field101;
    struct SpecBoolArchive *_field102;
    struct SpecBoolArchive *_field103;
    struct SpecBoolArchive *_field104;
    _Bool _field105;
    _Bool _field106;
    _Bool _field107;
    _Bool _field108;
    _Bool _field109;
    _Bool _field110;
    _Bool _field111;
    _Bool _field112;
    struct SpecBoolArchive *_field113;
    struct SpecBoolArchive *_field114;
    struct SpecBoolArchive *_field115;
    struct SpecBoolArchive *_field116;
    struct SpecBoolArchive *_field117;
    struct SpecBoolArchive *_field118;
    struct SpecBoolArchive *_field119;
    struct SpecBoolArchive *_field120;
    _Bool _field121;
    _Bool _field122;
    _Bool _field123;
    _Bool _field124;
    _Bool _field125;
    _Bool _field126;
    _Bool _field127;
    _Bool _field128;
    struct SpecBoolArchive *_field129;
    struct SpecBoolArchive *_field130;
    struct SpecBoolArchive *_field131;
    struct SpecIntegerArchive *_field132;
    struct SpecBoolArchive *_field133;
    struct SpecBoolArchive *_field134;
    struct SpecBoolArchive *_field135;
    struct SpecBoolArchive *_field136;
    _Bool _field137;
    _Bool _field138;
    _Bool _field139;
    _Bool _field140;
    _Bool _field141;
    _Bool _field142;
    _Bool _field143;
    _Bool _field144;
    struct SpecBoolArchive *_field145;
    struct SpecBoolArchive *_field146;
    struct SpecBoolArchive *_field147;
    struct SpecBoolArchive *_field148;
    struct SpecBoolArchive *_field149;
    struct SpecIntegerArchive *_field150;
    struct SpecIntegerArchive *_field151;
    struct SpecIntegerArchive *_field152;
    _Bool _field153;
    _Bool _field154;
    _Bool _field155;
    _Bool _field156;
    _Bool _field157;
    _Bool _field158;
    _Bool _field159;
    _Bool _field160;
    struct SpecIntegerArchive *_field161;
    struct SpecIntegerArchive *_field162;
    struct SpecDoubleArchive *_field163;
    struct SpecDoubleArchive *_field164;
    struct SpecStringArchive *_field165;
    struct SpecIntegerArchive *_field166;
    struct SpecIntegerArchive *_field167;
    struct SpecDoubleArchive *_field168;
    _Bool _field169;
    _Bool _field170;
    _Bool _field171;
    _Bool _field172;
    _Bool _field173;
    _Bool _field174;
    _Bool _field175;
    _Bool _field176;
    struct SpecDoubleArchive *_field177;
    struct SpecBoolArchive *_field178;
    struct SpecBoolArchive *_field179;
    struct SpecBoolArchive *_field180;
    struct SpecIntegerArchive *_field181;
    struct SpecIntegerArchive *_field182;
    struct SpecIntegerArchive *_field183;
    _Bool _field184;
    _Bool _field185;
    _Bool _field186;
    _Bool _field187;
    _Bool _field188;
    _Bool _field189;
    struct SpecDoubleArchive *_field190;
    struct SpecIntegerArchive *_field191;
    int _field192;
};

struct ChartSeriesStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[7];
    int _field4;
    struct SpecLineEndArchive *_field5;
    struct SpecLineEndArchive *_field6;
    struct SpecStrokeArchive *_field7;
    struct SpecLineEndArchive *_field8;
    struct SpecLineEndArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecShadowArchive *_field18;
    struct SpecStrokeArchive *_field19;
    struct SpecStrokeArchive *_field20;
    struct SpecFillArchive *_field21;
    struct SpecFillArchive *_field22;
    struct SpecFillArchive *_field23;
    struct SpecFillArchive *_field24;
    struct SpecFillArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecFillArchive *_field34;
    struct SpecFillArchive *_field35;
    struct SpecFillArchive *_field36;
    struct SpecFillArchive *_field37;
    struct SpecFillArchive *_field38;
    struct SpecFillArchive *_field39;
    struct SpecFillArchive *_field40;
    struct SpecIntegerArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecIntegerArchive *_field50;
    struct SpecIntegerArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecIntegerArchive *_field53;
    struct SpecIntegerArchive *_field54;
    struct SpecIntegerArchive *_field55;
    struct SpecDoubleArchive *_field56;
    struct SpecIntegerArchive *_field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct SpecIntegerArchive *_field66;
    struct SpecIntegerArchive *_field67;
    struct SpecIntegerArchive *_field68;
    struct SpecIntegerArchive *_field69;
    struct SpecIntegerArchive *_field70;
    struct SpecShadowArchive *_field71;
    struct SpecShadowArchive *_field72;
    struct SpecShadowArchive *_field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    struct SpecShadowArchive *_field82;
    struct SpecShadowArchive *_field83;
    struct SpecShadowArchive *_field84;
    struct SpecShadowArchive *_field85;
    struct SpecShadowArchive *_field86;
    struct SpecShadowArchive *_field87;
    struct SpecShadowArchive *_field88;
    struct SpecShadowArchive *_field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
    _Bool _field94;
    _Bool _field95;
    _Bool _field96;
    _Bool _field97;
    struct SpecShadowArchive *_field98;
    struct SpecShadowArchive *_field99;
    struct SpecShadowArchive *_field100;
    struct SpecShadowArchive *_field101;
    struct SpecStrokeArchive *_field102;
    struct SpecStrokeArchive *_field103;
    struct SpecStrokeArchive *_field104;
    struct SpecStrokeArchive *_field105;
    _Bool _field106;
    _Bool _field107;
    _Bool _field108;
    _Bool _field109;
    _Bool _field110;
    _Bool _field111;
    _Bool _field112;
    _Bool _field113;
    struct SpecStrokeArchive *_field114;
    struct SpecStrokeArchive *_field115;
    struct SpecStrokeArchive *_field116;
    struct SpecStrokeArchive *_field117;
    struct SpecStrokeArchive *_field118;
    struct SpecFillArchive *_field119;
    struct SpecFillArchive *_field120;
    struct SpecFillArchive *_field121;
    _Bool _field122;
    _Bool _field123;
    _Bool _field124;
    _Bool _field125;
    _Bool _field126;
    _Bool _field127;
    _Bool _field128;
    _Bool _field129;
    struct SpecFillArchive *_field130;
    struct SpecFillArchive *_field131;
    struct SpecFillArchive *_field132;
    struct SpecBoolArchive *_field133;
    struct SpecBoolArchive *_field134;
    struct SpecBoolArchive *_field135;
    struct SpecBoolArchive *_field136;
    struct SpecBoolArchive *_field137;
    _Bool _field138;
    _Bool _field139;
    _Bool _field140;
    _Bool _field141;
    _Bool _field142;
    _Bool _field143;
    _Bool _field144;
    _Bool _field145;
    struct SpecBoolArchive *_field146;
    struct SpecBoolArchive *_field147;
    struct SpecBoolArchive *_field148;
    struct SpecBoolArchive *_field149;
    struct SpecBoolArchive *_field150;
    struct SpecDoubleArchive *_field151;
    struct SpecDoubleArchive *_field152;
    struct SpecDoubleArchive *_field153;
    _Bool _field154;
    _Bool _field155;
    _Bool _field156;
    _Bool _field157;
    _Bool _field158;
    _Bool _field159;
    _Bool _field160;
    _Bool _field161;
    struct SpecDoubleArchive *_field162;
    struct SpecDoubleArchive *_field163;
    struct SpecStrokeArchive *_field164;
    struct SpecStrokeArchive *_field165;
    struct SpecStrokeArchive *_field166;
    struct SpecStrokeArchive *_field167;
    struct SpecStrokeArchive *_field168;
    struct SpecStrokeArchive *_field169;
    _Bool _field170;
    _Bool _field171;
    _Bool _field172;
    _Bool _field173;
    _Bool _field174;
    _Bool _field175;
    _Bool _field176;
    _Bool _field177;
    struct SpecShadowArchive *_field178;
    struct SpecStrokeArchive *_field179;
    struct SpecDoubleArchive *_field180;
    struct SpecIntegerArchive *_field181;
    struct SpecDoubleArchive *_field182;
    struct SpecIntegerArchive *_field183;
    struct SpecIntegerArchive *_field184;
    struct SpecIntegerArchive *_field185;
    _Bool _field186;
    _Bool _field187;
    _Bool _field188;
    _Bool _field189;
    _Bool _field190;
    _Bool _field191;
    _Bool _field192;
    _Bool _field193;
    struct SpecIntegerArchive *_field194;
    struct SpecIntegerArchive *_field195;
    struct SpecIntegerArchive *_field196;
    struct SpecIntegerArchive *_field197;
    struct SpecIntegerArchive *_field198;
    struct SpecIntegerArchive *_field199;
    struct SpecIntegerArchive *_field200;
    _Bool _field201;
    _Bool _field202;
    _Bool _field203;
    _Bool _field204;
    _Bool _field205;
    _Bool _field206;
    struct SpecIntegerArchive *_field207;
    struct SpecIntegerArchive *_field208;
};

struct ChartStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecDoubleArchive *_field4;
    struct SpecChart3dLightingPackageArchive *_field5;
    struct SpecChart3dLightingPackageArchive *_field6;
    struct SpecChart3dLightingPackageArchive *_field7;
    struct SpecChart3dLightingPackageArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecChart3dLightingPackageArchive *_field17;
    struct SpecChart3dLightingPackageArchive *_field18;
    struct SpecFillArchive *_field19;
    struct SpecStrokeArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecShadowArchive *_field22;
    struct SpecStrokeArchive *_field23;
    struct SpecBoolArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecFillArchive *_field34;
    struct SpecDoubleArchive *_field35;
    struct SpecDoubleArchive *_field36;
    struct SpecDoubleArchive *_field37;
    struct SpecBoolArchive *_field38;
    struct SpecDoubleArchive *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    struct SpecBoolArchive *_field47;
    struct SpecColorArchive *_field48;
    struct SpecIntegerArchive *_field49;
    int _field50;
};

struct ChartSubselectionIdentityTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSubselectionTransformerHelperArchive *_field5;
};

struct ChartSubselectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
};

struct ChartSubselectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct ChartTextSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct ChartUIState {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
};

struct ChartsNSArrayOfNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedField<double> _field5;
};

struct ChartsNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct ChartsNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    int _field6;
    unsigned int _field7;
    basic_string_23d93216 *_field8;
    int _field9;
    int _field10;
    basic_string_23d93216 *_field11;
    unsigned int _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned int _field18;
    double _field19;
    RepeatedPtrField_236b8a23 _field20;
    struct IndexSet *_field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    basic_string_23d93216 *_field26;
    basic_string_23d93216 *_field27;
    unsigned int _field28;
};

struct ClipPlaneState {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tmat4x4_3074befe _field3;
    plane_849e6053 _field4[2];
};

struct CollaborationCommandHistoryItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_23d93216 *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    unsigned long long _field9;
};

struct Collection;

struct ColorResult {
    char _field1;
    struct Color {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
};

struct ColumnAggregateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    unsigned int _field6;
    int _field7;
};

struct ColumnAggregateListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::ColumnAggregateArchive> _field5;
};

struct ColumnOrRowUuidsInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct UUID *_field7;
    struct IndexedUidsArchive *_field8;
    struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> _field9;
    struct RangeCoordinateArchive *_field10;
    struct UUID *_field11;
    _Bool _field12;
};

struct ColumnRowBundleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    RepeatedField_c2891982 _field6;
    RepeatedPtrField_bfda3daa _field7;
    RepeatedField_c2891982 _field8;
    RepeatedPtrField_bfda3daa _field9;
    RepeatedField_c2891982 _field10;
    struct RepeatedPtrField<TST::ColumnRowMetadataArchive> _field11;
    _Bool _field12;
};

struct ColumnRowMetadataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct UUID *_field8;
    unsigned int _field9;
};

struct ColumnRowRestoreDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    struct RepeatedPtrField<TST::ColumnRowMetadataArchive> _field6;
};

struct ColumnStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct ColumnStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ColumnStylePropertiesArchive;

struct ColumnStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColumnsArchive *_field5;
    struct SpecBoolArchive *_field6;
    struct SpecPaddingArchive *_field7;
    struct SpecDoubleArchive *_field8;
    struct SpecPaddingArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecBoolArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecBoolArchive *_field20;
    struct SpecIntegerArchive *_field21;
    _Bool _field22;
};

struct ColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ColumnsArchive_EqualColumnsArchive *_field5;
    struct ColumnsArchive_NonEqualColumnsArchive *_field6;
};

struct ColumnsArchive_EqualColumnsArchive;

struct ColumnsArchive_NonEqualColumnsArchive;

struct CommandApplyCellMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    RepeatedPtrField_bfda3daa _field9;
    unsigned int _field10;
    _Bool _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
};

struct CommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct CommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    struct IndexSet *_field7;
    basic_string_23d93216 *_field8;
};

struct CommandMutateCellFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    struct CellUIDListArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    unsigned int _field9;
};

struct CommandPropertyEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    float _field9;
    double _field10;
    basic_string_23d93216 *_field11;
    struct Reference *_field12;
};

struct CommandPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSS::CommandPropertyEntryArchive> _field5;
};

struct CommandRowColumnRangeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct CommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SelectionPathArchive *_field5;
    struct SelectionPathArchive *_field6;
    struct SelectionPathArchive *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct Reference *_field11;
    struct Reference *_field12;
    RepeatedPtrField_a0d2dbe7 _field13;
};

struct CommandSetChartTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartCommandArchive *_field5;
    int _field6;
    int _field7;
    RepeatedPtrField_bfda3daa _field8;
    RepeatedPtrField_bfda3daa _field9;
    RepeatedPtrField_bfda3daa _field10;
    RepeatedPtrField_bfda3daa _field11;
    RepeatedPtrField_bfda3daa _field12;
    int _field13;
    _Bool _field14;
    _Bool _field15;
    RepeatedPtrField_bfda3daa _field16;
};

struct CommentInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
};

struct CommentInvalidatingCommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandSelectionBehaviorArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct CommentStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct Date *_field6;
    struct Reference *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
};

struct CompletionTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TokenAttachmentArchive *_field5;
    basic_string_23d93216 *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ComponentExternalReferenceInfo {
    long long _field1;
    char _field2;
};

struct ComponentInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    RepeatedField_27dfe32f _field8;
    int _field9;
    RepeatedField_27dfe32f _field10;
    int _field11;
    RepeatedPtrField_1f1a6efb _field12;
    struct RepeatedPtrField<TSP::ComponentDataReference> _field13;
    RepeatedPtrField_c964a194 _field14;
    struct RepeatedPtrField<TSP::FeatureInfo> _field15;
    unsigned long long _field16;
    _Bool _field17;
};

struct ConnectionLineArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
};

struct ConnectionLinePathSourceArchive;

struct ContactShadowArchive;

struct ContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct ContainerInsertChildrenCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    struct RepeatedPtrField<TSK::AddIdOperationArgs> _field8;
    RepeatedPtrField_bfda3daa _field9;
    struct Reference *_field10;
};

struct ContainerRemoveChildrenCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct RepeatedPtrField<TSK::RemoveIdOperationArgs> _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
};

struct CopyingFileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
};

struct CopyingOutputStream;

struct CopyingOutputStreamAdaptor {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingOutputStream *_field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    struct scoped_array<unsigned char> _field6;
    int _field7;
    int _field8;
};

struct CsColour {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct CsData {
    unsigned int _field1;
    char *_field2;
};

struct CsPoint<int> {
    int _field1[2];
};

struct CsRect<float> {
    float _field1[4];
};

struct CsRect<int> {
    int _field1[4];
};

struct CsSimpleHeapVector<XlFont> {
    struct ChVector<XlFont *> _field1;
};

struct CsSimpleHeapVector<XlRecord> {
    struct ChVector<XlRecord *> _field1;
};

struct CsSimpleHeapVector<XlXf> {
    struct ChVector<XlXf *> _field1;
};

struct CsString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct CurvedShadowArchive;

struct CustomFormatArchive;

struct DEPRECATEDChart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Chart3DLightingModelArchive *_field6;
    basic_string_23d93216 *_field7;
    int _field8;
    unsigned int _field9;
};

struct DataAttributes {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 mSize;
    unsigned long long mComponents;
    char mHasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced mSize;
    unsigned long long mComponents;
};

struct DataBufferInfo {
    int componentType;
    unsigned long long components;
    unsigned long long count;
    unsigned long long byteSize;
    unsigned long long componentByteSize;
    unsigned long long elementByteSize;
};

struct DataBufferLevelData {
    void *_field1;
    tvec3_c2818ced _field2;
};

struct DataInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
    basic_string_23d93216 *_field10;
    basic_string_23d93216 *_field11;
    _Bool _field12;
    int _field13;
    struct DataAttributes *_field14;
    struct EncryptionInfo *_field15;
    basic_string_23d93216 *_field16;
};

struct DataMetadata {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct DataMetadataMap {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> _field5;
};

struct DataReference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
};

struct DataStore {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct HeaderStorage *_field5;
    struct Reference *_field6;
    struct TileStorage *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    unsigned int _field16;
    unsigned int _field17;
    struct TableRBTree *_field18;
    struct TableRBTree *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    struct Reference *_field24;
    struct Reference *_field25;
    unsigned int _field26;
};

struct DatabaseDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    unsigned long long _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct Date {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct DateCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
    _Bool _field8;
};

struct DateNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
};

struct DeathhawkRdar39989167CellSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CellUIDRegionArchive *_field6;
    struct CellUIDRegionArchive *_field7;
    struct UUIDCoordArchive *_field8;
    struct UUIDCoordArchive *_field9;
    int _field10;
};

struct DefText;

struct Deprecated_StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    int _field8;
};

struct Deprecated_TableStrokeArchive;

struct Descriptor {
    basic_string_23d93216 *_field1;
    basic_string_23d93216 *_field2;
    struct FileDescriptor *_field3;
    struct Descriptor *_field4;
    struct MessageOptions *_field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct FieldDescriptor *_field9;
    int _field10;
    struct OneofDescriptor *_field11;
    int _field12;
    struct Descriptor *_field13;
    int _field14;
    struct EnumDescriptor *_field15;
    int _field16;
    struct ExtensionRange *_field17;
    int _field18;
    struct FieldDescriptor *_field19;
};

struct Dictionary {
    struct IdentifierMap _field1;
    struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> _field2;
    struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> _field3;
    struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> _field4;
};

struct DispatchDataInputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    char *_field7;
};

struct DocumentRevision;

struct DoublePoint;

struct DoubleSize;

struct DrawableArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    struct ExteriorTextWrapArchive *_field7;
    basic_string_23d93216 *_field8;
    struct Reference *_field9;
    basic_string_23d93216 *_field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    _Bool _field12;
    _Bool _field13;
};

struct DrawableAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    unsigned int _field6;
    float _field7;
    unsigned int _field8;
    float _field9;
};

struct DrawableContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct DrawableSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct DrawableSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCollectionSelectionTransformerHelperArchive *_field5;
    struct Reference *_field6;
};

struct DrawableZOrderListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct DropShadowArchive;

struct DurationNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct EDAreaReference {
    int firstRow;
    int firstColumn;
    int lastRow;
    int lastColumn;
};

struct EDBuildablePtg {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    unsigned int _field4;
    unsigned short _field5;
    struct EDBuildablePtg *_field6;
    struct EDBuildablePtg *_field7;
    struct EDBuildablePtg *_field8;
    struct EDBuildablePtg *_field9;
    _Bool _field10;
    int _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    unsigned short _field15;
    unsigned short _field16;
    _Bool _field17;
    _Bool _field18;
    id _field19;
};

struct EDCellAnchorMarker {
    int columnIndex;
    float columnAdjustment;
    int rowIndex;
    float rowAdjustment;
};

struct EDCellHeader {
    unsigned int _field1;
    unsigned int _field2;
};

struct EDRowInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
    unsigned int :1;
    unsigned int :1;
};

struct EDToken {
    unsigned short _field1;
    unsigned int _field2;
};

struct EDValue {
    int type;
    union {
        _Bool boolean;
        double number;
        char *string;
        unsigned long long stringIndex;
        int error;
    } ;
};

struct EFLexer {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int *_field8;
    struct basic_istream<char, std::__1::char_traits<char>> *_field9;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field10;
    char _field11;
    unsigned long long _field12;
    char *_field13;
    int _field14;
    int _field15;
    int _field16;
    unsigned long long _field17;
    unsigned long long _field18;
    struct yy_buffer_state **_field19;
    int _field20;
    char *_field21;
    int *_field22;
    int *_field23;
    char *_field24;
    int *_field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    union YYSTYPE _field33;
    id _field34;
    char _field35;
    char *_field36;
    struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field37;
    struct basic_istream<char, std::__1::char_traits<char>> *_field38;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field39;
    struct yy_buffer_state *_field40;
};

struct EFRefTok {
    int type;
    unsigned int dataSize;
    unsigned char data[12];
};

struct EFStrTok {
    id _field1;
    int _field2;
    union EFData _field3;
};

struct EITRuleRange {
    double _field1;
    char _field2;
    double _field3;
    char _field4;
    int _field5;
};

struct EPEDetachedDrawableIterator {
    unsigned long long clusterIndex;
    unsigned long long indexInCluster;
};

struct EPEDrawableScanState {
    unsigned long long detachedDrawableCP;
    TSDDrawableInfo *detachedDrawable;
    unsigned long long detachedDrawableInsertCP;
    struct _NSRange attachedDrawableRange;
    TSDDrawableInfo *attachedDrawable;
    unsigned long long attachedDrawableInsertCP;
};

struct EPEFloatableMapping {
    struct CGPoint _field1;
    unsigned long long _field2;
};

struct EPESHorizontalRange {
    float _field1;
    float _field2;
};

struct EPXLength {
    float value;
    unsigned long long unit;
};

struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>>;

struct EQKitCacheLRUCounter {
    unsigned long long _field1;
};

struct EQKitLayoutContext {
    CDUnknownFunctionPointerType *_field1;
    struct Info _field2;
    double _field3;
    double _field4;
    double _field5;
    id _field6;
    double _field7;
    struct Collection *_field8;
    struct __CTFont *_field9;
    struct CGColor *_field10;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field11;
    CDStruct_d6fcdff4 _field12;
};

struct EQKitLayoutElementaryStack;

struct EQKitLayoutManager {
    id _field1;
    double _field2;
    struct CGSize _field3;
    struct __CFString *_field4;
    struct Manager *_field5;
    struct Config *_field6;
    struct EQKitLayoutContext _field7;
    struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> _field8;
    struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> _field9;
    struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> _field10;
    struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> _field11;
    struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field12;
    struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> _field13;
    struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> _field14;
    struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> _field15;
    struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> _field16;
    id _field17;
    struct AttributeCollection *_field18;
};

struct EQKitLayoutRow;

struct EQKitLayoutStretchedOperator;

struct EQKitLayoutTable;

struct EdgeDetectionParameters {
    char detectSilhouetteEdges;
    char detectSharpEdges;
    float sharpEdgeThreshold;
};

struct EditableBezierPathSourceArchive;

struct ElementRenderPass {
    int _field1;
};

struct EmptyExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct EnableClipDistances {
    struct array<signed char, 8> states;
};

struct EncryptionInfo;

struct Entry;

struct EnumDescriptor;

struct EnumValueDescriptor;

struct ErrorCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    basic_string_23d93216 *_field7;
    double _field8;
};

struct EshBSE {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct EshBlip *_field4;
    unsigned short *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    int _field10;
    unsigned char _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    struct UID _field16;
};

struct EshBlip {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct UID _field4;
};

struct EshCallout {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshColor {
    struct Data {
        int _field1;
        union Value _field2;
    } _field1;
};

struct EshComputedRect;

struct EshComputedValue {
    _Bool _field1;
    int _field2;
};

struct EshContainer {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChVector<EshHeader *> _field4;
};

struct EshContent {
    CDUnknownFunctionPointerType *_field1;
};

struct EshContentData {
    struct EshOpt _field1;
    struct EshOpt _field2;
    struct EshOpt _field3;
    struct EshSp _field4;
    CsRect_0aefebc6 _field5;
};

struct EshContentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshDiagram {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshExtrusion {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFill {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFormula;

struct EshGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    CDUnknownFunctionPointerType *_field4;
    struct EshSpgr *_field5;
    struct EshGroupProperties _field6;
    struct EshGroupLocks _field7;
    struct EshDiagram _field8;
};

struct EshGroupLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshGroupProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    struct EshRectAtom *_field4;
};

struct EshHeader {
    int _field1;
    unsigned int _field2;
    short _field3;
    unsigned short _field4;
    unsigned char _field5;
};

struct EshMetafileBlipInfo {
    unsigned short *_field1;
    struct UID _field2;
    struct OcBinaryData _field3;
    int _field4;
    CsRect_0aefebc6 _field5;
    CsPoint_c846a6ec _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
};

struct EshObject {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
};

struct EshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct EshOpt {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> _field4;
    struct EshColor _field5;
};

struct EshParserVisitor;

struct EshPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshPathCommand;

struct EshPathParamTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedValue> _field2;
};

struct EshRecordWriterVisitor;

struct EshRectAtom;

struct EshRoot {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct ChVector<EshHeader *> _field3;
};

struct EshShadow {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
};

struct EshShapeBase {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
};

struct EshShapeDefaults {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    struct EshShapeDefaultsPropertiesImpl _field10;
    struct EshShapeDefaultsImageData _field11;
};

struct EshShapeDefaultsImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeDefaultsPropertiesImpl {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
};

struct EshShapeImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
};

struct EshSkew {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshSp {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct EshSpgr;

struct EshStroke {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
};

struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
};

struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
};

struct EshTextBox {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTextPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct ExpandCollapseStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    RepeatedPtrField_bfda3daa _field6;
};

struct ExpandedTrackedReferenceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct ExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct ExtensionRange;

struct ExtensionSet {
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> _field1;
};

struct ExteriorTextWrapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    _Bool _field10;
};

struct ExteriorTextWrapCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct ExteriorTextWrapArchive *_field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    float _field10;
    float _field11;
    _Bool _field12;
};

struct ExternalLabelAttribute {
    id _field1;
    tvec2_84d5962d _field2;
};

struct ExternalReferenceCompletionInfo;

struct ExternalReferenceInfo {
    long long _field1;
    struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> _field2;
};

struct FieldDescriptor {
    basic_string_23d93216 *_field1;
    basic_string_23d93216 *_field2;
    basic_string_23d93216 *_field3;
    basic_string_23d93216 *_field4;
    struct FileDescriptor *_field5;
    int _field6;
    int _field7;
    int _field8;
    _Bool _field9;
    int _field10;
    struct Descriptor *_field11;
    struct OneofDescriptor *_field12;
    struct Descriptor *_field13;
    struct Descriptor *_field14;
    struct EnumDescriptor *_field15;
    struct FieldDescriptor *_field16;
    struct FieldOptions *_field17;
    _Bool _field18;
    union {
        int _field1;
        long long _field2;
        unsigned int _field3;
        unsigned long long _field4;
        float _field5;
        double _field6;
        _Bool _field7;
        struct EnumValueDescriptor *_field8;
        basic_string_23d93216 *_field9;
    } _field19;
};

struct FieldInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct FieldPath *path_;
    int type_;
    int unknown_field_rule_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_27dfe32f known_field_version_;
    int _known_field_version_cached_byte_size_;
    basic_string_23d93216 *known_field_feature_identifier_;
    int known_field_rule_;
};

struct FieldOptions;

struct FieldPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    int _field6;
};

struct FileDescriptor;

struct FileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingFileOutputStream _field2;
    struct CopyingOutputStreamAdaptor _field3;
};

struct FillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Color *_field6;
    struct GradientArchive *_field7;
    struct ImageFillArchive *_field8;
};

struct FilterRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaPredicateArchive *_field5;
    _Bool _field6;
};

struct FilterSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    struct RepeatedPtrField<TST::FilterRuleArchive> _field8;
    RepeatedField_27dfe32f _field9;
    RepeatedField_12b14242 _field10;
};

struct FinalCommandPairArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct FinalizeHandlerItem {
    vector_3c415888 _field1;
    long long _field2;
    struct vector<long long, std::__1::allocator<long long>> _field3;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
};

struct FindLinesContext {
    char _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct __CFArray *_field4;
    char _field5;
    int _field6;
};

struct FlowInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned int _field7;
};

struct FlowInfoContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned int _field6;
};

struct FlushResult {
    char _field1;
    char _field2;
};

struct FormatStructArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    basic_string_23d93216 *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned int _field15;
    unsigned int _field16;
    basic_string_23d93216 *_field17;
    unsigned int _field18;
    unsigned int _field19;
    basic_string_23d93216 *_field20;
    double _field21;
    unsigned int _field22;
    unsigned int _field23;
    double _field24;
    double _field25;
    double _field26;
    unsigned int _field27;
    unsigned int _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    RepeatedPtrField_236b8a23 _field38;
    struct IndexSet *_field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    struct UUID *_field44;
    struct CustomFormatArchive *_field45;
    basic_string_23d93216 *_field46;
    basic_string_23d93216 *_field47;
    _Bool _field48;
    _Bool _field49;
    int _field50;
};

struct FormulaArchive;

struct FormulaEqualsTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
};

struct FormulaPredicateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct FormulaRewriteSpecArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct UUID *_field7;
    struct ColumnOrRowUuidsInfoArchive *_field8;
    struct ColumnOrRowUuidsInfoArchive *_field9;
    struct RegionMovedInfoArchive *_field10;
    struct RegionInfoArchive *_field11;
    int _field12;
    _Bool _field13;
    struct RewriteTableUIDInfoArchive *_field14;
    struct TableTransposeInfoArchive *_field15;
    struct MergeOriginMovedArchive *_field16;
    struct MergeSourceArchive *_field17;
    struct RewriteGroupNodeUIDInfoArchive *_field18;
    struct GroupByChangeArchive *_field19;
};

struct FormulaStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> _field5;
    unsigned int _field6;
};

struct FormulasForUndoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::FormulaCoordPairsByOwnerArchive> _field5;
};

struct FrameArchive;

struct FramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    char linearFilter;
    char discardHint;
};

struct FramebufferBounds {
    id _field1;
    box_80622335 _field2;
    box_80622335 _field3;
    box_80622335 _field4;
};

struct FreehandDrawingAnimationArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    _Bool _field6;
};

struct FreehandDrawingContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableContentDescription *_field5;
    _Bool _field6;
};

struct FreehandDrawingToolkitUIState {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    _Bool _field15;
    struct Color *_field16;
    struct Color *_field17;
    struct Color *_field18;
    struct Color *_field19;
};

struct FrustumRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FrustumSlice {
    line_190fbfc7 _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
};

struct FunctionEndNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct FunctionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
    unsigned int _field7;
};

struct FunctorArchive;

struct GLSingleState {
    unsigned int target;
    struct UpdatableValue<unsigned int> handle;
};

struct GQDTCellID {
    unsigned short mColumn;
    unsigned short mRow;
};

struct GQDTCellRange {
    struct GQDTCellID mTopLeft;
    struct GQDTCellID mBottomRight;
};

struct GQXmlEnumMapping {
    int _field1;
    char *_field2;
};

struct GSSPDecodeConversionContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
};

struct GSSPEncodeConversionContext {
    struct GSSPRetainer *_field1;
    id _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    id _field7;
    struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> _field8;
    struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> _field9;
};

struct GSSPHashKeyBuilder {
    basic_string_23d93216 _field1;
    char *_field2;
    unsigned long long _field3;
};

struct GSSPRetainer {
    id _field1;
};

struct GSSPSerializationContext {
    CDUnknownFunctionPointerType *_field1;
};

struct GSSPStringOutputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct GSUNSWrapper<GSSPCalculationEngineAstNode>;

struct GSUNSWrapper<GSSPCalculationEngineAstRange>;

struct GSUNSWrapper<GSSPCalculationEngineAstUidTract>;

struct GSUNSWrapper<GSSPCalculationEngineFormula>;

struct GSUNSWrapper<GSSPCellChange>;

struct GSUNSWrapper<GSSPCellRange>;

struct GSUNSWrapper<GSSPChartFormattedAxisData>;

struct GSUNSWrapper<GSSPChartFormattedAxisMultiData>;

struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData>;

struct GSUNSWrapper<GSSPChartGridValue>;

struct GSUNSWrapper<GSSPChartMediatorAxisFormat>;

struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>;

struct GSUNSWrapper<GSSPCitationRecord>;

struct GSUNSWrapper<GSSPCustomFormatCondition>;

struct GSUNSWrapper<GSSPFloatingDrawable>;

struct GSUNSWrapper<GSSPImageData>;

struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage>;

struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>;

struct GSUNSWrapper<GSSPPageMaster>;

struct GSUNSWrapper<GSSPPasteboardDrawable>;

struct GSUNSWrapper<GSSPRange>;

struct GSUNSWrapper<GSSPRect>;

struct GSUNSWrapper<GSSPSize>;

struct GSUNSWrapper<GSSPStorageAction>;

struct GSUNSWrapper<GSSPStorageActionGroup>;

struct GSUNSWrapper<GSSPTOCMapEntry>;

struct GSUNSWrapper<GSSPTableChange>;

struct GSUNSWrapper<GSSPUserDefinedGuideStorage>;

struct GSUNSWrapper<NSObject>;

struct GSUNSWrapper<NSString>;

struct GSUNSWrapper<NSUUID>;

struct GSUNSWrapper<TSAGalleryItem>;

struct GSUNSWrapper<TSCECellValue>;

struct GSUNSWrapper<TSCEOwnerUidMapper>;

struct GSUNSWrapper<TSCERemoteDataSpecifier>;

struct GSUNSWrapper<TSCHChartAxisID>;

struct GSUNSWrapper<TSCHChartAxisNonStyle>;

struct GSUNSWrapper<TSCHChartAxisStyle>;

struct GSUNSWrapper<TSCHChartSeriesNonStyle>;

struct GSUNSWrapper<TSCHChartSeriesStyle>;

struct GSUNSWrapper<TSCHSelectionPath>;

struct GSUNSWrapper<TSDBezierNode>;

struct GSUNSWrapper<TSDBezierSubpath>;

struct GSUNSWrapper<TSDCommentStorage>;

struct GSUNSWrapper<TSDDrawableInfo>;

struct GSUNSWrapper<TSDPencilAnnotation>;

struct GSUNSWrapper<TSDPencilAnnotationStorage>;

struct GSUNSWrapper<TSDUserDefinedGuide>;

struct GSUNSWrapper<TSKCommandResponse>;

struct GSUNSWrapper<TSKImageDigestData>;

struct GSUNSWrapper<TSKMovieDigestData>;

struct GSUNSWrapper<TSKWebQuickLookImage>;

struct GSUNSWrapper<TSPObject>;

struct GSUNSWrapper<TSSStyle>;

struct GSUNSWrapper<TSTCell>;

struct GSUNSWrapper<TSTColumnAggregate>;

struct GSUNSWrapper<TSTConditionalStyleRule>;

struct GSUNSWrapper<TSTGroupNode>;

struct GSUNSWrapper<TSTGroupingColumn>;

struct GSUNSWrapper<TSTMergeAction>;

struct GSUNSWrapper<TSTTableStrokePresetData>;

struct GSUNSWrapper<TSUCustomFormat>;

struct GSUNSWrapper<TSUUUIDPath>;

struct GSUNSWrapper<TSWPChangeSession>;

struct GSUNSWrapper<TSWPFlowInfo>;

struct GSUNSWrapper<TSWPParagraphStyle>;

struct GSUNSWrapper<TSWPStorage>;

struct GSUNSWrapper<TSWPTOCEntryData>;

struct GSUNSWrapper<TSWPTab>;

struct GalleryItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    struct ImageAdjustmentsArchive *_field8;
    struct DataReference *_field9;
    struct DataReference *_field10;
    struct Reference *_field11;
    basic_string_23d93216 *_field12;
    float _field13;
};

struct GalleryItemSelectionTransformerHelper {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
    RepeatedPtrField_0a3269f6 _field6;
};

struct GallerySelectionTransformer {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionTransformerArchive *_field5;
    struct UUIDPath *_field6;
    struct UUIDPath *_field7;
};

struct GeometryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct Size *_field6;
    unsigned int _field7;
    float _field8;
};

struct GeometryArrays {
    unsigned int offset;
    unsigned int count;
    unsigned int capoffset;
    unsigned int capcount;
};

struct GeometryResource {
    int _field1;
    struct ObjcSharedPtr<TSCH3DResource> _field2;
    struct GeometryArrays _field3;
    struct ObjcSharedPtr<TSCH3DGeometry> _field4;
};

struct GradientArchive;

struct GradientArchive_GradientStop {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
};

struct GridRow {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::GridValue> _field5;
};

struct GridValue {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct GroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct DrawableArchive *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct GroupByChangeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    int _field6;
    unsigned int _field7;
    struct UUIDMapArchive *_field8;
    struct UUIDMapArchive *_field9;
    RepeatedPtrField_bfda3daa _field10;
    unsigned int _field11;
};

struct GroupByNodeMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::GroupByNodeMapArchive_GroupNodesForGroupBy> _field5;
};

struct GroupColumnArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct FunctorArchive *_field6;
    struct UUID *_field7;
    int _field8;
};

struct GroupColumnListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::GroupColumnArchive> _field5;
};

struct GroupSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionTransformerArchive *_field5;
};

struct GuideCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractGuideCommandArchive *_field5;
    struct UUIDPath *_field6;
};

struct HeaderStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned int _field6;
};

struct HiddenStateExtentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct RepeatedPtrField<TST::HiddenStateExtentArchive_RowOrColumnState> _field6;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field7;
    int _field8;
    _Bool _field9;
    RepeatedPtrField_bfda3daa _field10;
};

struct HiddenStatesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct HiddenStateExtentArchive *_field6;
    struct HiddenStateExtentArchive *_field7;
};

struct HiddenStatesOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct RepeatedPtrField<TST::HiddenStatesArchive> _field6;
};

struct HighlightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_23d93216 *_field6;
};

struct HyperlinkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_23d93216 *_field6;
};

struct ICESPropertyExportEntry {
    int _field1;
    int _field2;
    CDUnknownFunctionPointerType _field3;
};

struct ICIDMovieDataTimeInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct ICISPropertyConversionEntry {
    int _field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
};

struct IdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
};

struct IdPlacementOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
    int _field7;
};

struct IdentifierMap {
    unsigned short _field1;
    struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
};

struct IdentifierNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
    unsigned int _field7;
};

struct ImageAdjustmentsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    _Bool _field17;
    _Bool _field18;
};

struct ImageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct DrawableArchive *_field6;
    struct DataReference *_field7;
    struct Reference *_field8;
    struct Size *_field9;
    struct Reference *_field10;
    struct DataReference *_field11;
    struct DataReference *_field12;
    struct Size *_field13;
    struct Path *_field14;
    struct ImageAdjustmentsArchive *_field15;
    unsigned int _field16;
    _Bool _field17;
    struct DataReference *_field18;
    struct DataReference *_field19;
    struct DataReference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    struct Path *_field24;
    struct Attribution *_field25;
};

struct ImageFillArchive;

struct ImageInfoAbstractGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct GeometryArchive *_field6;
    struct GeometryArchive *_field7;
    struct GeometryArchive *_field8;
    struct GeometryArchive *_field9;
    struct PathSourceArchive *_field10;
    struct PathSourceArchive *_field11;
    struct Size *_field12;
    struct Size *_field13;
};

struct ImageReplaceCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    struct DataReference *_field8;
    struct DataReference *_field9;
    struct Path *_field10;
    struct Path *_field11;
    struct Size *_field12;
    struct Size *_field13;
    struct GeometryArchive *_field14;
    struct GeometryArchive *_field15;
    struct GeometryArchive *_field16;
    struct GeometryArchive *_field17;
    struct ImageAdjustmentsArchive *_field18;
    struct DataReference *_field19;
    struct DataReference *_field20;
    struct ImageAdjustmentsArchive *_field21;
    struct DataReference *_field22;
    struct DataReference *_field23;
    struct DataReference *_field24;
    struct DataReference *_field25;
    struct DataReference *_field26;
    struct DataReference *_field27;
    struct Size *_field28;
    struct Size *_field29;
};

struct ImportWarningSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ImportWarningSetArchive_FormulaImportWarning *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    basic_string_23d93216 *_field19;
};

struct ImportWarningSetArchive_FormulaImportWarning;

struct ImportWarningSetByCellRefArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellRefImportWarningSetPairArchive> _field5;
};

struct InNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct IndexSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
};

struct IndexedUidsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> _field5;
};

struct InducedCommandCollectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    struct IndexSet *_field8;
};

struct InducedVerifyDocumentWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct InducedVerifyObjectsWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    RepeatedPtrField_236b8a23 _field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct Info {
    unsigned long long _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    double _field6;
    int _field7;
    struct __CFString *_field8;
};

struct InfoCollectionSelectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_0a3269f6 _field5;
};

struct InfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
};

struct InfoGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct GeometryArchive *_field6;
    struct GeometryArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct InsertDrawablesCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSK::AddIdOperationArgs> _field6;
    RepeatedField_27dfe32f _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    _Bool _field9;
    unsigned int _field10;
    RepeatedPtrField_236b8a23 _field11;
    RepeatedPtrField_bfda3daa _field12;
    struct Reference *_field13;
};

struct InsertFootnoteCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
};

struct InsertInfo;

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct JCColor {
    struct CGColor *_field1;
    struct CGColor *_field2;
};

struct JCHSVColor;

struct JCImageAnalyzer {
    struct JCHSVColor *_field1;
    struct CGSize _field2;
    struct JCColor _field3;
    struct JCColor _field4;
    struct JCColor _field5;
    struct JCColor _field6;
    struct JCColor _field7;
    struct JCColor _field8;
    struct JCColor _field9;
    unsigned int _field10[360];
    unsigned int _field11[256];
    unsigned int _field12[360];
    unsigned int _field13[256];
    unsigned int _field14[256];
    unsigned int _field15[256];
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    struct vector<JCColor, std::__1::allocator<JCColor>> _field25;
    struct vector<sortColorEntry, std::__1::allocator<sortColorEntry>> _field26;
    double _field27;
    double _field28;
};

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    char _field5;
};

struct LabelsMeshRendererLabelInfo {
    id _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
    tvec3_17f03ce0 _field4;
    float _field5;
    tvec2_84d5962d _field6;
    tvec2_84d5962d _field7;
    struct ExternalLabelAttribute *_field8;
};

struct LargeArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
};

struct LargeArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    unsigned int _field6;
    basic_string_23d93216 *_field7;
};

struct LargeDictionary {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
};

struct LargeDictionarySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    unsigned int _field6;
    basic_string_23d93216 *_field7;
};

struct LargeNumberArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeNumberArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    struct RepeatedField<double> _field6;
};

struct LargeObjectArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeObjectArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct LargeStringArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeStringArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> _field6;
};

struct LargeStringToObjectDictionary {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeDictionary *_field5;
};

struct LargeStringToObjectDictionarySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeDictionarySegment *_field5;
    struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> _field6;
};

struct LargeUUIDArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeUUIDArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    RepeatedPtrField_bfda3daa _field6;
};

struct LayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CellRange *_field5;
    struct CellID *_field6;
    struct Size *_field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    struct Size *_field11;
    unsigned int _field12;
};

struct LayoutStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct RepeatedPtrField<TP::SectionHintArchive> _field9;
    RepeatedPtrField_236b8a23 _field10;
    unsigned int _field11;
    int _field12;
};

struct LegendGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    int _field6;
    float _field7;
    struct ShadowArchive *_field8;
    struct StrokeArchive *_field9;
};

struct LegendModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct RectArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct LetNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct LineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Path *_field5;
    struct Point *_field6;
    int _field7;
    _Bool _field8;
    basic_string_23d93216 *_field9;
};

struct LineExtrusionGeometryXRangeInfo {
    tvec2_84d5962d _field1;
    char _field2;
};

struct LineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
};

struct ListNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct ListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    RepeatedField_c2891982 _field6;
    RepeatedField_324622b8 _field7;
    RepeatedField_324622b8 _field8;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field9;
    RepeatedField_c2891982 _field10;
    RepeatedPtrField_236b8a23 _field11;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct ShadowArchive *_field17;
    struct Color *_field18;
    basic_string_23d93216 *_field19;
    RepeatedField_12b14242 _field20;
    int _field21;
};

struct ListStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColorArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecListStyleFloatArrayArchive *_field7;
    struct SpecListStyleListLabelGeometryArrayArchive *_field8;
    struct SpecListStyleImageDataArrayArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecListStyleFloatArrayArchive *_field18;
    struct SpecListStyleListNumberTypeArrayArchive *_field19;
    struct SpecListStyleBoolArrayArchive *_field20;
    struct SpecShadowArchive *_field21;
    struct SpecListStyleStringArrayArchive *_field22;
    struct SpecListStyleFloatArrayArchive *_field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    struct SpecListStyleListLabelTypeArrayArchive *_field29;
    struct SpecIntegerArchive *_field30;
};

struct Lookup;

struct MFPColorMatrix {
    float _field1[5][5];
};

struct MappedFillState {
    char _field1;
    char _field2;
    struct {
        char _field1;
        char _field2;
        char _field3;
        char _field4;
        char _field5;
        char _field6;
    } _field3[32];
};

struct MaskArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct PathSourceArchive *_field6;
};

struct MaterialShaderVariables {
    TSCH3DShaderVariable *texture;
    TSCH3DShaderVariable *intensity;
    TSCH3DShaderVariable *factor;
    TSCH3DShaderVariable *textureColor;
    TSCH3DShaderVariable *color;
    TSCH3DShaderVariable *modulation;
    TSCH3DShaderVariable *texcoords;
    TSCH3DShaderVariable *textureMatrix;
};

struct MediaInfoGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoGeometryCommandArchive *_field5;
    struct Size *_field6;
    struct Size *_field7;
};

struct MediaStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct MediaStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct MediaStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct ShadowArchive *_field6;
    struct ReflectionArchive *_field7;
    float _field8;
};

struct MediaStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecStrokeArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecShadowArchive *_field7;
    struct SpecReflectionArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct MediaStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseStyleSetValueCommandArchive *_field5;
    struct MediaStylePropertyChangeSetArchive *_field6;
};

struct MergeOperationArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::UUIDRectArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    RepeatedField_27dfe32f _field7;
    int _field8;
};

struct MergeOriginMovedArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
    RepeatedField_27dfe32f _field8;
};

struct MergeOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct FormulaStoreArchive *_field6;
};

struct MergeSourceArchive;

struct MeshData {
    id _field1;
    id _field2;
};

struct Message {
    CDUnknownFunctionPointerType *_field1;
};

struct MessageInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    unsigned int type_;
    unsigned int length_;
    struct RepeatedPtrField<TSP::FieldInfo> field_infos_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_27dfe32f diff_merge_version_;
    int _diff_merge_version_cached_byte_size_;
    struct FieldPath *diff_field_path_;
    RepeatedPtrField_5867f37b fields_to_remove_;
    RepeatedField_27dfe32f diff_read_version_;
    int _diff_read_version_cached_byte_size_;
    unsigned int base_message_index_;
};

struct MessageOptions;

struct ModifyRubyTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    basic_string_23d93216 *_field7;
    basic_string_23d93216 *_field8;
    struct UndoTransaction *_field9;
};

struct ModifyTOCSettingsBaseCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct ModifyTOCSettingsForTOCInfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ModifyTOCSettingsBaseCommandArchive *_field5;
    struct Reference *_field6;
};

struct ModifyTOCSettingsPresetForThemeCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ModifyTOCSettingsBaseCommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
};

struct MoveAnchoredDrawableInlineCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    struct IdPlacementOperationArgs *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct UUIDPath *_field9;
    struct ExteriorTextWrapArchive *_field10;
    struct ExteriorTextWrapArchive *_field11;
};

struct MoveDrawablesAttachedCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_830a1b19 _field6;
    RepeatedPtrField_c67bb210 _field7;
    RepeatedPtrField_0a3269f6 _field8;
    struct RepeatedPtrField<TP::MoveDrawablesAttachedCommandArchive_GSSPCharIndexAndPosition> _field9;
    RepeatedPtrField_3504fdd6 _field10;
    RepeatedField_27dfe32f _field11;
    RepeatedPtrField_3504fdd6 _field12;
    RepeatedPtrField_a0d2dbe7 _field13;
};

struct MoveDrawablesFloatingCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_830a1b19 _field6;
    RepeatedPtrField_c67bb210 _field7;
    RepeatedPtrField_0a3269f6 _field8;
    RepeatedField_27dfe32f _field9;
    RepeatedPtrField_3504fdd6 _field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_3504fdd6 _field12;
};

struct MoveInlineDrawableAnchoredCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    struct IdPlacementOperationArgs *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct UUIDPath *_field9;
    struct ExteriorTextWrapArchive *_field10;
    struct ExteriorTextWrapArchive *_field11;
};

struct MovieArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
    float _field10;
    float _field11;
    float _field12;
    unsigned int _field13;
    int _field14;
    float _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    struct DataReference *_field21;
    struct DataReference *_field22;
    unsigned int _field23;
    unsigned int _field24;
    struct Reference *_field25;
    struct Reference *_field26;
    struct Reference *_field27;
    struct Reference *_field28;
    struct Size *_field29;
    struct Size *_field30;
    struct Attribution *_field31;
};

struct MultiTableRemapperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct RepeatedPtrField<TSCE::OwnerUIDMapperArchive> _field10;
    struct UUIDMapArchive *_field11;
};

struct NSColor {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NSFont {
    Class _field1;
    id _field2;
    double _field3;
    long long _field4;
    struct __fFlags {
        unsigned int :1;
        unsigned int :8;
        unsigned int :4;
        unsigned int :1;
        unsigned int :3;
        unsigned int :1;
        unsigned int :1;
        unsigned int :13;
    } _field5;
    id _field6;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSMutableSet {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSObjectComparator<GQDWrapPoint> {
    SEL _field1;
};

struct NSString {
    Class _field1;
};

struct NSThread {
    Class _field1;
    id _field2;
    unsigned char _field3[44];
};

struct NSUUID {
    Class _field1;
};

struct NSViewController {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    id _field12;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :28;
    unsigned int :0;
};

struct NamedFunc<GQPStatus (*)(GQPProcessor *, int)>;

struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)>;

struct NativeContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
};

struct NeedsMediaCompatibilityUpgradeCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct Node;

struct NumberCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    basic_string_23d93216 *_field6;
    struct FormatStructArchive *_field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
};

struct NumberNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
};

struct OABGradientStop {
    id _field1;
    float _field2;
};

struct OABTable2DArray<EshShape *> {
    int _field1;
    int _field2;
    struct EshShape **_field3;
};

struct OABTable2DArray<OABTableCell> {
    int _field1;
    int _field2;
    struct OABTableCell *_field3;
};

struct OABTableCell;

struct OADAdjustCoord {
    char isFormulaResult;
    int value;
};

struct OADAdjustPoint {
    struct OADAdjustCoord x;
    struct OADAdjustCoord y;
};

struct OADCachedTextStyleData {
    unsigned int verticalAlign:3;
    short lineSpacing;
    short beforeSpacing;
    short afterSpacing;
    short leftMargin;
    short rightMargin;
    short indent;
    short defaultTab;
    unsigned int horizontalAlign:4;
    unsigned short fontFaceIndex;
    short fontSize;
    unsigned short fontColorIndex;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int underline:5;
    unsigned int format:2;
    unsigned int kerning:2;
    unsigned int strikethrough:2;
    unsigned int caps:2;
};

struct OADFormulaArg {
    int type;
    int value;
};

struct OADTFTemplateMatrix<OADTableCell *> {
    int _field1;
    int _field2;
    struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> _field3;
};

struct OADTFTemplateMatrix<OADTablePartStyle *> {
    int _field1;
    int _field2;
    struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> _field3;
};

struct OADTMatrixPos {
    int _field1;
    int _field2;
};

struct OAETLineEndInfo {
    id _field1;
    char _field2;
};

struct OAITListNumberInfo {
    int numberScheme;
    int startNumber;
    int blockStartNumber;
    int currentNumber;
    char prevParagraphWasEmpty;
};

struct OAVGradientStop {
    id _field1;
    float _field2;
};

struct OAVTextBoxInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct OCCBinaryStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct OCCCryptoKey {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct OCCEncryptionInfoReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OCCStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct ODIHRange {
    float mMid;
    float mLength;
};

struct ODIHRangeVector {
    struct ODIHRange *_field1;
    struct ODIHRange *_field2;
    struct __compressed_pair<ODIHRange *, ChAllocator<ODIHRange>> {
        struct ODIHRange *_field1;
    } _field3;
};

struct ODILayoutNodeState {
    id _field1;
    char _field2;
};

struct ODIPointIteratorState {
    int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    id _field5;
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct ObjcSharedPtr<NSIndexSet> {
    NSIndexSet *mValue;
};

struct ObjcSharedPtr<NSMutableIndexSet> {
    id _field1;
};

struct ObjcSharedPtr<NSObject> {
    NSObject *mValue;
};

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DAnimationInterpolation> {
    TSCH3DAnimationInterpolation *mValue;
};

struct ObjcSharedPtr<TSCH3DGeometry> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DResource> {
    id _field1;
};

struct ObjectBounds {
    box_a3bd9649 mBounds;
    box_a3bd9649 mProjected;
    box_a3bd9649 m2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> mBoxes;
};

struct ObjectInfo {
    struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> _field1;
};

struct ObjectLocation {
    long long _field1;
    long long _field2;
};

struct ObjectSerializationDirectory {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> entries_;
};

struct ObjectSerializationMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *source_document_uuid_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
    struct Reference *data_metadata_map_;
};

struct ObjectStackEntry;

struct ObjectState {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> mAttributes;
    struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> mTextures;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
};

struct ObjectStateIdentifier {
    char _field1;
    long long _field2;
    char _field3;
    id _field4;
};

struct ObjectStateMatchObject {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> mAttributes;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
    struct array<NSObject *, 8> mTextures;
};

struct ObjectTransforms {
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field1;
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field2;
};

struct OcBinaryData {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    _Bool _field7;
    struct SsrwOOStream *_field8;
};

struct OcBinaryReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OcBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
};

struct OcReader {
    CDUnknownFunctionPointerType *_field1;
    struct EshObjectFactory *_field2;
};

struct OcText {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    char *_field7;
    _Bool _field8;
};

struct OcWriter {
    CDUnknownFunctionPointerType *_field1;
};

struct OneofDescriptor;

struct Operation {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    _Bool _field6;
};

struct OperationTransformer {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSK::Operation> _field5;
    _Bool _field6;
};

struct OperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
};

struct OwnerUIDMapperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct UUID *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
    struct UUID *_field10;
    struct UUID *_field11;
    struct UUID *_field12;
    struct UUID *_field13;
    struct UUID *_field14;
    struct UUID *_field15;
    struct UUID *_field16;
    struct UUID *_field17;
    struct UUID *_field18;
    struct UUID *_field19;
    struct UUID *_field20;
    struct UUID *_field21;
    struct UUID *_field22;
    struct UUID *_field23;
    struct UUID *_field24;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct PODType<unsigned char>;

struct PODType<unsigned short>;

struct PackageMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long last_object_identifier_;
    struct DocumentRevision *revision_;
    struct RepeatedPtrField<TSP::ComponentInfo> components_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedField_27dfe32f read_version_;
    int _read_version_cached_byte_size_;
    RepeatedField_27dfe32f write_version_;
    int _write_version_cached_byte_size_;
    RepeatedField_27dfe32f file_format_version_;
    int _file_format_version_cached_byte_size_;
    unsigned long long save_token_;
    struct Reference *data_metadata_map_;
    int preferred_package_type_;
};

struct PaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct PageHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::TargetHintArchive> _field5;
    struct Range *_field6;
    struct Range *_field7;
    struct Reference *_field8;
    int _field9;
    unsigned int _field10;
    struct Reference *_field11;
    struct RepeatedPtrField<TP::AnchorPosArchive> _field12;
    struct TopicNumberHintsArchive *_field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    RepeatedPtrField_bfda3daa _field15;
    RepeatedPtrField_a0d2dbe7 _field16;
    unsigned int _field17;
    int _field18;
    struct RepeatedPtrField<TP::TargetHintArchive> _field19;
    struct RepeatedPtrField<TP::TopicNumberHintsArchive> _field20;
    unsigned int _field21;
    unsigned int _field22;
};

struct ParagraphSpecificStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecIntegerArchive *_field4;
    struct SpecStringArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecColorArchive *_field7;
    struct SpecDoubleArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecParagraphStyleArchive *_field17;
    struct SpecBoolArchive *_field18;
    struct SpecListStyleArchive *_field19;
    struct SpecBoolArchive *_field20;
    struct SpecBoolArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecLineSpacingArchive *_field23;
    struct SpecIntegerArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecBoolArchive *_field34;
    struct SpecIntegerArchive *_field35;
    struct SpecRuleOffsetArchive *_field36;
    struct SpecDoubleArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecDoubleArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecStrokeArchive *_field49;
    struct SpecTabsArchive *_field50;
    struct SpecIntegerArchive *_field51;
    struct SpecBoolArchive *_field52;
    _Bool _field53;
    int _field54;
};

struct ParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    struct ParagraphStylePropertiesArchive *_field7;
    unsigned int _field8;
};

struct ParagraphStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    int _field4;
    float _field5;
    basic_string_23d93216 *_field6;
    struct Color *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    float _field12;
    float _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct LineSpacingArchive *_field18;
    int _field19;
    float _field20;
    struct Point *_field21;
    float _field22;
    float _field23;
    struct TabsArchive *_field24;
    float _field25;
    unsigned int _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    basic_string_23d93216 *_field32;
    struct StrokeArchive *_field33;
    basic_string_23d93216 *_field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    int _field39;
    struct Reference *_field40;
    struct Reference *_field41;
    _Bool _field42;
    int _field43;
};

struct ParagraphStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct CharacterStylePropertyChangeSetArchive *_field4;
    struct SpecIntegerArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecDoubleArchive *_field7;
    struct SpecColorArchive *_field8;
    struct SpecDoubleArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecParagraphStyleArchive *_field18;
    struct SpecBoolArchive *_field19;
    struct SpecListStyleArchive *_field20;
    struct SpecBoolArchive *_field21;
    struct SpecBoolArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecLineSpacingArchive *_field24;
    struct SpecIntegerArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecIntegerArchive *_field34;
    struct SpecBoolArchive *_field35;
    struct SpecIntegerArchive *_field36;
    struct SpecRuleOffsetArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecDoubleArchive *_field40;
    struct SpecDoubleArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecStrokeArchive *_field50;
    struct SpecTabsArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecBoolArchive *_field53;
    _Bool _field54;
    int _field55;
};

struct PasteStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    _Bool _field8;
};

struct PasteboardMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    basic_string_23d93216 *app_name_;
    RepeatedPtrField_fe6aca30 datas_;
    struct UUID *source_document_uuid_;
    struct Reference *data_metadata_map_;
};

struct PathSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct PathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct PointPathSourceArchive *_field5;
    struct ScalarPathSourceArchive *_field6;
    struct BezierPathSourceArchive *_field7;
    struct CalloutPathSourceArchive *_field8;
    struct ConnectionLinePathSourceArchive *_field9;
    struct EditableBezierPathSourceArchive *_field10;
    basic_string_23d93216 *_field11;
    basic_string_23d93216 *_field12;
    _Bool _field13;
    _Bool _field14;
};

struct PatternedStrokeArchive;

struct PencilAnnotationOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct FormulaStoreArchive *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct PencilAnnotationSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct PencilAnnotationStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    int _field8;
    int _field9;
    struct Path *_field10;
    struct Point *_field11;
    struct Size *_field12;
    struct Size *_field13;
    double _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    struct Color *_field17;
    RepeatedPtrField_a0d2dbe7 _field18;
    int _field19;
};

struct PlaceholderSmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_23d93216 *_field6;
    _Bool _field7;
};

struct PlotDescriptor;

struct Point {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
};

struct PointPathSourceArchive;

struct PopUpMenuModel {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> _field5;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field6;
};

struct PostfixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PowerMeter {
    _Bool mInstantaneousMode;
    double mSampleRate;
    double mPeakDecay1;
    double mPeakDecay;
    double mDecay1;
    double mDecay;
    int mPrevBlockSize;
    int mPeakHoldCount;
    double mPeak;
    double mAveragePowerPeak;
    double mMaxPeak;
    struct AudioUnitMeterClipping mClipping;
    double mAveragePowerF;
    float m_vAvePower[16];
    int mAveragePowerI;
};

struct PrefilteredLineVertexProperties {
    tvec3_17f03ce0 *_field1;
    tvec3_17f03ce0 *_field2;
    tvec4_ac57c72d *_field3;
    int _field4;
    box_80622335 _field5;
};

struct PrefixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PresenterInfo {
    id _field1;
    struct CGContext *_field2;
    float _field3;
    id _field4;
    char _field5;
};

struct PrimitiveInfo {
    int _field1;
    int _field2;
    int _field3;
    id _field4;
};

struct ProcessPageLayoutArgumentsStruct {
    id _field1;
    id _field2;
    id _field3;
};

struct PropagatePresetCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct PropertyValueStorageContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct SparseReferenceArray *_field10;
    struct SparseReferenceArray *_field11;
    struct SparseReferenceArray *_field12;
    struct SparseReferenceArray *_field13;
    struct SparseReferenceArray *_field14;
    struct SparseReferenceArray *_field15;
    struct SparseReferenceArray *_field16;
    struct SparseReferenceArray *_field17;
};

struct PrototypeForUndoChangePageTemplateForSection {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
    struct Reference *_field6;
};

struct QuantizationConfig {
    unsigned long long _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct RGB {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct RTree<unsigned int, 2, double, 8, 4> {
    CDUnknownFunctionPointerType *_field1;
    struct Node *_field2;
    double _field3;
};

struct Range {
    tvec2_84d5962d _field1;
    char _field2;
};

struct RangeCoordinateArchive;

struct RangeReferenceArchive;

struct RearrangeIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
    int _field7;
};

struct RectArchive;

struct RefTypeHolder<TSCECellRef, 0> {
    struct TSCECellRef _ref;
};

struct RefTypeHolder<TSCECellRef, 1> {
    struct TSCECellRef _field1;
};

struct RefTypeHolder<TSCECellRef, 2> {
    struct TSCECellRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 0> {
    struct TSCERangeRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 1> {
    struct TSCERangeRef _field1;
};

struct RefTypeHolder<TSCERangeRef, 2> {
    struct TSCERangeRef _ref;
};

struct Reference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    int _field6;
    _Bool _field7;
};

struct ReferenceCompletionInfo;

struct ReferenceLineGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSNumberDoubleArchive *_field5;
    basic_string_23d93216 *_field6;
    struct ShadowArchive *_field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct StrokeArchive *_field12;
    int _field13;
    int _field14;
};

struct ReferenceNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    struct RangeReferenceArchive *_field6;
    basic_string_23d93216 *_field7;
    struct CellReferenceArchive *_field8;
    struct UUID *_field9;
    struct UUIDCoordArchive *_field10;
    struct UUIDCoordArchive *_field11;
    struct CategoryReferenceArchive *_field12;
    struct UUIDRectArchive *_field13;
    unsigned int _field14;
};

struct ReferencePrinter {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> *_field10;
    struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> _field11;
};

struct Reflection {
    CDUnknownFunctionPointerType *_field1;
};

struct ReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
};

struct RegionInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct IndexedUidsArchive *_field6;
    struct IndexedUidsArchive *_field7;
};

struct RegionMovedInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RegionInfoArchive *_field5;
    struct RegionInfoArchive *_field6;
    struct RegionInfoArchive *_field7;
    struct UUID *_field8;
    _Bool _field9;
    _Bool _field10;
};

struct RemoteDataSpecifierArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    unsigned int _field6;
    unsigned int _field7;
    double _field8;
};

struct RemoteDataValueMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> _field5;
};

struct RemoveDrawablesCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSK::RemoveIdOperationArgs> _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    RepeatedField_27dfe32f _field8;
    RepeatedPtrField_236b8a23 _field9;
};

struct RemoveFlowInfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct Reference *_field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct RemoveIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
};

struct RenderCycleInfo {
    id _field1;
    id _field2;
    id _field3;
};

struct RenderElementInfo {
    id _field1;
    id _field2;
    id _field3;
    tvec2_3b141483 _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct RenderHints {
    struct TextureSizeHint textureSizeHint;
};

struct RenderState {
    _Bool mBlend;
    int blendMode;
    _Bool depthTest;
    _Bool depthMask;
    _Bool culling;
    _Bool cullBack;
    _Bool polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct RenderbufferAllocatorInfo {
    struct FramebufferAttributes *_field1;
    tvec2_3b141483 *_field2;
    id _field3;
};

struct RepeatedExternalReferenceCompletionInfo;

struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<double> {
    double *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<long long> {
    long long *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<std::__1::basic_string<char>> {
    basic_string_23d93216 *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedPtrField<TP::AnchorPosArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::MoveDrawablesAttachedCommandArchive_GSSPCharIndexAndPosition> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::PageHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::SectionHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TargetHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TopicNumberEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TopicNumberHintsArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::DrawableZOrderListArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellValueArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::FormulaArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::FormulaCoordPairsByOwnerArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::GroupByNodeMapArchive_GroupNodesForGroupBy> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::OwnerUIDMapperArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteTableUIDInfoArchive_TableUIDMapEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DLightArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartUIState> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::UserDefinedGuideArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::AddIdOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::CollaborationCommandHistoryItem> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::FormatStructArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::IdPlacementOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::Operation> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::RemoveIdOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentDataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FeatureInfo> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FieldInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::MessageInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::Path_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUIDRectArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::CommandPropertyEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggNodeArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_AggregatorArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CategoryOwnerArchive_GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellRange> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellRefImportWarningSetPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::ColumnAggregateArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::ColumnRowMetadataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FilterRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::GroupColumnArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::HiddenStateExtentArchive_RowOrColumnState> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::HiddenStatesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::SummaryCellVendorArchive_SummaryCellEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderUIDArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TileStorage_Tile> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::FontFeatureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ObjectPropertyArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TabArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReplaceAllUsesOfStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UndoTransaction *_field7;
};

struct ReplaceCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct UUID *_field7;
    struct FormatStructArchive *_field8;
};

struct ReplaceHeaderFooterStorageCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
};

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct RewriteGroupNodeUIDInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUIDMapArchive *_field6;
};

struct RewriteRangeEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    RepeatedPtrField_bfda3daa _field7;
    unsigned int _field8;
};

struct RewriteTableUIDInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::RewriteTableUIDInfoArchive_TableUIDMapEntryArchive> _field5;
};

struct RubyFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_23d93216 *_field6;
};

struct SFUZipEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct ScalarPathSourceArchive;

struct Schemata {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    id _field3;
    id _field4;
};

struct SectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    RepeatedPtrField_a0d2dbe7 _field20;
    float _field21;
    unsigned int _field22;
    unsigned int _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    struct Reference *_field27;
    struct Reference *_field28;
    struct Reference *_field29;
    basic_string_23d93216 *_field30;
    struct Reference *_field31;
    struct FillArchive *_field32;
    unsigned int _field33;
};

struct SectionGuideCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractGuideCommandArchive *_field5;
    struct UUIDPath *_field6;
    unsigned int _field7;
};

struct SectionHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::PageHintArchive> _field5;
    unsigned int _field6;
};

struct SelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct SelectionPathTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct SelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct SeriesDescriptor;

struct SessionLoadResourceResult {
    char _field1;
    char _field2;
    char _field3;
    id _field4;
    id _field5;
};

struct ShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
    int _field8;
    float _field9;
    _Bool _field10;
    int _field11;
    struct DropShadowArchive *_field12;
    struct ContactShadowArchive *_field13;
    struct CurvedShadowArchive *_field14;
};

struct ShapeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct PathSourceArchive *_field7;
    struct LineEndArchive *_field8;
    struct LineEndArchive *_field9;
    float _field10;
};

struct ShapeContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableContentDescription *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct ShapeInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
};

struct ShapeStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeStyleArchive *_field5;
    struct ShapeStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ShapeStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseShapeStylePropertyChangeSetArchive *_field5;
    struct SpecColumnsArchive *_field6;
    struct SpecPaddingArchive *_field7;
    struct SpecBoolArchive *_field8;
    struct SpecIntegerArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct SpecBoolArchive *_field16;
    struct SpecParagraphStyleArchive *_field17;
};

struct ShapeStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseStyleSetValueCommandArchive *_field5;
    struct BaseShapeStylePropertyChangeSetArchive *_field6;
};

struct ShortcutCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
};

struct ShortcutControllerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> _field5;
};

struct ShuffleMappingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct Size;

struct SmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
};

struct SmartStrokeArchive;

struct SnappySource {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char *_field8;
};

struct SortRuleReferenceTrackerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct SparseReferenceArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDPathArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> _field5;
    unsigned int _field6;
};

struct Spec {
    struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> _field1;
    unsigned int _field2;
};

struct SpecBoolArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetBoolArchive *_field5;
};

struct SpecCharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetCharacterStyleArchive *_field5;
};

struct SpecChart3dLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChart3dLightingPackageArchive *_field5;
};

struct SpecChart3dVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChart3dVectorArchive *_field5;
};

struct SpecChartErrorBarCustomDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChartErrorBarCustomDataArchive *_field5;
};

struct SpecChartsOptionalDoubleArchiveArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChartsOptionalDoubleArchiveArchive *_field5;
};

struct SpecColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetColorArchive *_field5;
};

struct SpecColorFillSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetColumnsArchive *_field5;
};

struct SpecDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetDoubleArchive *_field5;
};

struct SpecFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColorFillSetColorArchive *_field5;
    struct SpecGradientFillSetAngleArchive *_field6;
    struct SpecImageFillSetTechniqueArchive *_field7;
    struct SpecSetFillArchive *_field8;
};

struct SpecFontFeaturesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetFontFeaturesArchive *_field5;
};

struct SpecFormatObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetFormatObjectArchive *_field5;
};

struct SpecFrameSetAssetScaleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecGradientFillSetAngleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecImageFillSetTechniqueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct SpecIntegerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetIntegerArchive *_field5;
};

struct SpecLineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetLineEndArchive *_field5;
};

struct SpecLineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetLineSpacingArchive *_field5;
};

struct SpecListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleArchive *_field5;
};

struct SpecListStyleBoolArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleBoolArrayArchive *_field5;
};

struct SpecListStyleFloatArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleFloatArrayArchive *_field5;
};

struct SpecListStyleImageDataArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleImageDataArrayArchive *_field5;
};

struct SpecListStyleListLabelGeometryArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListLabelGeometryArrayArchive *_field5;
};

struct SpecListStyleListLabelTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListLabelTypeArrayArchive *_field5;
};

struct SpecListStyleListNumberTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListNumberTypeArrayArchive *_field5;
};

struct SpecListStyleStringArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleStringArrayArchive *_field5;
};

struct SpecNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetNumberFormatArchive *_field5;
};

struct SpecPaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetPaddingArchive *_field5;
};

struct SpecParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetParagraphStyleArchive *_field5;
};

struct SpecReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecReflectionSetOpacityArchive *_field5;
    struct SpecSetReflectionArchive *_field6;
};

struct SpecReflectionSetOpacityArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecRuleOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetRuleOffsetArchive *_field5;
};

struct SpecSetBoolArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct SpecSetCharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetChart3dLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DLightingPackageArchive *_field5;
    _Bool _field6;
};

struct SpecSetChart3dVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    _Bool _field6;
};

struct SpecSetChartErrorBarCustomDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field5;
    _Bool _field6;
};

struct SpecSetChartsOptionalDoubleArchiveArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSNumberDoubleArchive *_field5;
    _Bool _field6;
};

struct SpecSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    _Bool _field6;
};

struct SpecSetColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ColumnsArchive *_field5;
    _Bool _field6;
};

struct SpecSetDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    _Bool _field6;
};

struct SpecSetFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    _Bool _field6;
};

struct SpecSetFontFeaturesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetFormatObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormatStructArchive *_field5;
    _Bool _field6;
};

struct SpecSetIntegerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
};

struct SpecSetLineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LineEndArchive *_field5;
    _Bool _field6;
};

struct SpecSetLineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LineSpacingArchive *_field5;
    _Bool _field6;
};

struct SpecSetListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetListStyleBoolArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_12b14242 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleFloatArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_324622b8 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleImageDataArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListLabelGeometryArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListLabelTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_c2891982 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListNumberTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_c2891982 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleStringArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_236b8a23 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormatStructArchive *_field5;
    _Bool _field6;
};

struct SpecSetPaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct PaddingArchive *_field5;
    _Bool _field6;
};

struct SpecSetParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ReflectionArchive *_field5;
    _Bool _field6;
};

struct SpecSetRuleOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    _Bool _field6;
};

struct SpecSetShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShadowArchive *_field5;
    _Bool _field6;
};

struct SpecSetStringArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    _Bool _field6;
};

struct SpecSetStrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    _Bool _field6;
};

struct SpecSetTableStrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokePresetListArchive *_field5;
    _Bool _field6;
};

struct SpecSetTabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TabsArchive *_field5;
    _Bool _field6;
};

struct SpecShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetShadowArchive *_field5;
    struct SpecShadowSetAngleArchive *_field6;
    struct SpecShadowSetColorArchive *_field7;
    struct SpecShadowSetOffsetArchive *_field8;
    struct SpecShadowSetOpacityArchive *_field9;
    struct SpecShadowSetRadiusArchive *_field10;
};

struct SpecShadowSetAngleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecShadowSetOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetOpacityArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetRadiusArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct SpecStringArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetStringArchive *_field5;
};

struct SpecStrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFrameSetAssetScaleArchive *_field5;
    struct SpecSetStrokeArchive *_field6;
    struct SpecStrokeSetColorArchive *_field7;
    struct SpecStrokeSetPatternArchive *_field8;
    struct SpecStrokeSetWidthArchive *_field9;
};

struct SpecStrokeSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecStrokeSetPatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    double _field7;
    double _field8;
    struct Color *_field9;
    struct StrokePatternArchive *_field10;
};

struct SpecStrokeSetWidthArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecTableStrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetTableStrokePresetListArchive *_field5;
};

struct SpecTabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetTabsArchive *_field5;
};

struct SsrwOORootStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
    struct _RootStorage *_field3;
};

struct SsrwOOStgInfo;

struct SsrwOOStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
};

struct SsrwOOStream {
    CDUnknownFunctionPointerType *_field1;
};

struct StateSpec {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)> *_field3;
    struct Action *_field4;
    struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)> *_field5;
    struct NamedFunc<GQPStatus (*)(GQPProcessor *, int)> *_field6;
    struct ActionFinder *_field7;
};

struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    unsigned long long mIndex;
    struct RenderState mCurrent;
    struct RenderState mStack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    unsigned long long mIndex;
    tmat4x4_3074befe mCurrent;
    tmat4x4_3074befe mStack[8];
};

struct StockArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    double _field6;
    struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> _field7;
};

struct StorageActionCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct UndoTransaction *_field7;
    unsigned int _field8;
    int _field9;
    RepeatedPtrField_bfda3daa _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct StringCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
    _Bool _field8;
};

struct StringNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
};

struct StrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    int _field7;
    int _field8;
    float _field9;
    struct StrokePatternArchive *_field10;
    struct SmartStrokeArchive *_field11;
    struct FrameArchive *_field12;
    struct PatternedStrokeArchive *_field13;
};

struct StrokePatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    RepeatedField_324622b8 _field7;
    unsigned int _field8;
};

struct StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    struct StrokeArchive *_field7;
    int _field8;
};

struct StrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> _field5;
    struct RepeatedPtrField<TST::StrokePresetDataArchive> _field6;
    int _field7;
};

struct StrokeSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct StructuredTextImportRecord {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StructuredTextImportSettings *_field5;
    basic_string_23d93216 *_field6;
    double _field7;
    basic_string_23d93216 *_field8;
    unsigned long long _field9;
    struct CellRegion *_field10;
    unsigned long long _field11;
    unsigned long long _field12;
    float _field13;
};

struct StructuredTextImportSettings {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    RepeatedPtrField_236b8a23 _field7;
    RepeatedPtrField_236b8a23 _field8;
    RepeatedPtrField_236b8a23 _field9;
    RepeatedPtrField_236b8a23 _field10;
    struct IndexSet *_field11;
    unsigned long long _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct StyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    basic_string_23d93216 *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
};

struct StyleBaseCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct StyleCreateCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
};

struct StyleDeleteCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
};

struct StyleDiffArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CharacterStylePropertyChangeSetArchive *_field6;
    struct ParagraphStylePropertyChangeSetArchive *_field7;
    struct ShapeStylePropertyChangeSetArchive *_field8;
};

struct StyleOwnerPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct StyleRenameCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    basic_string_23d93216 *_field6;
    basic_string_23d93216 *_field7;
};

struct StyleReorderCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct StyleSwapUndoTupleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct UUID *_field10;
};

struct StyleSwapUndoTuplesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a96af6e2 _field5;
};

struct StyledInfoSetStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct StylesheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field6;
    struct Reference *_field7;
    struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> _field8;
    _Bool _field9;
    _Bool _field10;
};

struct SubContext;

struct SummaryCellVendorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct RepeatedPtrField<TST::SummaryCellVendorArchive_SummaryCellEntry> _field6;
};

struct SummaryModelGroupByChangeStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct RepeatedField<double> _field6;
    struct RepeatedField<double> _field7;
    RepeatedField_27dfe32f _field8;
};

struct TCDumpEnumPair {
    int _field1;
    id _field2;
};

struct TCEnumerationStruct {
    int _field1;
    id _field2;
};

struct TCFontStyling {
    int fontClass;
    unsigned int stringEncoding;
    char weight;
    char italic;
    int width;
};

struct TCStrokeMatrix {
    struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> _field1;
    struct {
        unsigned int _field1;
        unsigned int _field2;
    } _field2;
};

struct TCXmlEnumDescription {
    int _field1;
    char *_field2;
};

struct TOCAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableAttachmentArchive *_field5;
};

struct TOCEntryInstanceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_23d93216 *_field7;
    struct Reference *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct Reference *_field11;
    basic_string_23d93216 *_field12;
    unsigned int _field13;
};

struct TOCEntryStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStyleArchive *_field5;
    struct TOCEntryStylePropertiesArchive *_field6;
};

struct TOCEntryStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
    _Bool _field7;
};

struct TOCEntryStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStylePropertyChangeSetArchive *_field5;
    struct SpecBoolArchive *_field6;
    struct SpecCharacterStyleArchive *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct TOCInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    RepeatedPtrField_c67bb210 _field8;
};

struct TOCLayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
};

struct TOCSettingsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> _field6;
    unsigned int _field7;
};

struct TPCenteredSingleAlternativePageRestorationState {
    struct CGPoint contentCenterToRestore;
    struct CGPoint contentOffsetToRestore;
    double viewScaleToRestore;
    unsigned long long pageIndexToRestore;
    struct CGRect initialUnobscuredScrollViewFrame;
};

struct TPSectionEnumerator {
    id _field1;
    unsigned long long _field2;
    struct _NSRange _field3;
    struct _NSRange _field4;
};

struct TSAPasteboardImagingArguments {
    id _field1;
    id _field2;
    char _field3;
    id _field4;
    struct CGImage *_field5;
};

struct TSCEASTNodeArray {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct TSCEASTNodeArrayChunk;

struct TSCEAbstractVector;

struct TSCEAnyRef {
    unsigned short _refType;
    struct TSCESpanningRangeRef _spanningRef;
    _Bool _couldBeIntersection;
    TSCEReferenceSetWrapper *_refSet;
};

struct TSCEBitGrid {
    struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> _tiles;
    unsigned long long _count;
    unsigned long long _lastTileFoundAtIndex;
    struct unordered_map<unsigned int, TSUIndexSet *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSUIndexSet *>>> _bitsInColumn;
};

struct TSCEBitGridTile;

struct TSCEBitGridTransaction {
    struct TSCEBitGrid *_field1;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field2;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field3;
};

struct TSCEBooleanValue {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct TSCEFormat _field3;
};

struct TSCECalcEngine {
    id _field1;
    id _field2;
    struct TSCEDependencyTracker *_field3;
    id _field4;
    id _field5;
    int _field6;
    struct _opaque_pthread_mutex_t _field7;
    char _field8;
    int _field9;
    id _field10;
    char _field11;
    double _field12;
    id _field13;
    id _field14;
    id _field15;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _field16;
    unordered_set_c6a929bd _field17;
    struct vector<TSCERecalcPhaseState *, std::__1::allocator<TSCERecalcPhaseState *>> _field18;
    struct TSCEInternalCellRefSet _field19;
    struct TSCECellRefSet _field20;
    struct _opaque_pthread_mutex_t _field21;
    char _field22;
    char _field23;
    struct os_unfair_lock_s _field24;
    struct TSCERefResolverMap _field25;
    id _field26;
    unsigned long long _field27;
    id _field28;
    id _field29;
    id _field30;
    unsigned long long _field31;
    id _field32;
    id _field33;
    id _field34;
    int _field35;
    id _field36;
    id _field37;
    id _field38;
    id _field39;
    char _field40;
    id _field41;
    id _field42;
    id _field43;
    id _field44;
    id _field45;
    char _field46;
    char _field47;
    id _field48;
    id _field49;
    id _field50;
    id _field51;
    char _field52;
    char _field53;
    id _field54;
    id _field55;
};

struct TSCECategoryRef {
    UUIDData_5fbc143e _groupByUid;
    UUIDData_5fbc143e _columnUid;
    UUIDData_5fbc143e _relativeGroupUid;
    UUIDData_5fbc143e _absoluteGroupUid;
    unsigned char _aggType;
    unsigned char _groupLevel;
    struct TSUPreserveFlags _preserveFlags;
    short _relativeColumn;
};

struct TSCECellCoordSet {
    struct unordered_map<unsigned short, TSUIndexSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> _field1;
};

struct TSCECellCoordToReferringColumnRefs {
    struct unordered_map<TSUCellCoord, TSCECombinedColumnRefs, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCECombinedColumnRefs>>> _field1;
};

struct TSCECellDependencies {
    struct TSCEDependencyTracker *_field1;
    struct vector<TSCECellRecordTile *, std::__1::allocator<TSCECellRecordTile *>> _field2;
    unsigned long long _field3;
    struct TSCEBitGrid _field4;
    struct TSCEBitGrid _field5;
    struct TSCEBitGrid _field6;
    struct TSCEBitGrid _field7;
    struct TSCEBitGrid _field8;
    UUIDData_5fbc143e _field9;
    unsigned short _field10;
    int _field11;
    _Bool _field12;
    struct TSCECellRecordList *_field13;
};

struct TSCECellRecordList;

struct TSCECellRecordTile;

struct TSCECellRef {
    struct TSUCellCoord coordinate;
    UUIDData_5fbc143e _tableUID;
};

struct TSCECellRefSet {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> _field1;
};

struct TSCECrossTableReference {
    struct TSCERelativeCellCoordinate _relativeCoord;
    UUIDData_5fbc143e _tableUID;
    struct TSUPreserveFlags _preserveFlags;
};

struct TSCEDateValue {
    CDUnknownFunctionPointerType *_vptr$TSCEAbstractValue;
    NSDate *mDate;
    struct TSCEFormat mFormat;
};

struct TSCEDecimal {
    struct {
        unsigned long long w[2];
    } _decimal;
};

struct TSCEDependencyTracker;

struct TSCEErrorValue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct TSCEEvalRef {
    struct TSCETableResolver *_field1;
    struct TSUCellTractRef _field2;
};

struct TSCEEvaluationContext {
    struct TSCEEvaluationStack _field1;
    id _field2;
    id _field3;
    char _field4;
    char _field5;
    char _field6;
    struct TSCEWarningReportingContext _field7;
    UUIDData_5fbc143e _field8;
    struct TSUCellCoord _field9;
    struct TSCEValueBindingEnvironment _field10;
    struct TSCESymbolTable _field11;
    UUIDData_5fbc143e _field12;
    id _field13;
    char _field14;
    struct TSCEReferenceSet _field15;
    struct TSCERandGenerator *_field16;
    id _field17;
};

struct TSCEEvaluationStack {
    vector_a1208d01 _field1;
    int _field2;
};

struct TSCEFormat {
    struct TSCEFormatStruct _formatStruct;
    unsigned char _formatState;
};

struct TSCEFormatStruct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
    } ;
    TSKDateTimeFormat *_dateTimeFormat;
    TSKCustomFormatWrapper *_customFormatWrapper;
    TSKBooleanFormat *_booleanFormat;
};

struct TSCEFormula {
    struct TSCEASTNodeArray *_astNodeArray;
    struct TSCEFormulaTranslationFlags _translationFlags;
    UUIDData_5fbc143e _hostTableUID;
    UUIDData_5fbc143e _hostColumnUID;
    UUIDData_5fbc143e _hostRowUID;
};

struct TSCEFormulaContainingCell {
    struct TSCECellRef _field1;
    struct TSCECellRef _field2;
    _Bool _field3;
    _Bool _field4;
};

struct TSCEFormulaCreator {
    CDUnknownBlockType _field1;
};

struct TSCEFormulaRewriteContextRecord;

struct TSCEFormulaTranslationFlags {
    unsigned char _flags;
};

struct TSCEFunctionArgSpec {
    int _argumentType;
    int _accessorMode;
    unsigned char _rangeContext;
    int _argumentContext;
    unordered_set_07fa9bdb _disallowedTypes;
    vector_a1208d01 _modeValues;
    short _defaultModeIndex;
    TSCEFunctionSpec *_functionSpec;
    double _minValue;
    double _maxValue;
    short _index;
    char _minInclusive;
    char _maxInclusive;
    char _disallowDuration;
    char _disallowCurrency;
    char _isInteger;
    char _forceArrayMode;
    char _referenceForGeometryOnly;
};

struct TSCEFunctor {
    struct TSCEFormula _formula;
    unsigned char _numArgs;
};

struct TSCEInternalCellRefSet {
    struct unordered_map<unsigned short, TSCECellCoordSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCECellCoordSet>>> _field1;
};

struct TSCEInternalCellReference {
    struct TSUCellCoord _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct TSCENamedReferenceTrieNode {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> _trackedReferencesByOwner;
    struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> _children;
};

struct TSCENumberValue {
    CDUnknownFunctionPointerType *_vptr$TSCEAbstractValue;
    double _double;
    int _baseUnits[1];
    struct TSCEFormat _format;
    char _isUnitlessZero;
};

struct TSCERandGenerator;

struct TSCERangeCoordinate {
    struct TSUCellCoord _topLeft;
    struct TSUCellCoord _bottomRight;
};

struct TSCERangeDependencies {
    struct TSCEDependencyTracker *_field1;
    unsigned short _field2;
    struct RTree<unsigned int, 2, double, 8, 4> _field3;
    struct unordered_multimap<TSUCellCoord, TSCEInternalRangeReference, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCEInternalRangeReference>>> _field4;
};

struct TSCERangeRef {
    struct TSCERangeCoordinate range;
    UUIDData_5fbc143e _tableUID;
};

struct TSCERecalcPhaseState;

struct TSCERefErrors {
    struct TSCEDependencyTracker *_field1;
    unsigned short _field2;
    struct unordered_map<TSUCellCoord, TSCERefErrorCell, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERefErrorCell>>> _field3;
};

struct TSCERefResolverMap {
    struct _opaque_pthread_mutex_t _field1;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> _field2;
    char _field3;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> _field4;
    struct vector<TSCETableResolver *, std::__1::allocator<TSCETableResolver *>> _field5;
};

struct TSCEReferenceSet {
    struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> _field1;
    unordered_set_c6a929bd _field2;
    unordered_set_c6a929bd _field3;
    unordered_set_c6a929bd _field4;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> _field5;
    struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> _field6;
    struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> _field7;
    struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> _field8;
    struct TSCEDependencyTracker *_field9;
};

struct TSCEReferenceValue {
    CDUnknownFunctionPointerType *_field1;
    struct TSCEEvalRef _field2;
    struct TSUCellCoord _field3;
    struct shared_ptr<TSCEValue> _field4;
    _Bool _field5;
    char _field6;
    struct TSUPreserveFlags _field7;
    _Bool _field8;
    struct TSCEWarningReportingContext *_field9;
};

struct TSCERegionNode {
    unsigned long long _field1;
    struct TSCERegionNode *_field2;
    void *_field3;
};

struct TSCERelativeCellCoordinate {
    int row;
    short column;
    char _preserveRow;
    char _preserveColumn;
};

struct TSCERelativeCellRef {
    struct TSCERelativeCellCoordinate relativeCoord;
    UUIDData_5fbc143e tableUID;
    unsigned int preserveColumn:1;
    unsigned int preserveRow:1;
    unsigned int isSpanningColumn:1;
    unsigned int isSpanningRow:1;
};

struct TSCEReplaceFormulaOptions {
    id _field1;
    _Bool _field2;
    _Bool _field3;
};

struct TSCESpanningDependencies {
    struct TSCEDependencyTracker *_field1;
    UUIDData_5fbc143e _field2;
    unsigned short _field3;
    _Bool _field4;
    struct TSCERangeCoordinate _field5;
    struct TSCERangeCoordinate _field6;
    struct TSCERangeCoordinate _field7;
    struct TSCERangeCoordinate _field8;
    struct TSCECellCoordToReferringColumnRefs _field9;
    struct unordered_map<TSCEColumnRangeContextPair, TSCECellCoordSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCECellCoordSet>>> _field10;
    struct unordered_map<TSCEColumnRangeContextPair, TSCEInternalCellRefSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> _field11;
};

struct TSCESpanningRangeRef {
    struct TSCERangeRef rangeRef;
    unsigned char rangeContext;
};

struct TSCEStringValue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSCEFormat _field3;
};

struct TSCESymbolTable {
    id _field1;
    unsigned int _field2;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field3;
    struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> _field4;
    struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> _field5;
};

struct TSCETableResolver {
    CDUnknownFunctionPointerType *_field1;
};

struct TSCETaggedDouble;

struct TSCETaggedDoubleList {
    struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> _list;
    unsigned long long _startIdx;
    unsigned long long _size;
};

struct TSCEValue {
    unsigned long long mBuff[18];
    int mType;
};

struct TSCEValueBindingEnvironment {
    struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> _field1;
    struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> _field2;
};

struct TSCEVector {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSCEFormat _field3;
};

struct TSCEVectorIndexPair {
    unsigned int column;
    unsigned int row;
};

struct TSCEVolatileDependencies {
    struct TSCEDependencyTracker *_field1;
    UUIDData_5fbc143e _field2;
    unsigned short _field3;
    struct TSCECellCoordSet _field4;
    struct TSCECellCoordSet _field5;
    struct TSCECellCoordSet _field6;
    struct TSCECellCoordSet _field7;
    struct TSCECellCoordSet _field8;
    struct TSCECellCoordSet _field9;
    struct TSCECellCoordSet _field10;
    struct TSCECellCoordSet _field11;
    struct unordered_map<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet, TSCE::TSCERemoteDataSpecifierHash, TSCE::TSCERemoteDataSpecifierEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> _field12;
    struct unordered_map<TSUCellCoord, TSCERemoteDataSpecifierSet *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERemoteDataSpecifierSet *>>> _field13;
    struct TSCEInternalCellRefSet _field14;
    struct unordered_multimap<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> _field15;
};

struct TSCEWarningReportingContext {
    char _field1;
    char _field2;
    id _field3;
};

struct TSCEWholeOwnerDependencies {
    struct TSCEDependencyTracker *_field1;
    unsigned short _field2;
    struct TSCEInternalCellRefSet _field3;
    struct unordered_multimap<TSUCellCoord, unsigned short, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, unsigned short>>> _field4;
    struct TSCEInternalCellRefSet *_field5;
};

struct TSCH3DChartRotationLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    struct CGSize layoutSize;
    struct CGSize requestLayoutSize;
    struct CGSize chartBodyLayoutSize;
    struct CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_6d1c4171 layoutSettings;
    char forcedValid;
};

struct TSCH3DGLTextureFormat {
    int _field1;
};

struct TSCH3DOpenGLLayerFramebufferDrawInfo {
    id _field1;
    struct _CGLContextObject *_field2;
    id _field3;
    char _field4;
};

struct TSCH3DPrecalculatedLayoutCacheType {
    int platform;
    int target;
    char isLandscape;
    struct CGRect requestedSwatchFrame;
};

struct TSCH3DScenePart {
    id _field1;
    id _field2;
};

struct TSCH3DShaderType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopeType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> mScopes;
};

struct TSCH3DTouchPoint {
    struct CGPoint _field1;
    double _field2;
};

struct TSCHChartAnalyticsModelSize {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct TSCHChartPieLabelGeometries {
    struct TSCHChartPieLabelGeometry _field1;
    struct TSCHChartPieLabelGeometry _field2;
};

struct TSCHChartPieLabelGeometry {
    struct CGAffineTransform _field1;
    struct CGSize _field2;
    struct CGRect _field3;
    struct CGRect _field4;
};

struct TSCHChartPieLabelRects {
    struct CGRect _field1;
    struct CGRect _field2;
};

struct TSCHChartPieWedgeElementLayoutSystem {
    long long coordinateSpace;
    struct CGPoint centerPoint;
};

struct TSCHLegendAnchorLine {
    struct CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSCHTextLayoutResults {
    struct CGRect _field1;
    double _field2;
    char _field3;
};

struct TSKCursorInRevision;

struct TSKCursorInRevisionComparator;

struct TSTCSENodeData {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :32;
    } _field1;
    unsigned char _field2[0];
};

struct TSTCellUID {
    UUIDData_5fbc143e _column;
    UUIDData_5fbc143e _row;
};

struct TSTColumnOrRowMap {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    char _field4;
};

struct TSTDurationWrapper {
    double timeInterval;
    CDStruct_b1177b60 durationFormat;
};

struct TSTEditingStateTappedColumnReference {
    struct TSUChromeColumnIndex chromeColumnIndex;
    UUIDData_5fbc143e columnUID;
};

struct TSTGroupingLevelAndType;

struct TSTImportFormulaWarning {
    long long mType;
    NSString *mOriginalFormula;
    NSString *mSupplementaryText;
};

struct TSTImportWarningSetCellWarningFlags {
    unsigned int mCondFormatAboveAvgEqualAverageImportWarning:1;
    unsigned int mCondFormatAboveAvgStdDevImportWarning:1;
    unsigned int mCondFormatComplexFormulaImportWarning:1;
    unsigned int mCondFormatContainsErrorsImportWarning:1;
    unsigned int mCondFormatExprImportWarning:1;
    unsigned int mCondFormatNotContainsErrorsImportWarning:1;
    unsigned int mCondFormatParametersNotAllTheSameTypeImportWarning:1;
    unsigned int mCondFormatStopIfTrueImportWarning:1;
    unsigned int mCondFormatUnsupportedOperatorImportWarning:1;
    unsigned int mCondFormatUnsupportedStylingImportWarning:1;
    unsigned int mCondFormatUnsupportedTimePeriodImportWarning:1;
    unsigned int mUnsupportedConditionalFormatImportWarning:1;
    unsigned int mUnsupportedDataFormatImportWarning:1;
};

struct TSTPlanForGroupingCell {
    unsigned short _field1;
    struct vector<TSTGroupingLevelAndType, std::__1::allocator<TSTGroupingLevelAndType>> _field2;
};

struct TSTSimpleRange {
    long long origin;
    unsigned long long length;
};

struct TSTStrokeLayerRun;

struct TSTTableRBTreeNode_s {
    unsigned int _field1;
    unsigned short _field2;
    struct TSTTableRBTreeNode_s *_field3;
    struct TSTTableRBTreeNode_s *_field4;
    struct TSTTableRBTreeNode_s *_field5;
    char _field6;
};

struct TSTTokenMargin {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSUCellCoord {
    unsigned int row;
    unsigned short column;
    char _preserveRow;
    char _preserveColumn;
};

struct TSUCellRect {
    struct TSUCellCoord origin;
    CDStruct_0ff8cf90 size;
};

struct TSUCellTractRef {
    struct TSUIndexSet _columns;
    struct TSUIndexSet _rows;
    UUIDData_5fbc143e _tableUID;
    unsigned char _spanType;
    struct TSUPreserveFlags _preserveFlags;
    char _preserveRectangular;
    char _mixedColumnStartedWithPreserve;
    char _mixedRowStartedWithPreserve;
};

struct TSUChromeCellCoord {
    struct TSUCellCoord _field1;
};

struct TSUChromeColumnIndex {
    unsigned short _column;
};

struct TSUChromeRowIndex {
    unsigned int _field1;
};

struct TSUColumnRowOffset {
    int columnOffset;
    int rowOffset;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUIndexRange {
    long long _begin;
    long long _end;
};

struct TSUIndexRangeStruct {
    long long _field1;
    long long _field2;
};

struct TSUIndexSet {
    unsigned int _isEmpty:1;
    unsigned int _hasSingleRange:1;
    struct TSUIndexRange _singleRange;
    CDStruct_183601bc *_multipleRanges;
};

struct TSUModelCellCoord {
    struct TSUCellCoord _coord;
};

struct TSUModelCellRect {
    struct TSUCellRect _field1;
};

struct TSUModelColumnIndex {
    unsigned short _column;
};

struct TSUModelColumnOrRowIndex {
    unsigned int _field1;
};

struct TSUModelRowIndex {
    unsigned int _row;
};

struct TSUOpstat_s {
    char running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSUPointerKeyDictionary {
    Class _field1;
    struct __CFDictionary *_field2;
};

struct TSUPreserveFlags {
    unsigned char _flags;
};

struct TSUViewCellCoord {
    struct TSUCellCoord _field1;
};

struct TSUViewCellRect {
    struct TSUCellRect _field1;
};

struct TSUViewColumnIndex {
    unsigned short _column;
};

struct TSUViewColumnOrRowIndex {
    unsigned int _field1;
};

struct TSUViewRowIndex {
    unsigned int _field1;
};

struct TSWPAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
};

struct TSWPAttributeEnumerator {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeArray *_field5;
    char _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct TSWPAttributeRecord _field9;
};

struct TSWPAttributeRecord {
    unsigned long long _field1;
    id _field2;
    struct TSWPParagraphData _field3;
};

struct TSWPChangeAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    _Bool _field9;
    id _field10;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
    struct CGColor *_field7;
    double _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    char _field17;
    id _field18;
    id _field19;
    struct _NSRange _field20;
    id _field21;
    id _field22;
    struct _NSRange _field23;
    struct _NSRange _field24;
    unsigned long long _field25;
    struct _NSRange _field26;
    id _field27;
    id _field28;
};

struct TSWPLineFragment {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    double _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    CDStruct_5b0a1db3 _field8;
    id _field9;
    id _field10;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field11;
    double _field12;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
    id _field21;
    id _field22;
    unsigned int _field23;
    double _field24;
    id _field25;
    id _field26;
    id _field27;
    id _field28;
    id _field29;
    unsigned int _field30;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field31;
    id _field32;
    double _field33;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef;

struct TSWPMarkers {
    struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct TSWPParagraphAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    struct TSWPParagraphAttributeArray *_field12;
    unsigned long long _field13;
};

struct TSWPParagraphData {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
};

struct TSWPParagraphEnumerator {
    TSWPStorage *_storage;
    NSObject *_styleProvider;
    unsigned long long _parIndex;
    unsigned long long _endParIndex;
    unsigned long long _firstParIndex;
    unsigned long long _lastParIndex;
    _Bool _requireHidden;
    struct _NSRange _currentTextRange;
};

struct TSWPParagraphMetrics {
    _Bool _field1;
    struct CGSize _field2;
    unsigned long long _field3;
    double _field4;
};

struct TSWPParagraphTypesetter;

struct TSWPStorageAction {
    int _field1;
    unsigned int _field2;
    int _field3;
    struct _NSRange _field4;
    id _field5;
    id _field6;
};

struct TSWPStorageActionBuilder {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    vector_e5fc8613 *_field9;
    struct TSWPStorageAction *_field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    unsigned int _field14;
    unsigned long long _field15;
};

struct TSWPStorageActionGroup {
    int _field1;
    vector_e5fc8613 _field2;
    vector_e5fc8613 _field3;
    vector_e5fc8613 _field4;
    vector_e5fc8613 _field5;
    _Bool _field6;
    struct TSWPMarkers _field7;
};

struct TSWPStorageActionRunner {
    struct TSWPStorageActionState *_field1;
    _Bool _field2;
};

struct TSWPStorageActionState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    vector_e5fc8613 *_field9;
    struct TSWPStorageAction *_field10;
    _Bool _field11;
    _Bool _field12;
};

struct TSWPStorageChangeRange;

struct TSWPStorageParagraphIndexChange;

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct TSWPStorageActionGroup _field6;
    unsigned int _field7;
    unsigned long long _field8;
    struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> _field9;
    struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> _field10;
    struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    _Bool _field14;
    id _field15;
    vector_e5fc8613 _field16;
    vector_e5fc8613 _field17;
};

struct TSWPStorageTransactionObject {
    unsigned short _field1;
    union {
        unsigned int _field1;
        unsigned int _field2;
    } _field2;
    union {
        CDStruct_3144a3ae _field1;
        CDStruct_3144a3ae _field2;
        CDStruct_3144a3ae _field3;
        CDStruct_3144a3ae _field4;
        CDStruct_3144a3ae _field5;
        CDStruct_3144a3ae _field6;
        struct {
            unsigned int _field1;
            unsigned int _field2;
            int _field3;
        } _field7;
        struct {
            unsigned int _field1;
            struct TSWPParagraphData _field2;
            unsigned int _field3;
        } _field8;
        CDStruct_3144a3ae _field9;
        struct {
            unsigned int _field1;
            id _field2;
            unsigned int _field3;
        } _field10;
    } _field3;
};

struct TabArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    int _field6;
    basic_string_23d93216 *_field7;
};

struct TableCellStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecBoolArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecFillArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct SpecIntegerArchive *_field13;
    struct SpecPaddingArchive *_field14;
};

struct TableCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    basic_string_23d93216 *_field7;
    struct Reference *_field8;
    double _field9;
    unsigned int _field10;
    unsigned int _field11;
    double _field12;
    unsigned long long _field13;
    _Bool _field14;
};

struct TableCommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandSelectionBehaviorArchive *_field5;
    struct Reference *_field6;
    struct UUID *_field7;
    unsigned int _field8;
};

struct TableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct UUID *_field11;
    struct UUID *_field12;
    unsigned int _field13;
};

struct TableRBTree;

struct TableSortOrderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    int _field6;
};

struct TableSortOrderUIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TableSortOrderUIDArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderUIDArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    int _field6;
};

struct TableStrokePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct TableStyleNetworkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    struct Reference *_field16;
    struct Reference *_field17;
    struct Reference *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    struct Reference *_field24;
    struct Reference *_field25;
    struct Reference *_field26;
    struct Reference *_field27;
    struct Reference *_field28;
    struct Reference *_field29;
    struct Reference *_field30;
    struct Reference *_field31;
    struct Reference *_field32;
    struct Reference *_field33;
    struct Reference *_field34;
    struct Reference *_field35;
    unsigned int _field36;
};

struct TableStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    int _field7;
};

struct TableStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct FillArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    struct Deprecated_TableStrokeArchive *_field8;
    struct Deprecated_TableStrokeArchive *_field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct Deprecated_TableStrokeArchive *_field12;
    struct Deprecated_TableStrokeArchive *_field13;
    struct Deprecated_TableStrokeArchive *_field14;
    struct Deprecated_TableStrokeArchive *_field15;
    struct Deprecated_TableStrokeArchive *_field16;
    struct Deprecated_TableStrokeArchive *_field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    struct Deprecated_TableStrokeArchive *_field26;
    struct Deprecated_TableStrokeArchive *_field27;
    struct Deprecated_TableStrokeArchive *_field28;
    struct Deprecated_TableStrokeArchive *_field29;
    struct StrokePresetListArchive *_field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    basic_string_23d93216 *_field36;
    int _field37;
    int _field38;
    struct StrokeArchive *_field39;
    struct StrokeArchive *_field40;
    struct StrokeArchive *_field41;
    struct StrokeArchive *_field42;
    struct StrokeArchive *_field43;
    struct StrokeArchive *_field44;
    struct StrokeArchive *_field45;
    struct StrokeArchive *_field46;
    struct StrokeArchive *_field47;
    struct StrokeArchive *_field48;
    struct StrokeArchive *_field49;
    struct StrokeArchive *_field50;
    struct StrokeArchive *_field51;
    struct StrokeArchive *_field52;
    struct StrokeArchive *_field53;
    struct StrokeArchive *_field54;
    struct StrokeArchive *_field55;
    struct StrokeArchive *_field56;
    struct StrokeArchive *_field57;
    struct StrokeArchive *_field58;
    struct StrokeArchive *_field59;
    struct StrokeArchive *_field60;
    struct StrokeArchive *_field61;
    struct StrokeArchive *_field62;
    struct StrokeArchive *_field63;
    struct StrokeArchive *_field64;
    struct StrokeArchive *_field65;
    struct StrokeArchive *_field66;
    struct StrokeArchive *_field67;
    struct StrokeArchive *_field68;
    struct StrokeArchive *_field69;
    struct StrokeArchive *_field70;
    struct StrokeArchive *_field71;
    struct StrokeArchive *_field72;
    struct StrokeArchive *_field73;
    struct StrokeArchive *_field74;
};

struct TableStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[4];
    struct SpecBoolArchive *_field4;
    struct SpecBoolArchive *_field5;
    struct SpecFillArchive *_field6;
    struct SpecBoolArchive *_field7;
    struct SpecStrokeArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecStrokeArchive *_field17;
    struct SpecStrokeArchive *_field18;
    struct SpecStrokeArchive *_field19;
    struct SpecStrokeArchive *_field20;
    struct SpecStrokeArchive *_field21;
    struct SpecStrokeArchive *_field22;
    struct SpecStrokeArchive *_field23;
    struct SpecStrokeArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecStrokeArchive *_field33;
    struct SpecStrokeArchive *_field34;
    struct SpecStrokeArchive *_field35;
    struct SpecStrokeArchive *_field36;
    struct SpecStrokeArchive *_field37;
    struct SpecStrokeArchive *_field38;
    struct SpecStrokeArchive *_field39;
    struct SpecTableStrokePresetListArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecBoolArchive *_field49;
    struct SpecBoolArchive *_field50;
    struct SpecBoolArchive *_field51;
    struct SpecBoolArchive *_field52;
    struct SpecBoolArchive *_field53;
    struct SpecBoolArchive *_field54;
    struct SpecBoolArchive *_field55;
    struct SpecBoolArchive *_field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    struct SpecBoolArchive *_field65;
    struct SpecStringArchive *_field66;
    struct SpecIntegerArchive *_field67;
    struct SpecStrokeArchive *_field68;
    struct SpecStrokeArchive *_field69;
    struct SpecStrokeArchive *_field70;
    struct SpecStrokeArchive *_field71;
    struct SpecStrokeArchive *_field72;
    _Bool _field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    struct SpecStrokeArchive *_field81;
    struct SpecStrokeArchive *_field82;
    struct SpecStrokeArchive *_field83;
    struct SpecStrokeArchive *_field84;
    struct SpecStrokeArchive *_field85;
    struct SpecStrokeArchive *_field86;
    struct SpecStrokeArchive *_field87;
    struct SpecStrokeArchive *_field88;
    _Bool _field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
    _Bool _field94;
    _Bool _field95;
    _Bool _field96;
    struct SpecStrokeArchive *_field97;
    struct SpecStrokeArchive *_field98;
    struct SpecStrokeArchive *_field99;
    struct SpecStrokeArchive *_field100;
    struct SpecStrokeArchive *_field101;
    struct SpecStrokeArchive *_field102;
    struct SpecStrokeArchive *_field103;
    _Bool _field104;
    _Bool _field105;
    _Bool _field106;
    _Bool _field107;
    int _field108;
};

struct TableSubSelectionTransformerBaseArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
};

struct TableTransposeInfoArchive;

struct TabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::TabArchive> _field5;
};

struct TargetHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct Size *_field6;
    struct Range *_field7;
    struct Range *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct DoublePoint *_field11;
    struct DoubleSize *_field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TexCoordTilingShaderEffectState {
    struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> _field1;
};

struct TextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UndoTransaction *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    int _field13;
};

struct TextPresetDisplayItemArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_23d93216 *_field6;
};

struct TextRun;

struct TextStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct TextualAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    int _field6;
};

struct TextureAttributes {
    int object;
    int format;
    char mipmap;
    char repeat;
    char nearest;
    long long unit;
    struct TextureSizeHint textureSizeHint;
    char is3DTexture;
};

struct TextureCoordinateConverter {
    box_80622335 _field1;
};

struct TextureSizeHint {
    int loadOptimizedMipmaps;
    tvec2_3b141483 sizeLODHint;
};

struct TextureUnitStates {
    struct UpdatableValue<unsigned long> activeTexture;
    struct array<TSCH3D::GLSingleState, 4> states;
};

struct TextureVariables {
    id _field1;
    id _field2;
    id _field3;
};

struct TileFramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct TileRowInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_23d93216 *_field7;
    basic_string_23d93216 *_field8;
    basic_string_23d93216 *_field9;
    basic_string_23d93216 *_field10;
    unsigned int _field11;
};

struct TileStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TileStorage_Tile> _field5;
};

struct TokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
    struct Reference *_field6;
};

struct TopicNumberHintsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::TopicNumberEntryArchive> _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct TrackedReferenceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive *_field5;
    unsigned int _field6;
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    _Bool _field5;
};

struct UID {
    unsigned char _field1[16];
};

struct UIGraphicalAttachment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct UIStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct Point *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    float _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct Size *_field12;
    struct RepeatedPtrField<TSCH::ChartUIState> _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    int _field18;
    struct Point *_field19;
    struct Size *_field20;
    float _field21;
    unsigned int _field22;
    basic_string_23d93216 *_field23;
    float _field24;
    float _field25;
    struct SelectionPathArchive *_field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    struct SelectionPathArchive *_field32;
    basic_string_23d93216 *_field33;
    _Bool _field34;
    _Bool _field35;
    int _field36;
    struct Reference *_field37;
    struct Reference *_field38;
    float _field39;
    int _field40;
};

struct UUID {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct UUIDCoordArchive;

struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
};

struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct UUIDMapArchive;

struct UUIDPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct UUIDRect<TSP::UUIDRect> {
    vector_4dc5f307 _colIdList;
    vector_4dc5f307 _rowIdList;
};

struct UUIDRectArchive;

struct UUIDSet<TSP::UUIDSet> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
};

struct UnarchiverReference;

struct UnarchiverRepeatedReference;

struct UndoObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    RepeatedPtrField_236b8a23 _field7;
    RepeatedField_27dfe32f _field8;
};

struct UndoTransaction;

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> *fields_;
};

struct UpdatableValue<unsigned int> {
    unsigned int value;
};

struct UpdatableValue<unsigned long> {
    unsigned long long value;
};

struct UpdateCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct CustomFormatArchive *_field7;
    struct UUID *_field8;
};

struct UpdateDateTimeFieldCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TextCommandArchive *_field5;
    struct Reference *_field6;
    struct Date *_field7;
    int _field8;
    int _field9;
};

struct UpdateFlowInfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct UUIDPath *_field7;
    RepeatedPtrField_0a3269f6 _field8;
    RepeatedPtrField_0a3269f6 _field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    struct Reference *_field11;
    struct Reference *_field12;
    int _field13;
};

struct UuidReferenceMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> _field5;
};

struct UuidSetStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> _field5;
};

struct UuidSetStoreArchive_UuidSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    unsigned int _field6;
};

struct VAOLoadResult {
    char _field1;
    char _field2;
    id _field3;
};

struct ValueEnumerator {
    char mForward;
    unsigned long long mIndex;
    unsigned long long mMax;
    double mValue;
};

struct VariableNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_23d93216 *_field6;
    unsigned int _field7;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct VerifyDocumentWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
};

struct VerifyDrawableZOrdersWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct VerifyObjectsWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct ViewStateMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
};

struct WBDrawingWriterInfo {
    struct WBTextStreamWriterInfo _field1;
    struct WBTextStreamWriterInfo _field2;
    id _field3;
    id _field4;
    struct WrdStoryTable *_field5;
    struct WrdFileShapeAddressTable *_field6;
    struct map<int, WrdStory *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, WrdStory *>>> _field7;
    struct map<WrdStory *, unsigned short, std::__1::less<WrdStory *>, std::__1::allocator<std::__1::pair<WrdStory *const, unsigned short>>> _field8;
    unsigned short _field9;
};

struct WBParagraphReadState {
    int _field1;
    int _field2;
    int _field3;
    struct WrdFieldPosition *_field4;
    int _field5;
    int _field6;
    vector_12da65de _field7;
    int _field8;
    int _field9;
    vector_12da65de _field10;
};

struct WBPicturesOfficeArtState {
    unsigned int _field1;
    unsigned int _field2;
};

struct WBTextBoxReaderInfo {
    id _field1;
    unsigned short _field2;
};

struct WBTextStreamWriterInfo {
    int _field1;
    int _field2;
    unsigned int _field3;
    id _field4;
    id _field5;
};

struct WHCCol;

struct WHCRow;

struct WITDrawablePosition {
    int _field1;
    double _field2;
    int _field3;
    double _field4;
};

struct WITFieldDescription {
    int code;
    NSString *name;
    NSString *switches;
};

struct WITOfficeArtAttachmentState {
    char _field1;
    char _field2;
    int _field3;
    int _field4;
    long long _field5;
    id _field6;
    id _field7;
    id _field8;
};

struct WITWPDrawableAttachment;

struct WPTableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableInfoArchive *_field5;
    struct Reference *_field6;
};

struct WrdAnnotation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    struct WrdAnnotationReferenceDescriptor *_field5;
    struct WrdDateTime *_field6;
};

struct WrdAnnotationReferenceDescriptor;

struct WrdAnnotationTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdAnnotation *> _field2;
};

struct WrdAutoNumberListDescriptor;

struct WrdAutoSummaryInfo;

struct WrdBinTable;

struct WrdBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct EshObjectFactory *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct WrdParser *_field5;
    struct WrdEshReader _field6;
    struct WrdRdrText *_field7;
    struct WrdBinTable *_field8;
    struct WrdPAPXFKP *_field9;
    unsigned int _field10;
    struct WrdBinTable *_field11;
    struct WrdCHPXFKP *_field12;
    unsigned int _field13;
    int _field14;
    struct WrdSectionDescriptorTable *_field15;
    struct WrdStyleSheet *_field16;
    struct WrdEmbeddedTTFRecordTable *_field17;
    struct WrdDocumentFileRecord *_field18;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field19[8];
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field20[8];
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    struct WrdText _field26;
    struct WrdEmbeddedTrueTypeFont *_field27;
};

struct WrdBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct __sFILE *_field5;
    struct WrdRecordWriter *_field6;
    struct WrdEshWriter _field7;
    struct SsrwOORootStorage *_field8;
    struct SsrwOOStream *_field9;
    struct SsrwOOStream *_field10;
    struct SsrwOOStream *_field11;
    struct SsrwOOStorage *_field12;
    struct WrdFileInformationBlock *_field13;
    _Bool _field14;
    int _field15;
    int _field16;
    _Bool _field17;
    unsigned short _field18;
    int _field19;
    int _field20;
    struct WrdBinTable *_field21;
    _Bool _field22;
    _Bool _field23;
    char *_field24;
    struct WrdFormattedDiskPage *_field25;
    unsigned int _field26;
    struct ChVector<int> _field27;
    struct ChVector<int> _field28;
    unsigned int _field29;
    unsigned int _field30;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field31[8];
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field32[8];
    struct WrdParagraphTextRun *_field33;
    struct WrdCharacterTextRun *_field34;
    struct WrdEmbeddedTTFRecordTable *_field35;
    struct WrdDocumentFileRecord *_field36;
    int _field37;
    unsigned int _field38;
    struct WrdObjectFactory _field39;
};

struct WrdBookmark {
    CDUnknownFunctionPointerType *_field1;
    struct CsString _field2;
    char *_field3;
    unsigned short _field4;
    int _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    _Bool _field10;
    _Bool _field11;
};

struct WrdBookmarkTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdBookmark *> _field3;
};

struct WrdBorder {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field5;
    unsigned char _field6;
};

struct WrdCHPXFKP;

struct WrdCPTableHeaders {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<int> _field2;
};

struct WrdCharacterProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdCharacterPropertiesOverridden _field3;
    struct CsColour _field4;
    struct CsColour _field5;
    struct CsString _field6;
    struct WrdShading *_field7;
    struct WrdBorder *_field8;
    struct WrdDateTime *_field9;
    struct WrdDateTime *_field10;
    struct WrdDateTime *_field11;
    struct WrdDateTime *_field12;
    struct WrdDateTime *_field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    unsigned short _field44;
    unsigned short _field45;
    unsigned short _field46;
    unsigned short _field47;
    unsigned short _field48;
    int _field49;
    int _field50;
    unsigned short _field51;
    int _field52;
    int _field53;
    int _field54;
    int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    unsigned int _field60;
    unsigned short _field61;
    unsigned short _field62;
    unsigned short _field63;
    unsigned short _field64;
    unsigned short _field65;
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned short _field69;
    unsigned short _field70;
    unsigned short _field71;
    unsigned short _field72;
    unsigned short _field73;
    unsigned short _field74;
    unsigned short _field75;
    unsigned short _field76;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    short _field77;
    unsigned char _field78;
    unsigned char _field79;
    unsigned char _field80;
    unsigned char _field81;
    unsigned char _field82;
};

struct WrdCharacterPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdCharacterTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdCharacterProperties *_field5;
    struct WrdCharacterProperties *_field6;
};

struct WrdDOPTypography;

struct WrdDateTime {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
};

struct WrdDocumentFileRecord;

struct WrdDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct WrdDOPTypography *_field3;
    struct WrdDrawingObjectGrid *_field4;
    struct WrdAutoSummaryInfo *_field5;
    struct WrdDateTime *_field6;
    struct WrdDateTime *_field7;
    struct WrdDateTime *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    short _field25;
    short _field26;
    short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    int _field47;
    short _field48;
    short _field49;
    short _field50;
    unsigned char _field51;
    unsigned char _field52;
    unsigned char _field53;
    char *_field54;
    unsigned int _field55;
    char *_field56;
    unsigned int _field57;
};

struct WrdDrawingObjectGrid;

struct WrdDropCap;

struct WrdEmbeddedTTFRecordTable;

struct WrdEmbeddedTrueTypeFont;

struct WrdEshClientAnchor;

struct WrdEshClientData;

struct WrdEshClientTextBox;

struct WrdEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct WrdEshReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
};

struct WrdEshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
    struct WrdEshClientAnchor *_field17;
    struct WrdEshClientData *_field18;
    struct WrdEshClientTextBox *_field19;
};

struct WrdEshWriter {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshRecordWriterVisitor *_field3;
    struct ChStack<int> _field4;
    struct ChStack<EshHeader> _field5;
};

struct WrdFieldDescriptor;

struct WrdFieldPosition {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct WrdFieldDescriptor *_field3;
};

struct WrdFieldPositionTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdFieldPosition *> _field3;
};

struct WrdFileInformationBlock;

struct WrdFileShapeAddress {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
};

struct WrdFileShapeAddressTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdFileShapeAddress *> _field3;
};

struct WrdFontFamilyName {
    CDUnknownFunctionPointerType *_field1;
    struct CsString _field2;
    struct CsString _field3;
    int _field4;
    char *_field5;
    char *_field6;
    unsigned short _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
};

struct WrdFontFamilyNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdFontFamilyName *> _field2;
};

struct WrdFormattedDiskPage;

struct WrdLineSpaceDescriptor;

struct WrdListFormat {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdListLevelFormat *> _field2;
    short *_field3;
    int _field4;
    int _field5;
    short _field6;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field7;
};

struct WrdListFormatOverride {
    CDUnknownFunctionPointerType *_field1;
    struct WrdListLevelFormatOverride *_field2;
    int _field3;
    struct ChVector<WrdListLevelFormatOverride *> _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdListLevelFormat {
    CDUnknownFunctionPointerType *_field1;
    struct WrdParagraphProperties *_field2;
    struct WrdCharacterProperties *_field3;
    int _field4;
    unsigned short _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned char _field9[9];
    int _field10;
    int _field11;
    unsigned short _field12;
    unsigned short *_field13;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field14;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdListLevelFormatOverride {
    CDUnknownFunctionPointerType *_field1;
    struct WrdListLevelFormat *_field2;
    int _field3;
    unsigned char _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdNote;

struct WrdNoteTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdNote *> _field3;
};

struct WrdNumberRevisionMarkData;

struct WrdObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct WrdEshObjectFactory *_field2;
};

struct WrdOutlineListData;

struct WrdPAPXFKP;

struct WrdParagraphProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdParagraphPropertiesOverridden _field3;
    struct WrdShading *_field4;
    struct WrdLineSpaceDescriptor *_field5;
    struct WrdDropCap *_field6;
    struct WrdBorder *_field7;
    struct WrdBorder *_field8;
    struct WrdBorder *_field9;
    struct WrdBorder *_field10;
    struct WrdBorder *_field11;
    struct WrdBorder *_field12;
    struct WrdAutoNumberListDescriptor *_field13;
    struct WrdDateTime *_field14;
    struct WrdNumberRevisionMarkData *_field15;
    struct WrdTabDescriptor *_field16;
    short _field17;
    short _field18;
    unsigned short _field19;
    unsigned short _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    struct ChVector<WrdTabDescriptor *> _field29;
    short *_field30;
    short *_field31;
    short *_field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    unsigned int _field45;
    unsigned int _field46;
    short _field47;
    short _field48;
    short _field49;
    short _field50;
    short _field51;
    unsigned short _field52;
    unsigned short _field53;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field54;
    unsigned char _field55;
    unsigned char _field56;
};

struct WrdParagraphPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdParagraphTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdParagraphProperties *_field5;
    struct WrdParagraphProperties *_field6;
    struct WrdTableProperties *_field7;
    struct WrdTableProperties *_field8;
};

struct WrdParser;

struct WrdPredefinedStyleInfo {
    unsigned int :1;
};

struct WrdRdrText;

struct WrdRecordWriter;

struct WrdSectionDescriptorTable;

struct WrdSectionProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdSectionPropertiesOverridden _field3;
    struct WrdBorder *_field4;
    struct WrdBorder *_field5;
    struct WrdBorder *_field6;
    struct WrdBorder *_field7;
    struct WrdDateTime *_field8;
    struct WrdOutlineListData *_field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field33;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    short _field40;
    short _field41;
    short _field42;
    short _field43;
    short _field44;
    short _field45;
    unsigned char _field46;
    unsigned char _field47;
    unsigned char _field48;
    unsigned char _field49;
    unsigned char _field50;
    unsigned char _field51;
    unsigned char _field52;
    unsigned char _field53;
    unsigned char _field54;
    unsigned char _field55;
    unsigned char _field56;
    unsigned char _field57;
    int _field58;
    int _field59;
    int _field60;
    int _field61;
    int _field62;
    int _field63;
    unsigned short _field64;
    unsigned short _field65;
    struct OcBinaryData _field66;
};

struct WrdSectionPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdSectionTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdSectionProperties *_field5;
    struct WrdSectionProperties *_field6;
};

struct WrdShading {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct CsColour _field4;
    struct CsColour _field5;
    _Bool _field6;
    int _field7;
    int _field8;
};

struct WrdStory {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
};

struct WrdStoryTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdStory *> _field3;
};

struct WrdStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsString _field2;
    struct WrdParagraphProperties *_field3;
    struct WrdParagraphProperties *_field4;
    struct WrdCharacterProperties *_field5;
    struct WrdCharacterProperties *_field6;
    struct WrdTableProperties *_field7;
    struct WrdDateTime *_field8;
    struct ChMap<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>> _field9;
    struct ChMap<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>> _field10;
    struct ChMap<unsigned int, WrdTableProperties *, CsLess<unsigned int>> _field11;
    int _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdStyleSheet {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct WrdStyle *_field6;
    struct ChVector<WrdStyle *> _field7;
    struct WrdPredefinedStyleInfo _field8[156];
    unsigned short _field9;
};

struct WrdTabDescriptor;

struct WrdTableAutoformatLookSpecifier;

struct WrdTableCellDescriptor;

struct WrdTableProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdTablePropertiesOverridden _field3;
    struct WrdTableAutoformatLookSpecifier *_field4;
    struct WrdTableCellDescriptor *_field5;
    struct WrdShading *_field6;
    struct WrdBorder *_field7;
    struct WrdBorder *_field8;
    struct WrdBorder *_field9;
    struct WrdBorder *_field10;
    struct WrdBorder *_field11;
    struct WrdBorder *_field12;
    struct WrdBorder *_field13;
    struct WrdBorder *_field14;
    struct WrdDateTime *_field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    struct ChVector<short> _field45;
    struct ChVector<WrdTableCellDescriptor *> _field46;
    int _field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    unsigned short _field55;
    unsigned short _field56;
    unsigned short _field57;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    short _field58;
    short _field59;
    short _field60;
    short _field61;
    short _field62;
    short _field63;
    short _field64;
    short _field65;
    short _field66;
    short _field67;
    short _field68;
    short _field69;
    short _field70;
    short _field71;
    short _field72;
    short _field73;
    short _field74;
    short _field75;
    short _field76;
    short _field77;
    short _field78;
    short _field79;
    short _field80;
    short _field81;
    short _field82;
    unsigned char _field83;
    unsigned char _field84;
    unsigned char _field85;
    unsigned char _field86;
    unsigned char _field87;
    unsigned char _field88;
    unsigned char _field89;
    unsigned char _field90;
};

struct WrdTablePropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdText {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    int _field3;
};

struct WrdTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct WrittenComponentInfo {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
    char _field5;
    id _field6;
    char _field7;
    char _field8;
    char _field9;
    id _field10;
    id _field11;
    char _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
};

struct WrittenObjectInfo;

struct XLFormulaStream {
    CDUnknownFunctionPointerType *_field1;
};

struct XlArray;

struct XlBaseFormulaTable;

struct XlBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    CDUnknownFunctionPointerType *_field74;
    struct EshObjectFactory *_field75;
};

struct XlBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
};

struct XlBrk;

struct XlCalculationProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    int _field3;
    short _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
};

struct XlCell {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    int _field5;
    double _field6;
    struct XlString *_field7;
    int _field8;
    struct XlFormulaInfo *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlCellFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlXf> _field2;
};

struct XlCellRow {
    CDUnknownFunctionPointerType *_field1;
    struct XlRowProperties *_field2;
    struct ChVector<XlCell *> _field3;
    unsigned int _field4;
};

struct XlCellTableInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlCf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    struct XlDXf *_field7;
    char *_field8;
    char *_field9;
};

struct XlChart3D {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct XlChartBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    struct ChVector<int> _field74;
    struct XlSubstreamProperties _field75;
    int _field76;
    int _field77;
    int _field78;
    struct CsRect<float> _field79;
    int _field80;
    int _field81;
    int _field82[4];
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    struct ChVector<int> _field88;
    int _field89[4];
    int _field90;
    int _field91;
    struct AxisParentChildren _field92;
    struct AxisParentChildren _field93;
    struct ChVector<XlChartBinaryReader::SeriesDescriptor> _field94;
    struct ChVector<XlChartBinaryReader::PlotDescriptor> _field95;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field96;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field97;
    unsigned short _field98;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field99;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field100;
    float _field101;
    float _field102;
    unsigned short _field103;
    unsigned short _field104;
    int _field105;
    struct ChVector<int> _field106;
    struct ChVector<int> _field107;
    int _field108;
    _Bool _field109;
    _Bool _field110;
    CDUnknownFunctionPointerType *_field111;
    struct EshObjectFactory *_field112;
};

struct XlChartBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
    struct XlChartShtProps _field28;
    int _field29;
    char *_field30;
    int _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    unsigned short _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    struct ChVector<unsigned short> _field40;
    struct ChVector<unsigned short> _field41;
    struct ChVector<XlChartFBI> _field42;
};

struct XlChartChartFormat;

struct XlChartCustomLabelText {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    unsigned int _field51;
    unsigned short _field52;
};

struct XlChartCustomLegend {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    short _field51;
    _Bool _field52;
    _Bool _field53;
};

struct XlChartDataSeries {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
};

struct XlChartErrorBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    struct XlChartSerAuxErrBar _field16;
    int _field17;
};

struct XlChartFBI;

struct XlChartFillStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    struct CsColour _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct XlChartFrameType {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
};

struct XlChartLegendFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
};

struct XlChartLineStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    int _field10;
};

struct XlChartLinkedData {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    char *_field3;
    unsigned short _field4;
    short _field5;
    _Bool _field6;
    struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> _field7;
};

struct XlChartMarkerStyle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct CsColour _field3;
    struct CsColour _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct XlChartPicF {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartPlot {
    CDUnknownFunctionPointerType *_field1;
    struct XlChart3D *_field2;
    struct XlChartChartFormat *_field3;
    struct XlChartSeriesFormat *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartLineStyle *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char *_field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    struct ChVector<XlChartPlot::DefText> _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
};

struct XlChartPlotAxis {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct XlChartTextFrame *_field3;
    struct XlChartLineStyle *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartFillStyle *_field8;
    struct XlChartPicF *_field9;
    struct XlChartTick *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
    char *_field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartSerAuxErrBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    unsigned short _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartSeries;

struct XlChartSeriesFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartLineStyle *_field2;
    struct XlChartFillStyle *_field3;
    struct XlChartMarkerStyle *_field4;
    struct XlChartPicF *_field5;
    char *_field6;
    char *_field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartShtProps {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    int _field4;
    _Bool _field5;
};

struct XlChartTextFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
};

struct XlChartTick;

struct XlChartTrendLine {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    CDUnknownFunctionPointerType *_field16;
    struct XlHeader _field17;
    double _field18;
    double _field19;
    double _field20;
    int _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
};

struct XlCondFmt;

struct XlConditionalFormat {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct XlCondFmt *_field3;
};

struct XlConditionalFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlConditionalFormat *> _field2;
};

struct XlDXf {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    struct XlDXfUserFmt *_field7;
    struct XlDXfFont *_field8;
    struct XlDXfAlign *_field9;
    struct XlDXfBorders *_field10;
    struct XlDXfPattern *_field11;
    struct XlDXfProtect *_field12;
};

struct XlDXfAlign {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
};

struct XlDXfBorders {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
};

struct XlDXfFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlString *_field2;
    int _field3;
    int _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    short _field19;
};

struct XlDXfPattern {
    int _field1;
    short _field2;
    short _field3;
};

struct XlDXfProtect {
    _Bool _field1;
    _Bool _field2;
};

struct XlDXfUserFmt {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    short _field3;
    struct XlString *_field4;
};

struct XlDateTimeFormat;

struct XlDocumentInfo {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    short _field14;
    short *_field15;
    struct OcText _field16;
    int _field17;
    struct XlRef _field18;
    _Bool _field19;
    char *_field20;
    unsigned int _field21;
};

struct XlDocumentProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    short _field5;
    short _field6;
};

struct XlEshBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct XlReadStgStream *_field13;
};

struct XlEshBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshRecordWriterVisitor *_field3;
    struct ChStack<int> _field4;
    struct ChStack<EshHeader> _field5;
    struct XlWriteStgStream *_field6;
    struct SsrwOOStream *_field7;
    struct ChStack<int> _field8;
    struct ChStack<EshHeader> _field9;
    struct ChStack<int> _field10;
    struct ChStack<EshHeader> _field11;
    struct ChStack<int> *_field12;
    struct ChStack<EshHeader> *_field13;
};

struct XlEshClientAnchor {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned short _field4;
    CsRect_0aefebc6 _field5;
    CsRect_0aefebc6 _field6;
};

struct XlEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct XlFileProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    short _field4;
    struct OcText _field5;
    struct OcText _field6;
    unsigned short _field7;
    char *_field8;
    unsigned int _field9;
    char *_field10;
};

struct XlFmtPtg;

struct XlFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
    short _field5;
    short _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct XlFontTable {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    short _field3;
    struct CsSimpleHeapVector<XlFont> _field4;
};

struct XlFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
};

struct XlFormatInfo;

struct XlFormatParser;

struct XlFormatProcessor {
    struct XlFormatParser *_field1;
    _Bool _field2;
    struct XlDateTimeFormat *_field3;
    struct XlFormatInfo *_field4;
    struct XlFormatSection *_field5;
};

struct XlFormatSection {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    int _field26;
    struct OcText *_field27;
    struct OcText *_field28;
    _Bool _field29;
    short _field30;
    short _field31;
    short _field32;
    struct ChVector<XlFmtPtg *> _field33;
};

struct XlFormulaInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct OcText *_field3;
    char *_field4;
    unsigned int _field5;
    short _field6;
    struct XlShrFmla *_field7;
    struct XlArray *_field8;
    struct XlTable *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct XlFormulaParser;

struct XlFormulaProcessor {
    CDUnknownFunctionPointerType *_field1;
    struct XlFormulaParser *_field2;
    struct XlBaseFormulaTable *_field3;
    struct ChVector<CsString *> _field4;
    struct XlNameTable *_field5;
    ChVector_cc6fdd32 *_field6;
    struct XlLinkTable *_field7;
    unsigned int _field8;
    unsigned int _field9;
    char _field10[64];
    unsigned short *_field11;
    char *_field12;
    _Bool _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct XlGraphicsInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    short _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ChVector<XlGraphicsInfo::XlObjData *> _field8;
    _Bool _field9;
    int _field10;
    struct XlString *_field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    char *_field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    _Bool _field27;
    struct XlString *_field28;
};

struct XlHLink {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    struct XlString *_field7;
    struct XlString *_field8;
    struct XlString *_field9;
    struct XlString *_field10;
    struct XlString *_field11;
    unsigned short _field12;
};

struct XlHLinkToolTip {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    struct XlString *_field4;
};

struct XlHeader {
    unsigned int _field1;
    short _field2;
    unsigned char _field3;
};

struct XlIndex;

struct XlLink;

struct XlLinkLookupTable {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct ChVector<XlXti *> _field3;
};

struct XlLinkTable {
    CDUnknownFunctionPointerType *_field1;
    struct XlLinkLookupTable _field2;
    struct ChVector<XlLink *> _field3;
};

struct XlName {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    struct XlString *_field4;
    struct XlString *_field5;
    struct XlString *_field6;
    struct XlString *_field7;
    char *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    unsigned char _field13;
    unsigned char _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
};

struct XlNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[14];
};

struct XlNoteTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
};

struct XlObjData;

struct XlObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct XlEshObjectFactory *_field2;
};

struct XlPageProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    struct OcText *_field6;
    struct OcText *_field7;
    _Bool _field8;
    _Bool _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    _Bool _field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    short _field23;
    short _field24;
    short _field25;
    double _field26;
    double _field27;
    short _field28;
};

struct XlPane;

struct XlParserVisitor;

struct XlPhoneticInfo;

struct XlPtg {
    char *_field1;
    int _field2;
    unsigned int _field3;
    unsigned short _field4;
};

struct XlReadStgStream;

struct XlRecord;

struct XlRef {
    unsigned short _field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    _Bool _field5;
};

struct XlRow;

struct XlRowBlock {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlCellRow *> _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlRowProperties;

struct XlScl;

struct XlSelection;

struct XlSheetInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
};

struct XlSheetInfoTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    char *_field3;
};

struct XlSheetPresentation {
    CDUnknownFunctionPointerType *_field1;
    struct XlWindow2 *_field2;
    struct XlScl *_field3;
    struct XlPane *_field4;
    struct XlSelection *_field5[4];
};

struct XlShrFmla;

struct XlSortInfo {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    struct OcText _field9;
    struct OcText _field10;
    struct OcText _field11;
};

struct XlStrTableState;

struct XlString {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    struct ChVector<short *> _field3;
    struct XlPhoneticInfo *_field4;
    int _field5;
    short *_field6;
};

struct XlStringExtractor;

struct XlStyleTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[10];
};

struct XlSubstreamProperties {
    CDUnknownFunctionPointerType *_field1;
    struct XlSheetInfo _field2;
    struct XlPageProperties _field3;
    struct XlCellTableInfo _field4;
    int _field5;
    int _field6;
};

struct XlTable;

struct XlWindow2 {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    short _field4;
    short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned short _field18;
    short _field19;
};

struct XlWorksheetProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    int _field3;
    unsigned short _field4;
    _Bool _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    short _field26;
    struct ChVector<XlBrk *> _field27;
    struct ChVector<XlBrk *> _field28;
    struct OcText _field29;
};

struct XlWorksheetProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    short _field20;
};

struct XlWriteStgStream;

struct XlWriterVisitor;

struct XlXf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    unsigned char _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
};

struct XlXti;

struct ZeroCopyInputStream {
    CDUnknownFunctionPointerType *_field1;
};

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        CDUnknownFunctionPointerType _field13;
        CDUnknownFunctionPointerType _field14;
        CDUnknownFunctionPointerType _field15;
        CDUnknownFunctionPointerType _field16;
        CDUnknownFunctionPointerType _field17;
        CDUnknownFunctionPointerType _field18;
        CDUnknownFunctionPointerType _field19;
        CDUnknownFunctionPointerType _field20;
        CDUnknownFunctionPointerType _field21;
        CDUnknownFunctionPointerType _field22;
        CDUnknownFunctionPointerType _field23;
        CDUnknownFunctionPointerType _field24;
        CDUnknownFunctionPointerType _field25;
        CDUnknownFunctionPointerType _field26;
        CDUnknownFunctionPointerType _field27;
        CDUnknownFunctionPointerType _field28;
        CDUnknownFunctionPointerType _field29;
        CDUnknownFunctionPointerType _field30;
        CDUnknownFunctionPointerType _field31;
        CDUnknownFunctionPointerType _field32;
        CDUnknownFunctionPointerType _field33;
        CDUnknownFunctionPointerType _field34;
        CDUnknownFunctionPointerType _field35;
        CDUnknownFunctionPointerType _field36;
        CDUnknownFunctionPointerType _field37;
        CDUnknownFunctionPointerType _field38;
        CDUnknownFunctionPointerType _field39;
        CDUnknownFunctionPointerType _field40;
        CDUnknownFunctionPointerType _field41;
        CDUnknownFunctionPointerType _field42;
        CDUnknownFunctionPointerType _field43;
        CDUnknownFunctionPointerType _field44;
        CDUnknownFunctionPointerType _field45;
        CDUnknownFunctionPointerType _field46;
        CDUnknownFunctionPointerType _field47;
        CDUnknownFunctionPointerType _field48;
        CDUnknownFunctionPointerType _field49;
        CDUnknownFunctionPointerType _field50;
        CDUnknownFunctionPointerType _field51;
        CDUnknownFunctionPointerType _field52;
        CDUnknownFunctionPointerType _field53;
        CDUnknownFunctionPointerType _field54;
        CDUnknownFunctionPointerType _field55;
        CDUnknownFunctionPointerType _field56;
        CDUnknownFunctionPointerType _field57;
        CDUnknownFunctionPointerType _field58;
        CDUnknownFunctionPointerType _field59;
        CDUnknownFunctionPointerType _field60;
        CDUnknownFunctionPointerType _field61;
        CDUnknownFunctionPointerType _field62;
        CDUnknownFunctionPointerType _field63;
        CDUnknownFunctionPointerType _field64;
        CDUnknownFunctionPointerType _field65;
        CDUnknownFunctionPointerType _field66;
        CDUnknownFunctionPointerType _field67;
        CDUnknownFunctionPointerType _field68;
        CDUnknownFunctionPointerType _field69;
        CDUnknownFunctionPointerType _field70;
        CDUnknownFunctionPointerType _field71;
        CDUnknownFunctionPointerType _field72;
        CDUnknownFunctionPointerType _field73;
        CDUnknownFunctionPointerType _field74;
        CDUnknownFunctionPointerType _field75;
        CDUnknownFunctionPointerType _field76;
        CDUnknownFunctionPointerType _field77;
        CDUnknownFunctionPointerType _field78;
        CDUnknownFunctionPointerType _field79;
        CDUnknownFunctionPointerType _field80;
        CDUnknownFunctionPointerType _field81;
        CDUnknownFunctionPointerType _field82;
        CDUnknownFunctionPointerType _field83;
        CDUnknownFunctionPointerType _field84;
        CDUnknownFunctionPointerType _field85;
        CDUnknownFunctionPointerType _field86;
        CDUnknownFunctionPointerType _field87;
        CDUnknownFunctionPointerType _field88;
        CDUnknownFunctionPointerType _field89;
        CDUnknownFunctionPointerType _field90;
        CDUnknownFunctionPointerType _field91;
        CDUnknownFunctionPointerType _field92;
        CDUnknownFunctionPointerType _field93;
        CDUnknownFunctionPointerType _field94;
        CDUnknownFunctionPointerType _field95;
        CDUnknownFunctionPointerType _field96;
        CDUnknownFunctionPointerType _field97;
        CDUnknownFunctionPointerType _field98;
        CDUnknownFunctionPointerType _field99;
        CDUnknownFunctionPointerType _field100;
        CDUnknownFunctionPointerType _field101;
        CDUnknownFunctionPointerType _field102;
        CDUnknownFunctionPointerType _field103;
        CDUnknownFunctionPointerType _field104;
        CDUnknownFunctionPointerType _field105;
        CDUnknownFunctionPointerType _field106;
        CDUnknownFunctionPointerType _field107;
        CDUnknownFunctionPointerType _field108;
        CDUnknownFunctionPointerType _field109;
        CDUnknownFunctionPointerType _field110;
        CDUnknownFunctionPointerType _field111;
        CDUnknownFunctionPointerType _field112;
        CDUnknownFunctionPointerType _field113;
        CDUnknownFunctionPointerType _field114;
        CDUnknownFunctionPointerType _field115;
        CDUnknownFunctionPointerType _field116;
        CDUnknownFunctionPointerType _field117;
        CDUnknownFunctionPointerType _field118;
        CDUnknownFunctionPointerType _field119;
        CDUnknownFunctionPointerType _field120;
        CDUnknownFunctionPointerType _field121;
        CDUnknownFunctionPointerType _field122;
        CDUnknownFunctionPointerType _field123;
        CDUnknownFunctionPointerType _field124;
        CDUnknownFunctionPointerType _field125;
        CDUnknownFunctionPointerType _field126;
        CDUnknownFunctionPointerType _field127;
        CDUnknownFunctionPointerType _field128;
        CDUnknownFunctionPointerType _field129;
        CDUnknownFunctionPointerType _field130;
        CDUnknownFunctionPointerType _field131;
        CDUnknownFunctionPointerType _field132;
        CDUnknownFunctionPointerType _field133;
        CDUnknownFunctionPointerType _field134;
        CDUnknownFunctionPointerType _field135;
        CDUnknownFunctionPointerType _field136;
        CDUnknownFunctionPointerType _field137;
        CDUnknownFunctionPointerType _field138;
        CDUnknownFunctionPointerType _field139;
        CDUnknownFunctionPointerType _field140;
        CDUnknownFunctionPointerType _field141;
        CDUnknownFunctionPointerType _field142;
        CDUnknownFunctionPointerType _field143;
        CDUnknownFunctionPointerType _field144;
        CDUnknownFunctionPointerType _field145;
        CDUnknownFunctionPointerType _field146;
        CDUnknownFunctionPointerType _field147;
        CDUnknownFunctionPointerType _field148;
        CDUnknownFunctionPointerType _field149;
        CDUnknownFunctionPointerType _field150;
        CDUnknownFunctionPointerType _field151;
        CDUnknownFunctionPointerType _field152;
        CDUnknownFunctionPointerType _field153;
        CDUnknownFunctionPointerType _field154;
        CDUnknownFunctionPointerType _field155;
        CDUnknownFunctionPointerType _field156;
        CDUnknownFunctionPointerType _field157;
        CDUnknownFunctionPointerType _field158;
        CDUnknownFunctionPointerType _field159;
        CDUnknownFunctionPointerType _field160;
        CDUnknownFunctionPointerType _field161;
        CDUnknownFunctionPointerType _field162;
        CDUnknownFunctionPointerType _field163;
        CDUnknownFunctionPointerType _field164;
        CDUnknownFunctionPointerType _field165;
        CDUnknownFunctionPointerType _field166;
        CDUnknownFunctionPointerType _field167;
        CDUnknownFunctionPointerType _field168;
        CDUnknownFunctionPointerType _field169;
        CDUnknownFunctionPointerType _field170;
        CDUnknownFunctionPointerType _field171;
        CDUnknownFunctionPointerType _field172;
        CDUnknownFunctionPointerType _field173;
        CDUnknownFunctionPointerType _field174;
        CDUnknownFunctionPointerType _field175;
        CDUnknownFunctionPointerType _field176;
        CDUnknownFunctionPointerType _field177;
        CDUnknownFunctionPointerType _field178;
        CDUnknownFunctionPointerType _field179;
        CDUnknownFunctionPointerType _field180;
        CDUnknownFunctionPointerType _field181;
        CDUnknownFunctionPointerType _field182;
        CDUnknownFunctionPointerType _field183;
        CDUnknownFunctionPointerType _field184;
        CDUnknownFunctionPointerType _field185;
        CDUnknownFunctionPointerType _field186;
        CDUnknownFunctionPointerType _field187;
        CDUnknownFunctionPointerType _field188;
        CDUnknownFunctionPointerType _field189;
        CDUnknownFunctionPointerType _field190;
        CDUnknownFunctionPointerType _field191;
        CDUnknownFunctionPointerType _field192;
        CDUnknownFunctionPointerType _field193;
        CDUnknownFunctionPointerType _field194;
        CDUnknownFunctionPointerType _field195;
        CDUnknownFunctionPointerType _field196;
        CDUnknownFunctionPointerType _field197;
        CDUnknownFunctionPointerType _field198;
        CDUnknownFunctionPointerType _field199;
        CDUnknownFunctionPointerType _field200;
        CDUnknownFunctionPointerType _field201;
        CDUnknownFunctionPointerType _field202;
        CDUnknownFunctionPointerType _field203;
        CDUnknownFunctionPointerType _field204;
        CDUnknownFunctionPointerType _field205;
        CDUnknownFunctionPointerType _field206;
        CDUnknownFunctionPointerType _field207;
        CDUnknownFunctionPointerType _field208;
        CDUnknownFunctionPointerType _field209;
        CDUnknownFunctionPointerType _field210;
        CDUnknownFunctionPointerType _field211;
        CDUnknownFunctionPointerType _field212;
        CDUnknownFunctionPointerType _field213;
        CDUnknownFunctionPointerType _field214;
        CDUnknownFunctionPointerType _field215;
        CDUnknownFunctionPointerType _field216;
        CDUnknownFunctionPointerType _field217;
        CDUnknownFunctionPointerType _field218;
        CDUnknownFunctionPointerType _field219;
        CDUnknownFunctionPointerType _field220;
        CDUnknownFunctionPointerType _field221;
        CDUnknownFunctionPointerType _field222;
        CDUnknownFunctionPointerType _field223;
        CDUnknownFunctionPointerType _field224;
        CDUnknownFunctionPointerType _field225;
        CDUnknownFunctionPointerType _field226;
        CDUnknownFunctionPointerType _field227;
        CDUnknownFunctionPointerType _field228;
        CDUnknownFunctionPointerType _field229;
        CDUnknownFunctionPointerType _field230;
        CDUnknownFunctionPointerType _field231;
        CDUnknownFunctionPointerType _field232;
        CDUnknownFunctionPointerType _field233;
        CDUnknownFunctionPointerType _field234;
        CDUnknownFunctionPointerType _field235;
        CDUnknownFunctionPointerType _field236;
        CDUnknownFunctionPointerType _field237;
        CDUnknownFunctionPointerType _field238;
        CDUnknownFunctionPointerType _field239;
        CDUnknownFunctionPointerType _field240;
        CDUnknownFunctionPointerType _field241;
        CDUnknownFunctionPointerType _field242;
        CDUnknownFunctionPointerType _field243;
        CDUnknownFunctionPointerType _field244;
        CDUnknownFunctionPointerType _field245;
        CDUnknownFunctionPointerType _field246;
        CDUnknownFunctionPointerType _field247;
        CDUnknownFunctionPointerType _field248;
        CDUnknownFunctionPointerType _field249;
        CDUnknownFunctionPointerType _field250;
        CDUnknownFunctionPointerType _field251;
        CDUnknownFunctionPointerType _field252;
        CDUnknownFunctionPointerType _field253;
        CDUnknownFunctionPointerType _field254;
        CDUnknownFunctionPointerType _field255;
        CDUnknownFunctionPointerType _field256;
        CDUnknownFunctionPointerType _field257;
        CDUnknownFunctionPointerType _field258;
        CDUnknownFunctionPointerType _field259;
        CDUnknownFunctionPointerType _field260;
        CDUnknownFunctionPointerType _field261;
        CDUnknownFunctionPointerType _field262;
        CDUnknownFunctionPointerType _field263;
        CDUnknownFunctionPointerType _field264;
        CDUnknownFunctionPointerType _field265;
        CDUnknownFunctionPointerType _field266;
        CDUnknownFunctionPointerType _field267;
        CDUnknownFunctionPointerType _field268;
        CDUnknownFunctionPointerType _field269;
        CDUnknownFunctionPointerType _field270;
        CDUnknownFunctionPointerType _field271;
        CDUnknownFunctionPointerType _field272;
        CDUnknownFunctionPointerType _field273;
        CDUnknownFunctionPointerType _field274;
        CDUnknownFunctionPointerType _field275;
        CDUnknownFunctionPointerType _field276;
        CDUnknownFunctionPointerType _field277;
        CDUnknownFunctionPointerType _field278;
        CDUnknownFunctionPointerType _field279;
        CDUnknownFunctionPointerType _field280;
        CDUnknownFunctionPointerType _field281;
        CDUnknownFunctionPointerType _field282;
        CDUnknownFunctionPointerType _field283;
        CDUnknownFunctionPointerType _field284;
        CDUnknownFunctionPointerType _field285;
        CDUnknownFunctionPointerType _field286;
        CDUnknownFunctionPointerType _field287;
        CDUnknownFunctionPointerType _field288;
        CDUnknownFunctionPointerType _field289;
        CDUnknownFunctionPointerType _field290;
        CDUnknownFunctionPointerType _field291;
        CDUnknownFunctionPointerType _field292;
        CDUnknownFunctionPointerType _field293;
        CDUnknownFunctionPointerType _field294;
        CDUnknownFunctionPointerType _field295;
        CDUnknownFunctionPointerType _field296;
        CDUnknownFunctionPointerType _field297;
        CDUnknownFunctionPointerType _field298;
        CDUnknownFunctionPointerType _field299;
        CDUnknownFunctionPointerType _field300;
        CDUnknownFunctionPointerType _field301;
        CDUnknownFunctionPointerType _field302;
        CDUnknownFunctionPointerType _field303;
        CDUnknownFunctionPointerType _field304;
        CDUnknownFunctionPointerType _field305;
        CDUnknownFunctionPointerType _field306;
        CDUnknownFunctionPointerType _field307;
        CDUnknownFunctionPointerType _field308;
        CDUnknownFunctionPointerType _field309;
        CDUnknownFunctionPointerType _field310;
        CDUnknownFunctionPointerType _field311;
        CDUnknownFunctionPointerType _field312;
        CDUnknownFunctionPointerType _field313;
        CDUnknownFunctionPointerType _field314;
        CDUnknownFunctionPointerType _field315;
        CDUnknownFunctionPointerType _field316;
        CDUnknownFunctionPointerType _field317;
        CDUnknownFunctionPointerType _field318;
        CDUnknownFunctionPointerType _field319;
        CDUnknownFunctionPointerType _field320;
        CDUnknownFunctionPointerType _field321;
        CDUnknownFunctionPointerType _field322;
        CDUnknownFunctionPointerType _field323;
        CDUnknownFunctionPointerType _field324;
        CDUnknownFunctionPointerType _field325;
        CDUnknownFunctionPointerType _field326;
        CDUnknownFunctionPointerType _field327;
        CDUnknownFunctionPointerType _field328;
        CDUnknownFunctionPointerType _field329;
        CDUnknownFunctionPointerType _field330;
        CDUnknownFunctionPointerType _field331;
        CDUnknownFunctionPointerType _field332;
        CDUnknownFunctionPointerType _field333;
        CDUnknownFunctionPointerType _field334;
        CDUnknownFunctionPointerType _field335;
        CDUnknownFunctionPointerType _field336;
        CDUnknownFunctionPointerType _field337;
        CDUnknownFunctionPointerType _field338;
        CDUnknownFunctionPointerType _field339;
        CDUnknownFunctionPointerType _field340;
        CDUnknownFunctionPointerType _field341;
        CDUnknownFunctionPointerType _field342;
        CDUnknownFunctionPointerType _field343;
        CDUnknownFunctionPointerType _field344;
        CDUnknownFunctionPointerType _field345;
        CDUnknownFunctionPointerType _field346;
        CDUnknownFunctionPointerType _field347;
        CDUnknownFunctionPointerType _field348;
        CDUnknownFunctionPointerType _field349;
        CDUnknownFunctionPointerType _field350;
        CDUnknownFunctionPointerType _field351;
        CDUnknownFunctionPointerType _field352;
        CDUnknownFunctionPointerType _field353;
        CDUnknownFunctionPointerType _field354;
        CDUnknownFunctionPointerType _field355;
        CDUnknownFunctionPointerType _field356;
        CDUnknownFunctionPointerType _field357;
        CDUnknownFunctionPointerType _field358;
        CDUnknownFunctionPointerType _field359;
        CDUnknownFunctionPointerType _field360;
        CDUnknownFunctionPointerType _field361;
        CDUnknownFunctionPointerType _field362;
        CDUnknownFunctionPointerType _field363;
        CDUnknownFunctionPointerType _field364;
        CDUnknownFunctionPointerType _field365;
        CDUnknownFunctionPointerType _field366;
        CDUnknownFunctionPointerType _field367;
        CDUnknownFunctionPointerType _field368;
        CDUnknownFunctionPointerType _field369;
        CDUnknownFunctionPointerType _field370;
        CDUnknownFunctionPointerType _field371;
        CDUnknownFunctionPointerType _field372;
        CDUnknownFunctionPointerType _field373;
        CDUnknownFunctionPointerType _field374;
        CDUnknownFunctionPointerType _field375;
        CDUnknownFunctionPointerType _field376;
        CDUnknownFunctionPointerType _field377;
        CDUnknownFunctionPointerType _field378;
        CDUnknownFunctionPointerType _field379;
        CDUnknownFunctionPointerType _field380;
        CDUnknownFunctionPointerType _field381;
        CDUnknownFunctionPointerType _field382;
        CDUnknownFunctionPointerType _field383;
        CDUnknownFunctionPointerType _field384;
        CDUnknownFunctionPointerType _field385;
        CDUnknownFunctionPointerType _field386;
        CDUnknownFunctionPointerType _field387;
        CDUnknownFunctionPointerType _field388;
        CDUnknownFunctionPointerType _field389;
        CDUnknownFunctionPointerType _field390;
        CDUnknownFunctionPointerType _field391;
        CDUnknownFunctionPointerType _field392;
        CDUnknownFunctionPointerType _field393;
        CDUnknownFunctionPointerType _field394;
        CDUnknownFunctionPointerType _field395;
        CDUnknownFunctionPointerType _field396;
        CDUnknownFunctionPointerType _field397;
        CDUnknownFunctionPointerType _field398;
        CDUnknownFunctionPointerType _field399;
        CDUnknownFunctionPointerType _field400;
        CDUnknownFunctionPointerType _field401;
        CDUnknownFunctionPointerType _field402;
        CDUnknownFunctionPointerType _field403;
        CDUnknownFunctionPointerType _field404;
        CDUnknownFunctionPointerType _field405;
        CDUnknownFunctionPointerType _field406;
        CDUnknownFunctionPointerType _field407;
        CDUnknownFunctionPointerType _field408;
        CDUnknownFunctionPointerType _field409;
        CDUnknownFunctionPointerType _field410;
        CDUnknownFunctionPointerType _field411;
        CDUnknownFunctionPointerType _field412;
        CDUnknownFunctionPointerType _field413;
        CDUnknownFunctionPointerType _field414;
        CDUnknownFunctionPointerType _field415;
        CDUnknownFunctionPointerType _field416;
        CDUnknownFunctionPointerType _field417;
        CDUnknownFunctionPointerType _field418;
        CDUnknownFunctionPointerType _field419;
        CDUnknownFunctionPointerType _field420;
        CDUnknownFunctionPointerType _field421;
        CDUnknownFunctionPointerType _field422;
        CDUnknownFunctionPointerType _field423;
        CDUnknownFunctionPointerType _field424;
        CDUnknownFunctionPointerType _field425;
        CDUnknownFunctionPointerType _field426;
        CDUnknownFunctionPointerType _field427;
        CDUnknownFunctionPointerType _field428;
        CDUnknownFunctionPointerType _field429;
        CDUnknownFunctionPointerType _field430;
        CDUnknownFunctionPointerType _field431;
        CDUnknownFunctionPointerType _field432;
        CDUnknownFunctionPointerType _field433;
        CDUnknownFunctionPointerType _field434;
        CDUnknownFunctionPointerType _field435;
        CDUnknownFunctionPointerType _field436;
        CDUnknownFunctionPointerType _field437;
        CDUnknownFunctionPointerType _field438;
        CDUnknownFunctionPointerType _field439;
        CDUnknownFunctionPointerType _field440;
        CDUnknownFunctionPointerType _field441;
        CDUnknownFunctionPointerType _field442;
        CDUnknownFunctionPointerType _field443;
        CDUnknownFunctionPointerType _field444;
        CDUnknownFunctionPointerType _field445;
        CDUnknownFunctionPointerType _field446;
        CDUnknownFunctionPointerType _field447;
        CDUnknownFunctionPointerType _field448;
        CDUnknownFunctionPointerType _field449;
        CDUnknownFunctionPointerType _field450;
        CDUnknownFunctionPointerType _field451;
        CDUnknownFunctionPointerType _field452;
        CDUnknownFunctionPointerType _field453;
        CDUnknownFunctionPointerType _field454;
        CDUnknownFunctionPointerType _field455;
        CDUnknownFunctionPointerType _field456;
        CDUnknownFunctionPointerType _field457;
        CDUnknownFunctionPointerType _field458;
        CDUnknownFunctionPointerType _field459;
        CDUnknownFunctionPointerType _field460;
        CDUnknownFunctionPointerType _field461;
        CDUnknownFunctionPointerType _field462;
        CDUnknownFunctionPointerType _field463;
        CDUnknownFunctionPointerType _field464;
        CDUnknownFunctionPointerType _field465;
        CDUnknownFunctionPointerType _field466;
        CDUnknownFunctionPointerType _field467;
        CDUnknownFunctionPointerType _field468;
        CDUnknownFunctionPointerType _field469;
        CDUnknownFunctionPointerType _field470;
        CDUnknownFunctionPointerType _field471;
        CDUnknownFunctionPointerType _field472;
        CDUnknownFunctionPointerType _field473;
        CDUnknownFunctionPointerType _field474;
        CDUnknownFunctionPointerType _field475;
        CDUnknownFunctionPointerType _field476;
        CDUnknownFunctionPointerType _field477;
        CDUnknownFunctionPointerType _field478;
        CDUnknownFunctionPointerType _field479;
        CDUnknownFunctionPointerType _field480;
        CDUnknownFunctionPointerType _field481;
        CDUnknownFunctionPointerType _field482;
        CDUnknownFunctionPointerType _field483;
        CDUnknownFunctionPointerType _field484;
        CDUnknownFunctionPointerType _field485;
        CDUnknownFunctionPointerType _field486;
        CDUnknownFunctionPointerType _field487;
        CDUnknownFunctionPointerType _field488;
        CDUnknownFunctionPointerType _field489;
        CDUnknownFunctionPointerType _field490;
        CDUnknownFunctionPointerType _field491;
        CDUnknownFunctionPointerType _field492;
        CDUnknownFunctionPointerType _field493;
        CDUnknownFunctionPointerType _field494;
        CDUnknownFunctionPointerType _field495;
        CDUnknownFunctionPointerType _field496;
        CDUnknownFunctionPointerType _field497;
        CDUnknownFunctionPointerType _field498;
        CDUnknownFunctionPointerType _field499;
        CDUnknownFunctionPointerType _field500;
        CDUnknownFunctionPointerType _field501;
        CDUnknownFunctionPointerType _field502;
        CDUnknownFunctionPointerType _field503;
        CDUnknownFunctionPointerType _field504;
        CDUnknownFunctionPointerType _field505;
        CDUnknownFunctionPointerType _field506;
        CDUnknownFunctionPointerType _field507;
        CDUnknownFunctionPointerType _field508;
        CDUnknownFunctionPointerType _field509;
        CDUnknownFunctionPointerType _field510;
        CDUnknownFunctionPointerType _field511;
        CDUnknownFunctionPointerType _field512;
        CDUnknownFunctionPointerType _field513;
        CDUnknownFunctionPointerType _field514;
        CDUnknownFunctionPointerType _field515;
        CDUnknownFunctionPointerType _field516;
        CDUnknownFunctionPointerType _field517;
        CDUnknownFunctionPointerType _field518;
        CDUnknownFunctionPointerType _field519;
        CDUnknownFunctionPointerType _field520;
        CDUnknownFunctionPointerType _field521;
        CDUnknownFunctionPointerType _field522;
        CDUnknownFunctionPointerType _field523;
        CDUnknownFunctionPointerType _field524;
        CDUnknownFunctionPointerType _field525;
        CDUnknownFunctionPointerType _field526;
        CDUnknownFunctionPointerType _field527;
        CDUnknownFunctionPointerType _field528;
        CDUnknownFunctionPointerType _field529;
        CDUnknownFunctionPointerType _field530;
        CDUnknownFunctionPointerType _field531;
        CDUnknownFunctionPointerType _field532;
        CDUnknownFunctionPointerType _field533;
        CDUnknownFunctionPointerType _field534;
        CDUnknownFunctionPointerType _field535;
        CDUnknownFunctionPointerType _field536;
        CDUnknownFunctionPointerType _field537;
        CDUnknownFunctionPointerType _field538;
        CDUnknownFunctionPointerType _field539;
        CDUnknownFunctionPointerType _field540;
        CDUnknownFunctionPointerType _field541;
        CDUnknownFunctionPointerType _field542;
        CDUnknownFunctionPointerType _field543;
        CDUnknownFunctionPointerType _field544;
        CDUnknownFunctionPointerType _field545;
        CDUnknownFunctionPointerType _field546;
        CDUnknownFunctionPointerType _field547;
        CDUnknownFunctionPointerType _field548;
        CDUnknownFunctionPointerType _field549;
        CDUnknownFunctionPointerType _field550;
        CDUnknownFunctionPointerType _field551;
        CDUnknownFunctionPointerType _field552;
        CDUnknownFunctionPointerType _field553;
        CDUnknownFunctionPointerType _field554;
        CDUnknownFunctionPointerType _field555;
        CDUnknownFunctionPointerType _field556;
        CDUnknownFunctionPointerType _field557;
        CDUnknownFunctionPointerType _field558;
        CDUnknownFunctionPointerType _field559;
        CDUnknownFunctionPointerType _field560;
        CDUnknownFunctionPointerType _field561;
        CDUnknownFunctionPointerType _field562;
        CDUnknownFunctionPointerType _field563;
        CDUnknownFunctionPointerType _field564;
        CDUnknownFunctionPointerType _field565;
        CDUnknownFunctionPointerType _field566;
        CDUnknownFunctionPointerType _field567;
        CDUnknownFunctionPointerType _field568;
        CDUnknownFunctionPointerType _field569;
        CDUnknownFunctionPointerType _field570;
        CDUnknownFunctionPointerType _field571;
        CDUnknownFunctionPointerType _field572;
        CDUnknownFunctionPointerType _field573;
        CDUnknownFunctionPointerType _field574;
        CDUnknownFunctionPointerType _field575;
        CDUnknownFunctionPointerType _field576;
        CDUnknownFunctionPointerType _field577;
        CDUnknownFunctionPointerType _field578;
        CDUnknownFunctionPointerType _field579;
        CDUnknownFunctionPointerType _field580;
        CDUnknownFunctionPointerType _field581;
        CDUnknownFunctionPointerType _field582;
        CDUnknownFunctionPointerType _field583;
        CDUnknownFunctionPointerType _field584;
        CDUnknownFunctionPointerType _field585;
        CDUnknownFunctionPointerType _field586;
        CDUnknownFunctionPointerType _field587;
        CDUnknownFunctionPointerType _field588;
        CDUnknownFunctionPointerType _field589;
        CDUnknownFunctionPointerType _field590;
        CDUnknownFunctionPointerType _field591;
        CDUnknownFunctionPointerType _field592;
        CDUnknownFunctionPointerType _field593;
        CDUnknownFunctionPointerType _field594;
        CDUnknownFunctionPointerType _field595;
        CDUnknownFunctionPointerType _field596;
        CDUnknownFunctionPointerType _field597;
        CDUnknownFunctionPointerType _field598;
        CDUnknownFunctionPointerType _field599;
        CDUnknownFunctionPointerType _field600;
        CDUnknownFunctionPointerType _field601;
        CDUnknownFunctionPointerType _field602;
        CDUnknownFunctionPointerType _field603;
        CDUnknownFunctionPointerType _field604;
        CDUnknownFunctionPointerType _field605;
        CDUnknownFunctionPointerType _field606;
        CDUnknownFunctionPointerType _field607;
        CDUnknownFunctionPointerType _field608;
        CDUnknownFunctionPointerType _field609;
        CDUnknownFunctionPointerType _field610;
        CDUnknownFunctionPointerType _field611;
        CDUnknownFunctionPointerType _field612;
        CDUnknownFunctionPointerType _field613;
        CDUnknownFunctionPointerType _field614;
        CDUnknownFunctionPointerType _field615;
        CDUnknownFunctionPointerType _field616;
        CDUnknownFunctionPointerType _field617;
        CDUnknownFunctionPointerType _field618;
        CDUnknownFunctionPointerType _field619;
        CDUnknownFunctionPointerType _field620;
        CDUnknownFunctionPointerType _field621;
        CDUnknownFunctionPointerType _field622;
        CDUnknownFunctionPointerType _field623;
        CDUnknownFunctionPointerType _field624;
        CDUnknownFunctionPointerType _field625;
        CDUnknownFunctionPointerType _field626;
        CDUnknownFunctionPointerType _field627;
        CDUnknownFunctionPointerType _field628;
        CDUnknownFunctionPointerType _field629;
        CDUnknownFunctionPointerType _field630;
        CDUnknownFunctionPointerType _field631;
        CDUnknownFunctionPointerType _field632;
        CDUnknownFunctionPointerType _field633;
        CDUnknownFunctionPointerType _field634;
        CDUnknownFunctionPointerType _field635;
        CDUnknownFunctionPointerType _field636;
        CDUnknownFunctionPointerType _field637;
        CDUnknownFunctionPointerType _field638;
        CDUnknownFunctionPointerType _field639;
        CDUnknownFunctionPointerType _field640;
        CDUnknownFunctionPointerType _field641;
        CDUnknownFunctionPointerType _field642;
        CDUnknownFunctionPointerType _field643;
        CDUnknownFunctionPointerType _field644;
        CDUnknownFunctionPointerType _field645;
        CDUnknownFunctionPointerType _field646;
        CDUnknownFunctionPointerType _field647;
        CDUnknownFunctionPointerType _field648;
        CDUnknownFunctionPointerType _field649;
        CDUnknownFunctionPointerType _field650;
        CDUnknownFunctionPointerType _field651;
        CDUnknownFunctionPointerType _field652;
        CDUnknownFunctionPointerType _field653;
        CDUnknownFunctionPointerType _field654;
        CDUnknownFunctionPointerType _field655;
        CDUnknownFunctionPointerType _field656;
        CDUnknownFunctionPointerType _field657;
        CDUnknownFunctionPointerType _field658;
        CDUnknownFunctionPointerType _field659;
        CDUnknownFunctionPointerType _field660;
        CDUnknownFunctionPointerType _field661;
        CDUnknownFunctionPointerType _field662;
        CDUnknownFunctionPointerType _field663;
        CDUnknownFunctionPointerType _field664;
        CDUnknownFunctionPointerType _field665;
        CDUnknownFunctionPointerType _field666;
        CDUnknownFunctionPointerType _field667;
        CDUnknownFunctionPointerType _field668;
        CDUnknownFunctionPointerType _field669;
        CDUnknownFunctionPointerType _field670;
        CDUnknownFunctionPointerType _field671;
        CDUnknownFunctionPointerType _field672;
        CDUnknownFunctionPointerType _field673;
        CDUnknownFunctionPointerType _field674;
        CDUnknownFunctionPointerType _field675;
        CDUnknownFunctionPointerType _field676;
        CDUnknownFunctionPointerType _field677;
        CDUnknownFunctionPointerType _field678;
        CDUnknownFunctionPointerType _field679;
        CDUnknownFunctionPointerType _field680;
        CDUnknownFunctionPointerType _field681;
        CDUnknownFunctionPointerType _field682;
        CDUnknownFunctionPointerType _field683;
        CDUnknownFunctionPointerType _field684;
        CDUnknownFunctionPointerType _field685;
        CDUnknownFunctionPointerType _field686;
        CDUnknownFunctionPointerType _field687;
        CDUnknownFunctionPointerType _field688;
        CDUnknownFunctionPointerType _field689;
        CDUnknownFunctionPointerType _field690;
        CDUnknownFunctionPointerType _field691;
        CDUnknownFunctionPointerType _field692;
        CDUnknownFunctionPointerType _field693;
        CDUnknownFunctionPointerType _field694;
        CDUnknownFunctionPointerType _field695;
        CDUnknownFunctionPointerType _field696;
        CDUnknownFunctionPointerType _field697;
        CDUnknownFunctionPointerType _field698;
        CDUnknownFunctionPointerType _field699;
        CDUnknownFunctionPointerType _field700;
        CDUnknownFunctionPointerType _field701;
        CDUnknownFunctionPointerType _field702;
        CDUnknownFunctionPointerType _field703;
        CDUnknownFunctionPointerType _field704;
        CDUnknownFunctionPointerType _field705;
        CDUnknownFunctionPointerType _field706;
        CDUnknownFunctionPointerType _field707;
        CDUnknownFunctionPointerType _field708;
        CDUnknownFunctionPointerType _field709;
        CDUnknownFunctionPointerType _field710;
        CDUnknownFunctionPointerType _field711;
        CDUnknownFunctionPointerType _field712;
        CDUnknownFunctionPointerType _field713;
        CDUnknownFunctionPointerType _field714;
        CDUnknownFunctionPointerType _field715;
        CDUnknownFunctionPointerType _field716;
        CDUnknownFunctionPointerType _field717;
        CDUnknownFunctionPointerType _field718;
        CDUnknownFunctionPointerType _field719;
        CDUnknownFunctionPointerType _field720;
        CDUnknownFunctionPointerType _field721;
        CDUnknownFunctionPointerType _field722;
        CDUnknownFunctionPointerType _field723;
        CDUnknownFunctionPointerType _field724;
        CDUnknownFunctionPointerType _field725;
        CDUnknownFunctionPointerType _field726;
        CDUnknownFunctionPointerType _field727;
        CDUnknownFunctionPointerType _field728;
        CDUnknownFunctionPointerType _field729;
        CDUnknownFunctionPointerType _field730;
        CDUnknownFunctionPointerType _field731;
        CDUnknownFunctionPointerType _field732;
        CDUnknownFunctionPointerType _field733;
        CDUnknownFunctionPointerType _field734;
        CDUnknownFunctionPointerType _field735;
        CDUnknownFunctionPointerType _field736;
        CDUnknownFunctionPointerType _field737;
        CDUnknownFunctionPointerType _field738;
        CDUnknownFunctionPointerType _field739;
        CDUnknownFunctionPointerType _field740;
        CDUnknownFunctionPointerType _field741;
        CDUnknownFunctionPointerType _field742;
        CDUnknownFunctionPointerType _field743;
        CDUnknownFunctionPointerType _field744;
        CDUnknownFunctionPointerType _field745;
        CDUnknownFunctionPointerType _field746;
        CDUnknownFunctionPointerType _field747;
        CDUnknownFunctionPointerType _field748;
        CDUnknownFunctionPointerType _field749;
        CDUnknownFunctionPointerType _field750;
        CDUnknownFunctionPointerType _field751;
        CDUnknownFunctionPointerType _field752;
        CDUnknownFunctionPointerType _field753;
        CDUnknownFunctionPointerType _field754;
        CDUnknownFunctionPointerType _field755;
        CDUnknownFunctionPointerType _field756;
        CDUnknownFunctionPointerType _field757;
        CDUnknownFunctionPointerType _field758;
        CDUnknownFunctionPointerType _field759;
        CDUnknownFunctionPointerType _field760;
        CDUnknownFunctionPointerType _field761;
        CDUnknownFunctionPointerType _field762;
        CDUnknownFunctionPointerType _field763;
        CDUnknownFunctionPointerType _field764;
        CDUnknownFunctionPointerType _field765;
        CDUnknownFunctionPointerType _field766;
        CDUnknownFunctionPointerType _field767;
        CDUnknownFunctionPointerType _field768;
        CDUnknownFunctionPointerType _field769;
        CDUnknownFunctionPointerType _field770;
        CDUnknownFunctionPointerType _field771;
        CDUnknownFunctionPointerType _field772;
        CDUnknownFunctionPointerType _field773;
        CDUnknownFunctionPointerType _field774;
        CDUnknownFunctionPointerType _field775;
        CDUnknownFunctionPointerType _field776;
        CDUnknownFunctionPointerType _field777;
        CDUnknownFunctionPointerType _field778;
        CDUnknownFunctionPointerType _field779;
        CDUnknownFunctionPointerType _field780;
        CDUnknownFunctionPointerType _field781;
        CDUnknownFunctionPointerType _field782;
        CDUnknownFunctionPointerType _field783;
        CDUnknownFunctionPointerType _field784;
        CDUnknownFunctionPointerType _field785;
        CDUnknownFunctionPointerType _field786;
        CDUnknownFunctionPointerType _field787;
        CDUnknownFunctionPointerType _field788;
        CDUnknownFunctionPointerType _field789;
        CDUnknownFunctionPointerType _field790;
        CDUnknownFunctionPointerType _field791;
        CDUnknownFunctionPointerType _field792;
        CDUnknownFunctionPointerType _field793;
        CDUnknownFunctionPointerType _field794;
        CDUnknownFunctionPointerType _field795;
        CDUnknownFunctionPointerType _field796;
        CDUnknownFunctionPointerType _field797;
        CDUnknownFunctionPointerType _field798;
        CDUnknownFunctionPointerType _field799;
        CDUnknownFunctionPointerType _field800;
        CDUnknownFunctionPointerType _field801;
        CDUnknownFunctionPointerType _field802;
        CDUnknownFunctionPointerType _field803;
        CDUnknownFunctionPointerType _field804;
        CDUnknownFunctionPointerType _field805;
        CDUnknownFunctionPointerType _field806;
        CDUnknownFunctionPointerType _field807;
        CDUnknownFunctionPointerType _field808;
        CDUnknownFunctionPointerType _field809;
        CDUnknownFunctionPointerType _field810;
        CDUnknownFunctionPointerType _field811;
        CDUnknownFunctionPointerType _field812;
        CDUnknownFunctionPointerType _field813;
        CDUnknownFunctionPointerType _field814;
        CDUnknownFunctionPointerType _field815;
        CDUnknownFunctionPointerType _field816;
        CDUnknownFunctionPointerType _field817;
        CDUnknownFunctionPointerType _field818;
        CDUnknownFunctionPointerType _field819;
        CDUnknownFunctionPointerType _field820;
        CDUnknownFunctionPointerType _field821;
        CDUnknownFunctionPointerType _field822;
        CDUnknownFunctionPointerType _field823;
        CDUnknownFunctionPointerType _field824;
        CDUnknownFunctionPointerType _field825;
        CDUnknownFunctionPointerType _field826;
        CDUnknownFunctionPointerType _field827;
        CDUnknownFunctionPointerType _field828;
        CDUnknownFunctionPointerType _field829;
        CDUnknownFunctionPointerType _field830;
        CDUnknownFunctionPointerType _field831;
        CDUnknownFunctionPointerType _field832;
        CDUnknownFunctionPointerType _field833;
        CDUnknownFunctionPointerType _field834;
        CDUnknownFunctionPointerType _field835;
        CDUnknownFunctionPointerType _field836;
        CDUnknownFunctionPointerType _field837;
        CDUnknownFunctionPointerType _field838;
        CDUnknownFunctionPointerType _field839;
        CDUnknownFunctionPointerType _field840;
        CDUnknownFunctionPointerType _field841;
        CDUnknownFunctionPointerType _field842;
        CDUnknownFunctionPointerType _field843;
        CDUnknownFunctionPointerType _field844;
        CDUnknownFunctionPointerType _field845;
        CDUnknownFunctionPointerType _field846;
        CDUnknownFunctionPointerType _field847;
        CDUnknownFunctionPointerType _field848;
        CDUnknownFunctionPointerType _field849;
        CDUnknownFunctionPointerType _field850;
        CDUnknownFunctionPointerType _field851;
        CDUnknownFunctionPointerType _field852;
        CDUnknownFunctionPointerType _field853;
        CDUnknownFunctionPointerType _field854;
        CDUnknownFunctionPointerType _field855;
        CDUnknownFunctionPointerType _field856;
        CDUnknownFunctionPointerType _field857;
        CDUnknownFunctionPointerType _field858;
        CDUnknownFunctionPointerType _field859;
        CDUnknownFunctionPointerType _field860;
        CDUnknownFunctionPointerType _field861;
        CDUnknownFunctionPointerType _field862;
        CDUnknownFunctionPointerType _field863;
        CDUnknownFunctionPointerType _field864;
        CDUnknownFunctionPointerType _field865;
        CDUnknownFunctionPointerType _field866;
        CDUnknownFunctionPointerType _field867;
        CDUnknownFunctionPointerType _field868;
        CDUnknownFunctionPointerType _field869;
        CDUnknownFunctionPointerType _field870;
        CDUnknownFunctionPointerType _field871;
        CDUnknownFunctionPointerType _field872;
        CDUnknownFunctionPointerType _field873;
        CDUnknownFunctionPointerType _field874;
        CDUnknownFunctionPointerType _field875;
        CDUnknownFunctionPointerType _field876;
        CDUnknownFunctionPointerType _field877;
        CDUnknownFunctionPointerType _field878;
        CDUnknownFunctionPointerType _field879;
        CDUnknownFunctionPointerType _field880;
        CDUnknownFunctionPointerType _field881;
        CDUnknownFunctionPointerType _field882;
        CDUnknownFunctionPointerType _field883;
        CDUnknownFunctionPointerType _field884;
        CDUnknownFunctionPointerType _field885;
        CDUnknownFunctionPointerType _field886;
        CDUnknownFunctionPointerType _field887;
        CDUnknownFunctionPointerType _field888;
        CDUnknownFunctionPointerType _field889;
        CDUnknownFunctionPointerType _field890;
        CDUnknownFunctionPointerType _field891;
        CDUnknownFunctionPointerType _field892;
        CDUnknownFunctionPointerType _field893;
        CDUnknownFunctionPointerType _field894;
        CDUnknownFunctionPointerType _field895;
        CDUnknownFunctionPointerType _field896;
        CDUnknownFunctionPointerType _field897;
        CDUnknownFunctionPointerType _field898;
        CDUnknownFunctionPointerType _field899;
        CDUnknownFunctionPointerType _field900;
        CDUnknownFunctionPointerType _field901;
        CDUnknownFunctionPointerType _field902;
        CDUnknownFunctionPointerType _field903;
        CDUnknownFunctionPointerType _field904;
        CDUnknownFunctionPointerType _field905;
        CDUnknownFunctionPointerType _field906;
        CDUnknownFunctionPointerType _field907;
        CDUnknownFunctionPointerType _field908;
        CDUnknownFunctionPointerType _field909;
        CDUnknownFunctionPointerType _field910;
        CDUnknownFunctionPointerType _field911;
        CDUnknownFunctionPointerType _field912;
        CDUnknownFunctionPointerType _field913;
        CDUnknownFunctionPointerType _field914;
        CDUnknownFunctionPointerType _field915;
        CDUnknownFunctionPointerType _field916;
        CDUnknownFunctionPointerType _field917;
        CDUnknownFunctionPointerType _field918;
        CDUnknownFunctionPointerType _field919;
        CDUnknownFunctionPointerType _field920;
        CDUnknownFunctionPointerType _field921;
        CDUnknownFunctionPointerType _field922;
        CDUnknownFunctionPointerType _field923;
        CDUnknownFunctionPointerType _field924;
        CDUnknownFunctionPointerType _field925;
        CDUnknownFunctionPointerType _field926;
        CDUnknownFunctionPointerType _field927;
        CDUnknownFunctionPointerType _field928;
        CDUnknownFunctionPointerType _field929;
        CDUnknownFunctionPointerType _field930;
        CDUnknownFunctionPointerType _field931;
        CDUnknownFunctionPointerType _field932;
        CDUnknownFunctionPointerType _field933;
        CDUnknownFunctionPointerType _field934;
        CDUnknownFunctionPointerType _field935;
        CDUnknownFunctionPointerType _field936;
        CDUnknownFunctionPointerType _field937;
        CDUnknownFunctionPointerType _field938;
        CDUnknownFunctionPointerType _field939;
        CDUnknownFunctionPointerType _field940;
        CDUnknownFunctionPointerType _field941;
        CDUnknownFunctionPointerType _field942;
        CDUnknownFunctionPointerType _field943;
        CDUnknownFunctionPointerType _field944;
        CDUnknownFunctionPointerType _field945;
        CDUnknownFunctionPointerType _field946;
        CDUnknownFunctionPointerType _field947;
        CDUnknownFunctionPointerType _field948;
        CDUnknownFunctionPointerType _field949;
        CDUnknownFunctionPointerType _field950;
        CDUnknownFunctionPointerType _field951;
        CDUnknownFunctionPointerType _field952;
        CDUnknownFunctionPointerType _field953;
        CDUnknownFunctionPointerType _field954;
        CDUnknownFunctionPointerType _field955;
        CDUnknownFunctionPointerType _field956;
        CDUnknownFunctionPointerType _field957;
        CDUnknownFunctionPointerType _field958;
        CDUnknownFunctionPointerType _field959;
        CDUnknownFunctionPointerType _field960;
        CDUnknownFunctionPointerType _field961;
        CDUnknownFunctionPointerType _field962;
        CDUnknownFunctionPointerType _field963;
        CDUnknownFunctionPointerType _field964;
        CDUnknownFunctionPointerType _field965;
        CDUnknownFunctionPointerType _field966;
        CDUnknownFunctionPointerType _field967;
        CDUnknownFunctionPointerType _field968;
        CDUnknownFunctionPointerType _field969;
        CDUnknownFunctionPointerType _field970;
        CDUnknownFunctionPointerType _field971;
        CDUnknownFunctionPointerType _field972;
        CDUnknownFunctionPointerType _field973;
        CDUnknownFunctionPointerType _field974;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RootStorage;

struct _SSRW_BLOB {
    unsigned int cbSize;
    char *pData;
};

struct _SSRW_CLIPDATA;

struct _SSRW_FILETIME {
    unsigned int dwLowDateTime;
    unsigned int dwHighDateTime;
};

struct _SSRW_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwOO_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwPropVariant {
    unsigned short vt;
    union {
        unsigned char cVal;
        short iVal;
        int lVal;
        double dblVal;
        unsigned short *bstrVal;
        struct _SSRW_BLOB blob;
        char *pszVal;
        struct _SSRW_FILETIME filetime;
        struct _SSRW_CLIPDATA *pclipdata;
        short boolVal;
    } v;
};

struct _StgInfo {
    unsigned short *_field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    struct _SSRW_GUID _field8;
};

struct _Storage;

struct _SymbolsTables {
    struct __CFString **_field1;
    struct __CFString **_field2;
};

struct _TPConstrainToPageLayoutContext {
    id _field1;
    id _field2;
    id _field3;
    struct CGPoint *_field4;
    unsigned long long *_field5;
};

struct _TPPositionAttachmentContext {
    id _field1;
    struct CGPoint _field2;
    id _field3;
    id _field4;
    char _field5;
};

struct _TSDContentBlend {
    TSDTexturedRectangle *fromTR;
    TSDTexturedRectangle *toTR;
    double blendPercent;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSPReferenceOrderedSetEntry {
    void *_field1;
    struct _TSPReferenceOrderedSetEntry *_field2;
};

struct _TSTLexiconCompletionOptions {
    char _adoptFunctionArgumentList;
    char _insertBareFunctionStartToken;
    char _insertBareLetToken;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    unsigned long long _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFString;

struct __CTFont;

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long __value_;
};

struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> *_field1;
};

struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> __bucket_list_;
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __value_;
    } __p1_;
    struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
        unsigned long long __value_;
    } __p2_;
    struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
        float __value_;
    } __p3_;
};

struct __list_node_base<unsigned long, void *> {
    struct __list_node_base<unsigned long, void *> *__prev_;
    struct __list_node_base<unsigned long, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct __wrap_iter<double *> {
    double *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _tagLevelItem {
    struct _tagLevelItem *_field1;
    struct _tagOctreeNode *_field2;
};

struct _tagOctree {
    struct _tagOctreeNode *_field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _tagRgbQuad *_field4;
    struct _tagLevelItem *_field5[9];
};

struct _tagOctreeNode {
    struct _tagOctreeNode *_field1;
    struct _tagOctreeNode *_field2[8];
    unsigned int _field3;
    struct _tagFPRgbTriple {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
    } _field4;
    unsigned short _field5;
};

struct _tagRgbQuad {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlBuf;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
};

struct array<NSObject *, 8> {
    NSObject *__elems_[8];
};

struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> {
    struct ObjcSharedPtr<NSObject> __elems_[8];
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3D::GLSingleState, 2> {
    struct GLSingleState __elems_[2];
};

struct array<TSCH3D::GLSingleState, 4> {
    struct GLSingleState __elems_[4];
};

struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> {
    struct Data {
        tvec2_84d5962d _field1;
        tvec2_84d5962d _field2;
    } _field1[3];
};

struct array<TSCH3D::TextureAttributes, 8> {
    struct TextureAttributes __elems_[8];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct array<signed char, 8> {
    char __elems_[8];
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct auto_ptr<TSP::PersistedObjectUUIDMapOperation>;

struct auto_ptr<WrdCharacterTextRun> {
    struct WrdCharacterTextRun *_field1;
};

struct auto_ptr<WrdParagraphTextRun> {
    struct WrdParagraphTextRun *_field1;
};

struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
};

struct auto_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>>> {
    unordered_map_caa2f3b1 *__ptr_;
};

struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 *__ptr_;
};

struct basic_istream<char, std::__1::char_traits<char>>;

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct bitset<5> {
    unsigned long long __first_;
};

struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
};

struct deque<EPESHorizontalRange, std::__1::allocator<EPESHorizontalRange>> {
    struct __split_buffer<EPESHorizontalRange *, std::__1::allocator<EPESHorizontalRange *>> {
        struct EPESHorizontalRange **__first_;
        struct EPESHorizontalRange **__begin_;
        struct EPESHorizontalRange **__end_;
        struct __compressed_pair<EPESHorizontalRange **, std::__1::allocator<EPESHorizontalRange *>> {
            struct EPESHorizontalRange **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<EPESHorizontalRange>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> {
    struct __split_buffer<EQKitLayoutContext *, std::__1::allocator<EQKitLayoutContext *>> {
        struct EQKitLayoutContext **_field1;
        struct EQKitLayoutContext **_field2;
        struct EQKitLayoutContext **_field3;
        struct __compressed_pair<EQKitLayoutContext **, std::__1::allocator<EQKitLayoutContext *>> {
            struct EQKitLayoutContext **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutContext>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> {
    struct __split_buffer<EQKitLayoutElementaryStack *, std::__1::allocator<EQKitLayoutElementaryStack *>> {
        struct EQKitLayoutElementaryStack **_field1;
        struct EQKitLayoutElementaryStack **_field2;
        struct EQKitLayoutElementaryStack **_field3;
        struct __compressed_pair<EQKitLayoutElementaryStack **, std::__1::allocator<EQKitLayoutElementaryStack *>> {
            struct EQKitLayoutElementaryStack **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutElementaryStack>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> {
    struct __split_buffer<EQKitLayoutRow *, std::__1::allocator<EQKitLayoutRow *>> {
        struct EQKitLayoutRow **_field1;
        struct EQKitLayoutRow **_field2;
        struct EQKitLayoutRow **_field3;
        struct __compressed_pair<EQKitLayoutRow **, std::__1::allocator<EQKitLayoutRow *>> {
            struct EQKitLayoutRow **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutRow>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> {
    struct __split_buffer<EQKitLayoutStretchedOperator *, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
        struct EQKitLayoutStretchedOperator **_field1;
        struct EQKitLayoutStretchedOperator **_field2;
        struct EQKitLayoutStretchedOperator **_field3;
        struct __compressed_pair<EQKitLayoutStretchedOperator **, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
            struct EQKitLayoutStretchedOperator **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutStretchedOperator>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> {
    struct __split_buffer<EQKitLayoutTable *, std::__1::allocator<EQKitLayoutTable *>> {
        struct EQKitLayoutTable **_field1;
        struct EQKitLayoutTable **_field2;
        struct EQKitLayoutTable **_field3;
        struct __compressed_pair<EQKitLayoutTable **, std::__1::allocator<EQKitLayoutTable *>> {
            struct EQKitLayoutTable **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutTable>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> {
    struct __split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *>> {
        int **__first_;
        int **__begin_;
        int **__end_;
        struct __compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *>> {
            int **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<InsertInfo, std::__1::allocator<InsertInfo>> {
    struct __split_buffer<InsertInfo *, std::__1::allocator<InsertInfo *>> {
        struct InsertInfo **_field1;
        struct InsertInfo **_field2;
        struct InsertInfo **_field3;
        struct __compressed_pair<InsertInfo **, std::__1::allocator<InsertInfo *>> {
            struct InsertInfo **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<InsertInfo>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> {
    struct __split_buffer<TSCEEvaluationContext **, std::__1::allocator<TSCEEvaluationContext **>> {
        struct TSCEEvaluationContext ***__first_;
        struct TSCEEvaluationContext ***__begin_;
        struct TSCEEvaluationContext ***__end_;
        struct __compressed_pair<TSCEEvaluationContext ***, std::__1::allocator<TSCEEvaluationContext **>> {
            struct TSCEEvaluationContext ***__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEEvaluationContext *>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> {
    struct __split_buffer<TSCH3D::Transform *, std::__1::allocator<TSCH3D::Transform *>> {
        struct Transform **_field1;
        struct Transform **_field2;
        struct Transform **_field3;
        struct __compressed_pair<TSCH3D::Transform **, std::__1::allocator<TSCH3D::Transform *>> {
            struct Transform **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCH3D::Transform>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> {
    struct __split_buffer<TSP::WrittenObjectInfo *, std::__1::allocator<TSP::WrittenObjectInfo *>> {
        struct WrittenObjectInfo **__first_;
        struct WrittenObjectInfo **__begin_;
        struct WrittenObjectInfo **__end_;
        struct __compressed_pair<TSP::WrittenObjectInfo **, std::__1::allocator<TSP::WrittenObjectInfo *>> {
            struct WrittenObjectInfo **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSP::WrittenObjectInfo>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<_xmlNode *, std::__1::allocator<_xmlNode *>> {
    struct __split_buffer<_xmlNode **, std::__1::allocator<_xmlNode **>> {
        struct _xmlNode ***__first_;
        struct _xmlNode ***__begin_;
        struct _xmlNode ***__end_;
        struct __compressed_pair<_xmlNode ***, std::__1::allocator<_xmlNode **>> {
            struct _xmlNode ***__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<_xmlNode *>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<float, std::__1::allocator<float>> {
    struct __split_buffer<float *, std::__1::allocator<float *>> {
        float **__first_;
        float **__begin_;
        float **__end_;
        struct __compressed_pair<float **, std::__1::allocator<float *>> {
            float **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<float>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    struct __split_buffer<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>*>> {
        id **_field1;
        id **_field2;
        id **_field3;
        struct __compressed_pair<id<EQKitLayoutNode>**, std::__1::allocator<id<EQKitLayoutNode>*>> {
            id **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<id<EQKitLayoutNode>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<unsigned long, std::__1::allocator<unsigned long>> {
    struct __split_buffer<unsigned long *, std::__1::allocator<unsigned long *>> {
        unsigned long long **_field1;
        unsigned long long **_field2;
        unsigned long long **_field3;
        struct __compressed_pair<unsigned long **, std::__1::allocator<unsigned long *>> {
            unsigned long long **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> _field3;
};

struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
    struct __split_buffer<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        CDUnknownBlockType **_field1;
        CDUnknownBlockType **_field2;
        CDUnknownBlockType **_field3;
        struct __compressed_pair<void (^**)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
            CDUnknownBlockType **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        unsigned long long _field1;
    } _field3;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<id, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::pair<id, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __hash_table<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct map<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>, CGPointCompare, std::__1::allocator<std::__1::pair<const CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> {
    struct __tree<std::__1::__value_type<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, std::__1::__map_value_compare<CGPoint, std::__1::__value_type<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, CGPointCompare, true>, std::__1::allocator<std::__1::__value_type<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<CGPoint, std::__1::__value_type<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, CGPointCompare, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<Class, int, std::__1::less<Class>, std::__1::allocator<std::__1::pair<const Class, int>>> {
    struct __tree<std::__1::__value_type<Class, int>, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>, std::__1::allocator<std::__1::__value_type<Class, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Class, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds, std::__1::less<TSCH3D::SceneObjectSharedPointer>, std::__1::allocator<std::__1::pair<const TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
    struct __tree<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>, std::__1::allocator<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>, std::__1::less<TSUBezierPath *>, std::__1::allocator<std::__1::pair<TSUBezierPath *const, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> {
    struct __tree<std::__1::__value_type<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, std::__1::__map_value_compare<TSUBezierPath *, std::__1::__value_type<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, std::__1::less<TSUBezierPath *>, true>, std::__1::allocator<std::__1::__value_type<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUBezierPath *, std::__1::__value_type<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>, std::__1::less<TSUBezierPath *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSUCellCoord, TSTCell *, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, TSTCell *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, TSTCell *>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WDAnnotation *, int, std::__1::less<WDAnnotation *>, std::__1::allocator<std::__1::pair<WDAnnotation *const, int>>> {
    struct __tree<std::__1::__value_type<WDAnnotation *, int>, std::__1::__map_value_compare<WDAnnotation *, std::__1::__value_type<WDAnnotation *, int>, std::__1::less<WDAnnotation *>, true>, std::__1::allocator<std::__1::__value_type<WDAnnotation *, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WDAnnotation *, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<WDAnnotation *, std::__1::__value_type<WDAnnotation *, int>, std::__1::less<WDAnnotation *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<WrdStory *, unsigned short, std::__1::less<WrdStory *>, std::__1::allocator<std::__1::pair<WrdStory *const, unsigned short>>> {
    struct __tree<std::__1::__value_type<WrdStory *, unsigned short>, std::__1::__map_value_compare<WrdStory *, std::__1::__value_type<WrdStory *, unsigned short>, std::__1::less<WrdStory *>, true>, std::__1::allocator<std::__1::__value_type<WrdStory *, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WrdStory *, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<WrdStory *, std::__1::__value_type<WrdStory *, unsigned short>, std::__1::less<WrdStory *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> {
    struct __tree<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, TSPFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPFieldTreeNode *>>> {
    struct __tree<std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TSPFieldTreeNode *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TSPFieldTreeNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPFieldTreeNode *>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, WrdStory *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, WrdStory *>>> {
    struct __tree<std::__1::__value_type<int, WrdStory *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, WrdStory *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, WrdStory *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, WrdStory *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, WrdStory *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> {
    struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::pair<Class, std::__1::basic_string<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> {
    struct __tree<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::pair<long long, long long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> {
    struct __tree<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, unsigned long, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, unsigned long>>> {
    struct __tree<std::__1::__value_type<long, unsigned long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> {
    struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, TSU::UUIDData<TSP::UUIDData>, std::__1::greater<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __tree<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdCharacterProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdCharacterProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdCharacterProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdCharacterProperties *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdCharacterProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdCharacterProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdParagraphProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdParagraphProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdParagraphProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdParagraphProperties *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdParagraphProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdParagraphProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, WrdTableProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdTableProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdTableProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdTableProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdTableProperties *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdTableProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdTableProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> {
    struct __tree<std::__1::__value_type<unsigned int, XlChartEnteredData *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XlChartEnteredData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> {
    struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, unsigned int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> {
    struct __tree<std::__1::__value_type<unsigned long, CGRect>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, CGRect>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSUBezierPath *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUBezierPath *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSUBezierPath *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSUBezierPath *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSUBezierPath *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSUBezierPath *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSUBezierPath *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned short, unsigned long>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TSCEASTNodeArray *, int>;

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
};

struct pair<TSUCellCoord, double>;

struct pair<_NSRange, _NSRange>;

struct pair<const char *, const char *> {
    char *_field1;
    char *_field2;
};

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct pair<signed char, TSCH3DShaderVariableLinkage *> {
    char _field1;
    id _field2;
};

struct pair<unsigned int, bool>;

struct pair<unsigned long, TSDDrawableInfo *>;

struct pair<unsigned long, unsigned short>;

struct path_descr;

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
};

struct priority_queue<TSKCursorInRevision, std::__1::vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>>, TSKCursorInRevisionComparator> {
    struct vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>> _field1;
    struct TSKCursorInRevisionComparator _field2;
};

struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> {
    struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> c;
};

struct range<double> {
    double _field1;
    double _field2;
};

struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
};

struct scoped_array<unsigned char> {
    char *_field1;
};

struct segment_data<double>;

struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorReverseLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>;

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
    struct __tree<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<wchar_t, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<wchar_t>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSUStringChunk>;

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sortColorEntry;

struct stack<EPESHorizontalRange, std::__1::deque<EPESHorizontalRange, std::__1::allocator<EPESHorizontalRange>>> {
    struct deque<EPESHorizontalRange, std::__1::allocator<EPESHorizontalRange>> c;
};

struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> {
    struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> _field1;
};

struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> {
    struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> _field1;
};

struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> {
    struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> _field1;
};

struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> {
    struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> _field1;
};

struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> {
    struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> _field1;
};

struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>>> {
    struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> c;
};

struct stack<TSCEEvaluationContext *, std::__1::deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>>> {
    struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> c;
};

struct stack<_xmlNode *, std::__1::deque<_xmlNode *, std::__1::allocator<_xmlNode *>>> {
    struct deque<_xmlNode *, std::__1::allocator<_xmlNode *>> c;
};

struct stack<float, std::__1::deque<float, std::__1::allocator<float>>> {
    struct deque<float, std::__1::allocator<float>> c;
};

struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> {
    struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field1;
};

struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> {
    struct deque<unsigned long, std::__1::allocator<unsigned long>> _field1;
};

struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> {
    struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tsuSaPage {
    CDUnknownFunctionPointerType *_field1;
};

struct tvec1<float> {
    CDUnion_d07f0a1e ;
};

struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
};

struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> {
    struct __hash_table<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>, NSStringHash, NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet, TSCE::TSCERemoteDataSpecifierHash, TSCE::TSCERemoteDataSpecifierEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSCERemoteDataSpecifier>, TSCECellCoordSet>, TSCE::TSCERemoteDataSpecifierEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCECategoryLevel, int, std::__1::hash<TSCECategoryLevel>, std::__1::equal_to<TSCECategoryLevel>, std::__1::allocator<std::__1::pair<const TSCECategoryLevel, int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECategoryLevel, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, NSString *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, NSString *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, NSString *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSCEFormula, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSCEFormula>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSCEFormula>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTConditionalStyleSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSTImportWarningSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTImportWarningSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCECellRef, TSUCellRect, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSUCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSUCellRect>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEColumnRangeContextPair, TSCECellCoordSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairHash, true>, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCECellCoordSet>, TSCEColumnRangeContextPairEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEColumnRangeContextPair, TSCEInternalCellRefSet, TSCEColumnRangeContextPairHash, TSCEColumnRangeContextPairEqual, std::__1::allocator<std::__1::pair<const TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairHash, true>, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEColumnRangeContextPair, std::__1::__hash_value_type<TSCEColumnRangeContextPair, TSCEInternalCellRefSet>, TSCEColumnRangeContextPairEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *, std::__1::hash<TSCEFormulaOwnerKind>, std::__1::equal_to<TSCEFormulaOwnerKind>, std::__1::allocator<std::__1::pair<const TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, std::__1::__unordered_map_hasher<TSCEFormulaOwnerKind, std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, std::__1::hash<TSCEFormulaOwnerKind>, true>, std::__1::__unordered_map_equal<TSCEFormulaOwnerKind, std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, std::__1::equal_to<TSCEFormulaOwnerKind>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFormulaOwnerKind, std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, std::__1::hash<TSCEFormulaOwnerKind>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFormulaOwnerKind, std::__1::__hash_value_type<TSCEFormulaOwnerKind, TSCEFormulasForUndoForOwnerKind *>, std::__1::equal_to<TSCEFormulaOwnerKind>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::__1::hash<TSCEFunctionIndex>, std::__1::equal_to<TSCEFunctionIndex>, std::__1::allocator<std::__1::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, TSU::UUIDSet<TSP::UUIDSet>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDCoord<TSP::UUIDCoord>, std::__1::hash<TSUUuidCoord>, std::__1::equal_to<TSU::UUIDCoord<TSP::UUIDCoord>>, std::__1::allocator<TSU::UUIDCoord<TSP::UUIDCoord>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, TSTCellDiff *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCellDiff *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTExpressionNode *, TSTCSENodeData, std::__1::hash<TSTExpressionNode *>, std::__1::equal_to<TSTExpressionNode *>, std::__1::allocator<std::__1::pair<TSTExpressionNode *const, TSTCSENodeData>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTTableDataObject *, unsigned int, TSTTableDataObjectHash, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<TSTTableDataObject *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true>, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCETableResolver *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUMutableUUIDSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSUPointerKeyDictionary *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEInternalCellRefSet>>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned char, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned char>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned char>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned int, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned int>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSCECombinedColumnRefs, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCECombinedColumnRefs>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCECombinedColumnRefs>, TSCECellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSCERefErrorCell, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERefErrorCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERefErrorCell>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSCERemoteDataSpecifierSet *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCERemoteDataSpecifierSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCERemoteDataSpecifierSet *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSTAggNode *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::__1::hash<TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, std::__1::allocator<std::__1::pair<const TSUModelCellCoord, TSUModelCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::__1::hash<TSUViewColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, std::__1::allocator<std::__1::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::__unordered_map_hasher<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::hash<TSUViewColumnIndex>, true>, std::__1::__unordered_map_equal<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::hash<TSUViewColumnIndex>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUViewColumnIndex, std::__1::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__1::equal_to<TSUViewColumnIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const char *, unsigned int, TSP::CStringHash, TSP::CStringEqualTo, std::__1::allocator<std::__1::pair<const char *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, unsigned int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>, std::__1::allocator<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ReferenceMapInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ReferenceMapInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, __unsafe_unretained Class, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DigestHash, TSP::DigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>, TSCHViewCellCoordinateHash, TSCHViewCellCoordinateEqual, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, std::__1::__unordered_map_hasher<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>, std::__1::__unordered_map_equal<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSCEValue>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSTTableDataObject *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableDataObject *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, TSUIndexSet *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSUIndexSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSUIndexSet *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, __unsafe_unretained Class, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const char *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const char *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const char *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const google::protobuf::Message *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, TSUModelCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUModelCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUModelCellRect>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSCECellCoordSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCECellCoordSet>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSUIndexSet, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSUIndexSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSUIndexSet>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSUIndexSet>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, TSCEInternalRangeReference, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSCEInternalRangeReference>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinatesEqualStruct, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSCEInternalRangeReference>, TSCECellCoordinatesEqualStruct, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<TSUCellCoord, unsigned short, TSCECellCoordinateHash, TSCECellCoordinatesEqualStruct, std::__1::allocator<std::__1::pair<const TSUCellCoord, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinateHash, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinatesEqualStruct, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, unsigned short>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, unsigned short>, TSCECellCoordinatesEqualStruct, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
    struct __hash_table<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEArgumentType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEArgumentType>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCEArgumentType>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> {
    struct __hash_table<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECategoryRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECategoryRef, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECategoryRef>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECategoryRef>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
    struct __hash_table<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEReferenceType>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEReferenceType>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
};

struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __hash_table<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned short, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned short>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<unsigned short>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<(anonymous namespace)::Range, std::__1::allocator<(anonymous namespace)::Range>> {
    struct Range *__begin_;
    struct Range *__end_;
    struct __compressed_pair<(anonymous namespace)::Range *, std::__1::allocator<(anonymous namespace)::Range>> {
        struct Range *__value_;
    } __end_cap_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
};

struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *__begin_;
    struct CGSize *__end_;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *__value_;
    } __end_cap_;
};

struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<EQKit::OpticalKern::Spec::Entry *, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__value_;
    } __end_cap_;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
};

struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
    struct SubContext *_field1;
    struct SubContext *_field2;
    struct __compressed_pair<GSSPDeserializationContext::SubContext *, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
        struct SubContext *_field1;
    } _field3;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineAstNode>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstNode>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineAstRange>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstRange>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstRange>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstRange>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineAstUidTract>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstUidTract>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineFormula>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineFormula>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
        struct GSUNSWrapper<GSSPCalculationEngineFormula> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCellChange>, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
    struct GSUNSWrapper<GSSPCellChange> *__begin_;
    struct GSUNSWrapper<GSSPCellChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellChange>*, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
        struct GSUNSWrapper<GSSPCellChange> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCellRange>, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
    struct GSUNSWrapper<GSSPCellRange> *__begin_;
    struct GSUNSWrapper<GSSPCellRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellRange>*, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
        struct GSUNSWrapper<GSSPCellRange> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisMultiData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisMultiData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartGridValue>, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
    struct GSUNSWrapper<GSSPChartGridValue> *__begin_;
    struct GSUNSWrapper<GSSPChartGridValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartGridValue>*, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
        struct GSUNSWrapper<GSSPChartGridValue> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartMediatorAxisFormat>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisFormat>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__begin_;
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>*, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
        struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCitationRecord>, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
    struct GSUNSWrapper<GSSPCitationRecord> *__begin_;
    struct GSUNSWrapper<GSSPCitationRecord> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCitationRecord>*, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
        struct GSUNSWrapper<GSSPCitationRecord> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCustomFormatCondition>, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__begin_;
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCustomFormatCondition>*, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
        struct GSUNSWrapper<GSSPCustomFormatCondition> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPFloatingDrawable>, std::__1::allocator<GSUNSWrapper<GSSPFloatingDrawable>>> {
    struct GSUNSWrapper<GSSPFloatingDrawable> *__begin_;
    struct GSUNSWrapper<GSSPFloatingDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPFloatingDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPFloatingDrawable>>> {
        struct GSUNSWrapper<GSSPFloatingDrawable> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPImageData>, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
    struct GSUNSWrapper<GSSPImageData> *__begin_;
    struct GSUNSWrapper<GSSPImageData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPImageData>*, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
        struct GSUNSWrapper<GSSPImageData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPPageMaster>, std::__1::allocator<GSUNSWrapper<GSSPPageMaster>>> {
    struct GSUNSWrapper<GSSPPageMaster> *__begin_;
    struct GSUNSWrapper<GSSPPageMaster> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPageMaster>*, std::__1::allocator<GSUNSWrapper<GSSPPageMaster>>> {
        struct GSUNSWrapper<GSSPPageMaster> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPPasteboardDrawable>, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__begin_;
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPasteboardDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
        struct GSUNSWrapper<GSSPPasteboardDrawable> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPRange>, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
    struct GSUNSWrapper<GSSPRange> *__begin_;
    struct GSUNSWrapper<GSSPRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRange>*, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
        struct GSUNSWrapper<GSSPRange> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPRect>, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
    struct GSUNSWrapper<GSSPRect> *__begin_;
    struct GSUNSWrapper<GSSPRect> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRect>*, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
        struct GSUNSWrapper<GSSPRect> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPSize>, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
    struct GSUNSWrapper<GSSPSize> *__begin_;
    struct GSUNSWrapper<GSSPSize> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPSize>*, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
        struct GSUNSWrapper<GSSPSize> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPStorageAction>, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
    struct GSUNSWrapper<GSSPStorageAction> *__begin_;
    struct GSUNSWrapper<GSSPStorageAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageAction>*, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
        struct GSUNSWrapper<GSSPStorageAction> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPStorageActionGroup>, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
    struct GSUNSWrapper<GSSPStorageActionGroup> *__begin_;
    struct GSUNSWrapper<GSSPStorageActionGroup> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageActionGroup>*, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
        struct GSUNSWrapper<GSSPStorageActionGroup> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPTOCMapEntry>, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
    struct GSUNSWrapper<GSSPTOCMapEntry> *__begin_;
    struct GSUNSWrapper<GSSPTOCMapEntry> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTOCMapEntry>*, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
        struct GSUNSWrapper<GSSPTOCMapEntry> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPTableChange>, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
    struct GSUNSWrapper<GSSPTableChange> *__begin_;
    struct GSUNSWrapper<GSSPTableChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTableChange>*, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
        struct GSUNSWrapper<GSSPTableChange> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPUserDefinedGuideStorage>, std::__1::allocator<GSUNSWrapper<GSSPUserDefinedGuideStorage>>> {
    struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__begin_;
    struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPUserDefinedGuideStorage>*, std::__1::allocator<GSUNSWrapper<GSSPUserDefinedGuideStorage>>> {
        struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSObject>, std::__1::allocator<GSUNSWrapper<NSObject>>> {
    struct GSUNSWrapper<NSObject> *__begin_;
    struct GSUNSWrapper<NSObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSObject>*, std::__1::allocator<GSUNSWrapper<NSObject>>> {
        struct GSUNSWrapper<NSObject> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSUUID>, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
    struct GSUNSWrapper<NSUUID> *__begin_;
    struct GSUNSWrapper<NSUUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSUUID>*, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
        struct GSUNSWrapper<NSUUID> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSAGalleryItem>, std::__1::allocator<GSUNSWrapper<TSAGalleryItem>>> {
    struct GSUNSWrapper<TSAGalleryItem> *__begin_;
    struct GSUNSWrapper<TSAGalleryItem> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSAGalleryItem>*, std::__1::allocator<GSUNSWrapper<TSAGalleryItem>>> {
        struct GSUNSWrapper<TSAGalleryItem> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCECellValue>, std::__1::allocator<GSUNSWrapper<TSCECellValue>>> {
    struct GSUNSWrapper<TSCECellValue> *__begin_;
    struct GSUNSWrapper<TSCECellValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCECellValue>*, std::__1::allocator<GSUNSWrapper<TSCECellValue>>> {
        struct GSUNSWrapper<TSCECellValue> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCEOwnerUidMapper>, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__begin_;
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCEOwnerUidMapper>*, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
        struct GSUNSWrapper<TSCEOwnerUidMapper> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCERemoteDataSpecifier>, std::__1::allocator<GSUNSWrapper<TSCERemoteDataSpecifier>>> {
    struct GSUNSWrapper<TSCERemoteDataSpecifier> *__begin_;
    struct GSUNSWrapper<TSCERemoteDataSpecifier> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCERemoteDataSpecifier>*, std::__1::allocator<GSUNSWrapper<TSCERemoteDataSpecifier>>> {
        struct GSUNSWrapper<TSCERemoteDataSpecifier> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisID>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
    struct GSUNSWrapper<TSCHChartAxisID> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisID> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisID>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
        struct GSUNSWrapper<TSCHChartAxisID> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisNonStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartSeriesNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartSeriesStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHSelectionPath>, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
    struct GSUNSWrapper<TSCHSelectionPath> *__begin_;
    struct GSUNSWrapper<TSCHSelectionPath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHSelectionPath>*, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
        struct GSUNSWrapper<TSCHSelectionPath> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDBezierNode>, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
    struct GSUNSWrapper<TSDBezierNode> *__begin_;
    struct GSUNSWrapper<TSDBezierNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierNode>*, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
        struct GSUNSWrapper<TSDBezierNode> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDBezierSubpath>, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
    struct GSUNSWrapper<TSDBezierSubpath> *__begin_;
    struct GSUNSWrapper<TSDBezierSubpath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierSubpath>*, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
        struct GSUNSWrapper<TSDBezierSubpath> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDCommentStorage>, std::__1::allocator<GSUNSWrapper<TSDCommentStorage>>> {
    struct GSUNSWrapper<TSDCommentStorage> *__begin_;
    struct GSUNSWrapper<TSDCommentStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDCommentStorage>*, std::__1::allocator<GSUNSWrapper<TSDCommentStorage>>> {
        struct GSUNSWrapper<TSDCommentStorage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDPencilAnnotation>, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotation>>> {
    struct GSUNSWrapper<TSDPencilAnnotation> *__begin_;
    struct GSUNSWrapper<TSDPencilAnnotation> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDPencilAnnotation>*, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotation>>> {
        struct GSUNSWrapper<TSDPencilAnnotation> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDPencilAnnotationStorage>, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotationStorage>>> {
    struct GSUNSWrapper<TSDPencilAnnotationStorage> *__begin_;
    struct GSUNSWrapper<TSDPencilAnnotationStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDPencilAnnotationStorage>*, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotationStorage>>> {
        struct GSUNSWrapper<TSDPencilAnnotationStorage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDUserDefinedGuide>, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
    struct GSUNSWrapper<TSDUserDefinedGuide> *__begin_;
    struct GSUNSWrapper<TSDUserDefinedGuide> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDUserDefinedGuide>*, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
        struct GSUNSWrapper<TSDUserDefinedGuide> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKCommandResponse>, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
    struct GSUNSWrapper<TSKCommandResponse> *__begin_;
    struct GSUNSWrapper<TSKCommandResponse> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKCommandResponse>*, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
        struct GSUNSWrapper<TSKCommandResponse> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKImageDigestData>, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
    struct GSUNSWrapper<TSKImageDigestData> *__begin_;
    struct GSUNSWrapper<TSKImageDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKImageDigestData>*, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
        struct GSUNSWrapper<TSKImageDigestData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKMovieDigestData>, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
    struct GSUNSWrapper<TSKMovieDigestData> *__begin_;
    struct GSUNSWrapper<TSKMovieDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKMovieDigestData>*, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
        struct GSUNSWrapper<TSKMovieDigestData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKWebQuickLookImage>, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
    struct GSUNSWrapper<TSKWebQuickLookImage> *__begin_;
    struct GSUNSWrapper<TSKWebQuickLookImage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKWebQuickLookImage>*, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
        struct GSUNSWrapper<TSKWebQuickLookImage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSPObject>, std::__1::allocator<GSUNSWrapper<TSPObject>>> {
    struct GSUNSWrapper<TSPObject> *__begin_;
    struct GSUNSWrapper<TSPObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSPObject>*, std::__1::allocator<GSUNSWrapper<TSPObject>>> {
        struct GSUNSWrapper<TSPObject> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSSStyle>, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
    struct GSUNSWrapper<TSSStyle> *__begin_;
    struct GSUNSWrapper<TSSStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSSStyle>*, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
        struct GSUNSWrapper<TSSStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTCell>, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
    struct GSUNSWrapper<TSTCell> *__begin_;
    struct GSUNSWrapper<TSTCell> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTCell>*, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
        struct GSUNSWrapper<TSTCell> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTColumnAggregate>, std::__1::allocator<GSUNSWrapper<TSTColumnAggregate>>> {
    struct GSUNSWrapper<TSTColumnAggregate> *__begin_;
    struct GSUNSWrapper<TSTColumnAggregate> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTColumnAggregate>*, std::__1::allocator<GSUNSWrapper<TSTColumnAggregate>>> {
        struct GSUNSWrapper<TSTColumnAggregate> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTConditionalStyleRule>, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
    struct GSUNSWrapper<TSTConditionalStyleRule> *__begin_;
    struct GSUNSWrapper<TSTConditionalStyleRule> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTConditionalStyleRule>*, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
        struct GSUNSWrapper<TSTConditionalStyleRule> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTGroupNode>, std::__1::allocator<GSUNSWrapper<TSTGroupNode>>> {
    struct GSUNSWrapper<TSTGroupNode> *__begin_;
    struct GSUNSWrapper<TSTGroupNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTGroupNode>*, std::__1::allocator<GSUNSWrapper<TSTGroupNode>>> {
        struct GSUNSWrapper<TSTGroupNode> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTGroupingColumn>, std::__1::allocator<GSUNSWrapper<TSTGroupingColumn>>> {
    struct GSUNSWrapper<TSTGroupingColumn> *__begin_;
    struct GSUNSWrapper<TSTGroupingColumn> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTGroupingColumn>*, std::__1::allocator<GSUNSWrapper<TSTGroupingColumn>>> {
        struct GSUNSWrapper<TSTGroupingColumn> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTMergeAction>, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
    struct GSUNSWrapper<TSTMergeAction> *__begin_;
    struct GSUNSWrapper<TSTMergeAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTMergeAction>*, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
        struct GSUNSWrapper<TSTMergeAction> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTTableStrokePresetData>, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
    struct GSUNSWrapper<TSTTableStrokePresetData> *__begin_;
    struct GSUNSWrapper<TSTTableStrokePresetData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTTableStrokePresetData>*, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
        struct GSUNSWrapper<TSTTableStrokePresetData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSUCustomFormat>, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
    struct GSUNSWrapper<TSUCustomFormat> *__begin_;
    struct GSUNSWrapper<TSUCustomFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSUCustomFormat>*, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
        struct GSUNSWrapper<TSUCustomFormat> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSUUUIDPath>, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
    struct GSUNSWrapper<TSUUUIDPath> *_field1;
    struct GSUNSWrapper<TSUUUIDPath> *_field2;
    struct __compressed_pair<GSUNSWrapper<TSUUUIDPath>*, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
        struct GSUNSWrapper<TSUUUIDPath> *_field1;
    } _field3;
};

struct vector<GSUNSWrapper<TSWPChangeSession>, std::__1::allocator<GSUNSWrapper<TSWPChangeSession>>> {
    struct GSUNSWrapper<TSWPChangeSession> *__begin_;
    struct GSUNSWrapper<TSWPChangeSession> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPChangeSession>*, std::__1::allocator<GSUNSWrapper<TSWPChangeSession>>> {
        struct GSUNSWrapper<TSWPChangeSession> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPFlowInfo>, std::__1::allocator<GSUNSWrapper<TSWPFlowInfo>>> {
    struct GSUNSWrapper<TSWPFlowInfo> *__begin_;
    struct GSUNSWrapper<TSWPFlowInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPFlowInfo>*, std::__1::allocator<GSUNSWrapper<TSWPFlowInfo>>> {
        struct GSUNSWrapper<TSWPFlowInfo> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPParagraphStyle>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
    struct GSUNSWrapper<TSWPParagraphStyle> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStyle>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
        struct GSUNSWrapper<TSWPParagraphStyle> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPTOCEntryData>, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
    struct GSUNSWrapper<TSWPTOCEntryData> *__begin_;
    struct GSUNSWrapper<TSWPTOCEntryData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTOCEntryData>*, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
        struct GSUNSWrapper<TSWPTOCEntryData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPTab>, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
    struct GSUNSWrapper<TSWPTab> *__begin_;
    struct GSUNSWrapper<TSWPTab> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTab>*, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
        struct GSUNSWrapper<TSWPTab> *__value_;
    } __end_cap_;
};

struct vector<JCColor, std::__1::allocator<JCColor>> {
    struct JCColor *_field1;
    struct JCColor *_field2;
    struct __compressed_pair<JCColor *, std::__1::allocator<JCColor>> {
        struct JCColor *_field1;
    } _field3;
};

struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTableCell *__strong *, std::__1::allocator<OADTableCell *>> {
        id *_field1;
    } _field3;
};

struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTablePartStyle *__strong *, std::__1::allocator<OADTablePartStyle *>> {
        id *_field1;
    } _field3;
};

struct vector<RefTypeHolder<TSCERangeRef, 0>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
    RefTypeHolder_c762613b *_field1;
    RefTypeHolder_c762613b *_field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 0>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
        RefTypeHolder_c762613b *_field1;
    } _field3;
};

struct vector<RefTypeHolder<TSCERangeRef, 1>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
    RefTypeHolder_97fac6a8 *_field1;
    RefTypeHolder_97fac6a8 *_field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 1>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
        RefTypeHolder_97fac6a8 *_field1;
    } _field3;
};

struct vector<TSCEASTNodeArrayChunk *, std::__1::allocator<TSCEASTNodeArrayChunk *>> {
    struct TSCEASTNodeArrayChunk **__begin_;
    struct TSCEASTNodeArrayChunk **__end_;
    struct __compressed_pair<TSCEASTNodeArrayChunk **, std::__1::allocator<TSCEASTNodeArrayChunk *>> {
        struct TSCEASTNodeArrayChunk **__value_;
    } __end_cap_;
};

struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> {
    struct TSCEBitGridTile **__begin_;
    struct TSCEBitGridTile **__end_;
    struct __compressed_pair<TSCEBitGridTile **, std::__1::allocator<TSCEBitGridTile *>> {
        struct TSCEBitGridTile **__value_;
    } __end_cap_;
};

struct vector<TSCECategoryLevel, std::__1::allocator<TSCECategoryLevel>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<TSCECategoryLevel *, std::__1::allocator<TSCECategoryLevel>> {
        unsigned char *_field1;
    } _field3;
};

struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef *_field1;
    struct TSCECategoryRef *_field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef *_field1;
    } _field3;
};

struct vector<TSCECellRecordTile *, std::__1::allocator<TSCECellRecordTile *>> {
    struct TSCECellRecordTile **_field1;
    struct TSCECellRecordTile **_field2;
    struct __compressed_pair<TSCECellRecordTile **, std::__1::allocator<TSCECellRecordTile *>> {
        struct TSCECellRecordTile **_field1;
    } _field3;
};

struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef *__begin_;
    struct TSCECellRef *__end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef *__value_;
    } __end_cap_;
};

struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__value_;
    } __end_cap_;
};

struct vector<TSCEFormulaOwnerKind, std::__1::allocator<TSCEFormulaOwnerKind>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSCEFormulaOwnerKind *, std::__1::allocator<TSCEFormulaOwnerKind>> {
        int *_field1;
    } _field3;
};

struct vector<TSCEFormulaRewriteContextRecord, std::__1::allocator<TSCEFormulaRewriteContextRecord>> {
    struct TSCEFormulaRewriteContextRecord *__begin_;
    struct TSCEFormulaRewriteContextRecord *__end_;
    struct __compressed_pair<TSCEFormulaRewriteContextRecord *, std::__1::allocator<TSCEFormulaRewriteContextRecord>> {
        struct TSCEFormulaRewriteContextRecord *__value_;
    } __end_cap_;
};

struct vector<TSCEFunctionArgSpec, std::__1::allocator<TSCEFunctionArgSpec>> {
    struct TSCEFunctionArgSpec *__begin_;
    struct TSCEFunctionArgSpec *__end_;
    struct __compressed_pair<TSCEFunctionArgSpec *, std::__1::allocator<TSCEFunctionArgSpec>> {
        struct TSCEFunctionArgSpec *__value_;
    } __end_cap_;
};

struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
};

struct vector<TSCERecalcPhaseState *, std::__1::allocator<TSCERecalcPhaseState *>> {
    struct TSCERecalcPhaseState **_field1;
    struct TSCERecalcPhaseState **_field2;
    struct __compressed_pair<TSCERecalcPhaseState **, std::__1::allocator<TSCERecalcPhaseState *>> {
        struct TSCERecalcPhaseState **_field1;
    } _field3;
};

struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
};

struct vector<TSCETableResolver *, std::__1::allocator<TSCETableResolver *>> {
    struct TSCETableResolver **_field1;
    struct TSCETableResolver **_field2;
    struct __compressed_pair<TSCETableResolver **, std::__1::allocator<TSCETableResolver *>> {
        struct TSCETableResolver **_field1;
    } _field3;
};

struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> {
    struct TSCETaggedDouble *__begin_;
    struct TSCETaggedDouble *__end_;
    struct __compressed_pair<TSCETaggedDouble *, std::__1::allocator<TSCETaggedDouble>> {
        struct TSCETaggedDouble *__value_;
    } __end_cap_;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *__begin_;
    struct TSCEValue *__end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::AxisLabelCacheItem, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
    struct AxisLabelCacheItem *__begin_;
    struct AxisLabelCacheItem *__end_;
    struct __compressed_pair<TSCH3D::AxisLabelCacheItem *, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
        struct AxisLabelCacheItem *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo *__begin_;
    struct BarElementInfo *__end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::__1::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    box_a3bd9649 *__begin_;
    box_a3bd9649 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        box_a3bd9649 *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
    struct Lookup *__begin_;
    struct Lookup *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup *, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
        struct Lookup *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState *__begin_;
    struct ResourceAttributeState *__end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState *__value_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__value_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TSDStroke *__strong *, std::__1::allocator<TSDStroke *>> {
        id *_field1;
    } _field3;
};

struct vector<TSDWrapSegment, std::__1::allocator<TSDWrapSegment>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSDWrapSegment *, std::__1::allocator<TSDWrapSegment>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>> {
    struct TSKCursorInRevision *_field1;
    struct TSKCursorInRevision *_field2;
    struct __compressed_pair<TSKCursorInRevision *, std::__1::allocator<TSKCursorInRevision>> {
        struct TSKCursorInRevision *_field1;
    } _field3;
};

struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
    struct ExternalReferenceCompletionInfo *_field1;
    struct ExternalReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ExternalReferenceCompletionInfo *, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
        struct ExternalReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
    struct FinalizeHandlerItem **__begin_;
    struct FinalizeHandlerItem **__end_;
    struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
        struct FinalizeHandlerItem **__value_;
    } __end_cap_;
};

struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> {
    struct ObjectStackEntry *__begin_;
    struct ObjectStackEntry *__end_;
    struct __compressed_pair<TSP::ObjectStackEntry *, std::__1::allocator<TSP::ObjectStackEntry>> {
        struct ObjectStackEntry *__value_;
    } __end_cap_;
};

struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
    struct ReferenceCompletionInfo *_field1;
    struct ReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ReferenceCompletionInfo *, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
        struct ReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
    struct RepeatedExternalReferenceCompletionInfo *__begin_;
    struct RepeatedExternalReferenceCompletionInfo *__end_;
    struct __compressed_pair<TSP::RepeatedExternalReferenceCompletionInfo *, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
        struct RepeatedExternalReferenceCompletionInfo *__value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__value_;
    } __end_cap_;
};

struct vector<TSTCategoryLabelRowVisibility, std::__1::allocator<TSTCategoryLabelRowVisibility>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<TSTCategoryLabelRowVisibility *, std::__1::allocator<TSTCategoryLabelRowVisibility>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__value_;
    } __end_cap_;
};

struct vector<TSTColumnRowType, std::__1::allocator<TSTColumnRowType>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<TSTColumnRowType *, std::__1::allocator<TSTColumnRowType>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<TSTGroupingLevelAndType, std::__1::allocator<TSTGroupingLevelAndType>> {
    struct TSTGroupingLevelAndType *_field1;
    struct TSTGroupingLevelAndType *_field2;
    struct __compressed_pair<TSTGroupingLevelAndType *, std::__1::allocator<TSTGroupingLevelAndType>> {
        struct TSTGroupingLevelAndType *_field1;
    } _field3;
};

struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol *__begin_;
    struct WHCCol *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol *__value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow *__begin_;
    struct WHCRow *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow *__value_;
    } __end_cap_;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
};

struct vector<TSU::UUIDRect<TSP::UUIDRect>, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
    UUIDRect_d701734b *__begin_;
    UUIDRect_d701734b *__end_;
    struct __compressed_pair<TSU::UUIDRect<TSP::UUIDRect>*, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
        UUIDRect_d701734b *__value_;
    } __end_cap_;
};

struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__value_;
    } __end_cap_;
};

struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__value_;
    } __end_cap_;
};

struct vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect>> {
    struct TSUModelCellRect *_field1;
    struct TSUModelCellRect *_field2;
    struct __compressed_pair<TSUModelCellRect *, std::__1::allocator<TSUModelCellRect>> {
        struct TSUModelCellRect *_field1;
    } _field3;
};

struct vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>> {
    struct TSUViewCellRect *_field1;
    struct TSUViewCellRect *_field2;
    struct __compressed_pair<TSUViewCellRect *, std::__1::allocator<TSUViewCellRect>> {
        struct TSUViewCellRect *_field1;
    } _field3;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSWPAttributeArrayKind *, std::__1::allocator<TSWPAttributeArrayKind>> {
        int *_field1;
    } _field3;
};

struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef *_field1;
    struct TSWPLineRef *_field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef *_field1;
    } _field3;
};

struct vector<TSWPParagraphMetrics, std::__1::allocator<TSWPParagraphMetrics>> {
    struct TSWPParagraphMetrics *__begin_;
    struct TSWPParagraphMetrics *__end_;
    struct __compressed_pair<TSWPParagraphMetrics *, std::__1::allocator<TSWPParagraphMetrics>> {
        struct TSWPParagraphMetrics *__value_;
    } __end_cap_;
};

struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction *_field1;
    struct TSWPStorageAction *_field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction *_field1;
    } _field3;
};

struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> {
    struct TSWPStorageActionGroup *_field1;
    struct TSWPStorageActionGroup *_field2;
    struct __compressed_pair<TSWPStorageActionGroup *, std::__1::allocator<TSWPStorageActionGroup>> {
        struct TSWPStorageActionGroup *_field1;
    } _field3;
};

struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> {
    struct TSWPStorageChangeRange *_field1;
    struct TSWPStorageChangeRange *_field2;
    struct __compressed_pair<TSWPStorageChangeRange *, std::__1::allocator<TSWPStorageChangeRange>> {
        struct TSWPStorageChangeRange *_field1;
    } _field3;
};

struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
    struct TSWPStorageParagraphIndexChange *_field1;
    struct TSWPStorageParagraphIndexChange *_field2;
    struct __compressed_pair<TSWPStorageParagraphIndexChange *, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
        struct TSWPStorageParagraphIndexChange *_field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject *_field1;
    struct TSWPStorageTransactionObject *_field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject *_field1;
    } _field3;
};

struct vector<WBTextBoxReaderInfo, std::__1::allocator<WBTextBoxReaderInfo>> {
    struct WBTextBoxReaderInfo *_field1;
    struct WBTextBoxReaderInfo *_field2;
    struct __compressed_pair<WBTextBoxReaderInfo *, std::__1::allocator<WBTextBoxReaderInfo>> {
        struct WBTextBoxReaderInfo *_field1;
    } _field3;
};

struct vector<WITWPDrawableAttachment, std::__1::allocator<WITWPDrawableAttachment>> {
    struct WITWPDrawableAttachment *__begin_;
    struct WITWPDrawableAttachment *__end_;
    struct __compressed_pair<WITWPDrawableAttachment *, std::__1::allocator<WITWPDrawableAttachment>> {
        struct WITWPDrawableAttachment *__value_;
    } __end_cap_;
};

struct vector<_CGLPixelFormatAttribute, std::__1::allocator<_CGLPixelFormatAttribute>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<_CGLPixelFormatAttribute *, std::__1::allocator<_CGLPixelFormatAttribute>> {
        int *_field1;
    } _field3;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__value_;
    } __end_cap_;
};

struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
};

struct vector<const SDChildDescription *, std::__1::allocator<const SDChildDescription *>> {
    CDStruct_183601bc **_field1;
    CDStruct_183601bc **_field2;
    struct __compressed_pair<const SDChildDescription **, std::__1::allocator<const SDChildDescription *>> {
        CDStruct_183601bc **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
};

struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
};

struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>>> {
        id *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<signed char, std::__1::allocator<signed char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<signed char *, std::__1::allocator<signed char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<sortColorEntry, std::__1::allocator<sortColorEntry>> {
    struct sortColorEntry *_field1;
    struct sortColorEntry *_field2;
    struct __compressed_pair<sortColorEntry *, std::__1::allocator<sortColorEntry>> {
        struct sortColorEntry *_field1;
    } _field3;
};

struct vector<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__begin_;
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__end_;
    struct __compressed_pair<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>*, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
        struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_23d93216 *_field1;
    basic_string_23d93216 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_23d93216 *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSCEASTNodeArray *, int>, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
    struct pair<TSCEASTNodeArray *, int> *__begin_;
    struct pair<TSCEASTNodeArray *, int> *__end_;
    struct __compressed_pair<std::__1::pair<TSCEASTNodeArray *, int>*, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
        struct pair<TSCEASTNodeArray *, int> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSUCellCoord, double>, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
    struct pair<TSUCellCoord, double> *__begin_;
    struct pair<TSUCellCoord, double> *__end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, double>*, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
        struct pair<TSUCellCoord, double> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
    struct pair<_NSRange, _NSRange> *_field1;
    struct pair<_NSRange, _NSRange> *_field2;
    struct __compressed_pair<std::__1::pair<_NSRange, _NSRange>*, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
        struct pair<_NSRange, _NSRange> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned int, bool>, std::__1::allocator<std::__1::pair<unsigned int, bool>>> {
    struct pair<unsigned int, bool> *__begin_;
    struct pair<unsigned int, bool> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned int, bool>*, std::__1::allocator<std::__1::pair<unsigned int, bool>>> {
        struct pair<unsigned int, bool> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned long, TSDDrawableInfo *>, std::__1::allocator<std::__1::pair<unsigned long, TSDDrawableInfo *>>> {
    struct pair<unsigned long, TSDDrawableInfo *> *__begin_;
    struct pair<unsigned long, TSDDrawableInfo *> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned long, TSDDrawableInfo *>*, std::__1::allocator<std::__1::pair<unsigned long, TSDDrawableInfo *>>> {
        struct pair<unsigned long, TSDDrawableInfo *> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
};

struct vector<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>, std::__1::allocator<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>>> {
    struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__begin_;
    struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__end_;
    struct __compressed_pair<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>*, std::__1::allocator<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>>> {
        struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
    set_531c353a *_field1;
    set_531c353a *_field2;
    struct __compressed_pair<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>*, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
        set_531c353a *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<TSUStringChunk>, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> *__begin_;
    struct shared_ptr<TSUStringChunk> *__end_;
    struct __compressed_pair<std::__1::shared_ptr<TSUStringChunk>*, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> *__value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>*, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
        struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
};

struct yy_buffer_state;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} Color_1703f521;

typedef struct {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
} Config_5da22101;

typedef struct ?<id, std::__1::allocator<id>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<__strong id *, std::__1::allocator<id>> {
        id *_field1;
    } _field3;
} vector_1d4ec099;

typedef struct ?<id, std::__1::allocator<id>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<id *, std::__1::allocator<id>> {
        id *_field1;
    } _field3;
} vector_57079b9b;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct Collection *_field2;
    struct EQKitCacheLRUCounter _field3;
} Manager_e51557f8;

typedef struct {
    struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>> *_field1;
    struct EQKitCacheLRUCounter _field2;
    _Bool _field3;
    struct QuantizationConfig _field4;
} Manager_36464627;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr *_field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
} Path_1b135553;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseApplyPresetCommandArchive *_field5;
    struct Reference *_field6;
} ShapeApplyPresetCommandArchive_6e60faf2;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseApplyPresetCommandArchive *_field5;
} ShapeApplyPresetCommandArchive_f42bf676;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    _Bool _field10;
} StyleUpdatePropertyMapCommandArchive_a83fa896;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSA::DrawableZOrderListArchive> _field6;
    _Bool _field7;
} InducedVerifyDrawableZOrdersWithServerCommandArchive_5749020c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DocumentArchive *_field5;
    struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> _field6;
    basic_string_23d93216 *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    basic_string_23d93216 *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    struct Reference *_field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
} DocumentArchive_2216b979;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionTransformerArchive *_field5;
} ShapeSelectionTransformerArchive_c3bfcae0;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct StrokeArchive *_field6;
    struct ShadowArchive *_field7;
    struct ReflectionArchive *_field8;
    struct LineEndArchive *_field9;
    struct LineEndArchive *_field10;
    float _field11;
} ShapeStylePropertiesArchive_14f5c167;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InducedVerifyDrawableZOrdersWithServerCommandArchive *_field5;
} InducedVerifyDrawableZOrdersWithServerCommandArchive_2000d312;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCollectionSelectionTransformerHelperArchive *_field5;
} CanvasSelectionTransformerArchive_49e3bb19;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
    int _field6;
    int _field7;
    struct Range *_field8;
    int _field9;
} SelectionArchive_4d81a463;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
    int _field6;
    int _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    struct Reference *_field11;
    int _field12;
} CanvasSelectionArchive_0d79e056;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CellID *_field6;
    struct RepeatedPtrField<TST::CellRange> _field7;
    struct RepeatedPtrField<TST::CellRange> _field8;
    struct CellID *_field9;
    struct Reference *_field10;
    struct CellUIDRegionArchive *_field11;
    struct CellUIDRegionArchive *_field12;
    struct UUIDCoordArchive *_field13;
    struct UUIDCoordArchive *_field14;
    int _field15;
} SelectionArchive_8bd2a625;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
} PencilAnnotationArchive_c920bbe2;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SelectionTransformerArchive *_field5;
    struct InfoCollectionSelectionTransformerHelperArchive *_field6;
    struct InfoCollectionSelectionTransformerHelperArchive *_field7;
    struct InfoCollectionSelectionTransformerHelperArchive *_field8;
    struct UUIDPath *_field9;
} CanvasSelectionTransformerArchive_380c8315;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeSelectionTransformerArchive *_field5;
    struct UUIDPath *_field6;
} ShapeSelectionTransformerArchive_dc7af695;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleUpdatePropertyMapCommandArchive *_field5;
} StyleUpdatePropertyMapCommandArchive_5295ca17;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
    basic_string_23d93216 *_field6;
} PencilAnnotationSelectionTransformerArchive_6fdf8240;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
} PencilAnnotationSelectionTransformerArchive_669d918e;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_23d93216 *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    basic_string_23d93216 *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
} DocumentArchive_9de3ea16;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct ColumnsArchive *_field10;
    struct PaddingArchive *_field11;
    unsigned int _field12;
    _Bool _field13;
    struct Reference *_field14;
} ShapeStylePropertiesArchive_7f628ad1;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
} Color_0722d876;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::Path_Element> _field5;
} Path_91321ae4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    struct Reference *_field7;
} CanvasSelectionArchive_cc53fcdb;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> _field3;
    struct GSSPRetainer *_field4;
    struct GSSPDecodeConversionContext _field5;
    struct vector<id, std::__1::allocator<id>> {
        id *_field1;
        id *_field2;
        struct __compressed_pair<__strong id *, std::__1::allocator<id>> {
            id *_field1;
        } _field3;
    } _field6;
    struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> _field7;
    id _field8;
} GSSPDeserializationContext_a8b4af16;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> _field3;
    struct GSSPRetainer *_field4;
    struct GSSPDecodeConversionContext _field5;
    struct vector<id, std::__1::allocator<id>> {
        id *_field1;
        id *_field2;
        struct __compressed_pair<id *, std::__1::allocator<id>> {
            id *_field1;
        } _field3;
    } _field6;
    struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> _field7;
    id _field8;
} GSSPDeserializationContext_8b6fc595;

typedef struct {
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field1;
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field2;
} Config_b4c5d39d;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    basic_string_23d93216 *_field7;
    struct Reference *_field8;
    RepeatedPtrField_bfda3daa _field9;
    RepeatedPtrField_bfda3daa _field10;
    RepeatedPtrField_634a5f45 _field11;
} ThemeArchive_460f58fb;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    WDShading *shading;
    WDBorder *topBorder;
    WDBorder *leftBorder;
    WDBorder *bottomBorder;
    WDBorder *rightBorder;
    WDBorder *diagonalUpBorder;
    WDBorder *diagonalDownBorder;
    WDBorder *insideHorizontalBorder;
    WDBorder *insideVerticalBorder;
    int widthType;
    short topMargin;
    int topMarginType;
    short bottomMargin;
    int bottomMarginType;
    short leftMargin;
    int leftMarginType;
    short rightMargin;
    int rightMarginType;
    int verticalAlignment;
    char textDirection;
    int deleted;
    int edited;
    int formattingChanged;
    unsigned short indexToAuthorIDOfDeletion;
    unsigned short indexToAuthorIDOfEdit;
    unsigned short indexToAuthorIDOfFormattingChange;
    NSDate *deletionDate;
    NSDate *editDate;
    NSDate *formattingChangeDate;
    unsigned int shadingOverridden:1;
    unsigned int topBorderOverridden:1;
    unsigned int leftBorderOverridden:1;
    unsigned int bottomBorderOverridden:1;
    unsigned int rightBorderOverridden:1;
    unsigned int diagonalUpBorderOverridden:1;
    unsigned int diagonalDownBorderOverridden:1;
    unsigned int insideHorizontalBorderOverridden:1;
    unsigned int insideVerticalBorderOverridden:1;
    unsigned int widthTypeOverridden:1;
    unsigned int topMarginOverridden:1;
    unsigned int topMarginTypeOverridden:1;
    unsigned int bottomMarginOverridden:1;
    unsigned int bottomMarginTypeOverridden:1;
    unsigned int leftMarginOverridden:1;
    unsigned int leftMarginTypeOverridden:1;
    unsigned int rightMarginOverridden:1;
    unsigned int rightMarginTypeOverridden:1;
    unsigned int verticalAlignmentOverridden:1;
    unsigned int textDirectionOverridden:1;
    unsigned int verticallyMergedCell:1;
    unsigned int verticallyMergedCellOverridden:1;
    unsigned int firstInSetOfVerticallyMergedCells:1;
    unsigned int firstInSetOfVerticallyMergedCellsOverridden:1;
    unsigned int noWrap:1;
    unsigned int noWrapOverridden:1;
    unsigned int deletedOverridden:1;
    unsigned int editedOverridden:1;
    unsigned int formattingChangedOverridden:1;
    unsigned int indexToAuthorIDOfDeletionOverridden:1;
    unsigned int indexToAuthorIDOfEditOverridden:1;
    unsigned int indexToAuthorIDOfFormattingChangeOverridden:1;
    unsigned int deletionDateOverridden:1;
    unsigned int editDateOverridden:1;
    unsigned int formattingChangeDateOverridden:1;
} CDStruct_dbdf0818;

typedef struct {
    WDBorder *topBorder;
    WDBorder *leftBorder;
    WDBorder *bottomBorder;
    WDBorder *rightBorder;
    int breakType;
    long long pageWidth;
    long long pageHeight;
    unsigned int pageScale;
    int pageOrientation;
    int textDirection;
    long long leftMargin;
    long long rightMargin;
    long long topMargin;
    long long bottomMargin;
    long long headerMargin;
    long long footerMargin;
    long long gutterMargin;
    char rtlGutter;
    int borderDepth;
    int borderDisplay;
    int borderOffset;
    short lineNumberStart;
    unsigned short lineNumberIncrement;
    short lineNumberDistance;
    int lineNumberRestart;
    int pageNumberFormat;
    unsigned short pageNumberStart;
    int chapterNumberSeparator;
    NSMutableArray *columnWidths;
    NSMutableArray *columnSpaces;
    unsigned short columnCount;
    long long columnSpace;
    int verticalJustification;
    unsigned short indexToAuthorIDOfFormattingChange;
    NSDate *formattingChangeDate;
    unsigned int bidi:1;
    unsigned int topBorderOverridden:1;
    unsigned int leftBorderOverridden:1;
    unsigned int bottomBorderOverridden:1;
    unsigned int rightBorderOverridden:1;
    unsigned int breakTypeOverridden:1;
    unsigned int pageWidthOverridden:1;
    unsigned int pageHeightOverridden:1;
    unsigned int pageScaleOverridden:1;
    unsigned int pageOrientationOverridden:1;
    unsigned int textDirectionOverridden:1;
    unsigned int leftMarginOverridden:1;
    unsigned int rightMarginOverridden:1;
    unsigned int topMarginOverridden:1;
    unsigned int bottomMarginOverridden:1;
    unsigned int headerMarginOverridden:1;
    unsigned int footerMarginOverridden:1;
    unsigned int gutterMarginOverridden:1;
    unsigned int rtlGutterOverridden:1;
    unsigned int borderDepthOverridden:1;
    unsigned int borderDisplayOverridden:1;
    unsigned int borderOffsetOverridden:1;
    unsigned int lineNumberStartOverridden:1;
    unsigned int lineNumberIncrementOverridden:1;
    unsigned int lineNumberDistanceOverridden:1;
    unsigned int lineNumberRestartOverridden:1;
    unsigned int pageNumberFormatOverridden:1;
    unsigned int pageNumberStartOverridden:1;
    unsigned int pageNumberRestart:1;
    unsigned int pageNumberRestartOverridden:1;
    unsigned int chapterNumberSeparatorOverridden:1;
    unsigned int columnCountOverridden:1;
    unsigned int columnsEqualWidth:1;
    unsigned int columnsEqualWidthOverridden:1;
    unsigned int columnSpaceOverridden:1;
    unsigned int verticalJustificationOverridden:1;
    unsigned int titlePage:1;
    unsigned int titlePageOverridden:1;
    unsigned int formattingChanged:1;
    unsigned int formattingChangedOverridden:1;
    unsigned int indexToAuthorIDOfFormattingChangeOverridden:1;
    unsigned int formattingChangeDateOverridden:1;
    unsigned int bidiOverridden:1;
} CDStruct_9cc0d39f;

typedef struct {
    id _field1;
    unsigned long long _field2;
    double _field3;
} CDStruct_45a6b6f8;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned char style;
    unsigned char lines;
} CDStruct_8835774c;

typedef struct {
    unsigned int useCount;
    id ticket;
} CDStruct_2a021fcd;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
} CDStruct_3144a3ae;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
} CDStruct_c8ca99d5;

typedef struct {
    unsigned int m_data1;
    unsigned short m_data2;
    unsigned short m_data3;
    unsigned char m_data4[8];
} CDStruct_214f2dba;

typedef struct {
    unsigned int _field1;
    long long _field2;
} CDStruct_31de062f;

typedef struct {
    unsigned long long numberOfColumns;
    unsigned long long numberOfRows;
    char isConstantColumnCount;
    char isFixedWidth;
} CDStruct_8517abb8;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
} CDStruct_188655c5;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    char _field2;
    char _field3;
    int _field4;
    unsigned long long _field5;
    char _field6;
    int _field7;
    unsigned long long _field8;
    char _field9;
    int _field10;
} CDStruct_7c9ba04e;

typedef struct {
    unsigned long long _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    char *_field1;
    char *_field2;
    Class _field3;
} CDStruct_829d3f0e;

typedef struct {
    unsigned int mCurrencyCodeIndex:16;
    unsigned int mDecimalPlaces:8;
    unsigned int mNegativeStyle:3;
    unsigned int mShowThousandsSeparator:1;
    unsigned int mUseAccountingStyle:1;
} CDStruct_50447d3e;

typedef struct {
    unsigned int mUseAutomaticUnits:1;
    int mDurationUnitSmallest;
    int mDurationUnitLargest;
    int mDurationStyle;
} CDStruct_b1177b60;

typedef struct {
    unsigned int formulaID:48;
} CDStruct_8dbd2315;

typedef struct {
    unsigned int mBase:8;
    unsigned int mBasePlaces:8;
    unsigned int mBaseUseMinusSign:1;
} CDStruct_c5e3a123;

typedef struct {
    unsigned int mFractionAccuracy:8;
} CDStruct_7ef9dbe9;

typedef struct {
    char forceOmitLegend;
    char forceOmitTitle;
    char forceOmitAxisTitle;
    char forceOmitLabelPlacement;
    char forceTitleAtTop;
    char enable3DTightBounds;
    char enable3DScaledDepthBounds;
    long long maxDepthRatioType;
    unsigned long long max3DLimitingSeries;
} CDStruct_6d1c4171;

typedef struct {
    char applicationExists;
    char oldPluginExists;
    char currentPluginExists;
} CDStruct_2c3aca9f;

typedef struct {
    char _field1;
    char _field2;
} CDStruct_7ddbbeae;

typedef struct {
    char forDrawing;
    double width;
    double leftCap;
    double rightCap;
    double height;
    double topCap;
    double bottomCap;
} CDStruct_08b9d696;

typedef struct {
    double value;
    char isMultiValued;
} CDStruct_219b14c8;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
} CDStruct_41cea37a;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    char _field4;
} CDStruct_4441e80f;

typedef struct {
    double spaceBefore;
    double attachmentHeight;
    double ascent;
    double descent;
    double leadingAbove;
    double leadingBelow;
    double spaceAfter;
} CDStruct_5b0a1db3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double skew;
    double skewOffset;
    double scale;
} CDStruct_d6fcdff4;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int _field1;
    unsigned long long _field2;
    char _field3;
} CDStruct_4eafa971;

typedef struct {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    int _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
} CDStruct_1d177db0;

typedef struct {
    int x;
    int y;
    int width;
    int height;
} CDStruct_bf95b13b;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct {
    short position;
    unsigned char type;
    unsigned char leader;
} CDStruct_ee4495eb;

typedef struct {
    short widthBefore;
    int widthBeforeType;
    short widthAfter;
    int widthAfterType;
    long long height;
    int heightType;
    unsigned int widthBeforeOverridden:1;
    unsigned int widthBeforeTypeOverridden:1;
    unsigned int widthAfterOverridden:1;
    unsigned int widthAfterTypeOverridden:1;
    unsigned int heightOverridden:1;
    unsigned int heightTypeOverridden:1;
    unsigned int header:1;
    unsigned int headerOverridden:1;
} CDStruct_43955328;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    struct TSWPLineFragment *_field1;
    struct TSWPLineFragment *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
    _Bool _field8;
} CDStruct_bccfccf2;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    struct {
        double _field1;
        double _field2;
    } _field6;
    struct {
        double _field1;
        double _field2;
    } _field7;
    double _field8;
    double _field9;
    char _field10;
    char _field11;
} CDStruct_f968f95a;

typedef struct {
    double _field1;
    struct CGPoint _field2;
    long long _field3;
    double _field4;
} CDStruct_46b2202e;

typedef struct {
    long long _field1;
    unsigned long long _field2;
    char _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char _field8;
    struct _NSRange _field9;
    unsigned long long _field10;
} CDStruct_ede889c8;

typedef struct {
    long long colorspace;
    double globalEdgeWeight;
    CDStruct_83984b6f colorChannelWeights;
    long long minPixelsPerSegmentCutoff;
    double minPixelsPerSegmentCutoffWeight;
} CDStruct_d84c1df1;

typedef struct {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
} CDStruct_106f10ff;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    CDStruct_219b14c8 x;
    CDStruct_219b14c8 y;
} CDStruct_c34523b2;

typedef struct {
    struct CGAffineTransform _field1;
    struct CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    struct CGPoint _field1;
    unsigned long long _field2;
    char _field3;
} CDStruct_8a598304;

typedef struct {
    struct CGPoint _field1;
    unsigned long long _field2;
    double _field3;
    char _field4;
} CDStruct_0d67c3bc;

typedef struct {
    struct CGPoint _field1;
    char _field2;
} CDStruct_d1f892e1;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    char _field3;
    unsigned long long _field4;
} CDStruct_f3053fc7;

typedef struct {
    struct CGPoint p1;
    struct CGPoint p2;
    struct CGPoint ecp1;
    struct CGPoint ecp2;
    struct CGPoint cp1;
    struct CGPoint cp2;
    struct CGPoint mp1;
    struct CGPoint mp2;
} CDStruct_6250c7cd;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct _NSRange _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont *_field10;
    struct CGColor *_field11;
    id _field12;
    char _field13;
    int _field14;
    double _field15;
    struct CGColor *_field16;
    double _field17;
} CDStruct_90c0bbcc;

typedef struct {
    struct _NSRange _field1;
    long long _field2;
} CDStruct_9ae92562;

typedef struct {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
} CDStruct_e0d92598;

typedef struct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberFormatStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        struct {
            unsigned int mSuppressDateFormat:1;
            unsigned int mSuppressTimeFormat:1;
            NSString *mDateTimeFormat;
        } mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        struct {
            NSUUID *mCustomFormatKey;
            TSUCustomFormat *mCustomFormat;
            unsigned int mLegacyID;
            unsigned char mAppliedConditionKey;
        } mCustomFormatStruct;
    } ;
} CDStruct_b1066b25;

typedef struct {
    CDStruct_6250c7cd _field1;
    CDStruct_6250c7cd _field2;
    CDStruct_6250c7cd _field3;
    CDStruct_6250c7cd _field4;
    CDStruct_6250c7cd _field5;
} CDStruct_64b597b6;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    char _field6;
} CDStruct_78ea5dae;

typedef struct {
    struct CGRect _field1;
    double _field2;
    CDStruct_5b0a1db3 _field3;
    double _field4;
    struct CGRect _field5;
    double _field6;
    CDStruct_5b0a1db3 _field7;
} CDStruct_d12891c8;

typedef struct {
    struct CGRect _field1;
    double _field2;
    struct CGRect _field3;
    char _field4;
} CDStruct_486845e0;

typedef struct {
    struct CGRect cachedRect;
    struct CGRect originalCachedRect;
    unsigned int isValid;
} CDStruct_5bfcb38a;

// Ambiguous groups
typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    unsigned int numberOfColumns;
    unsigned int numberOfRows;
} CDStruct_0ff8cf90;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double beginTime;
    double endTime;
} CDStruct_73a5d3ca;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    struct __compressed_pair<OcText *, ChAllocator<OcText>> {
        struct OcText *_field1;
    } _field3;
} ChVector_cc6fdd32;

typedef struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    struct __compressed_pair<XlPtg **, ChAllocator<XlPtg *>> {
        struct XlPtg **_field1;
    } _field3;
} ChVector_1f909c3e;

typedef struct ChVector<long> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long *, ChAllocator<long>> {
        long long *_field1;
    } _field3;
} ChVector_0831b939;

typedef struct CsPoint<int> {
    int _field1[2];
} CsPoint_c846a6ec;

typedef struct CsRect<int> {
    int _field1[4];
} CsRect_0aefebc6;

typedef struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
} EshTablePropVal_515d12a1;

typedef struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
} EshTablePropVal_31f0d5cf;

typedef struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
} EshTablePropVal_68d7eaa9;

typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct RefTypeHolder<TSCECellRef, 0> {
    struct TSCECellRef _ref;
} RefTypeHolder_7b6c2b7c;

typedef struct RefTypeHolder<TSCECellRef, 1> {
    struct TSCECellRef _field1;
} RefTypeHolder_be8e6816;

typedef struct RefTypeHolder<TSCECellRef, 2> {
    struct TSCECellRef _field1;
} RefTypeHolder_bc3342c9;

typedef struct RefTypeHolder<TSCERangeRef, 0> {
    struct TSCERangeRef _field1;
} RefTypeHolder_c762613b;

typedef struct RefTypeHolder<TSCERangeRef, 1> {
    struct TSCERangeRef _field1;
} RefTypeHolder_97fac6a8;

typedef struct RefTypeHolder<TSCERangeRef, 2> {
    struct TSCERangeRef _ref;
} RefTypeHolder_e4b503b8;

typedef struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
} RepeatedField_12b14242;

typedef struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
} RepeatedField_324622b8;

typedef struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
} RepeatedField_c2891982;

typedef struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
} RepeatedField_27dfe32f;

typedef struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_b5a3b001;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a96af6e2;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_daf2f3db;

typedef struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_3504fdd6;

typedef struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_45e8210e;

typedef struct RepeatedPtrField<TSK::CollaborationCommandHistoryItem> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_085b988b;

typedef struct RepeatedPtrField<TSK::IdPlacementOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_830a1b19;

typedef struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_634a5f45;

typedef struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_1f1a6efb;

typedef struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_fe6aca30;

typedef struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_5fb0b506;

typedef struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_5867f37b;

typedef struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_c964a194;

typedef struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_c67bb210;

typedef struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a0d2dbe7;

typedef struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_bfda3daa;

typedef struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_0a3269f6;

typedef struct RepeatedPtrField<TSWP::ObjectPropertyArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_c1b66e77;

typedef struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_236b8a23;

typedef struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
} StateStack_93233330;

typedef struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
} UUIDData_5fbc143e;

typedef struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} UUIDMap_b66c2694;

typedef struct UUIDRect<TSP::UUIDRect> {
    vector_4dc5f307 _colIdList;
    vector_4dc5f307 _rowIdList;
} UUIDRect_d701734b;

typedef struct UUIDSet<TSP::UUIDSet> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
} UUIDSet_bcc2db41;

typedef struct __wrap_iter<double *> {
    double *_field1;
} __wrap_iter_8fb6ff7c;

typedef struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
} array_bb63b711;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct auto_ptr<WrdCharacterTextRun> {
    struct WrdCharacterTextRun *_field1;
} auto_ptr_0365e3c1;

typedef struct auto_ptr<WrdParagraphTextRun> {
    struct WrdParagraphTextRun *_field1;
} auto_ptr_2ea00ca6;

typedef struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
} auto_ptr_4370f086;

typedef struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 *__ptr_;
} auto_ptr_945ad503;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_23d93216;

typedef struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
} box_e9f23397;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
} box_80622335;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
} box_0260e9b3;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
} box_a3bd9649;

typedef struct deque<InsertInfo, std::__1::allocator<InsertInfo>> {
    struct __split_buffer<InsertInfo *, std::__1::allocator<InsertInfo *>> {
        struct InsertInfo **_field1;
        struct InsertInfo **_field2;
        struct InsertInfo **_field3;
        struct __compressed_pair<InsertInfo **, std::__1::allocator<InsertInfo *>> {
            struct InsertInfo **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<InsertInfo>> {
        unsigned long long _field1;
    } _field3;
} deque_20bbbbe1;

typedef struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __value_;
    } __size_;
} deque_5668141c;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
} line_190fbfc7;

typedef struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_2cd530a9;

typedef struct map<unsigned int, TSU::UUIDData<TSP::UUIDData>, std::__1::greater<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __tree<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_6ea74f95;

typedef struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributes, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributes>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_4bea934e;

typedef struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_9d361c4c;

typedef struct multimap<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned int, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multimap_672c207c;

typedef struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} multimap_41f9c887;

typedef struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multiset_10d8bac2;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
} pair_4d5b4bcf;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct pair<int, int> {
    int _field1;
    int _field2;
} pair_65f741c2;

typedef struct pair<signed char, TSCH3DShaderVariableLinkage *> {
    char _field1;
    id _field2;
} pair_76ac3a9c;

typedef struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
} plane_849e6053;

typedef struct range<double> {
    double _field1;
    double _field2;
} range_2a4e38ce;

typedef struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
} range_f61e6b34;

typedef struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_25e6ba53;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_3d57cb01;

typedef struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_fd9a82b7;

typedef struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_5fd94db8;

typedef struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_713dd2e1;

typedef struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_531c353a;

typedef struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bafc106c;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1a254aea;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b124cf66;

typedef struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cd1ed623;

typedef struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b9bbcad9;

typedef struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
} tmat2x2_6cc53533;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec1<float> {
    CDUnion_d07f0a1e ;
} tvec1_1f665138;

typedef struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
} tvec1_dad7e00b;

typedef struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
} tvec4_d23a2b6e;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

typedef struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
} tvec4_f99fd489;

typedef struct unordered_map<TSCECategoryLevel, int, std::__1::hash<TSCECategoryLevel>, std::__1::equal_to<TSCECategoryLevel>, std::__1::allocator<std::__1::pair<const TSCECategoryLevel, int>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECategoryLevel, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECategoryLevel, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::hash<TSCECategoryLevel>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECategoryLevel, std::__1::__hash_value_type<TSCECategoryLevel, int>, std::__1::equal_to<TSCECategoryLevel>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_00dc2483;

typedef struct unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<std::__1::pair<const TSCECellRef, TSTConditionalStyleSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::hash<TSCECellRef>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCECellRef, std::__1::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__1::equal_to<TSCECellRef>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_9596ee37;

typedef struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_7f472e10;

typedef struct unordered_map<TSTCellUID, TSTCellDiff *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCellDiff *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_4e7a7164;

typedef struct unordered_map<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, std::__1::pair<TSTCellUID, TSTCell *>>, std::__1::equal_to<TSTCellUID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_7ec1becf;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTAggNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_facfd2e8;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_e705037f;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTColumnRowMetadata *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_67523311;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTGroupNode *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_8a2ad1cf;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTPlanForGroupingCell>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_a2587d2e;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_d257cd5d;

typedef struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_d2ee14f6;

typedef struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_ddbde191;

typedef struct unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::__1::hash<TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, std::__1::allocator<std::__1::pair<const TSUModelCellCoord, TSUModelCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::hash<TSUModelCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUModelCellCoord, std::__1::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__1::equal_to<TSUModelCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_c82faa35;

typedef struct unordered_map<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfoRuleAttributesForVersionRequirements>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_caa2f3b1;

typedef struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_38045d47;

typedef struct unordered_map<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>, TSCHViewCellCoordinateHash, TSCHViewCellCoordinateEqual, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, std::__1::__unordered_map_hasher<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>, std::__1::__unordered_map_equal<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<unsigned long, unsigned long>, std::__1::__hash_value_type<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_71751c8c;

typedef struct unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
    struct __hash_table<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEArgumentType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEArgumentType, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEArgumentType>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSCEArgumentType>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_07fa9bdb;

typedef struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> __table_;
} unordered_set_c6a929bd;

typedef struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_c5f37819;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
} vector_2e7754b6;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
} vector_a9587b3d;

typedef struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *__begin_;
    struct CGSize *__end_;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *__value_;
    } __end_cap_;
} vector_19f9339c;

typedef struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__value_;
    } __end_cap_;
} vector_e38595b5;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineAstNode>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstNode>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__value_;
    } __end_cap_;
} vector_f3bd1b2b;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineAstRange>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstRange>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstRange>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstRange>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstRange> *__value_;
    } __end_cap_;
} vector_af363d4b;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineAstUidTract>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstUidTract>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__value_;
    } __end_cap_;
} vector_a46163a6;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineFormula>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineFormula>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
        struct GSUNSWrapper<GSSPCalculationEngineFormula> *__value_;
    } __end_cap_;
} vector_e696e3ca;

typedef struct vector<GSUNSWrapper<GSSPCellChange>, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
    struct GSUNSWrapper<GSSPCellChange> *__begin_;
    struct GSUNSWrapper<GSSPCellChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellChange>*, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
        struct GSUNSWrapper<GSSPCellChange> *__value_;
    } __end_cap_;
} vector_e012df7a;

typedef struct vector<GSUNSWrapper<GSSPCellRange>, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
    struct GSUNSWrapper<GSSPCellRange> *__begin_;
    struct GSUNSWrapper<GSSPCellRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellRange>*, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
        struct GSUNSWrapper<GSSPCellRange> *__value_;
    } __end_cap_;
} vector_17f96b92;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisData> *__value_;
    } __end_cap_;
} vector_ae07f5f3;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisMultiData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisMultiData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__value_;
    } __end_cap_;
} vector_5de1b41c;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__value_;
    } __end_cap_;
} vector_f77d9161;

typedef struct vector<GSUNSWrapper<GSSPChartGridValue>, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
    struct GSUNSWrapper<GSSPChartGridValue> *__begin_;
    struct GSUNSWrapper<GSSPChartGridValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartGridValue>*, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
        struct GSUNSWrapper<GSSPChartGridValue> *__value_;
    } __end_cap_;
} vector_4c78ac6d;

typedef struct vector<GSUNSWrapper<GSSPChartMediatorAxisFormat>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisFormat>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__value_;
    } __end_cap_;
} vector_e92aaf21;

typedef struct vector<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__begin_;
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>*, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
        struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__value_;
    } __end_cap_;
} vector_9047bf14;

typedef struct vector<GSUNSWrapper<GSSPCitationRecord>, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
    struct GSUNSWrapper<GSSPCitationRecord> *__begin_;
    struct GSUNSWrapper<GSSPCitationRecord> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCitationRecord>*, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
        struct GSUNSWrapper<GSSPCitationRecord> *__value_;
    } __end_cap_;
} vector_4dfb6302;

typedef struct vector<GSUNSWrapper<GSSPCustomFormatCondition>, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__begin_;
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCustomFormatCondition>*, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
        struct GSUNSWrapper<GSSPCustomFormatCondition> *__value_;
    } __end_cap_;
} vector_ce2008ab;

typedef struct vector<GSUNSWrapper<GSSPFloatingDrawable>, std::__1::allocator<GSUNSWrapper<GSSPFloatingDrawable>>> {
    struct GSUNSWrapper<GSSPFloatingDrawable> *__begin_;
    struct GSUNSWrapper<GSSPFloatingDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPFloatingDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPFloatingDrawable>>> {
        struct GSUNSWrapper<GSSPFloatingDrawable> *__value_;
    } __end_cap_;
} vector_14eaf38d;

typedef struct vector<GSUNSWrapper<GSSPImageData>, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
    struct GSUNSWrapper<GSSPImageData> *__begin_;
    struct GSUNSWrapper<GSSPImageData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPImageData>*, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
        struct GSUNSWrapper<GSSPImageData> *__value_;
    } __end_cap_;
} vector_c7b6ec24;

typedef struct vector<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__value_;
    } __end_cap_;
} vector_6584cb0f;

typedef struct vector<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__value_;
    } __end_cap_;
} vector_69174aca;

typedef struct vector<GSUNSWrapper<GSSPPageMaster>, std::__1::allocator<GSUNSWrapper<GSSPPageMaster>>> {
    struct GSUNSWrapper<GSSPPageMaster> *__begin_;
    struct GSUNSWrapper<GSSPPageMaster> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPageMaster>*, std::__1::allocator<GSUNSWrapper<GSSPPageMaster>>> {
        struct GSUNSWrapper<GSSPPageMaster> *__value_;
    } __end_cap_;
} vector_3efa3abc;

typedef struct vector<GSUNSWrapper<GSSPPasteboardDrawable>, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__begin_;
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPasteboardDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
        struct GSUNSWrapper<GSSPPasteboardDrawable> *__value_;
    } __end_cap_;
} vector_233f27ec;

typedef struct vector<GSUNSWrapper<GSSPRange>, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
    struct GSUNSWrapper<GSSPRange> *__begin_;
    struct GSUNSWrapper<GSSPRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRange>*, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
        struct GSUNSWrapper<GSSPRange> *__value_;
    } __end_cap_;
} vector_ae1fc82d;

typedef struct vector<GSUNSWrapper<GSSPRect>, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
    struct GSUNSWrapper<GSSPRect> *__begin_;
    struct GSUNSWrapper<GSSPRect> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRect>*, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
        struct GSUNSWrapper<GSSPRect> *__value_;
    } __end_cap_;
} vector_12d74300;

typedef struct vector<GSUNSWrapper<GSSPSize>, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
    struct GSUNSWrapper<GSSPSize> *__begin_;
    struct GSUNSWrapper<GSSPSize> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPSize>*, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
        struct GSUNSWrapper<GSSPSize> *__value_;
    } __end_cap_;
} vector_408576e7;

typedef struct vector<GSUNSWrapper<GSSPStorageAction>, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
    struct GSUNSWrapper<GSSPStorageAction> *__begin_;
    struct GSUNSWrapper<GSSPStorageAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageAction>*, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
        struct GSUNSWrapper<GSSPStorageAction> *__value_;
    } __end_cap_;
} vector_e72ee21a;

typedef struct vector<GSUNSWrapper<GSSPStorageActionGroup>, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
    struct GSUNSWrapper<GSSPStorageActionGroup> *__begin_;
    struct GSUNSWrapper<GSSPStorageActionGroup> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageActionGroup>*, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
        struct GSUNSWrapper<GSSPStorageActionGroup> *__value_;
    } __end_cap_;
} vector_65aa785d;

typedef struct vector<GSUNSWrapper<GSSPTOCMapEntry>, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
    struct GSUNSWrapper<GSSPTOCMapEntry> *__begin_;
    struct GSUNSWrapper<GSSPTOCMapEntry> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTOCMapEntry>*, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
        struct GSUNSWrapper<GSSPTOCMapEntry> *__value_;
    } __end_cap_;
} vector_56a2c002;

typedef struct vector<GSUNSWrapper<GSSPTableChange>, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
    struct GSUNSWrapper<GSSPTableChange> *__begin_;
    struct GSUNSWrapper<GSSPTableChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTableChange>*, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
        struct GSUNSWrapper<GSSPTableChange> *__value_;
    } __end_cap_;
} vector_1efc630d;

typedef struct vector<GSUNSWrapper<GSSPUserDefinedGuideStorage>, std::__1::allocator<GSUNSWrapper<GSSPUserDefinedGuideStorage>>> {
    struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__begin_;
    struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPUserDefinedGuideStorage>*, std::__1::allocator<GSUNSWrapper<GSSPUserDefinedGuideStorage>>> {
        struct GSUNSWrapper<GSSPUserDefinedGuideStorage> *__value_;
    } __end_cap_;
} vector_d98f2e62;

typedef struct vector<GSUNSWrapper<NSObject>, std::__1::allocator<GSUNSWrapper<NSObject>>> {
    struct GSUNSWrapper<NSObject> *__begin_;
    struct GSUNSWrapper<NSObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSObject>*, std::__1::allocator<GSUNSWrapper<NSObject>>> {
        struct GSUNSWrapper<NSObject> *__value_;
    } __end_cap_;
} vector_78d19954;

typedef struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__value_;
    } __end_cap_;
} vector_95cc1646;

typedef struct vector<GSUNSWrapper<NSUUID>, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
    struct GSUNSWrapper<NSUUID> *__begin_;
    struct GSUNSWrapper<NSUUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSUUID>*, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
        struct GSUNSWrapper<NSUUID> *__value_;
    } __end_cap_;
} vector_a4b47c40;

typedef struct vector<GSUNSWrapper<TSAGalleryItem>, std::__1::allocator<GSUNSWrapper<TSAGalleryItem>>> {
    struct GSUNSWrapper<TSAGalleryItem> *__begin_;
    struct GSUNSWrapper<TSAGalleryItem> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSAGalleryItem>*, std::__1::allocator<GSUNSWrapper<TSAGalleryItem>>> {
        struct GSUNSWrapper<TSAGalleryItem> *__value_;
    } __end_cap_;
} vector_dcbef869;

typedef struct vector<GSUNSWrapper<TSCECellValue>, std::__1::allocator<GSUNSWrapper<TSCECellValue>>> {
    struct GSUNSWrapper<TSCECellValue> *__begin_;
    struct GSUNSWrapper<TSCECellValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCECellValue>*, std::__1::allocator<GSUNSWrapper<TSCECellValue>>> {
        struct GSUNSWrapper<TSCECellValue> *__value_;
    } __end_cap_;
} vector_557f5e11;

typedef struct vector<GSUNSWrapper<TSCEOwnerUidMapper>, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__begin_;
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCEOwnerUidMapper>*, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
        struct GSUNSWrapper<TSCEOwnerUidMapper> *__value_;
    } __end_cap_;
} vector_787f2c5f;

typedef struct vector<GSUNSWrapper<TSCERemoteDataSpecifier>, std::__1::allocator<GSUNSWrapper<TSCERemoteDataSpecifier>>> {
    struct GSUNSWrapper<TSCERemoteDataSpecifier> *__begin_;
    struct GSUNSWrapper<TSCERemoteDataSpecifier> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCERemoteDataSpecifier>*, std::__1::allocator<GSUNSWrapper<TSCERemoteDataSpecifier>>> {
        struct GSUNSWrapper<TSCERemoteDataSpecifier> *__value_;
    } __end_cap_;
} vector_263bb6c2;

typedef struct vector<GSUNSWrapper<TSCHChartAxisID>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
    struct GSUNSWrapper<TSCHChartAxisID> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisID> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisID>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
        struct GSUNSWrapper<TSCHChartAxisID> *__value_;
    } __end_cap_;
} vector_a41e5eee;

typedef struct vector<GSUNSWrapper<TSCHChartAxisNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisNonStyle> *__value_;
    } __end_cap_;
} vector_89a8f19e;

typedef struct vector<GSUNSWrapper<TSCHChartAxisStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisStyle> *__value_;
    } __end_cap_;
} vector_d427a8b4;

typedef struct vector<GSUNSWrapper<TSCHChartSeriesNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__value_;
    } __end_cap_;
} vector_f1905e94;

typedef struct vector<GSUNSWrapper<TSCHChartSeriesStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesStyle> *__value_;
    } __end_cap_;
} vector_3de2eb43;

typedef struct vector<GSUNSWrapper<TSCHSelectionPath>, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
    struct GSUNSWrapper<TSCHSelectionPath> *__begin_;
    struct GSUNSWrapper<TSCHSelectionPath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHSelectionPath>*, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
        struct GSUNSWrapper<TSCHSelectionPath> *__value_;
    } __end_cap_;
} vector_883fcdbc;

typedef struct vector<GSUNSWrapper<TSDBezierNode>, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
    struct GSUNSWrapper<TSDBezierNode> *__begin_;
    struct GSUNSWrapper<TSDBezierNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierNode>*, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
        struct GSUNSWrapper<TSDBezierNode> *__value_;
    } __end_cap_;
} vector_09f9b59f;

typedef struct vector<GSUNSWrapper<TSDBezierSubpath>, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
    struct GSUNSWrapper<TSDBezierSubpath> *__begin_;
    struct GSUNSWrapper<TSDBezierSubpath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierSubpath>*, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
        struct GSUNSWrapper<TSDBezierSubpath> *__value_;
    } __end_cap_;
} vector_f4d1330d;

typedef struct vector<GSUNSWrapper<TSDCommentStorage>, std::__1::allocator<GSUNSWrapper<TSDCommentStorage>>> {
    struct GSUNSWrapper<TSDCommentStorage> *__begin_;
    struct GSUNSWrapper<TSDCommentStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDCommentStorage>*, std::__1::allocator<GSUNSWrapper<TSDCommentStorage>>> {
        struct GSUNSWrapper<TSDCommentStorage> *__value_;
    } __end_cap_;
} vector_d7cc5bc5;

typedef struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__value_;
    } __end_cap_;
} vector_de27e5be;

typedef struct vector<GSUNSWrapper<TSDPencilAnnotation>, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotation>>> {
    struct GSUNSWrapper<TSDPencilAnnotation> *__begin_;
    struct GSUNSWrapper<TSDPencilAnnotation> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDPencilAnnotation>*, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotation>>> {
        struct GSUNSWrapper<TSDPencilAnnotation> *__value_;
    } __end_cap_;
} vector_28983663;

typedef struct vector<GSUNSWrapper<TSDPencilAnnotationStorage>, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotationStorage>>> {
    struct GSUNSWrapper<TSDPencilAnnotationStorage> *__begin_;
    struct GSUNSWrapper<TSDPencilAnnotationStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDPencilAnnotationStorage>*, std::__1::allocator<GSUNSWrapper<TSDPencilAnnotationStorage>>> {
        struct GSUNSWrapper<TSDPencilAnnotationStorage> *__value_;
    } __end_cap_;
} vector_925d7680;

typedef struct vector<GSUNSWrapper<TSDUserDefinedGuide>, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
    struct GSUNSWrapper<TSDUserDefinedGuide> *__begin_;
    struct GSUNSWrapper<TSDUserDefinedGuide> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDUserDefinedGuide>*, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
        struct GSUNSWrapper<TSDUserDefinedGuide> *__value_;
    } __end_cap_;
} vector_f52f2ffb;

typedef struct vector<GSUNSWrapper<TSKCommandResponse>, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
    struct GSUNSWrapper<TSKCommandResponse> *__begin_;
    struct GSUNSWrapper<TSKCommandResponse> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKCommandResponse>*, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
        struct GSUNSWrapper<TSKCommandResponse> *__value_;
    } __end_cap_;
} vector_40d8b6cd;

typedef struct vector<GSUNSWrapper<TSKImageDigestData>, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
    struct GSUNSWrapper<TSKImageDigestData> *__begin_;
    struct GSUNSWrapper<TSKImageDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKImageDigestData>*, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
        struct GSUNSWrapper<TSKImageDigestData> *__value_;
    } __end_cap_;
} vector_0e55654f;

typedef struct vector<GSUNSWrapper<TSKMovieDigestData>, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
    struct GSUNSWrapper<TSKMovieDigestData> *__begin_;
    struct GSUNSWrapper<TSKMovieDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKMovieDigestData>*, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
        struct GSUNSWrapper<TSKMovieDigestData> *__value_;
    } __end_cap_;
} vector_0466cb48;

typedef struct vector<GSUNSWrapper<TSKWebQuickLookImage>, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
    struct GSUNSWrapper<TSKWebQuickLookImage> *__begin_;
    struct GSUNSWrapper<TSKWebQuickLookImage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKWebQuickLookImage>*, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
        struct GSUNSWrapper<TSKWebQuickLookImage> *__value_;
    } __end_cap_;
} vector_c49fe24b;

typedef struct vector<GSUNSWrapper<TSPObject>, std::__1::allocator<GSUNSWrapper<TSPObject>>> {
    struct GSUNSWrapper<TSPObject> *__begin_;
    struct GSUNSWrapper<TSPObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSPObject>*, std::__1::allocator<GSUNSWrapper<TSPObject>>> {
        struct GSUNSWrapper<TSPObject> *__value_;
    } __end_cap_;
} vector_6576d1fe;

typedef struct vector<GSUNSWrapper<TSSStyle>, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
    struct GSUNSWrapper<TSSStyle> *__begin_;
    struct GSUNSWrapper<TSSStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSSStyle>*, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
        struct GSUNSWrapper<TSSStyle> *__value_;
    } __end_cap_;
} vector_0712bf46;

typedef struct vector<GSUNSWrapper<TSTCell>, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
    struct GSUNSWrapper<TSTCell> *__begin_;
    struct GSUNSWrapper<TSTCell> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTCell>*, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
        struct GSUNSWrapper<TSTCell> *__value_;
    } __end_cap_;
} vector_fa1cc45b;

typedef struct vector<GSUNSWrapper<TSTColumnAggregate>, std::__1::allocator<GSUNSWrapper<TSTColumnAggregate>>> {
    struct GSUNSWrapper<TSTColumnAggregate> *__begin_;
    struct GSUNSWrapper<TSTColumnAggregate> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTColumnAggregate>*, std::__1::allocator<GSUNSWrapper<TSTColumnAggregate>>> {
        struct GSUNSWrapper<TSTColumnAggregate> *__value_;
    } __end_cap_;
} vector_dc5fd506;

typedef struct vector<GSUNSWrapper<TSTConditionalStyleRule>, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
    struct GSUNSWrapper<TSTConditionalStyleRule> *__begin_;
    struct GSUNSWrapper<TSTConditionalStyleRule> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTConditionalStyleRule>*, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
        struct GSUNSWrapper<TSTConditionalStyleRule> *__value_;
    } __end_cap_;
} vector_566c8763;

typedef struct vector<GSUNSWrapper<TSTGroupNode>, std::__1::allocator<GSUNSWrapper<TSTGroupNode>>> {
    struct GSUNSWrapper<TSTGroupNode> *__begin_;
    struct GSUNSWrapper<TSTGroupNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTGroupNode>*, std::__1::allocator<GSUNSWrapper<TSTGroupNode>>> {
        struct GSUNSWrapper<TSTGroupNode> *__value_;
    } __end_cap_;
} vector_ae6c0bda;

typedef struct vector<GSUNSWrapper<TSTGroupingColumn>, std::__1::allocator<GSUNSWrapper<TSTGroupingColumn>>> {
    struct GSUNSWrapper<TSTGroupingColumn> *__begin_;
    struct GSUNSWrapper<TSTGroupingColumn> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTGroupingColumn>*, std::__1::allocator<GSUNSWrapper<TSTGroupingColumn>>> {
        struct GSUNSWrapper<TSTGroupingColumn> *__value_;
    } __end_cap_;
} vector_47bb12b6;

typedef struct vector<GSUNSWrapper<TSTMergeAction>, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
    struct GSUNSWrapper<TSTMergeAction> *__begin_;
    struct GSUNSWrapper<TSTMergeAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTMergeAction>*, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
        struct GSUNSWrapper<TSTMergeAction> *__value_;
    } __end_cap_;
} vector_c8dfb770;

typedef struct vector<GSUNSWrapper<TSTTableStrokePresetData>, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
    struct GSUNSWrapper<TSTTableStrokePresetData> *__begin_;
    struct GSUNSWrapper<TSTTableStrokePresetData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTTableStrokePresetData>*, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
        struct GSUNSWrapper<TSTTableStrokePresetData> *__value_;
    } __end_cap_;
} vector_99e347df;

typedef struct vector<GSUNSWrapper<TSUCustomFormat>, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
    struct GSUNSWrapper<TSUCustomFormat> *__begin_;
    struct GSUNSWrapper<TSUCustomFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSUCustomFormat>*, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
        struct GSUNSWrapper<TSUCustomFormat> *__value_;
    } __end_cap_;
} vector_7cc38b35;

typedef struct vector<GSUNSWrapper<TSUUUIDPath>, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
    struct GSUNSWrapper<TSUUUIDPath> *_field1;
    struct GSUNSWrapper<TSUUUIDPath> *_field2;
    struct __compressed_pair<GSUNSWrapper<TSUUUIDPath>*, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
        struct GSUNSWrapper<TSUUUIDPath> *_field1;
    } _field3;
} vector_2f0024c7;

typedef struct vector<GSUNSWrapper<TSWPChangeSession>, std::__1::allocator<GSUNSWrapper<TSWPChangeSession>>> {
    struct GSUNSWrapper<TSWPChangeSession> *__begin_;
    struct GSUNSWrapper<TSWPChangeSession> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPChangeSession>*, std::__1::allocator<GSUNSWrapper<TSWPChangeSession>>> {
        struct GSUNSWrapper<TSWPChangeSession> *__value_;
    } __end_cap_;
} vector_5bca4cfa;

typedef struct vector<GSUNSWrapper<TSWPFlowInfo>, std::__1::allocator<GSUNSWrapper<TSWPFlowInfo>>> {
    struct GSUNSWrapper<TSWPFlowInfo> *__begin_;
    struct GSUNSWrapper<TSWPFlowInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPFlowInfo>*, std::__1::allocator<GSUNSWrapper<TSWPFlowInfo>>> {
        struct GSUNSWrapper<TSWPFlowInfo> *__value_;
    } __end_cap_;
} vector_4dd96dbd;

typedef struct vector<GSUNSWrapper<TSWPParagraphStyle>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
    struct GSUNSWrapper<TSWPParagraphStyle> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStyle>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
        struct GSUNSWrapper<TSWPParagraphStyle> *__value_;
    } __end_cap_;
} vector_0fdc101f;

typedef struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__value_;
    } __end_cap_;
} vector_91c4f456;

typedef struct vector<GSUNSWrapper<TSWPTOCEntryData>, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
    struct GSUNSWrapper<TSWPTOCEntryData> *__begin_;
    struct GSUNSWrapper<TSWPTOCEntryData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTOCEntryData>*, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
        struct GSUNSWrapper<TSWPTOCEntryData> *__value_;
    } __end_cap_;
} vector_dd86de9c;

typedef struct vector<GSUNSWrapper<TSWPTab>, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
    struct GSUNSWrapper<TSWPTab> *__begin_;
    struct GSUNSWrapper<TSWPTab> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTab>*, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
        struct GSUNSWrapper<TSWPTab> *__value_;
    } __end_cap_;
} vector_5721d7ae;

typedef struct vector<RefTypeHolder<TSCERangeRef, 0>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
    RefTypeHolder_c762613b *_field1;
    RefTypeHolder_c762613b *_field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 0>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 0>>> {
        RefTypeHolder_c762613b *_field1;
    } _field3;
} vector_40295af5;

typedef struct vector<RefTypeHolder<TSCERangeRef, 1>, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
    RefTypeHolder_97fac6a8 *_field1;
    RefTypeHolder_97fac6a8 *_field2;
    struct __compressed_pair<RefTypeHolder<TSCERangeRef, 1>*, std::__1::allocator<RefTypeHolder<TSCERangeRef, 1>>> {
        RefTypeHolder_97fac6a8 *_field1;
    } _field3;
} vector_e93a2b69;

typedef struct vector<TSCECategoryLevel, std::__1::allocator<TSCECategoryLevel>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<TSCECategoryLevel *, std::__1::allocator<TSCECategoryLevel>> {
        unsigned char *_field1;
    } _field3;
} vector_ae66d7ff;

typedef struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef *_field1;
    struct TSCECategoryRef *_field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef *_field1;
    } _field3;
} vector_2431c21e;

typedef struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef *__begin_;
    struct TSCECellRef *__end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef *__value_;
    } __end_cap_;
} vector_4115f7f8;

typedef struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__value_;
    } __end_cap_;
} vector_eeb872f1;

typedef struct vector<TSCEFormulaOwnerKind, std::__1::allocator<TSCEFormulaOwnerKind>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSCEFormulaOwnerKind *, std::__1::allocator<TSCEFormulaOwnerKind>> {
        int *_field1;
    } _field3;
} vector_79ca7eec;

typedef struct vector<TSCEFunctionArgSpec, std::__1::allocator<TSCEFunctionArgSpec>> {
    struct TSCEFunctionArgSpec *__begin_;
    struct TSCEFunctionArgSpec *__end_;
    struct __compressed_pair<TSCEFunctionArgSpec *, std::__1::allocator<TSCEFunctionArgSpec>> {
        struct TSCEFunctionArgSpec *__value_;
    } __end_cap_;
} vector_2a3fe66d;

typedef struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
} vector_60dd006f;

typedef struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
} vector_99ef3555;

typedef struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *__begin_;
    struct TSCEValue *__end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *__value_;
    } __end_cap_;
} vector_a1208d01;

typedef struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__value_;
    } __end_cap_;
} vector_5e5e1cd2;

typedef struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__value_;
    } __end_cap_;
} vector_1798193c;

typedef struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__value_;
    } __end_cap_;
} vector_e28bcd8e;

typedef struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__value_;
    } __end_cap_;
} vector_d7c2985b;

typedef struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__value_;
    } __end_cap_;
} vector_22c20f1a;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
} vector_8bba9095;

typedef struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__value_;
    } __end_cap_;
} vector_adb99b2c;

typedef struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__value_;
    } __end_cap_;
} vector_cc556b2d;

typedef struct vector<TSTCategoryLabelRowVisibility, std::__1::allocator<TSTCategoryLabelRowVisibility>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<TSTCategoryLabelRowVisibility *, std::__1::allocator<TSTCategoryLabelRowVisibility>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_133486de;

typedef struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__value_;
    } __end_cap_;
} vector_7670e6f2;

typedef struct vector<TSTColumnRowType, std::__1::allocator<TSTColumnRowType>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<TSTColumnRowType *, std::__1::allocator<TSTColumnRowType>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_eb5b6e5a;

typedef struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__value_;
    } __end_cap_;
} vector_613d3e5a;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
} vector_4dc5f307;

typedef struct vector<TSU::UUIDRect<TSP::UUIDRect>, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
    UUIDRect_d701734b *__begin_;
    UUIDRect_d701734b *__end_;
    struct __compressed_pair<TSU::UUIDRect<TSP::UUIDRect>*, std::__1::allocator<TSU::UUIDRect<TSP::UUIDRect>>> {
        UUIDRect_d701734b *__value_;
    } __end_cap_;
} vector_793e6c56;

typedef struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__value_;
    } __end_cap_;
} vector_38b190b0;

typedef struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__value_;
    } __end_cap_;
} vector_e87daf7b;

typedef struct vector<TSUModelCellRect, std::__1::allocator<TSUModelCellRect>> {
    struct TSUModelCellRect *_field1;
    struct TSUModelCellRect *_field2;
    struct __compressed_pair<TSUModelCellRect *, std::__1::allocator<TSUModelCellRect>> {
        struct TSUModelCellRect *_field1;
    } _field3;
} vector_54ceaeac;

typedef struct vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>> {
    struct TSUViewCellRect *_field1;
    struct TSUViewCellRect *_field2;
    struct __compressed_pair<TSUViewCellRect *, std::__1::allocator<TSUViewCellRect>> {
        struct TSUViewCellRect *_field1;
    } _field3;
} vector_1235e7c3;

typedef struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
} vector_e3deae5b;

typedef struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction *_field1;
    struct TSWPStorageAction *_field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction *_field1;
    } _field3;
} vector_e5fc8613;

typedef struct vector<_CGLPixelFormatAttribute, std::__1::allocator<_CGLPixelFormatAttribute>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<_CGLPixelFormatAttribute *, std::__1::allocator<_CGLPixelFormatAttribute>> {
        int *_field1;
    } _field3;
} vector_10364fa1;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
} vector_b5e32e34;

typedef struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__value_;
    } __end_cap_;
} vector_7c702c4c;

typedef struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
} vector_e25fc222;

typedef struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
} vector_553f084a;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<const SDChildDescription *, std::__1::allocator<const SDChildDescription *>> {
    CDStruct_183601bc **_field1;
    CDStruct_183601bc **_field2;
    struct __compressed_pair<const SDChildDescription **, std::__1::allocator<const SDChildDescription *>> {
        CDStruct_183601bc **_field1;
    } _field3;
} vector_e71f4449;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
} vector_7584168e;

typedef struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__value_;
    } __end_cap_;
} vector_9ed239ac;

typedef struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
} vector_319661ea;

typedef struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__value_;
    } __end_cap_;
} vector_d73af98f;

typedef struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__value_;
    } __end_cap_;
} vector_522a5b3a;

typedef struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__value_;
    } __end_cap_;
} vector_7200ab52;

typedef struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
} vector_e600bae4;

typedef struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__value_;
    } __end_cap_;
} vector_ccfc515b;

typedef struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
} vector_50d79d4a;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
} vector_afed86a5;

typedef struct vector<signed char, std::__1::allocator<signed char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<signed char *, std::__1::allocator<signed char>> {
        char *__value_;
    } __end_cap_;
} vector_561d5ecd;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
} vector_aab22ae2;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
} vector_12da65de;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_06e666a8;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
} vector_8d85e9cb;

typedef struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
} vector_3c415888;

#pragma mark Named Unions

union EFData {
    struct {
        unsigned long long _field1;
        unsigned long long _field2;
        char _field3;
    } _field1;
    struct {
        unsigned long long _field1;
        void *_field2;
    } _field2;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        char _field3;
        char _field4;
    } _field3;
};

union Value {
    struct RGB _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct AdjustedColor _field4;
};

union YYSTYPE {
    struct EFRefTok _field1;
    id _field2;
    unsigned long long _field3;
    int _field4;
    double _field5;
    id _field6;
    struct EFStrTok _field7;
};

#pragma mark Typedef'd Unions

// Ambiguous groups
typedef union {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDUnion_2cf95dea;

typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int _field1;
    int _field2;
    int _field3;
} CDUnion_58123c5d;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

