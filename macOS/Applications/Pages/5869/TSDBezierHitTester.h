//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class TSUMutablePointerSet;

@interface TSDBezierHitTester : NSObject
{
    struct map<CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>, CGPointCompare, std::__1::allocator<std::__1::pair<const CGPoint, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> _pointInfoGridMap;
    TSUMutablePointerSet *_allPathSet;
    struct map<unsigned long, TSUBezierPath *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUBezierPath *>>> _allPathMap;
    struct map<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>, std::__1::less<TSUBezierPath *>, std::__1::allocator<std::__1::pair<TSUBezierPath *const, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> _allNonFilledPointInfosForPathMap;
    struct map<TSUBezierPath *, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>, std::__1::less<TSUBezierPath *>, std::__1::allocator<std::__1::pair<TSUBezierPath *const, std::__1::set<TSDBezierHitTesterPointInfoStruct, PointCompare, std::__1::allocator<TSDBezierHitTesterPointInfoStruct>>>>> _allFilledPointInfosForPathMap;
    unsigned long long _bucketSize;
    unsigned long long _nextPathIdForInsertion;
    BOOL _hasAtLeastOneOpenPath;
    BOOL _hasAtLeastOneFilledPath;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_iterateOverEveryNonEmptyBucketNear:(struct CGPoint)arg1 withSearchThreshold:(double)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)p_iterateOverEveryNonEmptyBucketInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_iterateOverEveryExistingBucketPointInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_iterateOverEveryBucketPointInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_addFilledPathToGrid:(id)arg1 withPathId:(unsigned long long)arg2;
- (void)p_addOpenPathToGrid:(id)arg1 withPathId:(unsigned long long)arg2;
- (void)p_addPointInfoStruct:(CDStruct_0d67c3bc *)arg1;
- (id)p_bucketPointValueForPoint:(struct CGPoint)arg1;
- (id)pathsWithPercentage:(double)arg1 approximatelyInsidePath:(id)arg2 requiringPercentForFilledEdges:(BOOL)arg3;
- (id)pathsCrossingPath:(id)arg1 withSearchThreshold:(double)arg2;
- (id)allHitsAlongPath:(id)arg1 withSearchThreshold:(double)arg2;
- (id)closestHitsTo:(struct CGPoint)arg1 withSearchThreshold:(double)arg2 passingTest:(CDUnknownBlockType)arg3;
- (void)removePath:(id)arg1;
- (void)addPath:(id)arg1 filled:(BOOL)arg2;
@property(readonly, nonatomic) unsigned long long pathCount;
- (id)initWithBucketSize:(double)arg1;

@end

