//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSSPAutoEncodable-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSMutableCopying-Protocol.h"
#import "TSDMixing-Protocol.h"

@interface TSDInfoGeometry : NSObject <GSSPAutoEncodable, TSDMixing, NSCopying, NSMutableCopying>
{
    struct CGPoint _position;
    struct CGSize _size;
    struct {
        unsigned int widthValid:1;
        unsigned int heightValid:1;
        unsigned int horizontalFlip:1;
        unsigned int verticalFlip:1;
    } _flags;
    double _angle;
}

+ (id)geometryFromTransform:(struct CGAffineTransform)arg1 withSize:(struct CGSize)arg2;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1 widthValid:(BOOL)arg2 heightValid:(BOOL)arg3;
@property(readonly, nonatomic) double angle; // @synthesize angle=_angle;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) struct CGPoint position; // @synthesize position=_position;
- (id)description;
- (id)normalizedGeometry;
- (id)geometryWithNewBounds:(struct CGRect)arg1;
- (id)geometryRelativeToGeometry:(id)arg1;
- (id)geometryWithParentGeometry:(id)arg1;
- (id)geometryByAppendingTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) struct CGAffineTransform fullTransform;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (BOOL)isEqualExceptForPosition:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)geometryWithValidNumbers;
@property(readonly, nonatomic) BOOL allValuesValidNumbers;
@property(readonly, nonatomic) struct CGPoint transformedBoundsOrigin;
@property(readonly, nonatomic) struct CGRect transformedBounds;
@property(readonly, nonatomic) struct CGAffineTransform transformWithoutFlips;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2 withFlips:(BOOL)arg3;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2;
- (struct CGAffineTransform)transformBasedOnRect:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGAffineTransform transform;
@property(readonly, nonatomic) struct CGPoint center;
@property(readonly, nonatomic) struct CGRect boundsBeforeRotation;
@property(readonly, nonatomic) BOOL verticalFlip;
@property(readonly, nonatomic) BOOL horizontalFlip;
@property(readonly, nonatomic) BOOL heightValid;
@property(readonly, nonatomic) BOOL widthValid;
- (id)initWithLayoutGeometry:(id)arg1;
- (id)initWithTransform:(struct CGAffineTransform)arg1 size:(struct CGSize)arg2;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 horizontalFlip:(BOOL)arg3 verticalFlip:(BOOL)arg4 angle:(double)arg5;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithHeight:(double)arg1;
- (id)initWithWidth:(double)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (id)init;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFullTransform:(struct CGAffineTransform)arg1 widthValid:(BOOL)arg2 heightValid:(BOOL)arg3;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 widthValid:(BOOL)arg3 heightValid:(BOOL)arg4 horizontalFlip:(BOOL)arg5 verticalFlip:(BOOL)arg6 angle:(double)arg7;
- (id)initWithQDGeometry:(id)arg1;
- (void)saveToArchive:(struct GeometryArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct GeometryArchive *)arg1;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;
- (void)populateGSSPDrawableGeometry:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;

@end

