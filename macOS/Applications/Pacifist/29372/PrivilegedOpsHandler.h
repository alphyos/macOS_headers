//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CSASHelperConnection;

@interface PrivilegedOpsHandler : NSObject
{
    BOOL _isPrivileged;
    CSASHelperConnection *_connection;
}

+ (void)makePrivilegedOpsHandlerWithAuthentication:(BOOL)arg1 handler:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL isPrivileged; // @synthesize isPrivileged=_isPrivileged;
@property(retain, nonatomic) CSASHelperConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)closeConnection;
- (BOOL)syncPatchFileAtURL:(id)arg1 toURL:(id)arg2 patchURL:(id)arg3 error:(id *)arg4;
- (id)syncChecksumAtURL:(id)arg1 ofType:(int)arg2 error:(id *)arg3;
- (BOOL)syncRunPaxWithOptions:(id)arg1 arguments:(id)arg2 suffixURL:(id)arg3 currentDirectoryURL:(id)arg4 error:(id *)arg5;
- (BOOL)syncRemoveFileAtURL:(id)arg1 recursively:(BOOL)arg2 error:(id *)arg3;
- (BOOL)syncMoveFileAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)syncCreateSymbolicLinkAtURL:(id)arg1 withDestinationPath:(id)arg2 error:(id *)arg3;
- (BOOL)syncCreateDirectoryAtURL:(id)arg1 recursively:(BOOL)arg2 error:(id *)arg3;
- (id)syncPathContentOfSymbolicLinkAtURL:(id)arg1 error:(id *)arg2;
- (id)syncContentsOfDirectoryAtURL:(id)arg1 error:(id *)arg2;
- (long long)syncNumberOfItemsInDirectoryAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)syncSetFileOwnerID:(unsigned int)arg1 groupOwnerID:(unsigned int)arg2 permissionsMode:(unsigned short)arg3 atURLs:(id)arg4 error:(id *)arg5;
- (BOOL)syncSetFileOwnerID:(unsigned int)arg1 groupOwnerID:(unsigned int)arg2 permissionsMode:(unsigned short)arg3 atURL:(id)arg4 error:(id *)arg5;
- (BOOL)syncGetFileInfoAtURL:(id)arg1 fileSize:(unsigned long long *)arg2 ownerID:(unsigned int *)arg3 groupOwnerID:(unsigned int *)arg4 permissionsMode:(unsigned short *)arg5 traverseLink:(BOOL)arg6 error:(id *)arg7;
- (BOOL)syncCheckResourceIsReachable:(id)arg1 isDirectory:(char *)arg2 isLink:(char *)arg3 traverseLink:(BOOL)arg4 error:(id *)arg5;
- (BOOL)syncCheckResourceIsReachable:(id)arg1 error:(id *)arg2;
- (id)syncOpenFileHandlesAtURLs:(id)arg1 withReadAccess:(BOOL)arg2 writeAccess:(BOOL)arg3 createIfNonexistent:(BOOL)arg4 truncateToZero:(BOOL)arg5 traverseLink:(BOOL)arg6 error:(id *)arg7;
- (id)errorByCheckingForRootlessViolation:(id)arg1 forURLs:(id)arg2;
- (void)patchFileAtURL:(id)arg1 toURL:(id)arg2 patchURL:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)checksumAtURL:(id)arg1 ofType:(int)arg2 handler:(CDUnknownBlockType)arg3;
- (void)runPaxWithOptions:(id)arg1 arguments:(id)arg2 suffixURL:(id)arg3 currentDirectoryURL:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)runPaxWithArgumentArrays:(id)arg1 currentDirectoryURL:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)removeFileAtURL:(id)arg1 recursively:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;
- (void)moveFileAtURL:(id)arg1 toURL:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)pathContentOfSymbolicLinkAtURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)contentsOfDirectoryAtURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)numberOfItemsInDirectoryAtURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)createSymbolicLinkAtURL:(id)arg1 withDestinationPath:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)createDirectoryAtURL:(id)arg1 recursively:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;
- (void)setFileOwnerID:(unsigned int)arg1 groupOwnerID:(unsigned int)arg2 permissionsMode:(unsigned short)arg3 atURLs:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)setFileOwnerID:(unsigned int)arg1 groupOwnerID:(unsigned int)arg2 permissionsMode:(unsigned short)arg3 atURL:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)getFileInfoAtURL:(id)arg1 traverseLink:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;
- (void)checkResourceIsReachable:(id)arg1 traverseLink:(BOOL)arg2 handler:(CDUnknownBlockType)arg3;
- (void)checkResourceIsReachable:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)openFileHandlesAtURLs:(id)arg1 withReadAccess:(BOOL)arg2 writeAccess:(BOOL)arg3 createIfNonexistent:(BOOL)arg4 truncateToZero:(BOOL)arg5 traverseLink:(BOOL)arg6 handler:(CDUnknownBlockType)arg7;
- (id)initNonPrivilegedHandler;
- (id)initPrivilegedHandlerWithPersistentConnection:(id)arg1;

@end

