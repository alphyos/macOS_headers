//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBPeripheralDelegate-Protocol.h"
#import "LEScannerConnection-Protocol.h"
#import "LEScannerConnectionInternal-Protocol.h"

@class CBCharacteristic, CBPeripheral, CBService, EventTimestamp, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSString, NSTimer;
@protocol LEScannerConnectionDelegate, LeScannerConnectionInternalDelegate;

@interface LeScannerConnection : NSObject <CBPeripheralDelegate, LEScannerConnection, LEScannerConnectionInternal>
{
    CBService *myService;
    CBCharacteristic *sendingCharacteristicPrimary;
    CBCharacteristic *sendingCharacteristicSecondary;
    CBCharacteristic *readingCharacteristic;
    CBCharacteristic *readingCharacteristicFast;
    NSMutableData *receivedData;
    NSMutableDictionary *dictOfData;
    unsigned long long lengthOfDataToSend;
    NSNumber *myRSSI;
    char *connectionEstablished;
    NSString *uniqueAuthIdentifier;
    BOOL shouldWaitForCharacteristicStateUpdateToDisconnect;
    BOOL isInDisconectingProcess;
    NSString *authentificationString;
    NSTimer *stateTimer;
    NSTimer *keepAliveTimer;
    NSTimer *keepAliveResponseTimer;
    NSTimer *forceDisconnectTimer;
    NSTimer *safetyTerminateTimer;
    EventTimestamp *inDisconnectTimestamp;
    EventTimestamp *responseTimestamp;
    EventTimestamp *connectionTimestamp;
    NSTimer *resendAuthentificationTimer;
    NSMutableArray *arrayOfBeaconCharacteristics;
    long long numberOfFalseConn;
    long long keepAliveInt;
    BOOL _requireHandshake;
    BOOL _ignoreForceRestartConnectionAfterLongSleep;
    int _scannerState;
    id <LEScannerConnectionDelegate> delegate;
    EventTimestamp *_lastUpdateTimestamp;
    EventTimestamp *_lastDetectTimestamp;
    EventTimestamp *_startedConnectingTimestamp;
    id <LeScannerConnectionInternalDelegate> _delegateInternal;
    CBPeripheral *_servicePeripheral;
}

@property(retain, nonatomic) CBPeripheral *servicePeripheral; // @synthesize servicePeripheral=_servicePeripheral;
@property(nonatomic) __weak id <LeScannerConnectionInternalDelegate> delegateInternal; // @synthesize delegateInternal=_delegateInternal;
@property(nonatomic) BOOL ignoreForceRestartConnectionAfterLongSleep; // @synthesize ignoreForceRestartConnectionAfterLongSleep=_ignoreForceRestartConnectionAfterLongSleep;
@property(nonatomic) BOOL requireHandshake; // @synthesize requireHandshake=_requireHandshake;
@property(nonatomic) int scannerState; // @synthesize scannerState=_scannerState;
@property(retain, nonatomic) EventTimestamp *startedConnectingTimestamp; // @synthesize startedConnectingTimestamp=_startedConnectingTimestamp;
@property(retain, nonatomic) EventTimestamp *lastDetectTimestamp; // @synthesize lastDetectTimestamp=_lastDetectTimestamp;
@property(retain, nonatomic) EventTimestamp *lastUpdateTimestamp; // @synthesize lastUpdateTimestamp=_lastUpdateTimestamp;
@property(nonatomic) __weak id <LEScannerConnectionDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)didInteractWithOtherSide;
- (void)invalidateKeepAliveResponseTimer;
- (void)checkifPongReceived;
- (void)noResponseReceived;
- (void)startKeepAliveResponseTimer;
- (void)sendKeepAliveMessage;
- (void)restartKeepAliveTimer;
- (void)invalidateKeepAliveTimer;
- (void)stopForceDisconnectTimer;
- (void)stopSafetyTerminateTimer;
- (void)forceDisconnectTimerTriggered:(id)arg1;
- (void)startSafetyTerminateTimer;
- (void)startForceDisconnectTimer;
- (BOOL)allServicesDiscoveredAndActive;
- (id)getData;
- (void)handleGeneralBleutoothError:(id)arg1;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)notifyPeripheralForReadingCharacteristicFast:(id)arg1;
- (void)resendInitalRequest;
- (void)resendInitialRequestAfterDelay;
- (void)sendConnectionRequest;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)sendDataInChunks:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)finalizeMessageAndSendCoreData:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)sendCommand:(id)arg1 withString:(id)arg2;
- (void)sendString:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)didReceiveAuthResponseWithAuthString:(id)arg1;
- (void)didReceiveAuthRequestWithAuthIdentifier:(id)arg1;
- (void)didReceiveCommand:(id)arg1 withString:(id)arg2;
- (id)generateDictionaryWithReceivedDataforCharacteristic:(id)arg1;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheralDidUpdateRSSI:(id)arg1 error:(id)arg2;
- (void)resetCharacteristics;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)scanForAppropriateCharacteristicsWithPeripheral:(id)arg1;
- (BOOL)shouldAcceptServiceWithCBUUID:(id)arg1;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (BOOL)shouldTryToDiscoverAllServicesIfNoServicesAreFound;
- (void)peripheral:(id)arg1 didDiscoverIncludedServicesForService:(id)arg2 error:(id)arg3;
- (id)servicesForCurrentAttempt;
- (void)executeDiscoverServices;
- (BOOL)shouldDiscoverAndConnectServicesAfterConnecting;
- (void)discoverAndConnectServices;
- (void)setRSSI:(id)arg1;
@property(readonly) CBPeripheral *peripheral;
- (void)setNumberOfFalseConnection:(long long)arg1;
- (long long)numberOfFlaseConnections;
- (void)notifyDelegateOfDisconnect;
- (void)notifyDelegateOfConnect;
- (void)connectionLost;
- (void)connectionEstablished;
- (void)recovered;
- (void)stateTimerTriggered:(id)arg1;
- (void)invalidateStuckInStateTimer;
- (void)startStateTimer:(double)arg1;
- (void)startStuckInStateTimer;
- (void)startStuckInStateTimerShort;
- (void)startStuckInStateTimerLongest;
- (id)scannerStateToString:(int)arg1;
- (id)inDisconnectTimestampValue;
- (BOOL)isInDisconectingProcess;
- (BOOL)isConnecting;
- (BOOL)isConnected;
- (id)lastRSSI;
- (void)updateRSSI;
- (void)forceTerminateConnection;
- (void)terminateConnection;
- (void)cleanConnectionAfterDisconnect;
- (BOOL)shouldTerminateConnectionImmediatelly;
- (void)disconnect;
- (void)disconnectBecauseOfError;
- (void)connect;
- (id)peripheralIdentifier;
- (id)serviceId;
- (void)setKeepAliveInterval:(long long)arg1;
- (id)unId;
- (void)didAttemptConnection;
- (void)dealloc;
- (void)setInternalDelegate:(id)arg1;
- (void)updateConnectionWithPeripheral:(id)arg1;
- (id)initWithPeripheral:(id)arg1 withDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

