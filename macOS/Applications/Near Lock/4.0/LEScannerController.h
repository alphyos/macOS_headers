//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBCentralManagerDelegate-Protocol.h"
#import "CBPeripheralDelegate-Protocol.h"
#import "LEScanner-Protocol.h"
#import "LeScannerConnectionInternalDelegate-Protocol.h"

@class CBCentralManager, EventTimestamp, LEScannerCachedConnections, LEScannerIgnoreManager, LeDataManager, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol LEScannerDelegate;

@interface LEScannerController : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate, LeScannerConnectionInternalDelegate, LEScanner>
{
    NSString *uniqueStaticPeripheralId;
    CBCentralManager *centralManager;
    long long mainErrorCount;
    LEScannerIgnoreManager *ignoreManager;
    LEScannerCachedConnections *cachedConnections;
    LeDataManager *persistantData;
    NSMutableArray *myFoundPeripherals;
    NSMutableArray *serviceUUIDToAcceptConnection;
    NSMutableDictionary *myFoundConnections;
    NSMutableDictionary *myConnectedConnections;
    NSMutableDictionary *pendingConnectPeripherals;
    BOOL isScanning;
    BOOL shouldAceptNotDefinedUUIDs;
    long long numberOfTimesScannedForSpecificServices;
    long long numberOfTimesScannedForAllServices;
    EventTimestamp *restartScanningEvent;
    EventTimestamp *clearIgnoreListEvent;
    EventTimestamp *lastConnectionAttemptTimestamp;
    EventTimestamp *mainConnectionDisconnectAttempt;
    EventTimestamp *peripheralRecoveredTimestamp;
    EventTimestamp *recoverServicesTimestamp;
    EventTimestamp *longSleepWakeUp;
    EventTimestamp *applicationDidWake;
    NSTimer *restartScanIfNoServiceIsRecovered;
    BOOL shouldRetreiveConnectedPeripherals;
    id <LEScannerDelegate> _delegate;
}

@property(nonatomic) __weak id <LEScannerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (void)tryToRecoverLastPeripheral;
- (void)recoverDisconnectedDevice;
- (void)centralManager:(id)arg1 didRetrieveConnectedPeripherals:(id)arg2;
- (BOOL)hasConnectedConnection;
- (id)getOptionsForServices:(id)arg1 includeSolicitedServicesKey:(BOOL)arg2;
- (void)restartScan:(id)arg1;
- (BOOL)shouldDisconnectMainCachedConnection;
- (void)tryToReconnectToMainConnection;
- (BOOL)shouldScanForAllServices;
- (void)resetScanProperties;
- (void)scanForServicesDependingOnOperatingSystem:(id)arg1 options:(id)arg2;
- (void)executeScanForServices:(id)arg1;
- (void)prepareAndScanForServices:(id)arg1;
- (void)startRecoverRescanTimerWithServices:(id)arg1;
- (id)getAllAdvertisedServicesFromAdvertismentData:(id)arg1;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)retrievePeripheralsOnNextScanIfNeeded;
- (void)performBluetoothTurnedOnNotification;
- (void)clearDevicesForced:(BOOL)arg1;
- (void)notifyDelegateOfDisconnect;
- (void)disconnect:(id)arg1;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)disconnectPeripheral:(id)arg1;
- (void)cleanupAllConnections;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)applicationDidWake;
- (void)applicationDidWakeAfterLongSleep;
- (BOOL)shouldRestartConnectionAfterLongRestart:(id)arg1;
- (void)restartConnectionAfterLongSeep:(id)arg1;
- (void)connectionDidAttemptToConnect:(id)arg1;
- (void)checkAfterDelayIfAnyPeripheralInConnectQueue;
- (void)removeConnectionFromConnectQueue:(id)arg1;
- (void)putConnectionToConnectQueueAndTryToConnectLater:(id)arg1;
- (void)connectCustomPeripheral:(id)arg1;
- (void)recreateConnectionAndConnectPeripheral:(id)arg1;
- (void)recreateConnectionForPeripheral:(id)arg1;
- (id)connectionForPeripheral:(id)arg1;
- (BOOL)isAnyPeripheralConnecting;
- (void)connectionIsTryingToConnectForALongPeriodOfTime:(id)arg1;
- (void)handlePeripheralForMainConneciton:(id)arg1;
- (void)discoveredConnectedConneciton:(id)arg1 withRSSI:(id)arg2;
- (void)tryToConnectToPeripheral:(id)arg1 RSSI:(id)arg2;
- (void)discoveredInterestingPeripheral:(id)arg1 RSSI:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (BOOL)isUnknownService:(id)arg1;
- (BOOL)isNearLockService:(id)arg1;
- (BOOL)isAppleTVForAdvertismentData:(id)arg1;
- (BOOL)peripheralHasAppropriateServicesInAdvertismentData:(id)arg1;
- (BOOL)canConnectToPeripheralWithAdvertismentData:(id)arg1;
- (BOOL)shouldForceDisconnectConnection:(id)arg1;
- (BOOL)connectionIsInDisconnectProccess:(id)arg1;
- (BOOL)shouldIgnorePeripheral:(id)arg1 withAdvertismentData:(id)arg2;
- (BOOL)isScanning;
- (void)stopScanning;
- (id)getArrayOfCBUUIDFromServices;
- (void)executeSingleScan;
- (void)setServiceUUIDToSearchFor:(id)arg1;
- (void)removePeripheralFromIgnoreList:(id)arg1;
- (void)clearPeripheralIgnoreList;
- (void)cleanPeripheralsForIgnoreReason:(int)arg1;
- (void)ignorePeripheralWithUUID:(id)arg1 forReason:(int)arg2;
- (void)removeCachedPeripheralWithUUID:(id)arg1;
- (void)removeAllCachedConnections;
- (void)removeAndIgnoreAllPeripheralsExceptPeripheralWithUUID:(id)arg1;
- (void)cachePeripheralWithUUID:(id)arg1;
- (void)clearAcceptUUIDServiceList;
- (void)acceptUUIDServiceString:(id)arg1;
- (void)acceptNotDefinedUUIDService:(BOOL)arg1;
- (void)centralManager:(id)arg1 didRetrievePeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didRetrievePeripherals:(id)arg2;
- (void)centralManager:(id)arg1 willRestoreState:(id)arg2;
- (BOOL)peripheralIsAlreadyConnecting:(id)arg1;
- (void)handleRecoveredPeripherals:(id)arg1;
- (void)retreiveConnectedPeripheralsAndScan;
- (void)didRecoverPeripheral:(id)arg1;
- (void)markConnectionAsUnsuitable:(id)arg1;
- (BOOL)scannerConnection:(id)arg1 shouldAcceptServiceWithUUID:(id)arg2;
- (void)scannerConnectionDidDetectInappropriateServices:(id)arg1;
- (void)scannerConnectionExperiencedUnsolvableError:(id)arg1;
- (void)scannerConnectionExperiencedCorruptedBluetoothCache:(id)arg1;
- (void)scannerConnectionIsNotAnAppropriateConnection:(id)arg1;
- (void)scannerConnection:(id)arg1 performCommand:(int)arg2;
- (id)scannerConnectionGetArrayOfServices:(id)arg1;
- (void)scannerConnectionDidNotReceivePing:(id)arg1;
- (void)scannerConnection:(id)arg1 didGetStuckInState:(int)arg2;
- (void)scannerConnection:(id)arg1 didUpdateState:(int)arg2;
- (BOOL)scannerShouldScanForServicesAfterConnection:(id)arg1;
- (BOOL)scannerConnectionShouldAcceptAllServices:(id)arg1;
- (id)connectionForUnID:(id)arg1;
- (id)connectedConnections;
- (id)foundPeripherals;
- (void)tryToTurnBluetoothOn;
- (void)initializeCentralManager;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

