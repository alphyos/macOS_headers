//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"

@class NSArray, NSBezierPath, NSMutableArray, NSUndoManager;

@interface HRGIFProperties : NSObject <NSCoding>
{
    NSMutableArray *_effectFilters;
    NSMutableArray *_canvasFilters;
    NSMutableArray *_overlays;
    BOOL _shouldOptimize;
    BOOL _useHQOptimization;
    BOOL _transparentBackground;
    BOOL _wasJoinedMedia;
    int _loopCount;
    int _numberOfColors;
    int _loopDelay;
    NSArray *_maskPoints;
    unsigned long long _algorithm;
    NSUndoManager *_undo;
    struct CGRect _colorRect;
}

@property(nonatomic) __weak NSUndoManager *undo; // @synthesize undo=_undo;
@property(nonatomic) unsigned long long algorithm; // @synthesize algorithm=_algorithm;
@property(retain, nonatomic) NSArray *maskPoints; // @synthesize maskPoints=_maskPoints;
@property(nonatomic) struct CGRect colorRect; // @synthesize colorRect=_colorRect;
@property(nonatomic) BOOL wasJoinedMedia; // @synthesize wasJoinedMedia=_wasJoinedMedia;
@property(nonatomic) BOOL transparentBackground; // @synthesize transparentBackground=_transparentBackground;
@property(nonatomic) int loopDelay; // @synthesize loopDelay=_loopDelay;
@property(nonatomic) int numberOfColors; // @synthesize numberOfColors=_numberOfColors;
@property(nonatomic) BOOL useHQOptimization; // @synthesize useHQOptimization=_useHQOptimization;
@property(nonatomic) BOOL shouldOptimize; // @synthesize shouldOptimize=_shouldOptimize;
@property(nonatomic) int loopCount; // @synthesize loopCount=_loopCount;
@property(retain, nonatomic) NSArray *canvasFilters; // @synthesize canvasFilters=_canvasFilters;
@property(retain, nonatomic) NSArray *effectFilters; // @synthesize effectFilters=_effectFilters;
@property(retain, nonatomic) NSArray *overlays; // @synthesize overlays=_overlays;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSBezierPath *cinemagraphPath;
- (void)setNilValueForKey:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unobserveOverlays:(id)arg1;
- (void)unobserveOverlay:(id)arg1;
- (void)observeOverlays:(id)arg1;
- (void)observeOverlay:(id)arg1;
- (void)deleteOverlay:(id)arg1;
- (void)replaceOverlaysAtIndexes:(id)arg1 withOverlays:(id)arg2;
- (void)replaceObjectInOverlaysAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeOverlaysAtIndexes:(id)arg1;
- (void)removeObjectFromOverlaysAtIndex:(unsigned long long)arg1;
- (void)insertOverlays:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inOverlaysAtIndex:(unsigned long long)arg2;
- (id)objectInOverlaysAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfOverlays;
- (void)replaceEffectFiltersAtIndexes:(id)arg1 withEffectFilters:(id)arg2;
- (void)replaceObjectInEffectFiltersAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeEffectFiltersAtIndexes:(id)arg1;
- (void)removeObjectFromEffectFiltersAtIndex:(unsigned long long)arg1;
- (void)insertEffectFilters:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inEffectFiltersAtIndex:(unsigned long long)arg2;
- (id)objectInEffectFiltersAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfEffectFilters;
- (void)removeEffectFilter:(id)arg1;
- (void)addEffectFilter:(id)arg1;
- (void)replaceCanvasFiltersAtIndexes:(id)arg1 withCanvasFilters:(id)arg2;
- (void)replaceObjectInCanvasFiltersAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeCanvasFiltersAtIndexes:(id)arg1;
- (void)removeObjectFromCanvasFiltersAtIndex:(unsigned long long)arg1;
- (void)insertCanvasFilters:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inCanvasFiltersAtIndex:(unsigned long long)arg2;
- (id)objectInCanvasFiltersAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfCanvasFilters;
- (void)removeCanvasFilter:(id)arg1;
- (void)addCanvasFilter:(id)arg1;
- (BOOL)containsTimeBasedOverlays;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLoopCount:(int)arg1 shouldOptimize:(BOOL)arg2 andNumberOfColors:(int)arg3;
- (id)init;
- (void)dealloc;

@end

