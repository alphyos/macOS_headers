//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PDFView.h"

@class NSTimer, NSTrackingArea, NSWindow, PDFAnnotation, PDFPage, SKNavigationWindow, SKReadingBar, SKSyncDot, SKTextNoteEditor, SKTransitionController, SKTypeSelectHelper;

__attribute__((visibility("hidden")))
@interface SKPDFView : PDFView
{
    long long toolMode;
    long long annotationMode;
    long long interactionMode;
    long long navigationMode;
    SKNavigationWindow *navWindow;
    SKReadingBar *readingBar;
    NSTimer *pacerTimer;
    double pacerSpeed;
    SKTransitionController *transitionController;
    SKTypeSelectHelper *typeSelectHelper;
    PDFAnnotation *activeAnnotation;
    PDFAnnotation *highlightAnnotation;
    SKTextNoteEditor *editor;
    struct CGRect selectionRect;
    unsigned long long selectionPageIndex;
    PDFPage *rewindPage;
    SKSyncDot *syncDot;
    NSWindow *loupeWindow;
    long long loupeLevel;
    double magnification;
    double gestureRotation;
    unsigned long long gesturePageIndex;
    long long minHistoryIndex;
    NSTrackingArea *trackingArea;
    long long spellingTag;
    long long laserPointerColor;
    struct _pdfvFlags {
        unsigned int hideNotes:1;
        unsigned int zooming:1;
        unsigned int wantsNewUndoGroup:1;
        unsigned int cursorHidden:1;
        unsigned int useArrowCursorInPresentation:1;
        unsigned int inKeyWindow:1;
    } pdfvFlags;
    BOOL zooming;
}

+ (id)defaultKeysToObserve;
+ (void)initialize;
@property(readonly, nonatomic, getter=isZooming) BOOL zooming; // @synthesize zooming;
@property(readonly, nonatomic) double currentMagnification; // @synthesize currentMagnification=magnification;
@property(retain) PDFAnnotation *highlightAnnotation; // @synthesize highlightAnnotation;
@property(retain) SKSyncDot *syncDot; // @synthesize syncDot;
@property(retain, nonatomic) SKTypeSelectHelper *typeSelectHelper; // @synthesize typeSelectHelper;
@property(nonatomic) double pacerSpeed; // @synthesize pacerSpeed;
@property(retain) SKReadingBar *readingBar; // @synthesize readingBar;
@property(retain, nonatomic) PDFAnnotation *activeAnnotation; // @synthesize activeAnnotation;
@property(nonatomic) long long interactionMode; // @synthesize interactionMode;
@property(nonatomic) long long annotationMode; // @synthesize annotationMode;
@property(nonatomic) long long toolMode; // @synthesize toolMode;
- (id)currentColorDefaultKeyForAlternate:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setCursorForMouse:(id)arg1;
- (void)setCursorForAreaOfInterest:(long long)arg1;
- (long long)areaOfInterestForMouse:(id)arg1;
- (id)cursorForNoteToolMode;
- (void)showHelpMenu;
- (void)doDragWindowWithEvent:(id)arg1;
- (BOOL)doDragMouseWithEvent:(id)arg1;
- (void)doMarqueeZoomWithEvent:(id)arg1;
- (void)doMagnifyWithEvent:(id)arg1;
- (void)removeLoupeWindow;
- (void)updateLoupeBackgroundColor;
- (void)updateMagnifyWithEvent:(id)arg1;
- (void)doSelectSnapshotWithEvent:(id)arg1;
- (void)doResizeReadingBarWithEvent:(id)arg1;
- (void)doDragReadingBarWithEvent:(id)arg1;
- (void)doSelectWithEvent:(id)arg1;
- (void)doEraseAnnotationsWithEvent:(id)arg1;
- (void)doDrawFreehandNoteWithEvent:(id)arg1;
- (BOOL)doSelectAnnotationWithEvent:(id)arg1;
- (void)doClickLinkWithEvent:(id)arg1;
- (void)doDragAnnotationWithEvent:(id)arg1;
- (void)updateCursorForMouse:(id)arg1;
- (void)doResizeAnnotationWithEvent:(id)arg1 fromPoint:(struct CGPoint)arg2 originalBounds:(struct CGRect)arg3 resizeHandle:(unsigned long long *)arg4;
- (void)doResizeLineAnnotationWithEvent:(id)arg1 fromPoint:(struct CGPoint)arg2 originalStartPoint:(struct CGPoint)arg3 originalEndPoint:(struct CGPoint)arg4 resizeHandle:(unsigned long long)arg5;
- (void)doMoveAnnotationWithEvent:(id)arg1 offset:(struct CGPoint)arg2;
- (void)doResizeReadingBarForKey:(unsigned short)arg1;
- (void)doMoveReadingBarForKey:(unsigned short)arg1;
- (void)doAutoSizeActiveNoteIgnoringWidth:(BOOL)arg1;
- (void)doResizeActiveAnnotationForKey:(unsigned short)arg1 byAmount:(double)arg2;
- (void)doMoveActiveAnnotationForKey:(unsigned short)arg1 byAmount:(double)arg2;
- (void)removeLayer:(id)arg1 overlay:(id)arg2;
- (id)newOverlayLayer:(id)arg1 wantsAdded:(BOOL)arg2;
- (void)performSelectorOnce:(SEL)arg1 afterDelay:(double)arg2;
- (void)showNavWindow;
- (void)doAutoHide;
- (void)disableNavigation;
- (void)enableNavigation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setTransitionControllerValue:(id)arg1 forKey:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)handleKeyStateChangedNotification:(id)arg1;
- (void)handleScrollerStyleChangedNotification:(id)arg1;
- (void)handleUndoGroupOpenedOrClosedNotification:(id)arg1;
- (void)handlePDFContentViewFrameChangedNotification:(id)arg1;
- (void)handleScaleChangedNotification:(id)arg1;
- (void)handlePageChangedNotification:(id)arg1;
- (void)zoomToRect:(struct CGRect)arg1 onPage:(id)arg2;
- (void)takeSnapshot:(id)arg1;
- (void)displayLineAtPoint:(struct CGPoint)arg1 inPageAtIndex:(unsigned long long)arg2 showReadingBar:(BOOL)arg3;
- (void)setNeedsDisplayForAnnotation:(id)arg1 onPage:(id)arg2;
- (void)scrollAnnotationToVisible:(id)arg1;
- (BOOL)isEditingAnnotation:(id)arg1;
- (void)selectPreviousActiveAnnotation:(id)arg1;
- (void)selectNextActiveAnnotation:(id)arg1;
- (void)beginNewUndoGroupIfNeeded;
- (BOOL)commitEditing;
- (void)discardEditing;
- (void)textNoteEditorDidEndEditing:(id)arg1;
- (void)editTextNoteWithEvent:(id)arg1;
- (void)editActiveAnnotation:(id)arg1;
- (void)editAnnotation:(id)arg1;
- (void)editThisAnnotation:(id)arg1;
- (void)moveAnnotation:(id)arg1 toPage:(id)arg2;
- (void)removeAnnotation:(id)arg1;
- (void)removeThisAnnotation:(id)arg1;
- (void)removeActiveAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1 toPage:(id)arg2;
- (void)addAnnotationForContext:(id)arg1;
- (void)addAnnotationWithType:(long long)arg1;
- (void)addAnnotationWithType:(long long)arg1 context:(id)arg2;
- (BOOL)addAnnotationWithType:(long long)arg1 selection:(id)arg2 page:(id)arg3 bounds:(struct CGRect)arg4;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (void)beginGestureWithEvent:(id)arg1;
- (void)rotatePageAtIndex:(unsigned long long)arg1 by:(long long)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)magnifyWheel:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
@property(nonatomic) BOOL needsRewind; // @dynamic needsRewind;
- (void)resizeReadingBar:(id)arg1;
- (void)moveReadingBar:(id)arg1;
- (void)changeOnlyAnnotationMode:(id)arg1;
- (void)autoSizeActiveAnnotation:(id)arg1;
- (void)resizeActiveAnnotation:(id)arg1;
- (void)moveActiveAnnotation:(id)arg1;
- (void)nextToolMode:(id)arg1;
- (void)previousLaserPointerColor:(id)arg1;
- (void)nextLaserPointerColor:(id)arg1;
- (void)toggleLaserPointer:(id)arg1;
- (void)toggleBlackout:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)canGoToLastPage;
- (BOOL)canGoToFirstPage;
- (BOOL)canGoToPreviousPage;
- (BOOL)canGoToNextPage;
- (BOOL)canZoomOut;
- (BOOL)canZoomIn;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)printDocument:(id)arg1;
- (void)zoomToPhysicalSize:(id)arg1;
- (void)setScaleFactor:(double)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)showFontsForThisAnnotation:(id)arg1;
- (void)showLinesForThisAnnotation:(id)arg1;
- (void)showColorsForThisAnnotation:(id)arg1;
- (void)exitFullscreen:(id)arg1;
- (void)setHorizontalScrolling:(id)arg1;
- (void)setSinglePageScrolling:(id)arg1;
- (void)toggleAutoActualSize:(id)arg1;
- (void)zoomLog:(id)arg1;
- (void)changeAnnotationMode:(id)arg1;
- (void)changeToolMode:(id)arg1;
- (void)autoSelectContent:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)cut:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)alternatePaste:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteNote:(BOOL)arg1 plainText:(BOOL)arg2;
- (void)copy:(id)arg1;
- (void)delete:(id)arg1;
- (void)goToLastPage:(id)arg1;
- (void)goToFirstPage:(id)arg1;
- (void)goToPreviousPage:(id)arg1;
- (void)goToNextPage:(id)arg1;
- (void)doAutoHideCursor;
- (void)animateTransitionForNextPage:(BOOL)arg1;
- (void)updatePacer;
- (void)togglePacer;
- (void)pacerTimerFired:(id)arg1;
- (void)stopPacer;
@property(readonly, nonatomic) BOOL hasPacer; // @dynamic hasPacer;
- (void)toggleReadingBar;
@property(readonly, nonatomic) BOOL hasReadingBar; // @dynamic hasReadingBar;
@property(readonly, nonatomic) SKTransitionController *transitionController; // @synthesize transitionController;
@property(nonatomic) BOOL hideNotes; // @dynamic hideNotes;
@property(retain, nonatomic) PDFPage *currentSelectionPage; // @dynamic currentSelectionPage;
@property(nonatomic) struct CGRect currentSelectionRect; // @dynamic currentSelectionRect;
- (void)setCurrentSelection:(id)arg1;
- (void)setDisplaysPageBreaks:(BOOL)arg1;
- (void)setDisplaysAsBookAndRewind:(BOOL)arg1;
- (void)setDisplaysAsBook:(BOOL)arg1;
- (void)setDisplayBoxAndRewind:(long long)arg1;
- (void)setDisplayBox:(long long)arg1;
- (void)setDisplaysRightToLeftAndRewind:(BOOL)arg1;
@property(nonatomic) BOOL displaysRightToLeft; // @dynamic displaysRightToLeft;
- (void)setDisplaysHorizontallyAndRewind:(BOOL)arg1;
@property(nonatomic) BOOL displaysHorizontally; // @dynamic displaysHorizontally;
- (void)setExtendedDisplayModeAndRewind:(long long)arg1;
@property(nonatomic) long long extendedDisplayMode; // @dynamic extendedDisplayMode;
- (void)_setDisplaysHorizontally:(BOOL)arg1;
- (void)setDisplayModeAndRewind:(long long)arg1;
- (void)setDisplayMode:(long long)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)drawPage:(id)arg1;
- (void)drawPage:(id)arg1 toContext:(struct CGContext *)arg2;
- (void)drawPageHighlights:(id)arg1 toContext:(struct CGContext *)arg2;
- (void)drawDragHighlightInContext:(struct CGContext *)arg1;
- (void)drawSelectionForPage:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)resetPDFToolTipRects;
- (void)removePDFToolTipRects;
- (void)resetHistory;
- (struct CGRect)visibleContentRect;
- (void)cleanup;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitialization;

@end

