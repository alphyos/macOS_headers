//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "NSDrawerDelegate.h"
#import "NSMenuDelegate.h"
#import "NSOutlineViewDataSource.h"
#import "NSTableViewDataSource.h"
#import "NSTextFieldDelegate.h"
#import "NSTouchBarDelegate.h"
#import "NSWindowDelegate.h"
#import "SKFindControllerDelegate.h"
#import "SKNoteOutlineViewDelegate.h"
#import "SKNoteTypeSheetControllerDelegate.h"
#import "SKOutlineViewDelegate.h"
#import "SKPDFDocumentDelegate.h"
#import "SKPDFViewDelegate.h"
#import "SKSnapshotWindowControllerDelegate.h"
#import "SKTableViewDelegate.h"
#import "SKThumbnailDelegate.h"

@class NSArray, NSButton, NSDictionary, NSDocument, NSMapTable, NSMenu, NSMutableArray, NSMutableDictionary, NSPointerArray, NSString, NSTimer, NSTrackingArea, NSView, NSWindow, PDFDocument, PDFView, SKFieldEditor, SKFindController, SKFloatMapTable, SKLeftSideViewController, SKMainToolbarController, SKMainTouchBarController, SKNoteTypeSheetController, SKOverviewView, SKPDFView, SKPresentationOptionsSheetController, SKProgressController, SKRightSideViewController, SKSecondaryPDFView, SKSideWindow, SKSnapshotWindowController, SKSplitView, SKStatusBar;

__attribute__((visibility("hidden")))
@interface SKMainWindowController : NSWindowController <NSWindowDelegate, NSDrawerDelegate, SKTableViewDelegate, NSTableViewDataSource, SKOutlineViewDelegate, SKNoteOutlineViewDelegate, NSOutlineViewDataSource, NSTextFieldDelegate, SKNoteTypeSheetControllerDelegate, NSMenuDelegate, SKSnapshotWindowControllerDelegate, SKThumbnailDelegate, SKFindControllerDelegate, SKPDFViewDelegate, SKPDFDocumentDelegate, NSTouchBarDelegate>
{
    SKSplitView *splitView;
    NSView *centerContentView;
    SKSplitView *pdfSplitView;
    NSView *pdfContentView;
    SKPDFView *pdfView;
    SKSecondaryPDFView *secondaryPdfView;
    SKLeftSideViewController *leftSideController;
    SKRightSideViewController *rightSideController;
    SKMainToolbarController *toolbarController;
    SKMainTouchBarController *touchBarController;
    SKOverviewView *overviewView;
    NSView *overviewContentView;
    NSView *leftSideContentView;
    NSView *rightSideContentView;
    SKStatusBar *statusBar;
    SKFindController *findController;
    SKFieldEditor *fieldEditor;
    NSMutableArray *thumbnails;
    double roundedThumbnailSize;
    NSMutableArray *searchResults;
    long long searchResultIndex;
    NSMutableArray *groupedSearchResults;
    SKNoteTypeSheetController *noteTypeSheetController;
    NSMutableArray *notes;
    SKFloatMapTable *rowHeights;
    NSMapTable *widgets;
    NSMapTable *widgetValues;
    NSMutableArray *snapshots;
    NSMutableArray *dirtySnapshots;
    NSTimer *snapshotTimer;
    double roundedSnapshotThumbnailSize;
    NSArray *tags;
    double rating;
    NSWindow *mainWindow;
    SKSideWindow *leftSideWindow;
    SKSideWindow *rightSideWindow;
    NSMutableArray *blankingWindows;
    long long interactionMode;
    SKProgressController *progressController;
    SKPresentationOptionsSheetController *presentationSheetController;
    NSDocument *presentationNotesDocument;
    long long presentationNotesOffset;
    SKSnapshotWindowController *presentationPreview;
    NSButton *presentationNotesButton;
    NSTrackingArea *presentationNotesTrackingArea;
    NSButton *colorAccessoryView;
    NSButton *textColorAccessoryView;
    NSMutableArray *pageLabels;
    NSString *pageLabel;
    unsigned long long pageNumber;
    unsigned long long markedPageIndex;
    struct CGPoint markedPagePoint;
    unsigned long long beforeMarkedPageIndex;
    struct CGPoint beforeMarkedPagePoint;
    NSPointerArray *lastViewedPages;
    unsigned int activityAssertionID;
    NSMutableDictionary *savedNormalSetup;
    double lastLeftSidePaneWidth;
    double lastRightSidePaneWidth;
    double lastSplitPDFHeight;
    double thumbnailCacheSize;
    double snapshotCacheSize;
    NSMapTable *undoGroupOldPropertiesPerNote;
    PDFDocument *placeholderPdfDocument;
    NSArray *placeholderWidgetProperties;
    struct _mwcFlags {
        unsigned int leftSidePaneState:1;
        unsigned int rightSidePaneState:1;
        unsigned int savedLeftSidePaneState:1;
        unsigned int findPaneState:1;
        unsigned int caseInsensitiveSearch:1;
        unsigned int wholeWordSearch:1;
        unsigned int caseInsensitiveFilter:1;
        unsigned int autoResizeNoteRows:1;
        unsigned int addOrRemoveNotesInBulk:1;
        unsigned int updatingOutlineSelection:1;
        unsigned int updatingThumbnailSelection:1;
        unsigned int isAnimating:1;
        unsigned int updatingNoteSelection:1;
        unsigned int updatingColor:1;
        unsigned int updatingFont:1;
        unsigned int updatingFontAttributes:1;
        unsigned int updatingLine:1;
        unsigned int settingUpWindow:1;
        unsigned int isEditingPDF:1;
        unsigned int isEditingTable:1;
        unsigned int isSwitchingFullScreen:1;
        unsigned int wantsPresentation:1;
        unsigned int recentInfoNeedsUpdate:1;
    } mwcFlags;
}

+ (BOOL)automaticallyNotifiesObserversOfPageLabel;
+ (BOOL)automaticallyNotifiesObserversOfPageNumber;
+ (void)initialize;
+ (void)defineFullScreenGlobalVariables;
@property(readonly, nonatomic) PDFDocument *placeholderPdfDocument; // @synthesize placeholderPdfDocument;
@property(readonly, nonatomic) long long interactionMode; // @synthesize interactionMode;
@property(copy, nonatomic) NSString *pageLabel; // @synthesize pageLabel;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber;
@property(nonatomic) double rating; // @synthesize rating;
@property(copy, nonatomic) NSArray *tags; // @synthesize tags;
@property(nonatomic) long long presentationNotesOffset; // @synthesize presentationNotesOffset;
@property(retain, nonatomic) NSDocument *presentationNotesDocument; // @synthesize presentationNotesDocument;
@property(retain, nonatomic) NSView *rightSideContentView; // @synthesize rightSideContentView;
@property(retain, nonatomic) NSView *leftSideContentView; // @synthesize leftSideContentView;
@property(retain, nonatomic) SKMainToolbarController *toolbarController; // @synthesize toolbarController;
@property(retain, nonatomic) SKRightSideViewController *rightSideController; // @synthesize rightSideController;
@property(retain, nonatomic) SKLeftSideViewController *leftSideController; // @synthesize leftSideController;
@property(readonly, nonatomic) PDFView *secondaryPdfView; // @synthesize secondaryPdfView;
@property(readonly, nonatomic) SKPDFView *pdfView; // @synthesize pdfView;
@property(retain, nonatomic) SKStatusBar *statusBar; // @synthesize statusBar;
@property(retain, nonatomic) NSView *pdfContentView; // @synthesize pdfContentView;
@property(retain, nonatomic) SKSplitView *pdfSplitView; // @synthesize pdfSplitView;
@property(retain, nonatomic) NSView *centerContentView; // @synthesize centerContentView;
@property(retain, nonatomic) SKSplitView *splitView; // @synthesize splitView;
@property(retain, nonatomic) NSWindow *mainWindow; // @synthesize mainWindow;
- (id)makeTouchBar;
- (void)remoteButtonPressed:(id)arg1;
- (void)dismissProgressSheet;
- (void)incrementProgressSheet;
- (void)beginProgressSheetWithMessage:(id)arg1 maxValue:(unsigned long long)arg2;
- (void)updateSnapshotFilterPredicate;
- (void)updateSnapshot:(id)arg1;
- (void)updateSnapshotsIfNeeded;
- (void)allSnapshotsNeedUpdate;
- (void)snapshotNeedsUpdate:(id)arg1;
- (void)resetSnapshotSizeIfNeeded;
- (void)updateNoteFilterPredicate;
- (void)updateNoteSelection;
- (void)allThumbnailsNeedUpdate;
- (void)updateThumbnailsAtPageIndexes:(id)arg1;
- (void)updateThumbnailAtPageIndex:(unsigned long long)arg1;
- (void)resetThumbnailSizeIfNeeded;
- (void)resetThumbnails;
- (void)updateThumbnailSelection;
- (BOOL)generateImageForThumbnail:(id)arg1;
- (id)pageForThumbnail:(id)arg1;
- (void)setExpanded:(BOOL)arg1 forOutline:(id)arg2;
- (BOOL)isOutlineExpanded:(id)arg1;
- (void)updateOutlineSelection;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)notesNeedReloadForKey:(id)arg1;
- (void)observeUndoManagerCheckpoint:(id)arg1;
- (void)setNoteProperties:(id)arg1;
- (void)stopObservingNotes:(id)arg1;
- (void)startObservingNotes:(id)arg1;
- (void)unregisterAsObserver;
- (void)registerAsObserver;
- (id)windowControllerForNote:(id)arg1;
- (void)showNote:(id)arg1;
- (void)snapshotController:(id)arg1 goToDestination:(id)arg2;
- (struct CGRect)snapshotController:(id)arg1 miniaturizedRect:(BOOL)arg2;
- (void)snapshotControllerDidMove:(id)arg1;
- (void)snapshotControllerDidChange:(id)arg1;
- (void)snapshotControllerWillClose:(id)arg1;
- (void)snapshotController:(id)arg1 didFinishSetup:(long long)arg2;
- (void)showSnapshotsWithSetups:(id)arg1;
- (void)showSnapshotAtPageNumber:(long long)arg1 forRect:(struct CGRect)arg2 scaleFactor:(double)arg3 autoFits:(BOOL)arg4;
- (void)unregisterForDocumentNotifications;
- (void)registerForDocumentNotifications;
- (void)handleDocumentEndPageWrite:(id)arg1;
- (void)handleDocumentEndWrite:(id)arg1;
- (void)handleDocumentBeginWrite:(id)arg1;
- (void)handlePageBoundsDidChangeNotification:(id)arg1;
- (void)document:(id)arg1 didUnlockWithPassword:(id)arg2;
- (void)documentDidUnlock:(id)arg1;
- (void)documentDidUnlockDelayed;
- (void)documentDidEndPageFind:(id)arg1;
- (void)documentDidEndDocumentFind:(id)arg1;
- (void)documentDidBeginDocumentFind:(id)arg1;
- (void)didMatchString:(id)arg1;
- (void)updateFindResultHighlightsForDirection:(unsigned long long)arg1;
- (void)selectFindResultHighlight:(unsigned long long)arg1;
- (void)showFindBar;
- (void)findControllerWillBeRemoved:(id)arg1;
- (BOOL)findString:(id)arg1 forward:(BOOL)arg2;
@property(readonly, nonatomic) NSString *searchString; // @dynamic searchString;
- (void)displaySearchResultsForString:(id)arg1;
- (void)setOverviewPresentationMode:(BOOL)arg1;
- (void)hideOverviewAnimating:(BOOL)arg1;
- (void)hideOverviewAnimating:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showOverviewAnimating:(BOOL)arg1;
- (void)updateOverviewItemSize;
- (void)hideOverview:(id)arg1;
@property(nonatomic) BOOL hasOverview; // @dynamic hasOverview;
- (void)displaySnapshotViewAnimating:(BOOL)arg1;
- (void)displayNoteViewAnimating:(BOOL)arg1;
- (void)displayGroupedFindViewAnimating:(BOOL)arg1;
- (void)displayFindViewAnimating:(BOOL)arg1;
- (void)displayThumbnailViewAnimating:(BOOL)arg1;
- (void)displayTocViewAnimating:(BOOL)arg1;
@property(readonly, nonatomic) NSMenu *notesMenu; // @dynamic notesMenu;
@property(nonatomic) BOOL recentInfoNeedsUpdate; // @dynamic recentInfoNeedsUpdate;
@property(copy, nonatomic) NSDictionary *presentationOptions; // @dynamic presentationOptions;
- (void)removeObjectFromGroupedSearchResultsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inGroupedSearchResultsAtIndex:(unsigned long long)arg2;
- (id)objectInGroupedSearchResultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfGroupedSearchResults;
- (void)setGroupedSearchResults:(id)arg1;
- (id)groupedSearchResults;
- (void)removeObjectFromSearchResultsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inSearchResultsAtIndex:(unsigned long long)arg2;
- (id)objectInSearchResultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfSearchResults;
- (void)setSearchResults:(id)arg1;
- (id)searchResults;
@property(copy, nonatomic) NSArray *selectedNotes; // @dynamic selectedNotes;
- (void)removeAllObjectsFromSnapshots;
- (void)removeObjectFromSnapshotsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inSnapshotsAtIndex:(unsigned long long)arg2;
- (id)objectInSnapshotsAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfSnapshots;
- (id)snapshots;
- (void)setThumbnails:(id)arg1;
- (id)thumbnails;
- (void)removeAllObjectsFromNotes;
- (void)removeObjectFromNotesAtIndex:(unsigned long long)arg1;
- (void)insertNotes:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inNotesAtIndex:(unsigned long long)arg2;
- (id)objectInNotesAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfNotes;
- (id)notes;
@property(readonly, nonatomic) double rightSideWidth;
@property(readonly, nonatomic) double leftSideWidth;
@property(readonly, nonatomic) BOOL rightSidePaneIsOpen; // @dynamic rightSidePaneIsOpen;
@property(readonly, nonatomic) BOOL leftSidePaneIsOpen; // @dynamic leftSidePaneIsOpen;
@property(nonatomic) long long findPaneState; // @dynamic findPaneState;
@property(nonatomic) long long rightSidePaneState; // @dynamic rightSidePaneState;
@property(nonatomic) long long leftSidePaneState; // @dynamic leftSidePaneState;
@property(readonly, nonatomic) BOOL autoScales; // @dynamic autoScales;
- (BOOL)validatePageLabel:(id *)arg1 error:(id *)arg2;
- (void)updatePageLabel;
- (void)updatePageNumber;
@property(retain, nonatomic) PDFDocument *pdfDocument; // @dynamic pdfDocument;
- (void)addAnnotationsFromDictionaries:(id)arg1 removeAnnotations:(id)arg2 autoUpdate:(BOOL)arg3;
@property(readonly, nonatomic) NSArray *widgetProperties; // @dynamic widgetProperties;
- (void)changeWidgetsFromDictionaries:(id)arg1;
- (void)registerWidgetValues;
- (void)setWidgetValues:(id)arg1;
- (void)clearWidgets;
- (void)makeWidgets;
- (void)updatePageLabelsAndOutlineForExpansionState:(id)arg1;
- (void)updateTableFont;
- (void)expandOutline:(id)arg1 forExpansionState:(id)arg2;
- (id)expansionStateForOutline:(id)arg1;
- (void)updatePageColumnWidthForTableViews:(id)arg1;
- (void)updateRightStatus;
- (void)updateLeftStatus;
- (id)currentPDFSettings;
- (void)applyPDFSettings:(id)arg1 rewind:(BOOL)arg2;
- (id)currentSetup;
- (void)applySetup:(id)arg1;
- (void)applyLeftSideWidth:(double)arg1 rightSideWidth:(double)arg2;
- (void)synchronizeWindowTitleWithDocumentName;
- (void)windowDidLoad;
- (void)cleanup;
- (void)dealloc;
- (id)init;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)removePresentationNotesNavigation;
- (void)addPresentationNotesNavigation;
- (id)presentationNotesView;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)windowWillEnterFullScreen:(id)arg1;
- (BOOL)canExitPresentation;
- (BOOL)canExitFullscreen;
- (BOOL)canEnterPresentation;
- (BOOL)canEnterFullscreen;
- (void)exitFullscreen;
- (void)enterPresentation;
- (void)enterFullscreen;
- (void)applyBackgroundColor:(id)arg1 active:(BOOL)arg2 toWindow:(id)arg3;
- (void)removeBlankingWindows;
- (void)showBlankingWindows;
- (void)fadeOutFullScreenWindow;
- (void)fadeOutFullScreenView:(id)arg1;
- (void)fadeInFullScreenView:(id)arg1 inset:(double)arg2;
- (void)fadeInFullScreenWindowWithBackgroundColor:(id)arg1 level:(long long)arg2 screen:(id)arg3;
- (void)exitPresentationMode;
- (void)enterPresentationMode;
- (id)alternateScreensForScreen:(id)arg1;
- (void)forceSubwindowsOnTop:(BOOL)arg1;
- (BOOL)handleRightMouseDown:(id)arg1;
- (void)hideRightSideWindow;
- (void)hideLeftSideWindow;
- (void)showRightSideWindow;
- (void)showLeftSideWindow;
- (BOOL)useNativeFullScreen;
- (void)registerForNotifications;
- (void)handleScrollerDidScrollNotification:(id)arg1;
- (void)handleNoteViewFrameDidChangeNotification:(id)arg1;
- (void)handleWillRemoveDocumentNotification:(id)arg1;
- (void)handleReadingBarDidChangeNotification:(id)arg1;
- (void)handleDidMoveAnnotationNotification:(id)arg1;
- (void)handleDidRemoveAnnotationNotification:(id)arg1;
- (void)handleDidAddAnnotationNotification:(id)arg1;
- (void)handleDidChangeActiveAnnotationNotification:(id)arg1;
- (void)setHasOutline:(BOOL)arg1 forAnnotation:(id)arg2;
- (void)handleApplicationWillBecomeActiveNotification:(id)arg1;
- (void)handleApplicationDidResignActiveNotification:(id)arg1;
- (void)handleApplicationWillTerminateNotification:(id)arg1;
- (void)handleDarkModeChangedNotification:(id)arg1;
- (void)handleSelectionOrMagnificationChangedNotification:(id)arg1;
- (void)handleDisplayBoxChangedNotification:(id)arg1;
- (void)handlePageChangedNotification:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldHideDividerAtIndex:(long long)arg2;
- (BOOL)splitView:(id)arg1 shouldCollapseSubview:(id)arg2 forDoubleClickOnDividerAtIndex:(long long)arg3;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (void)PDFViewToggleContents:(id)arg1;
- (void)PDFViewTogglePages:(id)arg1;
- (void)PDFViewExitFullscreen:(id)arg1;
- (void)PDFView:(id)arg1 showSnapshotAtPageNumber:(long long)arg2 forRect:(struct CGRect)arg3 scaleFactor:(double)arg4 autoFits:(BOOL)arg5;
- (void)PDFView:(id)arg1 editAnnotation:(id)arg2;
- (void)PDFViewDidEndEditing:(id)arg1;
- (void)PDFViewDidBeginEditing:(id)arg1;
- (void)PDFViewPerformPrint:(id)arg1;
- (void)PDFViewPerformGoToPage:(id)arg1;
- (void)PDFViewPerformFind:(id)arg1;
- (void)PDFViewWillClickOnLink:(id)arg1 withURL:(id)arg2;
- (void)PDFViewOpenPDF:(id)arg1 forRemoteGoToAction:(id)arg2;
- (id)windowForNoteTypeSheetController:(id)arg1;
- (void)noteTypeSheetControllerNoteTypesDidChange:(id)arg1;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)commitEditing;
- (void)discardEditing;
- (void)setDocument:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)toggleAutoResizeNoteRows:(id)arg1;
- (void)resetHeightOfNoteRows:(id)arg1;
- (void)autoSizeNoteRows:(id)arg1;
- (void)bringNoteToFront:(id)arg1;
- (void)revealNote:(id)arg1;
- (void)selectNote:(id)arg1;
- (void)deselectNote:(id)arg1;
- (void)editNoteTextFromTable:(id)arg1;
- (void)editNoteFromTable:(id)arg1;
- (void)copyNotes:(id)arg1;
- (void)deleteNotes:(id)arg1;
- (void)goToSnapshot:(id)arg1;
- (void)hideSnapshot:(id)arg1;
- (void)showSnapshot:(id)arg1;
- (void)deleteSnapshot:(id)arg1;
- (void)selectSelections:(id)arg1;
- (void)copyPage:(id)arg1;
- (void)outlineView:(id)arg1 typeSelectHelper:(id)arg2 updateSearchString:(id)arg3;
- (void)outlineView:(id)arg1 typeSelectHelper:(id)arg2 didFailToFindMatchForSearchString:(id)arg3;
- (id)outlineView:(id)arg1 typeSelectHelperSelectionStrings:(id)arg2;
- (void)outlineViewCommandKeyPressedDuringNavigation:(id)arg1;
- (id)outlineView:(id)arg1 imageContextForItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 canCopyItems:(id)arg2;
- (void)outlineView:(id)arg1 copyItems:(id)arg2;
- (BOOL)outlineView:(id)arg1 canDeleteItems:(id)arg2;
- (void)outlineView:(id)arg1 deleteItems:(id)arg2;
- (id)noteItems:(id)arg1;
- (void)outlineView:(id)arg1 setHeight:(double)arg2 ofRowByItem:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (void)outlineView:(id)arg1 didChangeHiddenOfTableColumn:(id)arg2;
- (void)outlineViewColumnDidResize:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)outlineView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)outlineView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)tableView:(id)arg1 typeSelectHelper:(id)arg2 updateSearchString:(id)arg3;
- (void)tableView:(id)arg1 typeSelectHelper:(id)arg2 didFailToFindMatchForSearchString:(id)arg3;
- (id)tableView:(id)arg1 typeSelectHelperSelectionStrings:(id)arg2;
- (id)tableView:(id)arg1 imageContextForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewMoveRight:(id)arg1;
- (void)tableViewMoveLeft:(id)arg1;
- (BOOL)tableView:(id)arg1 canDeleteRowsWithIndexes:(id)arg2;
- (void)tableView:(id)arg1 deleteRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 canCopyRowsWithIndexes:(id)arg2;
- (void)tableView:(id)arg1 copyRowsWithIndexes:(id)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableViewColumnDidResize:(id)arg1;
- (BOOL)tableView:(id)arg1 commandSelectRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)tableView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(id)arg4;
- (id)tableView:(id)arg1 pasteboardWriterForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)updateTocHighlights;
- (void)updateThumbnailHighlights;
- (long long)tocHighlightLevelForRow:(long long)arg1;
- (long long)thumbnailHighlightLevelForRow:(long long)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (void)windowDidMove:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)updateUtilityPanel;
- (void)updateLineInspector;
- (void)changeColorProperty:(id)arg1;
- (void)updateColorPanel;
- (id)newColorAccessoryButtonWithTitle:(id)arg1;
- (void)scrollLeft:(id)arg1;
- (void)scrollRight:(id)arg1;
- (void)scrollDown:(id)arg1;
- (void)scrollUp:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)togglePresentation:(id)arg1;
- (void)toggleFullscreen:(id)arg1;
- (void)toggleSplitPDF:(id)arg1;
- (void)toggleOverview:(id)arg1;
- (void)changeFindPaneState:(id)arg1;
- (void)changeRightSidePaneState:(id)arg1;
- (void)changeLeftSidePaneState:(id)arg1;
- (void)toggleRightSidePane:(id)arg1;
- (void)toggleLeftSidePane:(id)arg1;
- (void)toggleCaseInsensitiveFilter:(id)arg1;
- (void)toggleWholeWordSearch:(id)arg1;
- (void)toggleCaseInsensitiveSearch:(id)arg1;
- (void)chooseTransition:(id)arg1;
- (void)savePDFSettingToDefaults:(id)arg1;
- (void)changePacerSpeed:(id)arg1;
- (void)togglePacer:(id)arg1;
- (void)toggleReadingBar:(id)arg1;
- (void)password:(id)arg1;
- (void)performFit:(id)arg1;
- (void)searchNotes:(id)arg1;
- (void)search:(id)arg1;
- (void)filterNotes:(id)arg1;
- (void)searchPDF:(id)arg1;
- (void)toggleStatusBar:(id)arg1;
- (void)statusBarClicked:(id)arg1;
- (void)changeAnnotationMode:(id)arg1;
- (void)changeToolMode:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)alternatePaste:(id)arg1;
- (void)paste:(id)arg1;
- (void)delete:(id)arg1;
- (void)getInfo:(id)arg1;
- (void)autoSelectContent:(id)arg1;
- (void)smartAutoCropAll:(id)arg1;
- (void)autoCropAll:(id)arg1;
- (void)cropAll:(id)arg1;
- (void)cropPagesToRects:(id)arg1;
- (void)crop:(id)arg1;
- (void)cropPageAtIndex:(unsigned long long)arg1 toRect:(struct CGRect)arg2;
- (void)rotateAllLeft:(id)arg1;
- (void)rotateAllRight:(id)arg1;
- (void)rotateLeft:(id)arg1;
- (void)rotateRight:(id)arg1;
- (void)rotateAllBy:(long long)arg1;
- (void)rotatePageAtIndex:(unsigned long long)arg1 by:(long long)arg2;
- (void)toggleAutoScale:(id)arg1;
- (void)doAutoScale:(id)arg1;
- (void)alternateZoomToFit:(id)arg1;
- (void)doZoomToFit:(id)arg1;
- (void)doZoomToSelection:(id)arg1;
- (void)doZoomToActualSize:(id)arg1;
- (void)doZoomToPhysicalSize:(id)arg1;
- (void)doZoomOut:(id)arg1;
- (void)doZoomIn:(id)arg1;
- (void)markPage:(id)arg1;
- (void)goToMarkedPage:(id)arg1;
- (void)doGoForward:(id)arg1;
- (void)doGoBack:(id)arg1;
- (void)doGoToPage:(id)arg1;
- (void)allGoToLastPage:(id)arg1;
- (void)allGoToFirstPage:(id)arg1;
- (void)allGoToPreviousPage:(id)arg1;
- (void)allGoToNextPage:(id)arg1;
- (void)doGoToLastPage:(id)arg1;
- (void)doGoToFirstPage:(id)arg1;
- (void)doGoToPreviousPage:(id)arg1;
- (void)doGoToNextPage:(id)arg1;
- (void)changeDisplayBox:(id)arg1;
- (void)toggleDisplayPageBreaks:(id)arg1;
- (void)toggleDisplaysAsBook:(id)arg1;
- (void)toggleDisplaysRTL:(id)arg1;
- (void)changeDisplayDirection:(id)arg1;
- (void)changeDisplayMode:(id)arg1;
- (void)changeDisplayContinuous:(id)arg1;
- (void)changeDisplaySinglePages:(id)arg1;
- (void)takeSnapshot:(id)arg1;
- (void)toggleHideNotes:(id)arg1;
- (void)editNote:(id)arg1;
- (void)toggleSelectedSnapshots:(id)arg1;
- (void)goToSelectedFindResults:(id)arg1;
- (void)goToSelectedOutlineItem:(id)arg1;
- (void)selectSelectedNote:(id)arg1;
- (void)addNoteFromPanel:(id)arg1;
- (void)createNewNote:(id)arg1;
- (void)changeLineAttribute:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeColor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

