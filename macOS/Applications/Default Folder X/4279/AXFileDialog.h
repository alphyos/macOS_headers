//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AXFileDialogDetector, AXFileDialogFacadeWindow, AXSignalDelay, NSArray, NSRunningApplication, NSScreen, NSString, UIElement;

@interface AXFileDialog : NSObject
{
    BOOL _active;
    BOOL _enabled;
    BOOL _closed;
    BOOL _minimized;
    BOOL _extensionHidden;
    BOOL _noLocation;
    BOOL _isTrackingPopup;
    BOOL _isTrackingMenu;
    BOOL _isDraggingFile;
    BOOL _isResizing;
    BOOL _isEnhanced;
    int _dialogType;
    int _appPID;
    int _currentViewMode;
    unsigned int _cachedWindowID;
    int _cachedWindowLevel;
    int _facadeCount;
    NSString *_currentPath;
    NSArray *_currentSelection;
    NSString *_currentSaveName;
    NSRunningApplication *_application;
    long long _pendingDragCount;
    AXSignalDelay *_waitWhileTrackingMenu;
    AXSignalDelay *_waitWhileDragging;
    AXSignalDelay *_waitUntilActive;
    AXSignalDelay *_waitUntilEnhanced;
    AXSignalDelay *_waitUntilPathExists;
    AXSignalDelay *_waitWhileMouseDown;
    AXFileDialogDetector *_detector;
    UIElement *_axWindow;
    UIElement *_axBase;
    UIElement *_axFileBase;
    UIElement *_axControlBase;
    UIElement *_axSortMenu;
    UIElement *_axPathMenu;
    UIElement *_axFileList;
    UIElement *_axDisclosureCheckbox;
    UIElement *_axHideExtensionCheckbox;
    AXFileDialogFacadeWindow *_facadeWindow;
    AXFileDialogFacadeWindow *_parentFacadeWindow;
    struct CGRect _frame;
    struct CGRect _pathButtonFrame;
}

+ (int)fileDialogElementType:(id)arg1;
- (void).cxx_destruct;
@property int facadeCount; // @synthesize facadeCount=_facadeCount;
@property(retain) AXFileDialogFacadeWindow *parentFacadeWindow; // @synthesize parentFacadeWindow=_parentFacadeWindow;
@property(retain) AXFileDialogFacadeWindow *facadeWindow; // @synthesize facadeWindow=_facadeWindow;
@property(retain) UIElement *axHideExtensionCheckbox; // @synthesize axHideExtensionCheckbox=_axHideExtensionCheckbox;
@property(retain) UIElement *axDisclosureCheckbox; // @synthesize axDisclosureCheckbox=_axDisclosureCheckbox;
@property(retain) UIElement *axFileList; // @synthesize axFileList=_axFileList;
@property(retain) UIElement *axPathMenu; // @synthesize axPathMenu=_axPathMenu;
@property(retain) UIElement *axSortMenu; // @synthesize axSortMenu=_axSortMenu;
@property(retain) UIElement *axControlBase; // @synthesize axControlBase=_axControlBase;
@property(retain) UIElement *axFileBase; // @synthesize axFileBase=_axFileBase;
@property(retain) UIElement *axBase; // @synthesize axBase=_axBase;
@property(retain) UIElement *axWindow; // @synthesize axWindow=_axWindow;
@property(retain) AXFileDialogDetector *detector; // @synthesize detector=_detector;
@property(retain) AXSignalDelay *waitWhileMouseDown; // @synthesize waitWhileMouseDown=_waitWhileMouseDown;
@property(retain) AXSignalDelay *waitUntilPathExists; // @synthesize waitUntilPathExists=_waitUntilPathExists;
@property(retain) AXSignalDelay *waitUntilEnhanced; // @synthesize waitUntilEnhanced=_waitUntilEnhanced;
@property(retain) AXSignalDelay *waitUntilActive; // @synthesize waitUntilActive=_waitUntilActive;
@property(retain) AXSignalDelay *waitWhileDragging; // @synthesize waitWhileDragging=_waitWhileDragging;
@property(retain) AXSignalDelay *waitWhileTrackingMenu; // @synthesize waitWhileTrackingMenu=_waitWhileTrackingMenu;
@property int cachedWindowLevel; // @synthesize cachedWindowLevel=_cachedWindowLevel;
@property unsigned int cachedWindowID; // @synthesize cachedWindowID=_cachedWindowID;
@property BOOL isEnhanced; // @synthesize isEnhanced=_isEnhanced;
@property BOOL isResizing; // @synthesize isResizing=_isResizing;
@property BOOL isDraggingFile; // @synthesize isDraggingFile=_isDraggingFile;
@property BOOL isTrackingMenu; // @synthesize isTrackingMenu=_isTrackingMenu;
@property BOOL isTrackingPopup; // @synthesize isTrackingPopup=_isTrackingPopup;
@property long long pendingDragCount; // @synthesize pendingDragCount=_pendingDragCount;
@property(retain) NSRunningApplication *application; // @synthesize application=_application;
@property int currentViewMode; // @synthesize currentViewMode=_currentViewMode;
@property(retain) NSString *currentSaveName; // @synthesize currentSaveName=_currentSaveName;
@property(retain) NSArray *currentSelection; // @synthesize currentSelection=_currentSelection;
@property(retain) NSString *currentPath; // @synthesize currentPath=_currentPath;
@property BOOL noLocation; // @synthesize noLocation=_noLocation;
@property BOOL extensionHidden; // @synthesize extensionHidden=_extensionHidden;
@property BOOL minimized; // @synthesize minimized=_minimized;
@property BOOL closed; // @synthesize closed=_closed;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property BOOL active; // @synthesize active=_active;
@property struct CGRect pathButtonFrame; // @synthesize pathButtonFrame=_pathButtonFrame;
@property struct CGRect frame; // @synthesize frame=_frame;
@property int appPID; // @synthesize appPID=_appPID;
@property int dialogType; // @synthesize dialogType=_dialogType;
- (id)waitForChildrenOf:(id)arg1 withRole:(id)arg2 timeout:(double)arg3;
- (void)clickToFixFocus;
- (id)myNSSavePanel;
- (BOOL)isDialogMine;
- (void)availableMarginsOnLeft:(float *)arg1 right:(float *)arg2 top:(float *)arg3 bottom:(float *)arg4;
- (struct CGRect)centeredFrameForWindow:(id)arg1;
- (struct CGPoint)locationForButtonAlongBottomEdge;
- (void)cancel;
- (void)ok;
- (id)resizeSignal:(struct CGRect)arg1;
- (void)resize:(struct CGRect)arg1;
- (void)makeKeyWindow;
- (id)setSidebarWidthSignal:(float)arg1;
@property float sidebarWidth;
- (id)saveFieldFocusChangedSignal;
- (BOOL)saveFieldHasFocus;
- (struct CGRect)saveFieldFrame;
- (void)setSaveName:(id)arg1;
- (id)saveNameSignal;
- (void)showSelection;
- (void)selectFile:(id)arg1;
- (id)selectedFileNamesSignal;
- (id)selectedFileURLsSignal;
- (id)selectedFilesSignal;
- (id)allFileNamesSignal;
- (id)allFileURLsSignal;
- (id)allFilesSignal;
- (void)setPath:(id)arg1;
- (id)setPathSignal:(id)arg1;
- (BOOL)setPathUsingBestMethod:(id)arg1;
- (BOOL)setPathUsingGoTo:(id)arg1;
- (BOOL)setPathUsingDragAndDrop:(id)arg1;
- (struct CGPoint)dragDestinationPoint;
- (struct CGRect)dragSourceWindowFrame;
- (BOOL)isBezelWindowAtPoint:(struct CGPoint)arg1 withDialogFrame:(struct CGRect)arg2;
- (struct CGPoint)flipPoint:(struct CGPoint)arg1;
- (id)pathSignal;
- (id)pathFromComponents:(id)arg1 andComputerName:(id)arg2;
- (BOOL)currentPathIsValid;
- (id)parentURLWithiCloudCheck:(id)arg1;
- (id)iCloudURLForApp:(id)arg1;
- (id)translatePathComponentDisplayNames:(id)arg1;
- (id)folderNameForDisplayName:(id)arg1;
- (BOOL)sidebarSelectionDiffersFromPath:(id)arg1;
- (id)tagFieldContentChangedSignal;
- (id)tagFieldContentSignal;
- (void)setSortMode:(int)arg1;
- (id)sortModeSignal;
- (void)setViewMode:(int)arg1;
- (id)viewModeSignal;
- (void)setHideExtension:(BOOL)arg1;
- (id)hideExtensionSignal;
- (void)setIsMinimized:(BOOL)arg1;
- (id)isMinimizedSignal;
- (BOOL)valueOfDisclosureCheckbox;
- (id)isActiveSignal;
- (BOOL)isTaggingMenuElement:(id)arg1;
- (BOOL)isSearchResultsMenuElement:(id)arg1;
- (BOOL)isFloatingWindowElement:(id)arg1;
@property(readonly) NSScreen *screen;
@property(readonly) int windowLevel;
@property(readonly) unsigned int windowID;
@property(readonly) struct CGRect parentFrame;
@property(readonly) NSString *title;
- (void)hideFacadeAfterCloseOfElement:(id)arg1;
- (void)hideFacade;
- (BOOL)isFacadeShown;
- (void)showFacadeCoveringMenus:(BOOL)arg1;
- (void)loadAXControls;
- (id)dragSafeSignal:(id)arg1;
- (id)enhancedInteractionSafeSignal:(id)arg1;
- (id)activeInteractionSafeSignal:(id)arg1;
- (id)interactionSafeSignal:(id)arg1;
- (void)dealloc;
- (id)initWithUIElement:(id)arg1 ofType:(int)arg2;
- (id)initWithUIElement:(id)arg1;
- (void)startListeningForDialogClose;
- (void)closeAndCleanUp;
- (void)startListeningForMenuTracking;
- (void)startListeningForPathMenuMove;
- (void)startListeningForMoveAndResize;
- (void)startListeningForHideExtension;
- (void)updateActiveStateWithSignal:(id)arg1;
- (void)startListeningForDialogActivate;
- (void)startListeningForActivePopups;
- (void)startListeningForPopupActivation;
- (void)startListeningForSaveNameChanges;
- (void)startListeningForFileListChanges;
- (void)startListeningForPathChanges;
- (id)verifiedSelectionFromArray:(id)arg1;
- (void)startListeningForStateChanges;

@end

