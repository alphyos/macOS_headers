//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSViewController.h"

#import "AppContentPanelDelegate.h"
#import "AppPopupMenuDelegate.h"
#import "AppViewContentController.h"
#import "WorkflowManagerDelegate.h"

@class AppButtonLiveTestMode, AppContentPanel, AppPopupButton, AppSlider, AvailableDeviceAssetTableAdapter, ContentMessage, CurrentContentTableAdapter, CustomToolTip, Device, HelpController, LugerInfoMessage, NSArray, NSMutableArray, NSScrollView, NSString, NSTableView, NSTextField, NSView, TBTabButton;

@interface StreamMicViewController : NSViewController <AppViewContentController, AppPopupMenuDelegate, WorkflowManagerDelegate, AppContentPanelDelegate>
{
    NSView *leftColumnContainer;
    AppContentPanel *rightColumnContainer;
    NSTableView *currentContentList;
    NSScrollView *leftColumnScrollView;
    AppPopupButton *cbVoiceEQGroups;
    AppPopupButton *cbOptionalPolarPatternGroups;
    AppPopupButton *cbClipIndicatorOnOffGroups;
    AppPopupButton *cbLEDBlackoutModeOnOffGroups;
    AppPopupButton *cbAutomaticNoiseOnOffGroups;
    NSView *helpView;
    AppSlider *micMonitorSlider;
    AppSlider *announcerEffectSlider;
    AppSlider *micRecordLevelSlider;
    NSView *toolTipLiveTestMode;
    NSView *toolTipVoiceEQ;
    NSView *toolTipMicMonitor;
    NSView *toolTipOptionalPolarPattern;
    NSView *toolTipAnnouceEffect;
    NSView *toolTipClipIndicator;
    NSView *toolTipBlackOutMode;
    NSView *toolTipViewAutomaticNoise;
    NSTextField *lbVoiceEQ;
    NSTextField *lbOptionalPolarPattern;
    NSTextField *lbClipIndicator;
    NSTextField *lbAutomatic;
    NSTextField *lbBlackOutMode;
    NSTextField *lbAnnounceEffect;
    NSTextField *lbMicMonitor;
    NSArray *listLabelShowTooltip;
    CustomToolTip *customTooltip;
    AppButtonLiveTestMode *liveTestModeButton;
    TBTabButton *helpButton;
    TBTabButton *homeButton;
    AvailableDeviceAssetTableAdapter *availableAdapter;
    CurrentContentTableAdapter *currentAdapter;
    NSArray *currentPresetDAGS;
    LugerInfoMessage *lugerInfoMessage;
    Device *deviceConnect;
    HelpController *helpController;
    ContentMessage *contentMessage;
    NSMutableArray *tabArray;
    NSMutableArray *_voiceEQGroupsArray;
    NSMutableArray *_optionalPolarPatternGroupsArray;
    NSMutableArray *_onOffGroupsArray;
    NSString *_selectedVoiceEQ;
}

- (void).cxx_destruct;
@property(retain) NSString *selectedVoiceEQ; // @synthesize selectedVoiceEQ=_selectedVoiceEQ;
@property(retain) NSMutableArray *onOffGroupsArray; // @synthesize onOffGroupsArray=_onOffGroupsArray;
@property(retain) NSMutableArray *optionalPolarPatternGroupsArray; // @synthesize optionalPolarPatternGroupsArray=_optionalPolarPatternGroupsArray;
@property(retain) NSMutableArray *voiceEQGroupsArray; // @synthesize voiceEQGroupsArray=_voiceEQGroupsArray;
- (void)mouseMoved:(id)arg1;
- (void)mouseMoveInView:(struct CGPoint)arg1;
- (void)removeAllToolTip;
- (void)showToolTip:(id)arg1 withView:(id)arg2 distance:(float)arg3;
- (void)toggleWindow:(id)arg1 withView:(id)arg2 withDistance:(float)arg3;
- (void)liveTestModeRun:(id)arg1;
- (void)workflow:(id)arg1 erroredNode:(id)arg2 withState:(id)arg3;
- (void)workflow:(id)arg1 progressedNode:(id)arg2 progress:(float)arg3 withState:(id)arg4;
- (void)workflow:(id)arg1 startedNode:(id)arg2 withState:(id)arg3;
- (void)workflow:(id)arg1 finishedNode:(id)arg2 withState:(id)arg3;
- (void)homeButton:(id)arg1;
- (void)resetPressed:(id)arg1;
- (void)updatePressed:(id)arg1;
- (void)helpButton:(id)arg1;
- (void)announerEffecSliderChange:(id)arg1;
- (void)micRecordLevelChange:(id)arg1;
- (void)micSliderChange:(id)arg1;
- (void)popupMenuSelected:(long long)arg1 andPopupButton:(id)arg2;
@property(retain) NSMutableArray *tabArray; // @synthesize tabArray;
- (void)refreshAvailableTable:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)loadComboboxData;
- (void)viewWillAppear;
- (void)loadView;
- (void)viewWillDisappear;
- (void)addAreaForMouseMove;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

