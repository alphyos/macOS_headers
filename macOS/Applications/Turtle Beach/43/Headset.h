//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "EarforceRestReceiver.h"

@class DeviceQueue, EEPromUpdater, FirmwareUpdater, HIDDevice, NSArray, NSCondition, NSData, NSString, NSTimer, ServerCommunicator, UsbPacket, UsbPacketInstances;

@interface Headset : NSObject <EarforceRestReceiver>
{
    BOOL ignorePowerUpTimer;
    BOOL ancEnabled;
    DeviceQueue *deviceQueue;
    ServerCommunicator *serverCommunicator;
    UsbPacket *pendingPacket;
    UsbPacketInstances *usbPacketInstances;
    NSTimer *powerUpTimer;
    int _firmware_v1;
    int _firmware_v2;
    int _firmware_v3;
    int _server_firmware_v1;
    int _server_firmware_v2;
    int _server_firmware_v3;
    int _productID;
    int _status;
    int _statusUpdate;
    NSArray *_requiredDeviceIDs;
    NSString *_name;
    NSData *_binaryFirmwareData;
    NSData *_binaryEEPromData;
    HIDDevice *_hidDevice;
    FirmwareUpdater *_firmwareUpdater;
    EEPromUpdater *_eepromUpdater;
    NSCondition *_hasEEPromDataCondition;
    NSCondition *_hasFirmwareDataCondition;
    NSCondition *_receivedServerFirmwareResponseCondition;
    id <HeadsetDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <HeadsetDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSCondition *receivedServerFirmwareResponseCondition; // @synthesize receivedServerFirmwareResponseCondition=_receivedServerFirmwareResponseCondition;
@property(retain) NSCondition *hasFirmwareDataCondition; // @synthesize hasFirmwareDataCondition=_hasFirmwareDataCondition;
@property(retain) NSCondition *hasEEPromDataCondition; // @synthesize hasEEPromDataCondition=_hasEEPromDataCondition;
@property(retain) EEPromUpdater *eepromUpdater; // @synthesize eepromUpdater=_eepromUpdater;
@property(retain) FirmwareUpdater *firmwareUpdater; // @synthesize firmwareUpdater=_firmwareUpdater;
@property(retain) HIDDevice *hidDevice; // @synthesize hidDevice=_hidDevice;
@property int statusUpdate; // @synthesize statusUpdate=_statusUpdate;
@property int status; // @synthesize status=_status;
@property(retain) NSData *binaryEEPromData; // @synthesize binaryEEPromData=_binaryEEPromData;
@property(retain) NSData *binaryFirmwareData; // @synthesize binaryFirmwareData=_binaryFirmwareData;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSArray *requiredDeviceIDs; // @synthesize requiredDeviceIDs=_requiredDeviceIDs;
@property int productID; // @synthesize productID=_productID;
@property int server_firmware_v3; // @synthesize server_firmware_v3=_server_firmware_v3;
@property int server_firmware_v2; // @synthesize server_firmware_v2=_server_firmware_v2;
@property int server_firmware_v1; // @synthesize server_firmware_v1=_server_firmware_v1;
@property int firmware_v3; // @synthesize firmware_v3=_firmware_v3;
@property int firmware_v2; // @synthesize firmware_v2=_firmware_v2;
@property int firmware_v1; // @synthesize firmware_v1=_firmware_v1;
- (id)headsetConnectedString:(id)arg1;
- (BOOL)checkFirmwareVersion:(id)arg1;
- (void)onBinaryReleaseNote:(id)arg1 andProductId:(int)arg2 withRequest:(id)arg3;
- (void)onVoicePromptListReceived:(id)arg1 withRequest:(id)arg2;
- (void)onPresetListReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryVoicePromptInfoReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryPresetDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryVoicePromptDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onNotificationDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onServerFirmwareVersionReceivedWithMajorVersion:(int)arg1 andMinorVersion:(int)arg2 andReleaseVersion:(int)arg3 withRequest:(id)arg4;
- (void)onBinaryBluetoothEEPromDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryEEPromDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryFirmwareDataReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryExternalFlashReceived:(id)arg1 withRequest:(id)arg2;
- (void)onBinaryImageDataReceived:(id)arg1 withRequest:(id)arg2;
- (BOOL)isFirmwareOutOfDate;
- (void)onServerFirmwareVersionReceivedWithMajorVersion:(int)arg1 andMinorVersion:(int)arg2 andReleaseVersion:(int)arg3;
- (void)onBinaryEEPromDataReceived:(id)arg1;
- (void)onBinaryFirmwareDataReceived:(id)arg1;
- (void)refreshBinaryFirmwareData;
- (void)refreshEEPromData;
- (void)refreshServerFirmwareVersionNum;
- (BOOL)doEEPromUpdate;
- (BOOL)beginFirmwareUpdate;
- (BOOL)doFirmwareUpdate:(id)arg1;
- (void)queueAncToggle;
- (void)queueSurroundModeChange:(int)arg1;
- (void)queueGamePresetChange:(int)arg1;
- (void)queueMicPresetChange:(int)arg1;
- (void)onFirmwareResponseV1:(int)arg1 V2:(int)arg2 V3:(int)arg3;
- (BOOL)isFirmwareShippingVersion;
- (void)queueDeviceFirmwareVersionNumRefresh;
- (void)sendPowerUpCommand_Immediate;
- (void)sendPowerUpCommand_Queued;
- (void)cleanup;
- (void)dealloc;
- (id)initWithName:(id)arg1 andHidDevice:(id)arg2 andUsbPackets:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

