//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HIDDevice, NSArray, NSString;

@interface Device : NSObject
{
    unsigned long long vendorId;
    unsigned long long applicationIdPrivate;
    unsigned long long usbProductId;
    int diagDst;
    int diagSrc;
    NSString *deviceDescription;
    void *libUsbDevice_ptr;
    HIDDevice *hidDevice;
    BOOL _isAttached;
    BOOL _isBootloader;
    BOOL _hasVoicePrompts;
    BOOL _hasBT;
    BOOL _hasCNX;
    BOOL _hasBluetoothEepromUpdate;
    BOOL _hasBluetoothFlashUpdate;
    BOOL _hasEeprom;
    BOOL _hasExternalFlash;
    BOOL _hasDeviceDefaultsCheck;
    BOOL _isFirmwareUpdateAllowed;
    BOOL _pairAfterFirmwareUpdate;
    BOOL _skipFirmwareUpdate;
    int _deviceType;
    int _deviceUsbType;
    int _deviceMcuType;
    int _deviceClass;
    float _apiId;
    unsigned long long _applicationIdInHighFlash;
    unsigned long long _bootloaderId;
    NSString *_devName;
    NSArray *_groupedDeviceIds;
    NSArray *_invalidPortIds;
    long long _invalidPortTypes;
    long long _estimatedBootTimeMillis;
    long long _eraseMcuFlashDelayMs;
    NSArray *_eePromPatches;
    NSString *_bluetoothFirmwareVersion;
    NSString *_firmwareReleaseNote;
    NSArray *_firmwareVersion;
}

@property(retain, nonatomic) NSArray *firmwareVersion; // @synthesize firmwareVersion=_firmwareVersion;
@property(retain) NSString *firmwareReleaseNote; // @synthesize firmwareReleaseNote=_firmwareReleaseNote;
@property(retain) NSString *bluetoothFirmwareVersion; // @synthesize bluetoothFirmwareVersion=_bluetoothFirmwareVersion;
@property BOOL skipFirmwareUpdate; // @synthesize skipFirmwareUpdate=_skipFirmwareUpdate;
@property BOOL pairAfterFirmwareUpdate; // @synthesize pairAfterFirmwareUpdate=_pairAfterFirmwareUpdate;
@property(retain) NSArray *eePromPatches; // @synthesize eePromPatches=_eePromPatches;
@property long long eraseMcuFlashDelayMs; // @synthesize eraseMcuFlashDelayMs=_eraseMcuFlashDelayMs;
@property long long estimatedBootTimeMillis; // @synthesize estimatedBootTimeMillis=_estimatedBootTimeMillis;
@property long long invalidPortTypes; // @synthesize invalidPortTypes=_invalidPortTypes;
@property(retain) NSArray *invalidPortIds; // @synthesize invalidPortIds=_invalidPortIds;
@property(retain) NSArray *groupedDeviceIds; // @synthesize groupedDeviceIds=_groupedDeviceIds;
@property(retain) NSString *devName; // @synthesize devName=_devName;
@property BOOL isFirmwareUpdateAllowed; // @synthesize isFirmwareUpdateAllowed=_isFirmwareUpdateAllowed;
@property float apiId; // @synthesize apiId=_apiId;
@property BOOL hasDeviceDefaultsCheck; // @synthesize hasDeviceDefaultsCheck=_hasDeviceDefaultsCheck;
@property BOOL hasExternalFlash; // @synthesize hasExternalFlash=_hasExternalFlash;
@property BOOL hasEeprom; // @synthesize hasEeprom=_hasEeprom;
@property BOOL hasBluetoothFlashUpdate; // @synthesize hasBluetoothFlashUpdate=_hasBluetoothFlashUpdate;
@property BOOL hasBluetoothEepromUpdate; // @synthesize hasBluetoothEepromUpdate=_hasBluetoothEepromUpdate;
@property BOOL hasCNX; // @synthesize hasCNX=_hasCNX;
@property BOOL hasBT; // @synthesize hasBT=_hasBT;
@property BOOL hasVoicePrompts; // @synthesize hasVoicePrompts=_hasVoicePrompts;
@property int deviceClass; // @synthesize deviceClass=_deviceClass;
@property int deviceMcuType; // @synthesize deviceMcuType=_deviceMcuType;
@property int deviceUsbType; // @synthesize deviceUsbType=_deviceUsbType;
@property BOOL isBootloader; // @synthesize isBootloader=_isBootloader;
@property BOOL isAttached; // @synthesize isAttached=_isAttached;
@property int deviceType; // @synthesize deviceType=_deviceType;
@property unsigned long long bootloaderId; // @synthesize bootloaderId=_bootloaderId;
@property unsigned long long applicationIdInHighFlash; // @synthesize applicationIdInHighFlash=_applicationIdInHighFlash;
@property unsigned long long vendorId; // @synthesize vendorId;
- (void).cxx_destruct;
- (unsigned long long)ReadAVRBootloaderHighFlash;
- (id)readCnx:(id)arg1;
- (unsigned long long)writeCnx:(id)arg1;
- (id)readFirmwareVersionForCnxDevice;
- (id)readFirmwareVersionForAvrDevice;
- (id)readFirmwareVersionForPICDevice;
- (id)readFirmwareVersion;
- (id)readBytes;
- (unsigned long long)writeBytes:(id)arg1;
- (id)readEEPromAddress:(unsigned short)arg1 withLength:(unsigned short)arg2;
- (unsigned long long)writeEEPromAddress:(unsigned short)arg1 withData:(id)arg2;
- (unsigned short)preferredEEPromBlockSize;
- (void)tryToDetachIfWinUSBDevice;
- (void)tryToAttachIfWinUSBDevice;
- (void)deattachHidDevice:(id)arg1;
- (void)attachHidDevice:(id)arg1;
@property(readonly) NSString *deviceDescription; // @synthesize deviceDescription;
@property(readonly) int diagSrc; // @synthesize diagSrc;
@property(readonly) int diagDst; // @synthesize diagDst;
@property(readonly) unsigned long long usbProductId; // @synthesize usbProductId;
@property unsigned long long applicationId;
- (id)initAsBootloader;
- (id)init;

@end

