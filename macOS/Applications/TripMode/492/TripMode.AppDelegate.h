//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSApplicationDelegate-Protocol.h"
#import "NSUserNotificationCenterDelegate-Protocol.h"

@class NSDate, _TtC8TripMode13AppController, _TtC8TripMode13UpdateSupport;

@interface TripMode.AppDelegate : NSObject <NSApplicationDelegate, NSUserNotificationCenterDelegate>
{
    // Error parsing type: , name: applicationController
    // Error parsing type: , name: updater
    // Error parsing type: , name: setupController
    // Error parsing type: , name: inhibitUpdateChecks
    // Error parsing type: , name: maxUpdateCheckPeriod
    // Error parsing type: , name: launchUserInfo
    // Error parsing type: , name: launchOnStartup
    // Error parsing type: , name: forceCheck
    // Error parsing type: , name: lastLicenseCheck
    // Error parsing type: , name: licenseCheckPeriod
}

+ (id)backgroundUpdateCheckNotification;
+ (id)installUpdateIfAvailableNotification;
+ (id)updaterEncounteredErrorNotification;
+ (id)updaterDidNotFindUpdateNotification;
+ (id)updaterDidFindValidUpdateNotification;
+ (id)checkUpdateExists;
+ (id)manualUpdateCheckNotification;
- (CDUnknownBlockType).cxx_destruct;
- (id)init;
@property(nonatomic) unsigned long long filterStatus;
- (struct OpaqueLSSharedFileListItemRef *)itemRefInLoginItems;
- (void)setLaunchAtStartup:(BOOL)arg1;
- (int)failedAttemptsBeforeLicenceDestruction;
- (BOOL)shouldDestroyLicenceOnVerificationFail;
- (void)installUpdateIfAvailable:(id)arg1;
- (BOOL)updaterMayCheckForUpdates:(id)arg1;
@property(nonatomic, readonly) double licenseCheckPeriod; // @synthesize licenseCheckPeriod;
@property(nonatomic, copy) NSDate *lastLicenseCheck; // @synthesize lastLicenseCheck;
- (void)updater:(id)arg1 willInstallUpdate:(id)arg2;
- (void)updaterWillRelaunchApplication:(id)arg1;
- (BOOL)updaterShouldPromptForPermissionToCheckForUpdates:(id)arg1;
- (void)checkUpdateExists:(id)arg1;
- (void)forceUpdateCheck:(id)arg1;
@property(nonatomic) BOOL forceCheck; // @synthesize forceCheck;
- (void)backgroundUpdateCheck:(id)arg1;
- (void)updater:(id)arg1 didAbortWithError:(id)arg2;
- (void)updaterDidNotFindUpdate:(id)arg1;
- (void)updater:(id)arg1 didFindValidUpdate:(id)arg2;
- (void)updater:(id)arg1 didFinishLoadingAppcast:(id)arg2;
- (void)accessibilityChanged:(id)arg1;
- (void)updateDockIconVisibility:(BOOL)arg1 force:(BOOL)arg2;
@property(nonatomic) BOOL launchOnStartup; // @synthesize launchOnStartup;
- (void)applicationWillTerminate:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)startApplicationWithForceUpgrade:(BOOL)arg1 checkUpdates:(BOOL)arg2;
- (void)firstPopoverOpening:(id)arg1;
- (void)setupWindowWillClose:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)setupDefaults;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
@property(nonatomic, readonly) double maxUpdateCheckPeriod; // @synthesize maxUpdateCheckPeriod;
@property(nonatomic) __weak _TtC8TripMode13UpdateSupport *updater; // @synthesize updater;
@property(nonatomic) __weak _TtC8TripMode13AppController *applicationController; // @synthesize applicationController;

@end

