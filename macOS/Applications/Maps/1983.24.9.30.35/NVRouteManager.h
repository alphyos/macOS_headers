//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <GeoServices/GEORouteManager.h>

#import "RAPDisplayedDirectionsPlan-Protocol.h"

@class GEODirectionsRequest, GEODirectionsResponse, MKMapView, NSArray, NSMapTable, NSMutableArray, NSMutableSet, NSString, NVPlace, NVRoute, RAPDirectionsRecording, RAPUserSearchInput, RouteSet, VKPolylineGroupOverlay, VKPolylineGroupOverlayPainter;
@protocol GEOTransitRoutingIncidentMessage;

__attribute__((visibility("hidden")))
@interface NVRouteManager : GEORouteManager <RAPDisplayedDirectionsPlan>
{
    BOOL _isAnimating;
    BOOL _routesWereDistinguishable;
    NSMutableArray *_routeSets;
    NSMutableArray *_annotations;
    NSMutableSet *_alreadyVisibleAnnotations;
    MKMapView *_mapView;
    VKPolylineGroupOverlay *_routesOverlay;
    VKPolylineGroupOverlayPainter *_routesOverlayPainter;
    NSArray *_routeOverlays;
    NSMapTable *_annotationViewsForRouteOverlayTable;
    int _signsColor;
    BOOL _showsRoadManeuvers;
    unsigned long long _selectedRoadManeuverIndex;
    RAPDirectionsRecording *_recording;
    RAPUserSearchInput *_originRAPSearchInput;
    RAPUserSearchInput *_destinationRAPSearchInput;
    NVPlace *_origin;
    NVPlace *_destination;
    NSArray *_routes;
    GEODirectionsRequest *_lastRequest;
    GEODirectionsResponse *_lastResponse;
    NSArray *_combinedDataSourceItems;
}

+ (id)keyPathsForValuesAffectingDataSourceItems;
+ (id)keyPathsForValuesAffectingResponseIgnoredTransitModePreferences;
+ (id)keyPathsForValuesAffectingSelectedRouteIndex;
+ (id)keyPathsForValuesAffectingSelectedRoute;
@property(copy, nonatomic) NSArray *combinedDataSourceItems; // @synthesize combinedDataSourceItems=_combinedDataSourceItems;
@property(readonly, nonatomic) GEODirectionsResponse *lastResponse; // @synthesize lastResponse=_lastResponse;
@property(readonly, nonatomic) GEODirectionsRequest *lastRequest; // @synthesize lastRequest=_lastRequest;
@property(nonatomic) unsigned long long selectedRoadManeuverIndex; // @synthesize selectedRoadManeuverIndex=_selectedRoadManeuverIndex;
@property(nonatomic) BOOL showsRoadManeuvers; // @synthesize showsRoadManeuvers=_showsRoadManeuvers;
@property(nonatomic) int signsColor; // @synthesize signsColor=_signsColor;
@property(readonly, nonatomic) __weak MKMapView *mapView; // @synthesize mapView=_mapView;
@property(copy, nonatomic) NSArray *routes; // @synthesize routes=_routes;
@property(copy, nonatomic) NVPlace *destination; // @synthesize destination=_destination;
@property(copy, nonatomic) NVPlace *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
- (id)routeSetForGEORouteSet:(id)arg1;
- (void)addedRoutesToRouteSet:(id)arg1;
- (void)handleError:(id)arg1 directionsError:(id)arg2 forTicket:(id)arg3;
- (void)handleResponse:(id)arg1 routeSet:(id)arg2 forTicket:(id)arg3;
- (id)_requestTicketWithWaypoints:(id)arg1 transportType:(int)arg2 routeHandle:(id)arg3 routeAttributes:(id)arg4 mapRegion:(id)arg5;
- (void)handleRouteSet:(id)arg1 error:(id)arg2 andCompletion:(CDUnknownBlockType)arg3;
- (void)searchDirectionsFrom:(id)arg1 to:(id)arg2 transportType:(int)arg3 timepoint:(struct GEOTimepoint)arg4 routeHandle:(id)arg5 mapRegion:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (id)defaultRouteAttributes;
- (BOOL)getRoutesIndex:(out unsigned long long *)arg1 directionsResponseIndex:(out unsigned long long *)arg2 forRouteSuggestion:(id)arg3;
- (id)displayedRouteSuggestions;
- (int)requestedTransportType;
- (id)recording;
- (void)_showsRoadManeuversForRouteIndex:(unsigned long long)arg1;
- (CDStruct_02837cd9)boundingMapRect;
- (id)routeIndexesNearPoint:(struct CGPoint)arg1 closestRouteIndex:(unsigned long long *)arg2;
- (id)titleForRoute:(id)arg1;
- (id)titleForAllRoutes;
- (id)titleForRouteAtIndex:(unsigned long long)arg1;
- (id)annotationForRoute:(id)arg1;
- (unsigned long long)routeIndexForAnnotation:(id)arg1;
- (unsigned long long)routeIndexForAnnotationView:(id)arg1;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)mapView:(id)arg1 painterForOverlay:(id)arg2;
- (id)selectedRoutePainter;
- (id)selectedRouteOverlay;
- (id)routesOverlayPainter;
- (id)routesOverlay;
- (void)_updateRouteTrafficIncidents;
@property(readonly, nonatomic) BOOL wantSortOptions;
@property(readonly, nonatomic) id <GEOTransitRoutingIncidentMessage> transitBlockingIncident;
- (BOOL)responseIgnoredTransitModePreferences;
- (void)updateRouteAnnotationLabels;
- (struct CGRect)_labelRectForRouteAnnotationView:(id)arg1 orientation:(long long)arg2;
- (void)selectPreviousRoute;
- (void)selectNextRoute;
- (void)_selectPreviousNextRoute:(BOOL)arg1;
- (void)clearRoutes;
- (unsigned long long)routesPerPages:(int)arg1;
@property(readonly, nonatomic) RouteSet *routeSet;
@property(readonly, nonatomic) NSArray *dataSourceItems;
@property(readonly, copy, nonatomic) NVRoute *selectedRoute;
@property(nonatomic) unsigned long long selectedRouteIndex;
- (void)updateOverlayForRoute:(id)arg1;
- (BOOL)_shouldShowRouteAnnotations;
- (void)_refreshRoutesOverlay;
- (void)setOrigin:(id)arg1 originSearchInput:(id)arg2 destination:(id)arg3 destinationSearchInput:(id)arg4;
- (id)initWithMapView:(id)arg1;
- (void)_minimizeOverlapOfRouteAnnotationViewsWithContentBounds:(struct CGRect)arg1;
- (id)_acceptableOrientationsForRouteAnnotationRepresentation:(id)arg1 fromOrientations:(id)arg2 withStaticRouteAnnotationRepresentation:(id)arg3 inOrientation:(id)arg4;
- (id)_acceptableOrientationsForRouteAnnotationRepresentation:(id)arg1 withAnnotationRepresentationsToAvoid:(id)arg2;
- (id)_acceptableOrientationsForRouteAnnotationRepresentation:(id)arg1 withAnnotationRepresentationToAvoid:(id)arg2;
- (double)_areaOverlapOfRouteAnnotationRepresentation:(id)arg1 withAnnotationRepresentationToAvoid:(id)arg2 inOrientation:(long long)arg3;
- (void)updateAlternateRouteAnnotationsWithContentBounds:(struct CGRect)arg1;
- (id)_routeadditions_annotationForRoute:(id)arg1;
- (id)_routeadditions_routeForAnnotation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

