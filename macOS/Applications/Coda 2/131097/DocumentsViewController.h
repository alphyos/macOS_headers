//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CodaViewController.h"

#import "FindReplaceDelegateProtocol.h"
#import "PCKeyLoopProtocol.h"
#import "PCSheetControllerDelegate.h"
#import "PCSheetControllerInterfaceDelegate.h"
#import "PCTabBarDelegate.h"
#import "PCViewDraggingDelegateProtocol.h"

@class CodaDocument, FindReplaceTextController, NSMutableArray, NSMutableSet, NSString, PCTabBar, TabController;

__attribute__((visibility("hidden")))
@interface DocumentsViewController : CodaViewController <PCTabBarDelegate, PCViewDraggingDelegateProtocol, PCKeyLoopProtocol, FindReplaceDelegateProtocol, PCSheetControllerDelegate, PCSheetControllerInterfaceDelegate>
{
    FindReplaceTextController *iFindController;
    BOOL iFindVisible;
    PCTabBar *iTabBar;
    NSMutableArray *tabControllers;
    TabController *selectedTabController;
    NSMutableSet *iCanceledPendingPaths;
    long long iNewBackgroundTabIndex;
}

+ (id)keyPathsForValuesAffectingDocument;
+ (id)keyPathsForValuesAffectingSelectedViewController;
+ (id)keyPathsForValuesAffectingSelectedSplitController;
@property long long newBackgroundTabIndex; // @synthesize newBackgroundTabIndex=iNewBackgroundTabIndex;
@property(nonatomic, getter=isFindVisible) BOOL findVisible; // @synthesize findVisible=iFindVisible;
@property(readonly) FindReplaceTextController *findController; // @synthesize findController=iFindController;
@property PCTabBar *tabBar; // @synthesize tabBar=iTabBar;
- (void)sheetControllerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (id)windowForSheetController:(id)arg1;
- (BOOL)pc_view:(id)arg1 performDragOperation:(id)arg2;
- (unsigned long long)pc_view:(id)arg1 validateDrop:(id)arg2;
- (void)reloadTabBarButton:(id)arg1 atIndex:(long long)arg2;
- (void)reloadTabBarItemAtIndex:(long long)arg1;
- (void)tabBar:(id)arg1 willDisplayTabToolTip:(id)arg2 forTabAtIndex:(long long)arg3;
- (void)tabBar:(id)arg1 willLayoutTabButton:(id)arg2 atIndex:(long long)arg3;
- (id)tabBar:(id)arg1 titleForTabAtIndex:(long long)arg2;
- (BOOL)tabBar:(id)arg1 shouldCloseTabAtIndex:(long long)arg2;
- (BOOL)slidingViewsBar:(id)arg1 moveViewAtIndex:(long long)arg2 toWindow:(id)arg3;
- (void)slidingViewsBar:(id)arg1 movedViewFromIndex:(long long)arg2 toIndex:(long long)arg3;
- (void)tabBar:(id)arg1 didSwitchToTabAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 didReselectTabAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 didCloseTabAtIndex:(long long)arg2;
- (id)tabBar:(id)arg1 contextualMenuForTabAtIndex:(long long)arg2 defaultMenu:(id)arg3;
- (void)tabBar:(id)arg1 closeOthersExceptTabAtIndex:(long long)arg2;
- (id)slidingViewsBar:(id)arg1 itemForButtonAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 duplicateTabAtIndex:(long long)arg2;
- (BOOL)tabBar:(id)arg1 acceptDrop:(id)arg2 tabAtIndex:(long long)arg3;
- (void)slidingViewsBar:(id)arg1 didEndDragOperation:(unsigned long long)arg2;
- (BOOL)slidingViewsBar:(id)arg1 acceptDrop:(id)arg2 index:(long long)arg3;
- (unsigned long long)slidingViewsBar:(id)arg1 validateDrop:(id)arg2 index:(long long)arg3;
- (void)createNewTabForTabBar:(id)arg1;
- (id)viewControllerPassingTest:(CDUnknownBlockType)arg1;
- (id)viewControllerWithType:(int)arg1 document:(id)arg2 create:(BOOL)arg3;
- (id)viewControllerWithType:(int)arg1 create:(BOOL)arg2;
- (id)viewControllerWithURL:(id)arg1;
- (id)viewControllers;
- (void)updateInterfaceForSplitController:(id)arg1;
- (id)terminalViewControllerLimitToIdleSessions:(BOOL)arg1;
- (id)tabcontrollerWithViewController:(id)arg1;
- (id)tabControllers;
- (id)tabControllerAtIndex:(int)arg1;
- (id)splitControllerWithDocument:(id)arg1;
- (id)splitControllerWithViewController:(id)arg1;
- (void)sourceControlStatusDidChangeNotification:(id)arg1;
- (BOOL)shouldChangeFirstResponderToViewController;
- (id)setViewType:(int)arg1 forDocumentViewController:(id)arg2;
- (id)setViewType:(int)arg1;
- (void)unloadTabControllers;
- (void)setTabControllers:(id)arg1;
- (id)pendingCachePaths;
- (void)setSelectedTabController:(id)arg1;
- (void)setSelectedViewController:(id)arg1;
- (BOOL)selectTabForDocument:(id)arg1;
- (void)selectTabControllerAtIndex:(int)arg1;
- (id)selectedViewController;
- (id)selectedTabController;
- (id)selectedSplitController;
- (id)searchTargetForFind;
- (id)searchDocumentForFind;
- (void)resetTabAtIndex:(int)arg1;
- (void)removeTabControllerAtIndex:(int)arg1;
- (void)removePendingSplitControllersForPath:(id)arg1;
- (void)removeAllTabs;
- (void)recalculateKeyViewLoop;
- (void)noteTabsChanged;
- (id)pendingSplitControllersForPath:(id)arg1;
- (BOOL)selectSymbol:(id)arg1 inDocumentWithIdentifier:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (long long)numberOfTabsInTabBar:(id)arg1;
- (void)operation:(id)arg1 progressDidChange:(id)arg2;
- (int)numberOfTabs;
- (int)numberOfSplits;
- (void)moveTabControllerFromIndex:(int)arg1 toIndex:(int)arg2;
- (BOOL)lookupReferenceSymbol:(id)arg1 mode:(id)arg2;
- (void)unloadView;
- (BOOL)isEditingOnlyUntitledDocument;
- (void)insertTabController:(id)arg1 atIndex:(int)arg2;
- (unsigned long long)indexOfTabController:(id)arg1;
- (id)initialFirstResponder;
- (id)lastKeyView;
- (id)firstKeyView;
- (id)editedDocumentsInTabController:(id)arg1;
- (id)ownedDocuments;
- (id)ownedEditedDocuments;
@property CodaDocument *document;
- (BOOL)openDocument:(id)arg1 forPendingPath:(id)arg2;
- (BOOL)openDocumentWithNode:(id)arg1 inSplitController:(id)arg2;
- (BOOL)openDocumentWithNode:(id)arg1 inDocumentViewController:(id)arg2;
- (void)openDocument:(id)arg1 withViewType:(int)arg2 inBackground:(BOOL)arg3;
- (id)openDocumentWithNode:(id)arg1 withViewType:(int)arg2 inBackground:(BOOL)arg3;
- (id)openDocumentWithNode:(id)arg1 inBackground:(BOOL)arg2;
- (void)openCodaDocument:(id)arg1;
- (void)findReplaceController:(id)arg1 willPerformFindAction:(long long)arg2;
- (id)editedDocuments;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)invalidateRestorableState;
- (id)documents;
- (id)addSplitForPendingPath:(id)arg1;
- (struct CGRect)contentRect;
- (void)closeDocument:(id)arg1 withScriptCommand:(id)arg2;
- (void)closeSplitController:(id)arg1;
- (void)closeFindController:(id)arg1;
- (void)setCachingPendingPaths:(BOOL)arg1;
- (void)cancelPendingDownloadIfNeeded:(id)arg1;
- (BOOL)canChangeDocument;
- (id)booksViewController;
- (void)addTab:(id)arg1 document:(id)arg2 inBackground:(BOOL)arg3 viewType:(int)arg4 atIndex:(unsigned long long)arg5;
- (void)addTab:(id)arg1 document:(id)arg2 inBackground:(BOOL)arg3 viewType:(int)arg4;
- (id)addTabWithDocument:(id)arg1 inBackground:(BOOL)arg2 viewType:(int)arg3;
- (id)addTabWithDocument:(id)arg1 inBackground:(BOOL)arg2;
- (id)addTabInBackground:(BOOL)arg1;
- (id)addSplitWithNode:(id)arg1;
- (id)addSplitWithDocument:(id)arg1 displayViewerType:(int)arg2 inTab:(id)arg3;
- (id)addSplitWithDocument:(id)arg1 displayViewerType:(int)arg2;
- (id)addSplitWithDocument:(id)arg1;
- (id)activeViewController;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

