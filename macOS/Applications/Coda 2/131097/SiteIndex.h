//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PCFileSystemWatcherDelegate.h"

@class CodaSite, NSLock, NSManagedObjectContext, NSManagedObjectModel, NSMutableArray, NSMutableSet, NSPersistentStoreCoordinator, PCFileSystemWatcher, PCMapTable, PCProgressPanelController;

__attribute__((visibility("hidden")))
@interface SiteIndex : NSObject <PCFileSystemWatcherDelegate>
{
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_masterObjectContext;
    NSManagedObjectContext *_managedObjectContext;
    NSManagedObjectContext *_temporaryManagedObjectContext;
    NSManagedObjectContext *_workerObjectContext;
    NSLock *_workerContextLock;
    long long _masterContextLockCount;
    CodaSite *_site;
    PCFileSystemWatcher *_fileEventWatcher;
    PCFileSystemWatcher *_directoryEventWatcher;
    PCMapTable *_processingChangesTable;
    NSLock *_processingChangesLock;
    NSMutableSet *_savingOperationContexts;
    NSMutableArray *_pendingChanges;
    NSLock *_pendingChangesLock;
    NSLock *_indexingFilesLock;
    BOOL _cancelIndexing;
    BOOL _indexing;
    NSMutableArray *_indexingSymbolContexts;
    PCProgressPanelController *_migrationProgressController;
    BOOL _matchAllCompletions;
    BOOL _indexFiles;
}

+ (void)log:(id)arg1 level:(int)arg2;
+ (void)initialize;
+ (id)indexesContainingDocument:(id)arg1;
+ (id)globalIndex;
@property(nonatomic) BOOL indexFiles; // @synthesize indexFiles=_indexFiles;
@property(nonatomic) BOOL matchAllCompletions; // @synthesize matchAllCompletions=_matchAllCompletions;
@property(readonly, nonatomic) CodaSite *site; // @synthesize site=_site;
@property(getter=isIndexing) BOOL indexing; // @synthesize indexing=_indexing;
@property BOOL cancelIndexing; // @synthesize cancelIndexing=_cancelIndexing;
@property(retain, nonatomic) PCFileSystemWatcher *fileEventWatcher; // @synthesize fileEventWatcher=_fileEventWatcher;
@property(retain, nonatomic) PCFileSystemWatcher *directoryEventWatcher; // @synthesize directoryEventWatcher=_directoryEventWatcher;
- (void)deleteFileEntriesFromContext:(id)arg1;
- (void)removeIndexFiles;
- (void)rebuildIndexWithWindow:(id)arg1;
- (void)willCloseDocumentNotification:(id)arg1;
- (id)quickOpenResultsForString:(id)arg1 scope:(id)arg2;
- (BOOL)progressivelyMigrateURL:(id)arg1 ofType:(id)arg2 toModel:(id)arg3 usedModels:(id)arg4 error:(id *)arg5;
- (BOOL)progressivelyMigrateURL:(id)arg1 ofType:(id)arg2 toModel:(id)arg3 error:(id *)arg4;
- (id)remoteFileManager;
- (id)convertResultsToSymbolTableEntries:(id)arg1;
- (id)displaySymbolsForDocument:(id)arg1;
- (id)symbolsForManagedFileObject:(id)arg1;
- (BOOL)shouldMatchAllCompletions;
- (void)removeSymbolsForManagedFileObject:(id)arg1;
- (void)saveChangesToContext:(id)arg1;
- (void)saveChangesToOperationContext:(id)arg1;
@property(readonly, retain, nonatomic) NSManagedObjectContext *temporaryManagedObjectContext;
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(readonly, retain, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
- (id)includedPathsInDocument:(id)arg1;
- (id)filePathsThatIncludeDocument:(id)arg1;
- (id)filesThatIncludeDocument:(id)arg1 context:(id)arg2;
- (void)documentDidSaveToURL:(id)arg1;
- (id)includedManagedFileObjectsInFileObject:(id)arg1 context:(id)arg2;
- (id)symbolsMatching:(id)arg1 type:(id)arg2 document:(id)arg3;
- (id)symbolsMatching:(id)arg1 mode:(id)arg2 document:(id)arg3;
- (id)symbolsLike:(id)arg1 rootPath:(id)arg2;
- (id)symbolsLike:(id)arg1;
- (id)symbolsLike:(id)arg1 rootPath:(id)arg2 context:(id)arg3;
- (id)symbolsForContext:(id)arg1 document:(id)arg2;
- (void)beginCompleteScan;
- (void)startIndexerAfterDelay;
- (void)startIndexer;
- (void)stopIndexerCancelOperations:(BOOL)arg1;
- (void)stopIndexer;
- (BOOL)shouldPublishItemAtPath:(id)arg1 context:(id)arg2;
- (BOOL)shouldPublishItemAtPath:(id)arg1;
- (void)setShouldPublish:(BOOL)arg1 itemAtPath:(id)arg2;
- (void)refreshPublishIgnoredListOnThread;
- (void)refreshPublishIgnoredListAsync;
- (void)setPublishState:(int)arg1 nodes:(id)arg2;
- (int)publishStateForNode:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)temporaryThreadSafeManagedObjectContext;
- (id)privateQueueManagedObjectContext;
- (id)threadSafeManagedObjectContext;
@property(readonly, retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
- (void)managedObjectContextDidSaveNotification:(id)arg1;
- (id)deleteDuplicateQueryResults:(id)arg1 context:(id)arg2;
- (id)deleteStaleMatches:(id)arg1 context:(id)arg2;
- (id)managedFileObjectWithPath:(id)arg1 insert:(BOOL)arg2 context:(id)arg3;
- (id)managedFileObjectForDocument:(id)arg1 insert:(BOOL)arg2 context:(id)arg3;
- (id)managedObjectContextForDocument:(id)arg1;
- (void)prunePublishItemsThread;
- (BOOL)isLocked;
- (void)unlock;
- (void)lock;
- (id)itemsToPublish;
- (void)deleteItemsInDirectory:(id)arg1 context:(id)arg2;
- (void)indexSymbolContexts:(id)arg1;
- (id)indexMetadataAtURL:(id)arg1 managedFileObject:(id)arg2 context:(id)arg3 shouldIndexSymbols:(char *)arg4 change:(id)arg5;
- (id)indexMetadataAtURL:(id)arg1 managedFileObject:(id)arg2 context:(id)arg3;
- (id)indexMetadataAtURL:(id)arg1 context:(id)arg2;
- (id)filterDuplicateSymbols:(id)arg1;
- (void)pruneItemsFromDirectory:(id)arg1;
- (void)addSymbolsFromContexts:(id)arg1;
- (BOOL)isIndexingSymbols;
- (BOOL)isIndexingFiles;
- (void)addSymbols:(id)arg1 indexFile:(id)arg2 context:(id)arg3;
- (void)addSymbols:(id)arg1 document:(id)arg2;
- (void)beginIndexingPaths;
- (void)processPendingPathThread:(id)arg1;
- (void)processPendingPaths;
- (void)watcher:(id)arg1 didRecieveChanges:(id)arg2;
- (void)dealloc;
- (id)initWithSite:(id)arg1;

@end

