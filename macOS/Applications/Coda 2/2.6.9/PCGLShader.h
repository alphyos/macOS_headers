//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableDictionary, NSMutableSet, NSOpenGLContext, NSOpenGLPixelFormat, NSString;

__attribute__((visibility("hidden")))
@interface PCGLShader : NSObject
{
    id <PCGLShaderDelegate> delegate;
    NSOpenGLContext *context;
    NSOpenGLPixelFormat *pixelFormat;
    struct __CVDisplayLink *displayLink;
    struct CGSize viewSize;
    NSMutableSet *childShaders;
    BOOL needsDepthBuffer;
    BOOL animating;
    long long animationFrameInterval;
    BOOL contextIsLocked;
    BOOL stopAnimation;
    BOOL cleanupPending;
    int framebufferWidth;
    int framebufferHeight;
    unsigned int defaultFramebuffer;
    unsigned int colorRenderbuffer;
    unsigned int program;
    NSMutableDictionary *uniformValues;
    NSMutableDictionary *textureList;
    NSMutableDictionary *newUniforms;
    BOOL resetTextures;
    NSString *vertexProgram;
    NSString *fragmentProgram;
}

@property(nonatomic) struct CGSize viewSize; // @synthesize viewSize;
@property(retain, nonatomic) NSOpenGLPixelFormat *pixelFormat; // @synthesize pixelFormat;
@property(nonatomic) BOOL needsDepthBuffer; // @synthesize needsDepthBuffer;
@property(readonly, nonatomic) BOOL isAnimating; // @synthesize isAnimating=animating;
@property(nonatomic) BOOL resetTextures; // @synthesize resetTextures;
@property(copy, nonatomic) NSString *fragmentProgram; // @synthesize fragmentProgram;
@property(copy, nonatomic) NSString *vertexProgram; // @synthesize vertexProgram;
@property(readonly, nonatomic) NSMutableSet *childShaders; // @synthesize childShaders;
@property(nonatomic) id <PCGLShaderDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NSOpenGLContext *context; // @synthesize context;
- (BOOL)validateProgram:(unsigned int)arg1;
- (BOOL)linkProgram:(unsigned int)arg1;
- (BOOL)compileShader:(unsigned int *)arg1 type:(unsigned int)arg2 program:(id)arg3;
- (BOOL)loadShaders;
- (struct NSImage *)renderedImageForSize:(struct CGSize)arg1;
- (id)renderedBitmapForSize:(struct CGSize)arg1;
- (id)_renderedBitmapForSize:(struct CGSize)arg1;
- (void)renderToTextureNamed:(id)arg1 inShader:(id)arg2 withSize:(struct CGSize)arg3;
- (void)setName:(id)arg1 forTexture:(int)arg2;
- (void)renderToContext;
- (void)drawToFramebuffer;
- (void)drawInParent;
- (struct NSImage *)imageFromBitmap:(char *)arg1 width:(int)arg2 height:(int)arg3;
- (void)deleteFramebuffer;
- (void)createFramebuffer;
- (void)addTextureFromImage:(struct NSImage *)arg1 withName:(id)arg2;
- (void)addTextureFromImage:(struct NSImage *)arg1 size:(struct CGSize)arg2 withName:(id)arg3 generateMipmap:(BOOL)arg4 flipped:(BOOL)arg5;
- (void)addTextureFromBytes:(const char *)arg1 width:(int)arg2 height:(int)arg3 withName:(id)arg4 generateMipmap:(BOOL)arg5;
- (void)bindTextureID:(int)arg1 toUniform:(id)arg2 usingTextureUnit:(int)arg3;
- (BOOL)hasTextureNamed:(id)arg1;
- (void)renameTexture:(id)arg1 to:(id)arg2;
- (void)deleteTextureNamed:(id)arg1;
- (void)deleteTexture:(unsigned int)arg1;
- (int)addTexture:(const char *)arg1 width:(int)arg2 height:(int)arg3 generateMipmap:(BOOL)arg4;
- (void)setUniform:(id)arg1 matrix4Value:(float [16])arg2;
- (void)setUniform:(id)arg1 matrix2Value:(float [4])arg2;
- (void)setUniform:(id)arg1 floatValues:(float)arg2:(float)arg3:(float)arg4:(float)arg5;
- (void)setUniform:(id)arg1 floatValues:(float)arg2:(float)arg3;
- (void)setUniform:(id)arg1 floatValue:(float)arg2;
- (void)setUniform:(id)arg1 intValue:(int)arg2;
- (CDStruct_8e9a1d15 *)addEntryForUniformNamed:(id)arg1;
- (void)bindTexturesIfNeeded;
- (void)bindTexturesWithUnit:(int *)arg1;
- (void)setUniformValues;
- (int)locationForUniform:(id)arg1;
- (void)cleanupDisplayLink;
- (void)stopAnimation;
- (void)startAnimation;
- (void)drawView;
- (void)dealloc;
- (id)initWithParentShader:(id)arg1;
- (id)init;

@end

