//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSTextView.h"

#import "NSTextStorageDelegate.h"

@class NSColor, NSScrollView, NSString, NoodleLineNumberView, SPCustomQuery, SPDatabaseDocument, SPMySQLConnection, SPNarrowDownCompletion, SPTablesList;

__attribute__((visibility("hidden")))
@interface SPTextView : NSTextView <NSTextStorageDelegate>
{
    SPDatabaseDocument *tableDocumentInstance;
    SPTablesList *tablesListInstance;
    SPCustomQuery *customQueryInstance;
    BOOL autoindentEnabled;
    BOOL autopairEnabled;
    BOOL autoindentIgnoresEnter;
    BOOL autouppercaseKeywordsEnabled;
    BOOL delBackwardsWasPressed;
    NoodleLineNumberView *lineNumberView;
    BOOL startListeningToBoundChanges;
    BOOL textBufferSizeIncreased;
    NSScrollView *scrollView;
    SPNarrowDownCompletion *completionPopup;
    SPMySQLConnection *mySQLConnection;
    long long mySQLmajorVersion;
    long long snippetControlArray[20][3];
    long long snippetMirroredControlArray[20][3];
    long long snippetControlCounter;
    long long snippetControlMax;
    long long currentSnippetIndex;
    long long mirroredCounter;
    BOOL snippetWasJustInserted;
    BOOL isProcessingMirroredSnippets;
    BOOL completionIsOpen;
    BOOL completionWasReinvokedAutomatically;
    BOOL completionWasRefreshed;
    BOOL completionFuzzyMode;
    unsigned long long completionParseRangeLocation;
    NSColor *queryHiliteColor;
    NSColor *queryEditorBackgroundColor;
    NSColor *commentColor;
    NSColor *quoteColor;
    NSColor *keywordColor;
    NSColor *backtickColor;
    NSColor *numericColor;
    NSColor *variableColor;
    NSColor *otherTextColor;
    struct _NSRange queryRange;
    BOOL shouldHiliteQuery;
}

@property SPMySQLConnection *mySQLConnection; // @synthesize mySQLConnection;
@property SPCustomQuery *customQueryInstance; // @synthesize customQueryInstance;
@property SPTablesList *tablesListInstance; // @synthesize tablesListInstance;
@property SPDatabaseDocument *tableDocumentInstance; // @synthesize tableDocumentInstance;
@property BOOL completionWasReinvokedAutomatically; // @synthesize completionWasReinvokedAutomatically;
@property BOOL completionIsOpen; // @synthesize completionIsOpen;
@property BOOL shouldHiliteQuery; // @synthesize shouldHiliteQuery;
@property struct _NSRange queryRange; // @synthesize queryRange;
@property(retain) NSColor *otherTextColor; // @synthesize otherTextColor;
@property(retain) NSColor *variableColor; // @synthesize variableColor;
@property(retain) NSColor *numericColor; // @synthesize numericColor;
@property(retain) NSColor *backtickColor; // @synthesize backtickColor;
@property(retain) NSColor *keywordColor; // @synthesize keywordColor;
@property(retain) NSColor *quoteColor; // @synthesize quoteColor;
@property(retain) NSColor *commentColor; // @synthesize commentColor;
@property(retain) NSColor *queryEditorBackgroundColor; // @synthesize queryEditorBackgroundColor;
@property(retain) NSColor *queryHiliteColor; // @synthesize queryHiliteColor;
- (void)dealloc;
- (void)changeFont:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)insertFileContentOfFile:(id)arg1;
- (unsigned long long)characterIndexOfPoint:(struct CGPoint)arg1;
- (void)dragAlertSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)validModesForFontPanel:(id)arg1;
- (void)textStorageDidProcessEditing:(id)arg1;
- (void)boundsDidChangeNotification:(id)arg1;
- (struct _NSRange)selectionRangeForProposedRange:(struct _NSRange)arg1 granularity:(unsigned long long)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (id)roundedBezierPathAroundRange:(struct _NSRange)arg1;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;
- (void)setTabStops;
- (void)doSyntaxHighlighting;
- (void)autoHelp;
- (BOOL)autouppercaseKeywords;
- (void)setAutouppercaseKeywords:(BOOL)arg1;
- (BOOL)autopair;
- (void)setAutopair:(BOOL)arg1;
- (BOOL)autoindentIgnoresEnter;
- (void)setAutoindentIgnoresEnter:(BOOL)arg1;
- (BOOL)autoindent;
- (void)setAutoindent:(BOOL)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)deleteBackward:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)isSnippetMode;
- (BOOL)checkForCaretInsideSnippet;
- (void)insertAsSnippet:(id)arg1 atRange:(struct _NSRange)arg2;
- (void)selectCurrentSnippet;
- (void)processMirroredSnippets;
- (void)showCompletionListFor:(id)arg1 atRange:(struct _NSRange)arg2 fuzzySearch:(BOOL)arg3;
- (void)endSnippetSession;
- (BOOL)shiftSelectionLeft;
- (BOOL)shiftSelectionRight;
- (void)selectLineNumber:(unsigned long long)arg1 ignoreLeadingNewLines:(BOOL)arg2;
- (void)selectCurrentQuery;
- (void)copyAsRTF;
- (BOOL)wrapSelectionWithPrefix:(id)arg1 suffix:(id)arg2;
- (void)printOperationDidRun:(id)arg1 success:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)printDocument:(id)arg1;
- (BOOL)areAdjacentCharsLinked;
- (BOOL)isCaretAtIndentPositionIgnoreLineStart:(BOOL)arg1;
- (BOOL)isCaretAdjacentToAlphanumCharWithInsertionOf:(unsigned short)arg1;
- (BOOL)isNextCharMarkedBy:(id)arg1 withValue:(id)arg2;
- (unsigned long long)getLineNumberForCharacterIndex:(unsigned long long)arg1;
- (void)doCompletionByUsingSpellChecker:(BOOL)arg1 fuzzyMode:(BOOL)arg2 autoCompleteMode:(BOOL)arg3;
- (void)refreshCompletion;
- (void)doAutoCompletion;
- (id)suggestionsForSQLCompletionWith:(id)arg1 dictMode:(BOOL)arg2 browseMode:(BOOL)arg3 withTableName:(id)arg4 withDbName:(id)arg5;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setConnection:(id)arg1 withVersion:(long long)arg2;
- (void)awakeFromNib;
- (void)_positionCompletionPopup:(id)arg1 relativeToTextAtLocation:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

