//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSWindowController.h"

#import "DragSplitResizeDelegateProtocol.h"
#import "NSOpenSavePanelDelegate.h"
#import "NSSplitViewDelegate.h"
#import "NSToolbarDelegate.h"
#import "NSWindowDelegate.h"
#import "PCPopoverDelegateProtocol.h"
#import "PCSheetControllerDelegate.h"
#import "PCSheetControllerInterfaceDelegate.h"
#import "PCTabBarDelegate.h"
#import "QuickOpenControllerDelegate.h"

@class ClipsViewController, CodaSite, CodaViewController, DocumentTabBar, DocumentsViewController, ESImageButton, FileBrowserViewController, FindFilesController, HomeScreenController, MiniFileBrowserController, MiniMapControllerViewController, NSArray, NSMapTable, NSMenu, NSMutableArray, NSScriptCommand, NSString, NSTimer, NSView, NewSplitViewController, NewTabButton, OperationsInProgressSheetController, PCPopover, PCRemoteFileManager, PCSplitView, PCTitleBarTrialView, PlacesController, PopoverFileBrowserViewController, PublishController, QueueController, QuickOpenController, ReferenceController, SCMController, SharedFileBrowserController, SidebarTabBar, SidebarViewController, SitesTabButton, SitesViewController, SymbolsController, ValidationController;

__attribute__((visibility("hidden")))
@interface CodaWindowController : NSWindowController <NSWindowDelegate, NSSplitViewDelegate, NSOpenSavePanelDelegate, NSToolbarDelegate, PCSheetControllerDelegate, PCSheetControllerInterfaceDelegate, PCTabBarDelegate, QuickOpenControllerDelegate, DragSplitResizeDelegateProtocol, PCPopoverDelegateProtocol>
{
    DocumentTabBar *iTabBar;
    NSMenu *oFileBrowserContextualMenu;
    NSMenu *oTabBarNewTabContextualMenu;
    DocumentTabBar *iSitesAndFilesTabBar;
    PCSplitView *oSidebarSplitView;
    SidebarTabBar *oSidebarTabBar;
    NewTabButton *iNewTabButton;
    NSView *iMainSidebarView;
    ESImageButton *iSecureButton;
    CodaSite *iSite;
    SitesViewController *iSitesController;
    FileBrowserViewController *iFileBrowserController;
    DocumentsViewController *iDocumentsController;
    CodaViewController *iMainViewController;
    MiniFileBrowserController *iMiniFileBrowserController;
    ClipsViewController *iClipsViewController;
    SymbolsController *iSymbolsController;
    ValidationController *iValidationController;
    ReferenceController *iReferenceController;
    PublishController *iPublishController;
    SCMController *iSCMController;
    PlacesController *iPlacesController;
    FindFilesController *iFindFilesController;
    SharedFileBrowserController *iSharedFileBrowserController;
    HomeScreenController *iHomeScreenController;
    MiniMapControllerViewController *iMiniMapController;
    SidebarViewController *iSidebarViewController;
    NSMapTable *iIdentifierToSidebarControllerMap;
    NSMutableArray *iDockSidebarControllers;
    NSMutableArray *iSidebarControllers;
    QueueController *iQueueController;
    PCPopover *iNewTabPopover;
    QuickOpenController *iQuickOpenController;
    PopoverFileBrowserViewController *iPopoverFileBrowserController;
    PCPopover *iFileBrowserPopover;
    NewSplitViewController *iPopoverNewSplitController;
    PCPopover *iNewSplitPopover;
    PCTitleBarTrialView *iCountdownView;
    BOOL shouldDiscardEditorChanges;
    NSTimer *iOperationsInProgressTimer;
    OperationsInProgressSheetController *iOperationsInProgressPanel;
    BOOL iDedicatedPreviewWindow;
    BOOL iRestoringState;
    BOOL iShouldShowSidebar;
    BOOL iFindActionShouldTargetFiles;
    BOOL iClosingWindow;
    NSScriptCommand *iConnectScriptCommand;
}

+ (void)showUnsupportedProtocolAlertForSite:(id)arg1;
+ (BOOL)hasShownOneWindow;
+ (id)windowControllers;
+ (void)makeDocumentFrontmost:(id)arg1;
+ (id)keyPathsForValuesAffectingRemoteFileManager;
+ (id)frontmostControllerWithUnsavedChanges;
+ (id)frontmostControllerWithSite:(id)arg1;
+ (id)frontmostControllerWithDocument:(id)arg1;
+ (id)frontmostController;
+ (id)deminiaturizedFrontmostController;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (BOOL)automaticallyNotifiesObserversOfSidebarVisible;
@property(getter=isClosingWindow) BOOL closingWindow; // @synthesize closingWindow=iClosingWindow;
@property(readonly) HomeScreenController *homeScreenController; // @synthesize homeScreenController=iHomeScreenController;
@property(readonly) NSArray *dockSidebarControllers; // @synthesize dockSidebarControllers=iDockSidebarControllers;
@property BOOL findActionShouldTargetFiles; // @synthesize findActionShouldTargetFiles=iFindActionShouldTargetFiles;
@property(readonly) NSMenu *tabBarNewTabContextualMenu; // @synthesize tabBarNewTabContextualMenu=oTabBarNewTabContextualMenu;
@property(readonly) DocumentTabBar *tabBar; // @synthesize tabBar=iTabBar;
@property(retain) NSScriptCommand *connectScriptCommand; // @synthesize connectScriptCommand=iConnectScriptCommand;
@property(nonatomic) CodaViewController *mainViewController; // @synthesize mainViewController=iMainViewController;
@property(getter=isRestoringState) BOOL restoringState; // @synthesize restoringState=iRestoringState;
@property(retain) PCTitleBarTrialView *countdownView; // @synthesize countdownView=iCountdownView;
@property(readonly) QueueController *queueController; // @synthesize queueController=iQueueController;
@property(retain, nonatomic) CodaSite *site; // @synthesize site=iSite;
@property(readonly) SidebarTabBar *sidebarTabBar; // @synthesize sidebarTabBar=oSidebarTabBar;
@property(readonly) NSArray *sidebarControllers; // @synthesize sidebarControllers=iSidebarControllers;
@property(readonly) SCMController *SCMController; // @synthesize SCMController=iSCMController;
@property(nonatomic) SidebarViewController *sidebarViewController; // @synthesize sidebarViewController=iSidebarViewController;
@property(readonly) PublishController *publishController; // @synthesize publishController=iPublishController;
@property(getter=isDedicatedPreviewWindow) BOOL dedicatedPreviewWindow; // @synthesize dedicatedPreviewWindow=iDedicatedPreviewWindow;
@property(readonly) ValidationController *validationController; // @synthesize validationController=iValidationController;
@property(readonly) MiniFileBrowserController *miniFileBrowserController; // @synthesize miniFileBrowserController=iMiniFileBrowserController;
@property(readonly) FileBrowserViewController *fileBrowserController; // @synthesize fileBrowserController=iFileBrowserController;
@property(readonly) DocumentsViewController *documentsController; // @synthesize documentsController=iDocumentsController;
@property(readonly) SitesViewController *sitesController; // @synthesize sitesController=iSitesController;
@property(readonly) ClipsViewController *clipsViewController; // @synthesize clipsViewController=iClipsViewController;
- (void)openURLRequest:(id)arg1;
- (void)openTerminalSessionToSite:(id)arg1;
- (void)showSidebarView:(id)arg1;
- (id)remotePath;
- (void)setRemotePath:(id)arg1;
- (id)localPath;
- (void)setLocalPath:(id)arg1;
- (id)tabController;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)windowTitleForDocumentDisplayName:(id)arg1;
- (void)synchronizeWindowTitleWithDocumentName;
- (BOOL)windowShouldClose:(id)arg1;
- (id)windowForSheetController:(id)arg1;
- (void)loadSidebarController:(id *)arg1 withClass:(Class)arg2 nibName:(id)arg3;
- (void)loadPluginSidebarControllers;
- (void)windowDidLoad;
- (void)windowDidBecomeKey:(id)arg1;
- (id)windowConfiguration;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)viewInNewPreviewWindow:(id)arg1;
- (void)viewInExternalBrowser:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)uploadDocument:(id)arg1;
- (void)downloadDocument:(id)arg1;
- (void)updateCountdownView;
- (void)toggleWebPreview:(id)arg1;
- (void)toggleSidebarVisible:(id)arg1;
- (BOOL)showHiddenFiles;
- (void)toolbarHeightFrameChangeNotification:(id)arg1;
- (void)toggleHiddenFiles:(id)arg1;
- (void)tabBar:(id)arg1 willDisplayTabToolTip:(id)arg2 forTabAtIndex:(long long)arg3;
- (BOOL)tabBar:(id)arg1 shouldDisplayTabToolTipAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 willSwitchToTabAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 willLayoutTabButton:(id)arg2 atIndex:(long long)arg3;
- (id)tabBar:(id)arg1 titleForTabAtIndex:(long long)arg2;
- (BOOL)tabBar:(id)arg1 shouldCloseTabAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 didSwitchToTabAtIndex:(long long)arg2;
- (void)tabBar:(id)arg1 didCloseTabAtIndex:(long long)arg2;
- (id)tabBar:(id)arg1 contextualMenuForTabAtIndex:(long long)arg2 defaultMenu:(id)arg3;
- (void)saveCustomSidebarPreferences;
- (void)loadCustomSidebarPreferences;
- (BOOL)tabBar:(id)arg1 acceptDrop:(id)arg2 tabAtIndex:(long long)arg3;
- (void)slidingViewsBar:(id)arg1 movedViewFromIndex:(long long)arg2 toIndex:(long long)arg3;
- (long long)numberOfTabsInTabBar:(id)arg1;
- (id)splitDocumentViewController:(id)arg1 vertically:(BOOL)arg2 document:(id)arg3 displayViewerType:(int)arg4;
- (id)splitDocumentViewController:(id)arg1 vertically:(BOOL)arg2 clone:(BOOL)arg3;
- (void)splitVertically:(id)arg1;
- (void)splitHorizontally:(id)arg1;
- (double)sidebarSplitPercentage;
@property(readonly, nonatomic) SitesTabButton *sitesTabButton;
- (void)viewTransitionDidFinish:(id)arg1;
- (id)sidebarViewControllerWithIdentifier:(id)arg1;
@property(nonatomic) double sidebarSplitWidth;
- (struct CGRect)sidebarContentRect;
- (void)showTranscript:(id)arg1;
- (void)showSharedDocuments;
- (void)showNewSplitPopoverOverView:(id)arg1 documentVieController:(id)arg2;
- (void)showFileBrowserPopoverForNode:(id)arg1 documentViewController:(id)arg2;
- (BOOL)shouldDiscardEditorChanges;
- (BOOL)shouldCloseWindowWithCommandW;
- (void)setWindowConfiguration:(id)arg1;
- (void)changeTabBarDisplayMode:(id)arg1;
- (void)resizeNewTabViewForFullScreen:(BOOL)arg1;
- (void)setTabBarDisplayMode:(unsigned long long)arg1 titleBarHeight:(long long)arg2;
- (void)setTabBarDisplayMode:(unsigned long long)arg1 useDefaultHeight:(BOOL)arg2;
- (void)setTabBarDisplayMode:(unsigned long long)arg1;
- (id)windowForSplitResizeView:(id)arg1;
- (double)dragSplitResizeView:(id)arg1 resizeToHeight:(double)arg2;
- (void)setSidebarSplitPercentage:(double)arg1;
- (void)setSidebarViewController:(id)arg1 visibleInDock:(BOOL)arg2;
- (long long)sidebarPosition;
- (void)setSidebarPosition:(long long)arg1;
- (void)setSitesVisible:(BOOL)arg1;
- (void)siteOpenAlertSheet:(id)arg1 didEndWithReturnCode:(long long)arg2;
- (void)siteOpenAlertSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)beginLoadingSite:(id)arg1;
- (BOOL)beginEditingNodes:(id)arg1 inDocumentViewController:(id)arg2;
- (void)setShouldDiscardEditorChanges:(BOOL)arg1;
- (void)setListensForKeyLoopNotifications:(BOOL)arg1;
- (void)setFileBrowserVisible:(BOOL)arg1;
- (void)setDocumentsVisible:(BOOL)arg1;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)setDocument:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
- (void)saveWindowConfigurationToSite:(id)arg1;
- (void)setSidebarVisible:(BOOL)arg1 animate:(BOOL)arg2;
- (void)setSidebarVisible:(BOOL)arg1;
- (id)secureButtonImagesWhenShowingPanel:(BOOL)arg1;
- (void)saveDocumentEditorAs:(id)arg1;
- (void)saveDocumentEditor:(id)arg1;
- (void)saveAndPublishAllDocuments:(id)arg1;
- (void)saveAndPublishDocument:(id)arg1;
- (void)saveAllDocuments:(id)arg1;
- (void)saveActionDidEnd:(id)arg1 wasCancelled:(BOOL)arg2;
- (void)revertDocumentToSaved:(id)arg1;
- (void)revealTabFileInFinder:(id)arg1;
- (void)revealTabFileInSidebarFileBrowser:(id)arg1;
- (void)revealTabFileInFileBrowser:(id)arg1;
- (void)resetWindowConfiguration;
- (void)removeFromSidebarDock:(id)arg1;
@property(readonly) PCRemoteFileManager *remoteFileManager;
- (void)recalculateKeyViewLoop;
- (void)rebuildSiteIndex:(id)arg1;
- (void)sheetControllerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)publishSite:(id)arg1;
- (void)publishDocument:(id)arg1;
- (void)processEditedDocuments:(id)arg1 contextInfo:(id)arg2;
- (void)printDocument:(id)arg1;
- (void)performFindBannerAction:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)newSplit:(id)arg1;
- (void)showOpenQuicklyFromRect:(struct CGRect)arg1 ofView:(id)arg2;
- (void)openQuickly:(id)arg1;
- (void)openNodesInSplits:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)setVisualEffectState:(long long)arg1;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)showNewTabChooser:(id)arg1;
- (void)showFindInFiles:(id)arg1;
- (void)showCertificatePanel:(id)arg1;
- (id)newTabWithViewType:(int)arg1;
- (void)newTab:(id)arg1;
- (void)moveTabFromIndex:(int)arg1 toIndex:(int)arg2;
- (void)lookupReferenceSymbol:(id)arg1 mode:(id)arg2;
- (BOOL)isSitesVisible;
- (BOOL)isSidebarVisible;
- (BOOL)isSidebarViewControllerInDock:(id)arg1;
- (BOOL)isFileBrowserVisible;
- (BOOL)isDocumentsVisible;
- (void)hideFindBanner:(id)arg1;
- (void)gotoSiteRemotePath:(id)arg1;
- (void)gotoSiteLocalPath:(id)arg1;
- (void)gotoFolderInFinder:(id)arg1;
- (void)gotoFolderInSidebarFileBrowser:(id)arg1;
- (void)gotoFolderInFileBrowser:(id)arg1;
- (id)frontmostDocumentOfType:(int)arg1;
- (id)documentViewControllerOfType:(int)arg1;
- (id)documentViewController;
- (void)firstResponderDidChange:(id)arg1;
- (id)fileBrowserContextualMenuTemplate;
- (void)opsInProgressTimerDidFire:(id)arg1;
- (void)emailSupportTranscript:(id)arg1;
- (id)ownedDocuments;
- (id)editedDocuments;
- (id)documents;
- (void)displayTerminalCloseSheetForRunningChildren:(id)arg1 inTab:(int)arg2;
- (void)displaySaveSheetForDocuments:(id)arg1 saveAction:(id)arg2 userData:(id)arg3;
- (void)switchMainViewMode:(id)arg1;
- (void)importTransmitFavorites:(id)arg1;
- (void)customizeSidebarDock:(id)arg1;
- (id)credentials;
- (void)createNewTextFileWithMode:(id)arg1;
- (void)connectToRemoteHost:(id)arg1;
- (void)closeTabAtIndex:(int)arg1;
- (void)closeSplit:(id)arg1;
- (void)closeOpenSite:(id)arg1;
- (void)closeEditor:(id)arg1;
- (void)clearPublishQueue:(id)arg1;
- (void)cleanUpSitesParentItem:(id)arg1;
- (void)changeStringEncoding:(id)arg1;
- (void)cachePendingDocuments;
- (void)dealloc;
- (id)initWithWindowNibName:(id)arg1;
- (void)restoreWindowStateWithCoder:(id)arg1 restoreDocuments:(BOOL)arg2;
- (void)encodeWindowStateWithCoder:(id)arg1 encodeDocuments:(BOOL)arg2;
- (void)invalidateRestorableState;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)splitViewDidEndLiveResize:(id)arg1;
- (void)splitView:(id)arg1 drawDividerInRect:(struct CGRect)arg2;
- (void)splitView:(id)arg1 didCompleteAnimationOfSubviewAt:(unsigned long long)arg2;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(int)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(int)arg3;
- (struct CGRect)splitView:(id)arg1 additionalEffectiveRectOfDividerAtIndex:(long long)arg2;
- (id)documentDialog;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

