//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CodaViewController.h"

#import "NSAnimationDelegate.h"
#import "NSOutlineViewDataSource.h"
#import "NSOutlineViewDelegate.h"
#import "NSSplitViewDelegate.h"
#import "NSTextViewDelegate.h"
#import "NSTouchBarDelegate.h"
#import "NSWindowDelegate.h"
#import "PCFSOperationInterfaceDelegate.h"
#import "PCGridViewDelegate.h"
#import "PCSheetControllerDelegate.h"
#import "PCSheetControllerInterfaceDelegate.h"
#import "PCWebpagePreviewFetcherDelegate.h"
#import "SSHIdentityFileHelperDelegate.h"
#import "TSSearchClient.h"

@class CodaSite, FirstLaunchViewController, NSArray, NSButton, NSCache, NSImageView, NSMapTable, NSMenu, NSMutableArray, NSPopUpButton, NSProgressIndicator, NSSearchField, NSSecureTextField, NSSortDescriptor, NSString, NSTabView, NSTextField, NSView, NSViewAnimation, OperationsInProgressSheetController, PCAccessoryWindow, PCActionPopUpButton, PCBorderedView, PCDarkSpotlightView, PCDisablingTextField, PCExpiredView, PCGradientButton, PCGridView, PCLinkTextView, PCOverlayView, PCRemoteConnectOperation, PCSplitView, PCSwitch, PCTexturedSlider, PCTimer, PCTransitionTabView, SCMOperation, SCMRepository, SSHIdentityFileHelper, SiteEditTabBackgroundView, SitesListDetailView, SitesOutlineView, TSBottomBarView, TSShadowView;

__attribute__((visibility("hidden")))
@interface SitesViewController : CodaViewController <TSSearchClient, NSAnimationDelegate, PCWebpagePreviewFetcherDelegate, NSTextViewDelegate, PCGridViewDelegate, PCSheetControllerDelegate, PCSheetControllerInterfaceDelegate, NSWindowDelegate, NSOutlineViewDelegate, NSOutlineViewDataSource, PCFSOperationInterfaceDelegate, SSHIdentityFileHelperDelegate, NSSplitViewDelegate, NSTouchBarDelegate>
{
    NSButton *iAddSiteButton;
    PCActionPopUpButton *iActionPopupButton;
    PCTexturedSlider *iThumbnailSlider;
    NSButton *iListButton;
    NSButton *iLargeIconButton;
    TSBottomBarView *bottomBarView;
    PCGridView *iGridView;
    PCOverlayView *iExpiredOverlayView;
    PCDarkSpotlightView *iSitesBackgroundView;
    NSSearchField *iSiteGridFilterField;
    PCSplitView *iListSplitView;
    SitesOutlineView *iSiteOutlineView;
    SitesListDetailView *iSitesListDetailView;
    NSSortDescriptor *iSiteListViewSortDescriptor;
    NSArray *iSortedSiteList;
    NSMapTable *iSortedToUnsortedSitesTable;
    NSArray *iDraggedItems;
    NSView *iNoSiteView;
    NSView *iNoSiteAddButton;
    NSButton *iImportFavoritesButton;
    NSButton *iSiteButton;
    NSButton *iServerButton;
    NSButton *iTerminalButton;
    NSButton *iSourceButton;
    NSButton *iDatabaseButton;
    SiteEditTabBackgroundView *iToolbarView;
    PCTransitionTabView *iSiteTabView;
    TSShadowView *iSiteEditView;
    PCBorderedView *iSiteEditContentView;
    NSButton *iEditCancelButton;
    NSButton *iEditSaveButton;
    NSTextField *iSiteNameField;
    NSTextField *iSiteURLField;
    NSTextField *iSiteLocalURLField;
    PCDisablingTextField *iAddressLabel;
    NSTextField *iAddressField;
    PCDisablingTextField *iUsernameLabel;
    NSTextField *iUsernameField;
    PCDisablingTextField *iPasswordLabel;
    NSTextField *iPasswordField;
    PCDisablingTextField *iProtocolLabel;
    NSPopUpButton *iProtocolPopup;
    NSTextField *iPortField;
    NSButton *iUsePassiveModeCheckbox;
    NSButton *iPromptForPasswordCheckbox;
    NSTextField *iNoEditPrompt;
    NSButton *iCloseSiteButton;
    NSTextField *iLocalPathField;
    NSTextField *iRemotePathField;
    NSButton *iSiteSetPathButton;
    NSButton *iPublishButton;
    NSButton *iIndexFilesButton;
    NSButton *iIndexMatchAllCompletionsButton;
    NSTextField *iSSHHostField;
    NSTextField *iSSHPortField;
    NSTextField *iSSHUsernameField;
    NSSecureTextField *iSSHPasswordField;
    PCGradientButton *iKeyButton;
    SSHIdentityFileHelper *iIdentityHelper;
    NSButton *iSVNCheckoutButton;
    NSButton *iGitCloneButton;
    NSButton *iGitInitializeEmptyButton;
    NSView *iSCMLoginView;
    SCMRepository *iSCMEditSiteRepository;
    PCSwitch *iSVNEnabledSwitch;
    NSTextField *iSVNOnTextField;
    NSTextField *iSVNHostField;
    NSTextField *iSVNUsernameField;
    NSSecureTextField *iSVNPasswordField;
    PCSwitch *iGitEnabledSwitch;
    NSTextField *iGitOnTextField;
    NSViewAnimation *iSCMEnabledButtonAnimation;
    PCLinkTextView *iSCMStatusTextField;
    NSTabView *iSCMTabView;
    NSView *iDatabaseTabView;
    NSTextField *iSQLDatabaseField;
    NSPopUpButton *iSQLDatabaseTypePopUp;
    NSTextField *iSQLHostField;
    NSTextField *iSQLHostFieldLabel;
    NSTextField *iSQLPasswordField;
    NSTextField *iSQLPortField;
    NSTextField *iSQLUsernameField;
    NSTextField *iSQLSSHHostField;
    NSTextField *iSQLSSHPasswordField;
    NSTextField *iSQLSSHPortField;
    NSTextField *iSQLSSHUsernameField;
    NSButton *iSQLLocalSQLSocketURLSetButton;
    BOOL iGridViewLayoutIsSet;
    PCExpiredView *iNagView;
    NSMenu *iMenu;
    PCAccessoryWindow *iSiteEditWindow;
    CodaSite *iEditSite;
    CodaSite *iOpenSite;
    NSMutableArray *iFilteredSiteList;
    NSString *iPreviousSearchString;
    NSCache *hiResSiteImageCache;
    struct CGSize iSiteEditViewMaxSize;
    OperationsInProgressSheetController *iInProgressSheetController;
    SCMOperation *iCheckoutOperation;
    PCTimer *_connectionValidationTimer;
    PCRemoteConnectOperation *_testConnectionOperation;
    NSProgressIndicator *_connectionTestSpinner;
    NSImageView *_connectionTestStatusImageView;
    FirstLaunchViewController *iFirstLaunchController;
}

+ (id)keyPathsForValuesAffectingGitRemotes;
+ (void)initialize;
@property(retain, nonatomic) PCRemoteConnectOperation *testConnectionOperation; // @synthesize testConnectionOperation=_testConnectionOperation;
@property(readonly, retain) PCAccessoryWindow *siteEditWindow; // @synthesize siteEditWindow=iSiteEditWindow;
@property(retain) CodaSite *editSite; // @synthesize editSite=iEditSite;
@property(retain, nonatomic) NSArray *draggedItems; // @synthesize draggedItems=iDraggedItems;
@property(retain, nonatomic) NSMapTable *sortedToUnsortedSitesTable; // @synthesize sortedToUnsortedSitesTable=iSortedToUnsortedSitesTable;
@property(retain, nonatomic) NSArray *sortedSiteList; // @synthesize sortedSiteList=iSortedSiteList;
@property(retain, nonatomic) NSSortDescriptor *siteListViewSortDescriptor; // @synthesize siteListViewSortDescriptor=iSiteListViewSortDescriptor;
@property(retain) SCMRepository *SCMEditSiteRepository; // @synthesize SCMEditSiteRepository=iSCMEditSiteRepository;
- (void)outlineView:(id)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 keyDown:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (id)outlineView:(id)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(id)arg4;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)sortNestedSiteList;
- (id)sortedListFromGroupSite:(id)arg1;
- (void)sortSiteListMenuAction:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)gridView:(id)arg1 itemClicked:(id)arg2 part:(int)arg3;
- (struct CGImage *)gridView:(id)arg1 groupTileImageForItem:(id)arg2;
- (id)emptyGroupLayerForGridView:(id)arg1;
- (id)gridView:(id)arg1 createGroupFromItem:(id)arg2 withItems:(id)arg3;
- (id)gridView:(id)arg1 groupLayerForItem:(id)arg2;
- (BOOL)gridView:(id)arg1 shouldAllowItemsToBeGrouped:(id)arg2 ontoItem:(id)arg3;
- (BOOL)gridView:(id)arg1 renameItem:(id)arg2 to:(id)arg3;
- (void)gridView:(id)arg1 didEditItem:(id)arg2;
- (BOOL)gridView:(id)arg1 shouldEditItem:(id)arg2 style:(int)arg3;
- (void)gridView:(id)arg1 didReorderItems:(id)arg2 fromGroup:(id)arg3 toGroup:(id)arg4 atIndex:(long long)arg5;
- (BOOL)gridView:(id)arg1 shouldAllowDraggingItems:(id)arg2;
- (void)gridViewSelectionDidChange:(id)arg1;
- (void)gridViewWillEndDragging:(id)arg1;
- (void)gridViewWillBeginDragging:(id)arg1;
- (id)gridView:(id)arg1 layerForItem:(id)arg2;
- (void)setThumbnailSliderEnabled:(BOOL)arg1;
- (void)setControlsEnabled:(BOOL)arg1;
- (void)firstLaunchScreenDidClose:(id)arg1;
- (void)setFirstLaunchViewVisible:(BOOL)arg1;
- (BOOL)isFirstLaunchVisible;
- (void)setNewSiteHintVisible:(BOOL)arg1;
- (long long)gridView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)gridView:(id)arg1 keyDown:(id)arg2;
- (BOOL)gridView:(id)arg1 isItemExpandable:(id)arg2;
- (id)gridView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)gridViewAction:(id)arg1;
- (void)refreshListDetailViewWithSpinner:(BOOL)arg1;
- (id)windowForSheetController:(id)arg1;
- (void)accessoryWindowShouldClose:(id)arg1;
- (id)webpagePreviewFetcherWindowForSheet:(id)arg1;
- (void)webpagePreviewFetcher:(id)arg1 didFetchPreview:(struct CGImage *)arg2 error:(id)arg3;
- (void)webpagePreviewFetcherWillFetchPreview:(id)arg1;
- (void)showSelectedSitesInFinder:(id)arg1;
- (void)loadPreviewForSite:(id)arg1 withSpinner:(BOOL)arg2 supressingAuthenticationDialogs:(BOOL)arg3;
- (void)loadPreviewForSite:(id)arg1 withSpinner:(BOOL)arg2;
- (void)focusFindField:(id)arg1;
- (void)editSiteAction:(id)arg1;
- (void)duplicate:(id)arg1;
- (void)addSite:(id)arg1;
- (void)operationDidEnd:(id)arg1 error:(id)arg2;
- (id)editingCredentials;
- (void)testConnectionCredentials:(id)arg1;
- (void)stopConnectionValidationTimer;
- (void)startConnectionValidationTimer;
- (void)controlTextDidChange:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)editSheetOk:(id)arg1;
- (void)editSheetCancel:(id)arg1;
- (id)windowControllerForEditSite:(id)arg1;
- (void)validateURLField:(id)arg1;
- (void)validateSCMControls;
- (void)validateIndexerControls;
- (BOOL)validateMenuItem:(id)arg1;
- (void)validatePublishChanges:(id)arg1;
- (void)validateEditSiteButton;
- (BOOL)textView:(id)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)sortSitesInSiteGroup:(id)arg1 usingDescriptors:(id)arg2;
- (void)cleanupSitesInGroup:(id)arg1;
- (void)cleanUpSites:(id)arg1;
- (void)configureArrangeOrCleanUpMenuItem:(id)arg1;
- (void)sliderDragged:(id)arg1;
- (void)openSiteInNewWindow:(id)arg1;
- (void)openSelectedSiteIfPossible:(id)arg1;
- (void)collapseSelectedSite:(id)arg1;
- (void)openSelectedSite:(id)arg1;
- (void)toggleIndexFiles:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)sliderLargeButtonPressed:(id)arg1;
- (void)sliderSmallButtonPressed:(id)arg1;
@property(retain) CodaSite *selectedSite;
- (id)selectedItems;
- (id)searchPlaceholder;
- (id)searchLabel;
- (void)search:(id)arg1;
- (BOOL)sitesAreCurrentlyBeingFiltered;
- (void)updateSQLFields;
- (void)scmSectionViewWillHideNotification:(id)arg1;
- (void)scmSectionViewDidShowNotification:(id)arg1;
- (void)SCMOperationDidEnd:(id)arg1 result:(id)arg2 error:(id)arg3;
- (void)scmInitializeWorkingCopy:(id)arg1;
- (BOOL)shouldUseIncrementalSearch;
- (void)setSCMEnabled:(id)arg1;
- (void)refreshSiteAppearance:(id)arg1;
- (void)reloadSites;
- (void)setGridFormat:(BOOL)arg1;
- (void)contentViewResized:(id)arg1;
- (void)registerCoda:(id)arg1;
- (void)refreshThumbnailsForSites:(id)arg1;
- (void)refreshSiteThumbnail:(id)arg1;
- (void)positionSiteEditWindow;
- (void)protocolPopupChanged:(id)arg1;
- (void)promptForPasswordChanged:(id)arg1;
- (id)previousSearchString;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setPromptsForPassword:(BOOL)arg1;
- (id)siteListTableColumnForSortKey:(id)arg1;
- (id)siteListTableColumnForSortTag:(int)arg1;
- (void)openPurchasePage:(id)arg1;
- (id)initialFirstResponder;
- (void)localPathChanged:(id)arg1;
@property(readonly, retain) NSView *lastKeyView;
- (BOOL)isSitesListViewVisible;
- (BOOL)isLoadingPreviewForSite:(id)arg1;
- (void)importFavorites:(id)arg1;
- (struct CGImage *)hiResPreviewImageForSite:(id)arg1;
- (id)helper:(id)arg1 privateKeyFromData:(id)arg2 requiresPassphrase:(char *)arg3;
- (void)helperRemovedKey:(id)arg1;
- (void)helper:(id)arg1 didImportIdentityFileAtPath:(id)arg2;
- (BOOL)handleSiteView:(id)arg1 keyDown:(id)arg2;
@property(readonly, retain) PCGridView *gridView;
- (void)getInfo:(id)arg1;
@property(readonly, retain) NSView *firstKeyView;
- (void)filterSites:(id)arg1;
- (void)zoomInEditView;
- (void)fadeAwayEditView:(id)arg1;
- (void)flipAwayEditView:(id)arg1;
- (void)removeEditWindow;
- (void)runEditWindowModal;
- (void)addEditWindow;
- (void)flipInEditView;
- (id)newFlipOverlayForSite:(id)arg1;
- (void)siteEditAlertSheet:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)editSite:(id)arg1;
- (void)editSelectedSite:(id)arg1;
- (void)editSheetSelectTab:(id)arg1;
- (id)duplicateSiteItems:(id)arg1;
- (void)duplicateSelectedSite:(id)arg1;
- (void)deleteSelectedSite:(id)arg1;
- (void)databaseTypeChanged:(id)arg1;
- (id)createGroupFromItem:(id)arg1 withItems:(id)arg2;
- (void)moveItems:(id)arg1 toGroup:(id)arg2 atIndex:(long long)arg3;
- (id)currentSitesView;
- (void)closeSiteAndReenableEditSheet:(id)arg1;
- (void)clearSiteImage:(id)arg1;
- (void)clearSearchResults;
- (void)chooseSiteImage:(id)arg1;
- (void)chooseLocalSQLSocketURL:(id)arg1;
- (void)chooseLocalPath:(id)arg1;
- (BOOL)canEditSite;
- (void)animationDidEnd:(id)arg1;
- (void)sheetControllerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)objectsDidChange:(id)arg1;
- (void)dealloc;
- (void)unloadView;
- (id)touchBar:(id)arg1 makeItemForIdentifier:(id)arg2;
- (id)makeTouchBar;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)gitRemotes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

