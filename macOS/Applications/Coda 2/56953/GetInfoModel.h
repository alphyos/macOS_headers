//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSWindowController.h>

#import "PCSheetControllerDelegate-Protocol.h"
#import "PCSheetControllerInterfaceDelegate-Protocol.h"

@class BucketLoggingStatus, CloudFrontDistribution, NSAlert, NSArray, NSArrayController, NSImage, NSIndexSet, NSMenu, NSNumber, NSObjectController, NSString, NSTextField, NSView, PCColorLabelView, PCFSOperation, PCHUDButton, PCHUDContentView, PCHUDPopUpButton, PCIndeterminateSpinner, PCRemoteChangeAttributesOperation, PCRemoteListDirectoryOperation, PCVirtualFileManager;
@protocol GetInfoDelegate;

__attribute__((visibility("hidden")))
@interface GetInfoModel : NSWindowController <PCSheetControllerDelegate, PCSheetControllerInterfaceDelegate>
{
    NSArrayController *oNodesController;
    NSArrayController *oNodeAttributeController;
    PCHUDContentView *oWindowBackgroundView;
    NSView *oHeaderView;
    NSView *oGeneralViewSingleItem;
    NSView *oGeneralViewMultipleItems;
    NSView *generalView;
    NSTextField *oSizeTextFieldSingleItem;
    NSTextField *oSizeTextFieldMultipleItems;
    NSTextField *sizeTextField;
    PCHUDButton *iCalculateRemoteFolderSizeButton;
    PCIndeterminateSpinner *calculateRemoteFolderSizeProgressIndicator;
    PCIndeterminateSpinner *oBusySpinner;
    NSTextField *oPathTextFieldSingleItem;
    NSTextField *oPathTextFieldMultipleItems;
    NSTextField *pathTextField;
    double iTextFieldMinimumHeight;
    PCColorLabelView *iColorLabelView;
    NSTextField *iColorLabelField;
    NSView *oLocalOwnerAndGroupView;
    PCHUDPopUpButton *oLocalOwnerPopup;
    PCHUDPopUpButton *oLocalGroupPopup;
    NSView *oRemoteOwnerAndGroupView;
    NSView *oEditableRemoteOwnerAndGroupView;
    NSView *oWebDAVPermissionsView;
    NSView *oS3PermissionsView;
    PCHUDPopUpButton *oS3ReadPermissionsPopup;
    PCHUDPopUpButton *oS3WritePermissionsPopup;
    NSMenu *oS3PermissionsTemplateMenu;
    NSView *oS3LocationView;
    NSView *oS3LoggingView;
    PCHUDPopUpButton *oS3LoggingBucketsPopup;
    NSView *oS3DistributionView;
    NSView *oPosixPermissionsView;
    NSTextField *oPermissionsIntTextField;
    PCHUDButton *oApplyPermissionsButton;
    PCHUDButton *oApplyPermissionsRecursiveButton;
    NSView *oCloudFilesView;
    id <GetInfoDelegate> iDelegate;
    NSArray *iNodes;
    PCVirtualFileManager *iFileManager;
    NSNumber *iSize;
    NSNumber *iPhysicalSize;
    NSString *iName;
    NSImage *iImage;
    BOOL iLocal;
    unsigned long long remoteSizeCalculationItemIdx;
    long long remoteSizeCalculationCurSize;
    NSArray *iBuckets;
    NSIndexSet *iColorLabels;
    NSArray *iNodeAttributes;
    NSNumber *iOctalPermissions;
    NSNumber *iBucketRegionIndex;
    NSString *iBucketLocationConstraint;
    NSArrayController *oBucketsController;
    BucketLoggingStatus *iLoggingStatus;
    NSObjectController *oLoggingStatusController;
    NSArray *iDistributions;
    NSAlert *iPendingAlert;
    NSNumber *iContainerCDNStatus;
    NSNumber *iContainerLoggingStatus;
    NSString *iContainerCDNURI;
    BOOL iInspector;
    PCFSOperation *iAttributesOperation;
    PCFSOperation *iPermissionsOperation;
    PCFSOperation *iCalculateSizeOperation;
    PCRemoteListDirectoryOperation *iListBucketsOperation;
    PCRemoteChangeAttributesOperation *iUpdateLoggingOperation;
    PCRemoteChangeAttributesOperation *iUpdateDistributionsOperation;
    PCRemoteChangeAttributesOperation *iUpdateCloudFilesOperation;
    BOOL iShowingCloseWarningSheet;
}

+ (id)keyPathsForValuesAffectingSupportsContainerCDNURI;
+ (id)keyPathsForValuesAffectingContainerCDNURI;
+ (id)keyPathsForValuesAffectingSupportsContainerLoggingEnabled;
+ (id)keyPathsForValuesAffectingContainerLoggingEnabled;
+ (id)keyPathsForValuesAffectingSupportsContainerCDNEnabled;
+ (id)keyPathsForValuesAffectingContainerCDNEnabled;
+ (id)keyPathsForValuesAffectingDistributionCNAMEs;
+ (id)keyPathsForValuesAffectingDistributionEnabled;
+ (id)keyPathsForValuesAffectingSupportsDistribution;
+ (id)keyPathsForValuesAffectingDistribution;
+ (id)keyPathsForValuesAffectingLoggingEnabled;
+ (id)keyPathsForValuesAffectingSupportsLogging;
+ (id)keyPathsForValuesAffectingFormattedSize;
+ (id)keyPathsForValuesAffectingIsApplyRecursiveButtonEnabled;
+ (id)keyPathsForValuesAffectingIsApplyButtonEnabled;
+ (id)keyPathsForValuesAffectingCanCalculateRemoteFolderSize;
+ (id)keyPathsForValuesAffectingCanApplyOwnerGroupRecursive;
+ (id)keyPathsForValuesAffectingCanApplyOwnerGroup;
+ (id)keyPathsForValuesAffectingCanEditPermissions;
+ (id)keyPathsForValuesAffectingCanApplyPermissionsRecursive;
+ (id)keyPathsForValuesAffectingCanApplyPermissions;
+ (id)keyPathsForValuesAffectingIsBusy;
@property(copy) NSString *containerCDNURI; // @synthesize containerCDNURI=iContainerCDNURI;
@property(copy) NSNumber *containerCDNStatus; // @synthesize containerCDNStatus=iContainerCDNStatus;
@property(copy) NSNumber *containerLoggingStatus; // @synthesize containerLoggingStatus=iContainerLoggingStatus;
@property(copy) NSIndexSet *colorLabels; // @synthesize colorLabels=iColorLabels;
@property(nonatomic, getter=isInspector) BOOL inspector; // @synthesize inspector=iInspector;
@property(retain) NSNumber *octalPermissions; // @synthesize octalPermissions=iOctalPermissions;
@property(retain) NSAlert *pendingAlert; // @synthesize pendingAlert=iPendingAlert;
@property(copy, nonatomic) NSArray *nodeAttributes; // @synthesize nodeAttributes=iNodeAttributes;
@property(retain) PCRemoteChangeAttributesOperation *updateCloudFilesOperation; // @synthesize updateCloudFilesOperation=iUpdateCloudFilesOperation;
@property(retain) PCRemoteChangeAttributesOperation *updateDistributionsOperation; // @synthesize updateDistributionsOperation=iUpdateDistributionsOperation;
@property(retain) PCRemoteChangeAttributesOperation *updateLoggingOperation; // @synthesize updateLoggingOperation=iUpdateLoggingOperation;
@property(retain) PCRemoteListDirectoryOperation *listBucketsOperation; // @synthesize listBucketsOperation=iListBucketsOperation;
@property(retain) PCFSOperation *calculateSizeOperation; // @synthesize calculateSizeOperation=iCalculateSizeOperation;
@property(retain) PCFSOperation *permissionsOperation; // @synthesize permissionsOperation=iPermissionsOperation;
@property(retain) PCFSOperation *attributesOperation; // @synthesize attributesOperation=iAttributesOperation;
@property(copy) NSString *bucketLocationConstraint; // @synthesize bucketLocationConstraint=iBucketLocationConstraint;
@property(retain) NSNumber *bucketRegionIndex; // @synthesize bucketRegionIndex=iBucketRegionIndex;
@property(copy) NSArray *distributions_; // @synthesize distributions_=iDistributions;
@property(retain) BucketLoggingStatus *loggingStatus; // @synthesize loggingStatus=iLoggingStatus;
@property(copy) NSArray *buckets; // @synthesize buckets=iBuckets;
@property BOOL isLocal; // @synthesize isLocal=iLocal;
@property(retain) NSImage *image; // @synthesize image=iImage;
@property(copy) NSString *name; // @synthesize name=iName;
@property(retain) NSNumber *physicalSize; // @synthesize physicalSize=iPhysicalSize;
@property(retain) NSNumber *size; // @synthesize size=iSize;
@property(copy, nonatomic) NSArray *nodes; // @synthesize nodes=iNodes;
@property(retain) PCVirtualFileManager *fileManager; // @synthesize fileManager=iFileManager;
@property id <GetInfoDelegate> delegate; // @synthesize delegate=iDelegate;
- (void)pc_windowDidZoom:(id)arg1;
- (double)pc_windowAnimationDuration:(id)arg1;
- (void)zoomOpen;
- (void)zoomClose;
- (id)windowForSheetController:(id)arg1;
- (BOOL)supportsContainerCDNURI;
- (BOOL)containerLoggingEnabled;
- (void)setContainerLoggingEnabled:(BOOL)arg1;
- (BOOL)supportsContainerLoggingEnabled;
- (BOOL)containerCDNEnabled;
- (void)setContainerCDNEnabled:(BOOL)arg1;
- (BOOL)supportsContainerCDNEnabled;
@property(copy) NSArray *distributionCNAMEs;
@property(getter=isDistributionEnabled) BOOL distributionEnabled;
@property(readonly) BOOL supportsDistribution;
@property(readonly, retain) CloudFrontDistribution *distribution;
- (void)updateLoggingStatus:(id)arg1;
@property(getter=isLoggingEnabled) BOOL loggingEnabled;
@property(readonly) BOOL supportsLogging;
- (void)sizePathFieldToFit;
- (void)setColorLabelViewHidden:(BOOL)arg1;
- (void)addOrRemoveLabelView:(BOOL)arg1 superview:(id)arg2;
- (id)localAvailableOwners;
- (id)localAvailableGroups;
- (void)labelColor:(id)arg1;
- (id)node;
- (id)prettyGroup;
- (id)prettyOwner;
- (id)permissions;
- (int)permissionsInt;
- (BOOL)hasMultipleItems;
@property(readonly, copy) NSString *formattedSize;
- (id)changedValueForKey:(id)arg1;
@property(readonly) BOOL containsDirectory;
@property(readonly) BOOL containsBucket;
- (BOOL)canCalculateRemoteFolderSize;
- (BOOL)canEditPermissions;
- (BOOL)canApplyPermissionsRecursive;
- (BOOL)canApplyPermissions;
- (BOOL)canApplyOwnerGroupRecursive;
- (BOOL)canApplyOwnerGroup;
- (void)userClickedApplyRecursive:(id)arg1;
- (void)userClickedApply:(id)arg1;
- (void)synchronizeWithNodes;
- (void)synchronizeWindowTitle;
- (void)getAttributesForNodes:(id)arg1;
@property(readonly) BOOL isApplyRecursiveButtonEnabled;
@property(readonly) BOOL isApplyButtonEnabled;
- (BOOL)isBusy;
- (void)didCalculateRemoteSizes:(id)arg1;
- (void)sheetControllerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)calculateRemoteFolderSize:(id)arg1;
- (void)applyAttributesRecursive:(BOOL)arg1;
- (void)prepareForClose;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)synchronizeContentViews;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithNodes:(id)arg1 delegate:(id)arg2;
- (id)init;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)displayErrorListSheet:(id)arg1;
- (void)operationDidEnd:(id)arg1 error:(id)arg2;
- (void)operation:(id)arg1 runAlert:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

