//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSTextFieldDelegate-Protocol.h"
#import "NSToolbarDelegate-Protocol.h"
#import "SPConnectionControllerDelegateProtocol-Protocol.h"
#import "SPMySQLConnectionDelegate-Protocol.h"

@class BottomBarSegmentedControl, NSMenu, NSMutableArray, NSProgressIndicator, NSScrollView, NSSearchField, NSString, NSTableView, NSTextField, NSTextView, NSView, NSWindow, SPConnectionController, SPCustomQuery, SPDatabaseData, SPDatabaseStructure, SPMySQLConnection, SPServerSupport, SPTableContent, SPTableData, SPTableStructure, SPTablesList;
@protocol SPDatabaseContentViewDelegate;

__attribute__((visibility("hidden")))
@interface SPDatabaseDocument : NSObject <SPMySQLConnectionDelegate, SPConnectionControllerDelegateProtocol, NSTextFieldDelegate, NSToolbarDelegate>
{
    id delegate;
    BottomBarSegmentedControl *structureContentSwitcher;
    SPTablesList *tablesListInstance;
    SPTableStructure *tableSourceInstance;
    SPTableContent<SPDatabaseContentViewDelegate> *tableContentInstance;
    id tableRelationsInstance;
    id tableTriggersInstance;
    id customQueryInstance;
    id tableDumpInstance;
    SPTableData *tableDataInstance;
    id extendedTableInfoInstance;
    id databaseDataInstance;
    id statusTableAccessoryView;
    id statusTableView;
    id statusTableCopyChecksum;
    SPServerSupport *serverSupport;
    NSSearchField *listFilterField;
    NSScrollView *tableInfoScrollView;
    NSScrollView *documentActivityScrollView;
    NSView *parentView;
    id titleAccessoryView;
    id titleImageView;
    id titleStringView;
    id databaseSheet;
    id databaseCopySheet;
    id databaseRenameSheet;
    NSProgressIndicator *queryProgressBar;
    id databaseNameField;
    id databaseEncodingButton;
    id addDatabaseButton;
    id databaseRenameNameField;
    id renameDatabaseMessageField;
    id renameDatabaseButton;
    id chooseDatabaseButton;
    NSTextView *customQueryTextView;
    NSTableView *dbTablesTableView;
    NSTextField *createTableSyntaxTextField;
    NSTextView *createTableSyntaxTextView;
    NSWindow *createTableSyntaxWindow;
    NSWindow *connectionErrorDialog;
    SPMySQLConnection *mySQLConnection;
    SPConnectionController *connectionController;
    NSString *selectedTableName;
    int selectedTableType;
    BOOL structureLoaded;
    BOOL contentLoaded;
    BOOL statusLoaded;
    BOOL triggersLoaded;
    NSString *selectedDatabase;
    NSString *mySQLVersion;
    NSString *selectedDatabaseEncoding;
    NSMenu *selectEncodingMenu;
    BOOL _supportsEncoding;
    BOOL _isConnected;
    long long _isWorkingLevel;
    BOOL databaseListIsSelectable;
    long long _queryMode;
    BOOL _isSavedInBundle;
    BOOL _workingTimeout;
    NSMutableArray *allDatabases;
    NSMutableArray *allSystemDatabases;
    NSString *queryEditorInitString;
    NSString *keyChainID;
    NSWindow *parentWindow;
    BOOL isProcessing;
    SPDatabaseStructure *databaseStructureRetrieval;
}

@property BottomBarSegmentedControl *structureContentSwitcher; // @synthesize structureContentSwitcher;
@property id chooseDatabaseButton; // @synthesize chooseDatabaseButton;
@property id renameDatabaseButton; // @synthesize renameDatabaseButton;
@property id databaseRenameNameField; // @synthesize databaseRenameNameField;
@property id databaseRenameSheet; // @synthesize databaseRenameSheet;
@property SPDatabaseData *databaseDataInstance; // @synthesize databaseDataInstance;
@property id addDatabaseButton; // @synthesize addDatabaseButton;
@property id databaseEncodingButton; // @synthesize databaseEncodingButton;
@property id databaseNameField; // @synthesize databaseNameField;
@property NSWindow *databaseSheet; // @synthesize databaseSheet;
@property NSProgressIndicator *queryProgressBar; // @synthesize queryProgressBar;
@property SPCustomQuery *customQueryInstance; // @synthesize customQueryInstance;
@property SPTableData *tableDataInstance; // @synthesize tableDataInstance;
@property id delegate; // @synthesize delegate;
@property(readonly) NSMutableArray *allDatabases; // @synthesize allDatabases;
@property(readonly) SPDatabaseStructure *databaseStructureRetrieval; // @synthesize databaseStructureRetrieval;
@property(readonly) SPServerSupport *serverSupport; // @synthesize serverSupport;
@property BOOL isProcessing; // @synthesize isProcessing;
- (void)dealloc;
- (void)_selectDatabaseAndItem:(id)arg1;
- (void)_removeDatabase;
- (void)_addDatabase;
- (void)_renameDatabase;
- (void)controlTextDidChange:(id)arg1;
- (void)databaseDocumentConnectionFailed:(id)arg1;
- (id)connectionController;
- (void)connectionControllerConnectAttemptFailed:(id)arg1;
- (void)connectionControllerInitiatingConnection:(id)arg1;
- (id)parentWindow;
- (void)setParentWindow:(id)arg1;
- (void)parentTabDidClose;
- (BOOL)parentTabShouldClose;
- (void)makeKeyDocument;
- (void)updateTitlebarStatusVisibilityForcingHide:(BOOL)arg1;
- (void)clearStatusIcon;
- (void)setTitlebarStatus:(id)arg1;
- (void)setStatusIconToImageWithName:(id)arg1;
- (void)updateWindowTitle:(id)arg1;
- (id)getCreateTableSyntaxWindow;
- (void)savePanelDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (BOOL)isCustomQuerySelected;
- (void)addConnectionToFavorites:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)makeTableListFilterHaveFocus:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)hasPerformedQuery:(id)arg1;
- (void)willPerformQuery:(id)arg1;
- (id)tablesListInstance;
- (id)allTableNames;
- (BOOL)isSaveInBundle;
- (id)keyChainID;
- (id)port;
- (id)user;
- (id)mySQLVersion;
- (id)database;
- (id)connectionID;
- (id)name;
- (id)host;
- (BOOL)couldCommitCurrentViewActions;
- (void)closeConnection;
- (void)connect;
- (void)closePanelSheet:(id)arg1;
- (void)closeSheet:(id)arg1;
- (BOOL)supportsEncoding;
- (void)chooseEncoding:(id)arg1;
- (void)detectDatabaseEncoding;
- (id)databaseEncoding;
- (id)mysqlEncodingFromEncodingTag:(id)arg1;
- (id)encodingTagFromMySQLEncoding:(id)arg1;
- (void)updateEncodingMenuWithSelectedEncoding:(id)arg1;
- (void)setConnectionEncoding:(id)arg1 reloadingViews:(BOOL)arg2;
- (void)setTaskIndicatorShouldAnimate:(BOOL)arg1;
- (void)centerTaskWindow;
- (void)setDatabaseListIsSelectable:(BOOL)arg1;
- (BOOL)isWorking;
- (void)cancelTask:(id)arg1;
- (void)disableTaskCancellation;
- (void)enableTaskCancellationWithTitle:(id)arg1 callbackObject:(id)arg2 callbackFunction:(SEL)arg3;
- (void)endTask;
- (void)setTaskProgressToIndeterminateAfterDelay:(BOOL)arg1;
- (void)setTaskPercentage:(double)arg1;
- (void)setTaskDescription:(id)arg1;
- (void)fadeInTaskProgressWindow:(id)arg1;
- (void)startTaskWithDescription:(id)arg1;
- (id)allSchemaKeys;
- (id)getDbStructure;
- (void)refreshCurrentDatabase;
- (void)showErrorSheetWith:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (id)allSystemDatabaseNames;
- (id)allDatabaseNames;
- (void)refreshTables:(id)arg1;
- (void)removeDatabase:(id)arg1;
- (void)renameDatabase:(id)arg1;
- (void)addDatabase:(id)arg1;
- (void)selectDatabase:(id)arg1 item:(id)arg2;
- (void)setDatabases:(id)arg1;
- (void)setKeychainID:(id)arg1;
- (id)getConnection;
- (void)setConnection:(id)arg1;
- (void)awakeFromNib;
- (void)setTableContentInstance:(id)arg1;
- (void)setTableSourceInstance:(id)arg1;
- (id)createConnectionController;
- (id)init;
- (void)loadTable:(id)arg1 ofType:(int)arg2;
- (void)setStatusRequiresReload:(BOOL)arg1;
- (void)setContentRequiresReload:(BOOL)arg1;
- (void)setStructureRequiresReload:(BOOL)arg1;
- (BOOL)statusLoaded;
- (BOOL)contentLoaded;
- (BOOL)structureLoaded;
- (int)tableType;
- (id)table;
- (void)_loadTableTask;
- (void)_loadTabTask:(id)arg1;
- (void)closeAndDisconnect;
- (void)closeErrorConnectionSheet:(id)arg1;
- (void)showErrorWithTitle:(id)arg1 message:(id)arg2;
- (int)connectionLost:(id)arg1;
- (void)noConnectionAvailable:(id)arg1;
- (id)keychainPasswordForSSHConnection:(id)arg1;
- (id)keychainPasswordForConnection:(id)arg1;
- (void)queryGaveError:(id)arg1 connection:(id)arg2;
- (void)willQueryString:(id)arg1 connection:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

