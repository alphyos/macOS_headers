//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSDocument.h>

@class NSColor, NSImage, NSMutableSet, NSTimer, NSURL, PCNode, PCRemoteFileManager, PCRemoteFileNode, PCWebpagePreviewFetcher;

__attribute__((visibility("hidden")))
@interface CodaDocument : NSDocument
{
    NSMutableSet *owners;
    PCNode *node;
    PCRemoteFileNode *remoteNode;
    PCRemoteFileManager *remoteManager;
    BOOL iUseDynamicTabImage;
    NSTimer *iTabImageRefreshTimer;
    NSImage *iTabImage;
    NSColor *_documentBackgroundColor;
    NSColor *_documentEffectsColor;
    BOOL iShouldPublishOnSave;
    NSURL *_tabImageURL;
    PCWebpagePreviewFetcher *_previewFetcher;
}

+ (id)fileTypes;
+ (int)defaultViewType;
+ (BOOL)canInitWithPath:(id)arg1;
+ (BOOL)canConcurrentlyReadDocumentsOfType:(id)arg1;
@property(retain) PCWebpagePreviewFetcher *previewFetcher; // @synthesize previewFetcher=_previewFetcher;
@property(retain) NSURL *tabImageURL; // @synthesize tabImageURL=_tabImageURL;
@property(retain, nonatomic) NSColor *documentEffectsColor; // @synthesize documentEffectsColor=_documentEffectsColor;
@property(retain, nonatomic) NSColor *documentBackgroundColor; // @synthesize documentBackgroundColor=_documentBackgroundColor;
@property BOOL shouldPublishOnSave; // @synthesize shouldPublishOnSave=iShouldPublishOnSave;
@property(retain) NSImage *tabImage; // @synthesize tabImage=iTabImage;
- (id)windowNibName;
- (void)removeWindowController:(id)arg1;
- (void)addWindowController:(id)arg1;
- (void)showWindows;
- (void)makeWindowControllersForNewWindow:(BOOL)arg1;
- (void)makeWindowControllers;
- (id)webpagePreviewFetcherWindowForSheet:(id)arg1;
- (void)tabImageTimerFired:(id)arg1;
- (void)createTabImage;
- (BOOL)shouldLoadTabImageFromWebpage;
- (void)refreshTabImageWithSite:(id)arg1;
- (void)refreshTabImage;
- (id)documentUndoManager;
- (int)documentType;
- (id)windowForSheet;
- (void)updateChangeCount:(unsigned long long)arg1;
- (BOOL)supportsUndo;
- (id)smallIcon;
- (id)siteIndexes;
- (BOOL)shouldUpdateOnExternalChanges;
- (void)setRemoteNode:(id)arg1;
- (void)setNode:(id)arg1;
- (id)pathExtension;
- (void)shouldCloseWindowController:(id)arg1 delegate:(id)arg2 shouldCloseSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)setDocumentEdited:(BOOL)arg1;
- (void)setDisplayName:(id)arg1;
- (void)saveToURLDidComplete:(id)arg1 wasWritten:(BOOL)arg2 ofType:(id)arg3 forSaveOperation:(unsigned long long)arg4 error:(id *)arg5;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)saveDocument:(id)arg1;
- (void)setFileURL:(id)arg1;
- (void)saveDidComplete;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 download:(BOOL)arg3 error:(id *)arg4;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)presentedItemDidChange;
- (void)removeOwner:(id)arg1;
- (id)remotePath;
- (id)remoteNode;
- (id)remoteFileManager;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeValueForKeyPathOnMainThread:(id)arg1 ofObject:(id)arg2 change:(id)arg3;
- (id)path;
- (id)owners;
- (id)node;
- (id)filename;
- (BOOL)isReferencingFile;
- (BOOL)isRemoteFile;
- (void)restoreStateWithCoder:(id)arg1;
- (void)invalidateRestorableState;
- (id)indexIdentifier;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (long long)displayNameCompare:(id)arg1;
- (void)didOverwriteNodeNotification:(id)arg1;
- (int)defaultViewType;
- (id)credentials;
- (long long)compareDisplayName:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addOwner:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)sourceString;
- (unsigned long long)sourceStringEncoding;
- (id)webpageURL:(id)arg1;
- (id)baseURLForSource:(id)arg1;
- (BOOL)isDynamicWebpage;

@end

