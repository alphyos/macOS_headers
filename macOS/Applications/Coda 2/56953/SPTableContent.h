//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSComboBoxDataSource-Protocol.h"
#import "NSComboBoxDelegate-Protocol.h"
#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"
#import "SPDatabaseContentViewDelegate-Protocol.h"

@class NSArray, NSButton, NSColor, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSPopUpButton, NSString, NSTextField, NSTimer, NSUserDefaults, SPContentFilterManager, SPCopyTable, SPDataStorage, SPDatabaseDocument, SPFieldEditorController, SPMySQLConnection, SPTableData, SPTableStructure, SPTablesList;

__attribute__((visibility("hidden")))
@interface SPTableContent : NSObject <SPDatabaseContentViewDelegate, NSTableViewDelegate, NSTableViewDataSource, NSComboBoxDataSource, NSComboBoxDelegate>
{
    SPDatabaseDocument *tableDocumentInstance;
    id tablesListInstance;
    SPTableData *tableDataInstance;
    id tableSourceInstance;
    SPCopyTable *tableContentView;
    NSPopUpButton *fieldField;
    id compareField;
    id argumentField;
    id filterButton;
    id addButton;
    id duplicateButton;
    id removeButton;
    id reloadButton;
    id firstBetweenField;
    id secondBetweenField;
    id betweenTextField;
    NSButton *paginationPreviousButton;
    NSButton *paginationNextButton;
    NSTextField *paginationPageField;
    SPMySQLConnection *mySQLConnection;
    BOOL _mainNibLoaded;
    BOOL isWorking;
    struct _opaque_pthread_mutex_t tableValuesLock;
    NSString *selectedTable;
    NSString *usedQuery;
    SPDataStorage *tableValues;
    NSMutableArray *dataColumns;
    NSMutableArray *keys;
    NSMutableArray *oldRow;
    unsigned long long tableRowsCount;
    unsigned long long previousTableRowsCount;
    NSString *compareType;
    NSNumber *sortCol;
    BOOL isEditingRow;
    BOOL isEditingNewRow;
    BOOL isSavingRow;
    BOOL isDesc;
    BOOL setLimit;
    BOOL isFiltered;
    BOOL isLimited;
    BOOL isInterruptedLoad;
    BOOL maxNumRowsIsEstimate;
    NSUserDefaults *prefs;
    long long currentlyEditingRow;
    long long maxNumRows;
    NSMutableDictionary *contentFilters;
    NSMutableDictionary *numberOfDefaultFilters;
    unsigned long long lastSelectedContentFilterIndex;
    SPContentFilterManager *contentFilterManager;
    unsigned long long contentPage;
    BOOL sortColumnToRestoreIsAsc;
    BOOL tableRowsSelectable;
    NSString *sortColumnToRestore;
    unsigned long long pageToRestore;
    NSDictionary *selectionToRestore;
    struct CGRect selectionViewportToRestore;
    NSString *filterFieldToRestore;
    NSString *filterComparisonToRestore;
    NSString *filterValueToRestore;
    NSString *firstBetweenValueToRestore;
    NSString *secondBetweenValueToRestore;
    NSTimer *tableLoadTimer;
    unsigned long long tableLoadInterfaceUpdateInterval;
    unsigned long long tableLoadTimerTicksSinceLastUpdate;
    unsigned long long tableLoadLastRowCount;
    unsigned long long tableLoadTargetRowCount;
    NSArray *cqColumnDefinition;
    NSString *fieldIDQueryString;
    BOOL isFirstChangeInView;
    NSString *kCellEditorErrorNoMatch;
    NSString *kCellEditorErrorNoMultiTabDb;
    NSString *kCellEditorErrorTooManyMatches;
    NSColor *blackColor;
    NSColor *lightGrayColor;
    SPFieldEditorController *fieldEditor;
    struct _NSRange fieldEditorSelectedRange;
}

@property SPTablesList *tablesListInstance; // @synthesize tablesListInstance;
@property SPTableStructure *tableSourceInstance; // @synthesize tableSourceInstance;
@property SPDatabaseDocument *tableDocumentInstance; // @synthesize tableDocumentInstance;
@property SPTableData *tableDataInstance; // @synthesize tableDataInstance;
@property SPCopyTable *tableContentView; // @synthesize tableContentView;
@property id secondBetweenField; // @synthesize secondBetweenField;
@property NSButton *removeButton; // @synthesize removeButton;
@property NSButton *reloadButton; // @synthesize reloadButton;
@property NSButton *paginationPreviousButton; // @synthesize paginationPreviousButton;
@property NSTextField *paginationPageField; // @synthesize paginationPageField;
@property NSButton *paginationNextButton; // @synthesize paginationNextButton;
@property id firstBetweenField; // @synthesize firstBetweenField;
@property id filterButton; // @synthesize filterButton;
@property id fieldField; // @synthesize fieldField;
@property NSButton *duplicateButton; // @synthesize duplicateButton;
@property id compareField; // @synthesize compareField;
@property id betweenTextField; // @synthesize betweenTextField;
@property id argumentField; // @synthesize argumentField;
@property NSButton *addButton; // @synthesize addButton;
- (void)dealloc;
- (struct _NSRange)fieldEditorSelectedRange;
- (void)setFieldEditorSelectedRange:(struct _NSRange)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)endDocumentTaskForTab:(id)arg1;
- (void)startDocumentTaskForTab:(id)arg1;
- (void)autosizeColumns;
- (void)updateNumberOfRows;
- (id)filterTableData;
- (void)setFilterTableData:(id)arg1;
- (void)clearDetailsToRestore;
- (void)storeCurrentDetailsForRestoration;
- (void)setFiltersToRestore:(id)arg1;
- (void)setViewportToRestore:(struct CGRect)arg1;
- (void)setSelectionToRestore:(id)arg1;
- (void)setPageToRestore:(unsigned long long)arg1;
- (void)setSortColumnNameToRestore:(id)arg1 isAscending:(BOOL)arg2;
- (id)filterSettings;
- (double)tablesListWidth;
- (struct CGRect)viewport;
- (unsigned long long)pageNumber;
- (id)selectionDetailsAllowingIndexSelection:(BOOL)arg1;
- (BOOL)sortColumnIsAscending;
- (id)sortColumnName;
- (void)showDefaultOperaterHelp:(id)arg1;
- (void)closeSheet:(id)arg1;
- (void)toggleLookAllFieldsMode:(id)arg1;
- (void)setDefaultOperator:(id)arg1;
- (void)toggleDistinctSelect:(id)arg1;
- (void)toggleNegateClause:(id)arg1;
- (void)showFilterTable:(id)arg1;
- (void)tableFilterClear:(id)arg1;
- (void)saveViewCellValue:(id)arg1 forTableColumn:(id)arg2 row:(unsigned long long)arg3;
- (void)processFieldEditorResult:(id)arg1 contextInfo:(id)arg2;
- (void)showErrorSheetWith:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (id)fieldEditStatusForRow:(long long)arg1 andColumn:(long long)arg2;
- (id)fieldListForQuery;
- (BOOL)tableContainsBlobOrTextColumns;
- (id)argumentForRow:(long long)arg1 excludingLimits:(BOOL)arg2;
- (id)argumentForRow:(long long)arg1;
- (BOOL)cancelRowEditing;
- (BOOL)saveRowOnDeselect;
- (void)addRowErrorSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)saveRowToTable;
- (void)openContentFilterManager;
- (void)setCompareTypes:(id)arg1;
- (void)clickLinkArrowTask:(id)arg1;
- (void)clickLinkArrow:(id)arg1;
- (void)setConnection:(id)arg1;
- (id)currentDataResultWithNULLs:(BOOL)arg1 hideBLOBs:(BOOL)arg2;
- (id)currentResult;
- (void)removeRowSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)removeRow:(id)arg1;
- (void)duplicateRow:(id)arg1;
- (void)addRow:(id)arg1;
- (id)argumentForRow:(unsigned long long)arg1 ofTable:(id)arg2 andDatabase:(id)arg3 includeBlobs:(BOOL)arg4;
- (void)updatePaginationState;
- (void)setPaginationViewVisibility:(BOOL)arg1;
- (void)navigatePaginationFromButton:(id)arg1;
- (void)sortTableTaskWithColumn:(id)arg1;
- (void)setUsedQuery:(id)arg1;
- (void)toggleFilterField:(id)arg1;
- (void)filterTableTask;
- (void)filterTable:(id)arg1;
- (void)reloadTableTask;
- (void)reloadTable:(id)arg1;
- (void)tableLoadUpdate:(id)arg1;
- (void)clearTableLoadTimer;
- (void)initTableLoadTimer;
- (void)updateCountText;
- (id)escapeFilterArgument:(id)arg1 againstClause:(id)arg2;
- (id)tableFilterString;
- (void)processResultIntoDataStorage:(id)arg1 approximateRowCount:(unsigned long long)arg2;
- (void)loadTableValues;
- (void)clearTableValues;
- (void)setTableDetails:(id)arg1;
- (void)loadTable:(id)arg1;
- (void)awakeFromNib;
- (id)init;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)dataColumnDefinitions;
- (id)usedQuery;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

