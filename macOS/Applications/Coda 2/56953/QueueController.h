//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "SidebarViewController.h"

#import "ActivityController-Protocol.h"
#import "PCFSOperationInterfaceDelegate-Protocol.h"
#import "PCSheetControllerDelegate-Protocol.h"
#import "PCSheetControllerInterfaceDelegate-Protocol.h"

@class GenericQueueOperation, NSArray, NSCountedSet, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, NSTimer, PCRemoteCacheNodesOperation, PCShadowedTextField, PCSourceTableView;

__attribute__((visibility("hidden")))
@interface QueueController : SidebarViewController <PCSheetControllerDelegate, PCSheetControllerInterfaceDelegate, PCFSOperationInterfaceDelegate, ActivityController>
{
    PCSourceTableView *iQueueTableView;
    PCShadowedTextField *iQueueHeaderCaption;
    NSMutableArray *iOperations;
    NSMutableDictionary *uploadingDocuments;
    PCRemoteCacheNodesOperation *iCachePendingPathsOperation;
    GenericQueueOperation *iSiteIndexingOperation;
    NSMutableDictionary *iInterfaceUpdateInfo;
    double iLastInterfaceUpdate;
    int iInterfaceUpdateLock;
    NSTimer *iUpdateQueueInterfaceTimer;
    NSTimer *iIndexingProgressTimer;
    NSMutableDictionary *iServerTransfers;
    NSMutableArray *iExecutingOperations;
    NSMutableArray *iPendingTransferActivities;
    long long iRemainingOperationsCount;
    unsigned long long iNumberOfExecutingTransferOperations;
    NSHashTable *iTransferOperationGroups;
    NSCountedSet *_downloadingPaths;
    BOOL iShouldCloseAfterOperationsComplete;
    SidebarViewController *iEmbeddedViewController;
}

@property NSTimer *indexingProgressTimer; // @synthesize indexingProgressTimer=iIndexingProgressTimer;
@property(retain, nonatomic) NSCountedSet *downloadingPaths; // @synthesize downloadingPaths=_downloadingPaths;
@property(nonatomic) PCRemoteCacheNodesOperation *cachePendingPathsOperation; // @synthesize cachePendingPathsOperation=iCachePendingPathsOperation;
@property unsigned long long numberOfExecutingTransferOperations; // @synthesize numberOfExecutingTransferOperations=iNumberOfExecutingTransferOperations;
@property(nonatomic) BOOL shouldCloseAfterOperationsComplete; // @synthesize shouldCloseAfterOperationsComplete=iShouldCloseAfterOperationsComplete;
@property long long remainingOperationsCount; // @synthesize remainingOperationsCount=iRemainingOperationsCount;
@property(nonatomic) SidebarViewController *embeddedViewController; // @synthesize embeddedViewController=iEmbeddedViewController;
- (void)clearOperationsWithFileManager:(id)arg1;
- (void)beginServerTransfer:(id)arg1;
- (id)uploadNodesFromServer:(id)arg1 toFolder:(id)arg2;
- (id)windowForSheetController:(id)arg1;
- (void)viewAnimationCompleted:(id)arg1 wasCanceled:(BOOL)arg2;
- (id)uploadNodes:(id)arg1 toPath:(id)arg2 conflictMode:(unsigned short)arg3 fileManager:(id)arg4;
- (id)uploadNodes:(id)arg1 toFolder:(id)arg2 conflictMode:(unsigned short)arg3;
- (id)uploadNodes:(id)arg1 toFolder:(id)arg2;
- (void)updateQueueInterfaceTimerDidFire:(id)arg1;
- (void)updateInterfaceForOperationInfo:(id)arg1;
- (void)uploadDocumentFile:(id)arg1 delayInterface:(BOOL)arg2;
- (unsigned short)uploadConflictMode;
- (id)uploadCachedNode:(id)arg1 remoteEditorNode:(id)arg2;
- (id)operationsWithFileManager:(id)arg1 includeFinished:(BOOL)arg2;
- (void)stopUpdateQueueInterfaceTimer;
- (void)startUpdateQueueInterfaceTimer;
- (void)startTransferOperationsIfPossible;
- (BOOL)shouldTransferHiddenFiles;
- (void)sheetControllerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(id)arg3;
- (void)setGroupAlertReturnCode:(long long)arg1 applyToAll:(BOOL)arg2 forTransferOperation:(id)arg3;
- (void)resizeQueueViewToFit;
- (double)queueViewHeight;
- (void)playTransferCompleteSound;
- (void)setQueueVisible:(BOOL)arg1 animate:(BOOL)arg2;
- (id)reversePublishNodes:(id)arg1 fromRemoteRootPath:(id)arg2 toLocalRootPath:(id)arg3;
- (id)renameFileAtPath:(id)arg1 to:(id)arg2 viewController:(id)arg3;
- (id)remotePublishOperation:(id)arg1 willPublishNode:(id)arg2 toPath:(id)arg3;
- (id)publishNodes:(id)arg1 fromLocalRootPath:(id)arg2 toRemoteRootPath:(id)arg3 fileManager:(id)arg4;
- (id)_renameLocalNode:(id)arg1 to:(id)arg2;
- (void)operation:(id)arg1 willDownloadNode:(id)arg2 toPath:(id)arg3;
@property(readonly) NSArray *operations; // @synthesize operations=iOperations;
- (void)addFileTransferOperations:(id)arg1 startIfPossible:(BOOL)arg2;
- (void)addFileTransferOperation:(id)arg1 startIfPossible:(BOOL)arg2;
- (void)addOperationObject:(id)arg1;
- (void)addOperationObjects:(id)arg1;
- (void)removeOperationObjects:(id)arg1;
- (void)removeOperationObject:(id)arg1;
- (void)unloadView;
- (unsigned long long)numberOfActiveOperationsForFileManager:(id)arg1;
- (id)moveNodes:(id)arg1 toFolderPath:(id)arg2;
- (id)_moveLocalNodes:(id)arg1 toFolderPath:(id)arg2;
- (id)lastKeyView;
- (void)killAllOperations;
- (BOOL)isQueueVisible;
- (BOOL)isNodeDirty:(id)arg1;
- (BOOL)hasActiveRemoteOperations;
- (BOOL)hasActiveOperations;
- (void)displayErrorListSheet:(id)arg1;
- (void)setGroupConflictMode:(unsigned short)arg1 forTransferOperation:(id)arg2;
- (BOOL)removeTransferOperationFromGroups:(id)arg1 isEmpty:(char *)arg2 groupError:(id *)arg3 transferredNodes:(id *)arg4;
- (BOOL)addTransferredNodesToGroupForTransferOperation:(id)arg1;
- (BOOL)addError:(id)arg1 toGroupForTransferOperation:(id)arg2;
- (void)addGroupForTransferOperations:(id)arg1;
- (id)groupForTransferOperation:(id)arg1;
- (id)firstKeyView;
- (id)duplicateNodes:(id)arg1 destinationFileController:(id)arg2;
- (id)_duplicateLocalNodes:(id)arg1;
- (id)downloadItems:(id)arg1 toFolder:(id)arg2 conflictMode:(unsigned short)arg3 fileManager:(id)arg4;
- (id)downloadNodes:(id)arg1 toFolder:(id)arg2;
- (id)downloadNodes:(id)arg1 toFolder:(id)arg2 conflictMode:(unsigned short)arg3;
- (id)downloadPaths:(id)arg1 toFolder:(id)arg2 conflictMode:(unsigned short)arg3 fileManager:(id)arg4;
- (id)downloadHTTPURLToTemporaryFolder:(id)arg1;
- (id)downloadHTTPURLToDownloadsFolder:(id)arg1;
- (void)downloadDocumentFile:(id)arg1;
- (id)deletePaths:(id)arg1 fileManager:(id)arg2;
- (void)deleteSheetDidEndWithReturnCode:(long long)arg1 contextInfo:(id)arg2;
- (id)_deleteLocalNodes:(id)arg1;
- (void)deleteNodes:(id)arg1;
- (unsigned short)downloadConflictMode;
- (id)displayOperation;
- (id)createFolderInFolder:(id)arg1;
- (id)_createFolderInLocalFolder:(id)arg1;
- (id)createFileInFolder:(id)arg1;
- (id)_createFileInLocalFolder:(id)arg1;
- (id)copyNodes:(id)arg1 toFolderPath:(id)arg2 conflictMode:(unsigned short)arg3;
- (id)copyNodes:(id)arg1 toFolderPath:(id)arg2;
- (id)_copyLocalNodes:(id)arg1 toFolderPath:(id)arg2;
- (id)compressNodes:(id)arg1 toFolder:(id)arg2;
- (id)downloadingItems;
- (void)clearDownloadingItems:(id)arg1;
- (void)cancelOperationWithCell:(id)arg1;
- (void)cancelOperations:(id)arg1;
- (void)cachePendingPathsOperationDidUpdateStatus:(id)arg1;
- (id)cachePaths:(id)arg1;
- (id)cacheNodes:(id)arg1;
- (void)addWebKitDownloadOperationToQueue:(id)arg1;
- (void)indexingProgressDisplayTimerFired:(id)arg1;
- (void)startIndexingProgressDisplayTimer;
- (void)setIndexingOperationVisible:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)tableView:(id)arg1 rowForItem:(id)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)operationWillStart:(id)arg1;
- (void)operation:(id)arg1 statusDidChange:(id)arg2;
- (void)operation:(id)arg1 runAlert:(id)arg2;
- (void)operation:(id)arg1 requiresFileConflictResolutionForSource:(id)arg2 destination:(id)arg3;
- (void)operationDidEnd:(id)arg1 error:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

