//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "NSTableViewDataSource-Protocol.h"
#import "NSTableViewDelegate-Protocol.h"
#import "PCPopoverDelegateProtocol-Protocol.h"

@class CPRemoteViewServer, CPServiceBrowser, CodaDocumentViewController, HTTPServer, IPreviewNumberWell, NSArray, NSDictionary, NSLock, NSMutableArray, NSString, NSTableView, NSTimer, NSView, PCIndeterminateSpinner, PCPopover;

__attribute__((visibility("hidden")))
@interface IPreviewPopoverViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate, PCPopoverDelegateProtocol>
{
    NSView *oConnectedView;
    NSView *oNoServersView;
    NSView *oSavedDevicesView;
    NSTableView *oSavedDevicesTableView;
    NSView *oNewDevicesView;
    NSTableView *oNewDevicesTableView;
    NSView *oSearchingForDietCodaView;
    NSView *oNumberPairView;
    IPreviewNumberWell *oNumberPairFirstField;
    IPreviewNumberWell *oNumberPairSecondField;
    IPreviewNumberWell *oNumberPairThirdField;
    IPreviewNumberWell *oNumberPairFourthField;
    NSView *oColorPairColorView;
    PCIndeterminateSpinner *oSearchingProgressSpinner;
    PCPopover *iPreviewPopover;
    CodaDocumentViewController *iPreviewingViewController;
    CodaDocumentViewController *iClickedPreviewingViewController;
    NSArray *iSavedDeviceDescriptions;
    NSArray *iNewDeviceDescriptions;
    NSString *iConnectedDeviceUUID;
    BOOL iFirstConnection;
    BOOL iIgnoreRowChangedNotification;
    NSMutableArray *iSavedDevicesArray;
    BOOL iWaitingForDevices;
    long long magicNumber;
    NSDictionary *iCurrentlyPairingDevice;
    CPServiceBrowser *iServiceBrowser;
    CPRemoteViewServer *iRemoteViewServer;
    HTTPServer *iHTTPServer;
    NSArray *colorPairConnections;
    NSTimer *colorTimer;
    NSLock *iRefreshLock;
    BOOL iNeedsRefresh;
}

+ (id)sharedInstance;
@property BOOL needsRefresh; // @synthesize needsRefresh=iNeedsRefresh;
@property(readonly) CPRemoteViewServer *remoteViewServer; // @synthesize remoteViewServer=iRemoteViewServer;
@property(retain, nonatomic) CodaDocumentViewController *previewingViewController; // @synthesize previewingViewController=iPreviewingViewController;
@property(retain) NSDictionary *currentlyPairingDevice; // @synthesize currentlyPairingDevice=iCurrentlyPairingDevice;
@property(retain) NSString *connectedDeviceUUID; // @synthesize connectedDeviceUUID=iConnectedDeviceUUID;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 rowEnabled:(long long)arg2;
- (id)tableView:(id)arg1 imageForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)deviceRequestedRefresh;
- (void)deviceDisconnected:(id)arg1;
- (void)deviceConnected:(id)arg1;
- (void)serviceBrowserCanceledPair:(id)arg1;
- (void)serviceBrowser:(id)arg1 confirmedPairWithUUID:(id)arg2 name:(id)arg3;
- (void)serviceBrowser:(id)arg1 openedConnections:(id)arg2;
- (void)serviceBrowser:(id)arg1 devicesChanged:(id)arg2;
- (void)documentWillClose:(id)arg1;
- (void)documentDidSaveEditorNotification:(id)arg1;
- (void)viewTransitionDidFinish:(id)arg1;
- (void)switchToView:(id)arg1;
- (void)checkNumbers;
- (void)updateDevices;
- (void)setup;
- (BOOL)showDevices;
- (void)showPopoverForDocumentViewController:(id)arg1 view:(id)arg2;
- (void)refreshiPreview;
- (void)popoverWillClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)goToAppStore:(id)arg1;
- (void)dismissPopover;
- (void)disconnectRemotePreview;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

