//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "StatCollectorItemBase.h"

@class NSMutableDictionary, NSString, StatCollector;

@interface StatCollectorItem : StatCollectorItemBase
{
    struct sampleindexconfig sampleIndex[1];
    struct sampleindexconfig sampleIndexFull[1];
    struct statsample emptyValue;
    BOOL _slowUpdating;
    BOOL _temporary;
    BOOL _nohistory;
    BOOL _exists;
    BOOL _loadedHistory;
    BOOL _loadingHistory;
    BOOL _cleanedUp;
    NSString *_key;
    NSString *_alternateKey;
    NSMutableDictionary *_config;
    long long _sampleValueCount;
    long long _protocolVersion;
    StatCollector *_parent;
}

+ (long long)sampleCount;
@property(nonatomic) StatCollector *parent; // @synthesize parent=_parent;
@property(nonatomic) BOOL cleanedUp; // @synthesize cleanedUp=_cleanedUp;
@property(nonatomic) long long protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(nonatomic) long long sampleValueCount; // @synthesize sampleValueCount=_sampleValueCount;
@property(nonatomic) BOOL loadingHistory; // @synthesize loadingHistory=_loadingHistory;
@property(nonatomic) BOOL loadedHistory; // @synthesize loadedHistory=_loadedHistory;
@property(nonatomic) BOOL exists; // @synthesize exists=_exists;
@property(nonatomic) BOOL nohistory; // @synthesize nohistory=_nohistory;
@property(nonatomic) BOOL temporary; // @synthesize temporary=_temporary;
@property(nonatomic) BOOL slowUpdating; // @synthesize slowUpdating=_slowUpdating;
@property(retain, nonatomic) NSMutableDictionary *config; // @synthesize config=_config;
@property(copy, nonatomic) NSString *alternateKey; // @synthesize alternateKey=_alternateKey;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (long long)sort:(id)arg1;
- (id)historyItemForIndex:(long long)arg1;
- (id)averagesForIndex:(long long)arg1;
- (double)lowestSampleForStorageType:(long long)arg1;
- (struct statsample)sampleWithIdentifierFull:(double)arg1 type:(long long)arg2;
- (struct statsample)sampleWithIdentifier:(double)arg1 type:(long long)arg2;
- (struct statsample)sampleAtIndex:(long long)arg1 type:(long long)arg2;
- (struct statsample *)fullStorageForType:(long long)arg1;
- (void)loadFullStorageAtIndex:(long long)arg1;
- (void)freeFullStorage;
- (struct statsample *)storageForType:(long long)arg1;
- (void)clearStorageForType:(long long)arg1;
- (void)clearAllStorages;
- (void)addSample:(id)arg1 toFullStorage:(long long)arg2 index:(long long)arg3 sampleID:(double)arg4;
- (void)addSample:(id)arg1 toStorage:(long long)arg2 index:(long long)arg3 sampleID:(double)arg4;
- (void)addSample:(id)arg1 toFullStorage:(long long)arg2 index:(long long)arg3;
- (void)addSample:(id)arg1 toStorage:(long long)arg2 index:(long long)arg3;
- (void)addSample:(id)arg1 toFullStorage:(long long)arg2;
- (void)addSample:(id)arg1 toStorage:(long long)arg2;
- (void)addValue:(float)arg1 identifier:(double)arg2;
- (id)attributeFromAttributes:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)cleanup;
- (struct sampleindexconfig)sampleIndex:(long long)arg1;
- (double)idForIntervalFull:(long long)arg1;
- (double)idForInterval:(long long)arg1;
- (void)loadStorageAtIndex:(long long)arg1;
- (BOOL)loadedValuesAtIndex:(long long)arg1;
- (void)setSampleID:(double)arg1 forSampleIndex:(long long)arg2;
- (void)setNextTime:(double)arg1 forSampleIndex:(long long)arg2;
- (void)setTime:(double)arg1 forSampleIndex:(long long)arg2;
- (BOOL)indexes:(id)arg1 aboveValue:(double)arg2 forTime:(double)arg3;
- (BOOL)indexes:(id)arg1 belowValue:(double)arg2 forTime:(double)arg3;
- (id)_initWithSampleCount:(long long)arg1;

@end

