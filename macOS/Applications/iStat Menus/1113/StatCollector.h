//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "StatCollectorBase.h"

@class NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, StatCollectorItem;

@interface StatCollector : StatCollectorBase
{
    struct sampleindexconfig sampleIndex[1];
    struct samplepeaks samplePeaks[8];
    struct statsample emptyValue;
    BOOL _usesSmallSamples;
    BOOL _preparedDatabase;
    BOOL _temporary;
    BOOL _databaseEnabled;
    BOOL _enabled;
    BOOL _newSession;
    BOOL _stopped;
    BOOL _automaticSampleUpdates;
    BOOL _needsUpdate;
    BOOL _childrenChanged;
    NSString *_selectionKey;
    StatCollectorItem *_activeItem;
    long long _storageType;
    NSString *_dbTablePrefix;
    NSMutableDictionary *_config;
    NSMutableArray *_delegates;
    CDUnknownBlockType _defaultUpdaterBlock;
    CDUnknownBlockType _updaterBlock;
    CDUnknownBlockType _updaterFinishBlock;
    NSObject<OS_dispatch_queue> *_queue;
    long long _sampleValueCount;
    long long _session;
    long long _updateSequence;
    NSString *_dbpath;
    NSString *_dbpathLong;
    NSMutableArray *_items;
    long long _protocolVersion;
    NSMutableArray *_dbTables;
    NSMutableArray *_dbTablesItems;
}

+ (void)cleanup;
+ (long long)storageType;
+ (long long)sampleCount;
@property(retain, nonatomic) NSMutableArray *dbTablesItems; // @synthesize dbTablesItems=_dbTablesItems;
@property(retain, nonatomic) NSMutableArray *dbTables; // @synthesize dbTables=_dbTables;
@property(nonatomic) long long protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSString *dbpathLong; // @synthesize dbpathLong=_dbpathLong;
@property(retain, nonatomic) NSString *dbpath; // @synthesize dbpath=_dbpath;
@property(nonatomic) BOOL childrenChanged; // @synthesize childrenChanged=_childrenChanged;
@property(nonatomic) BOOL needsUpdate; // @synthesize needsUpdate=_needsUpdate;
@property(nonatomic) long long updateSequence; // @synthesize updateSequence=_updateSequence;
@property(nonatomic) long long session; // @synthesize session=_session;
@property(nonatomic) BOOL automaticSampleUpdates; // @synthesize automaticSampleUpdates=_automaticSampleUpdates;
@property(nonatomic) BOOL stopped; // @synthesize stopped=_stopped;
@property(nonatomic) BOOL newSession; // @synthesize newSession=_newSession;
@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) BOOL databaseEnabled; // @synthesize databaseEnabled=_databaseEnabled;
@property(nonatomic) BOOL temporary; // @synthesize temporary=_temporary;
@property(nonatomic) BOOL preparedDatabase; // @synthesize preparedDatabase=_preparedDatabase;
@property(nonatomic) long long sampleValueCount; // @synthesize sampleValueCount=_sampleValueCount;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType updaterFinishBlock; // @synthesize updaterFinishBlock=_updaterFinishBlock;
@property(copy, nonatomic) CDUnknownBlockType updaterBlock; // @synthesize updaterBlock=_updaterBlock;
@property(copy, nonatomic) CDUnknownBlockType defaultUpdaterBlock; // @synthesize defaultUpdaterBlock=_defaultUpdaterBlock;
@property(retain, nonatomic) NSMutableArray *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSMutableDictionary *config; // @synthesize config=_config;
@property(copy, nonatomic) NSString *dbTablePrefix; // @synthesize dbTablePrefix=_dbTablePrefix;
@property(nonatomic) long long storageType; // @synthesize storageType=_storageType;
@property(retain, nonatomic) StatCollectorItem *activeItem; // @synthesize activeItem=_activeItem;
@property(copy, nonatomic) NSString *selectionKey; // @synthesize selectionKey=_selectionKey;
@property(nonatomic) BOOL usesSmallSamples; // @synthesize usesSmallSamples=_usesSmallSamples;
- (void).cxx_destruct;
- (BOOL)updatedForInterval:(long long)arg1;
- (void)setUpdated:(BOOL)arg1 forInterval:(long long)arg2;
- (void)itemLoadedValues:(id)arg1;
- (void)removeSelectionKeyItem:(id)arg1;
- (void)addSelectionKeyItem:(id)arg1;
- (id)emptySampleWithIdentifier:(double)arg1 time:(double)arg2;
- (struct statsample)sampleWithIdentifier:(double)arg1 type:(long long)arg2;
- (id)attributeFromAttributes:(id)arg1;
- (BOOL)removeOldItems;
- (void)sort;
- (id)itemWithKey:(id)arg1;
- (Class)itemClass;
- (id)newItemWithKey:(id)arg1;
- (id)itemWithKey:(id)arg1 temporary:(BOOL)arg2;
- (id)historyItemsForIndex:(long long)arg1;
- (id)historyItemForIndex:(long long)arg1;
- (void)addSample:(id)arg1 storageIndex:(long long)arg2 sampleID:(double)arg3 index:(long long)arg4;
- (void)addSample:(id)arg1 storageIndex:(long long)arg2 sampleID:(double)arg3;
- (void)addSample:(id)arg1 storageIndex:(long long)arg2;
- (void)addSample:(id)arg1 storageIndex:(long long)arg2 index:(long long)arg3;
- (id)averagesForIndex:(long long)arg1;
- (void)clearAllStorages;
- (double)lowestSampleForStorageType:(long long)arg1;
- (id)historySampleForIndex:(long long)arg1;
- (struct statsample)sampleAtIndex:(long long)arg1 type:(long long)arg2;
- (double)lastIDForType:(long long)arg1;
- (double)lastTimeForType:(long long)arg1;
- (struct statsample *)storageForType:(long long)arg1;
- (id)sampleItemsSinceID:(double)arg1 type:(long long)arg2;
- (id)overview;
- (void)setID:(double)arg1 forInterval:(long long)arg2;
- (double)idForInterval:(long long)arg1;
- (void)clearStorageForType:(long long)arg1;
- (void)setNeedsUpdate;
- (double)updateFrequencyForVersion:(long long)arg1;
- (void)insertSampleWithIndex:(long long)arg1;
- (void)updateSamplesAndLogging;
- (void)resetUpdateSequence;
- (BOOL)threadedUpdating;
- (BOOL)shouldUpdateStateForSequence:(long long)arg1;
- (void)_updateSamplesAndLogging;
- (void)updateHistory;
- (void)startLogging;
- (void)checkNextTimeAtIndex:(long long)arg1;
- (void)fillGaps;
- (void)fillGapsAtIndex:(long long)arg1;
- (void)updateStats:(long long)arg1;
- (void)updateStats;
- (void)addLongTermSample:(id)arg1;
- (void)cleanup;
- (void)dealloc;
- (void)enableDatabase;
- (void)sleep:(id)arg1;
- (void)wake:(id)arg1;
- (struct sampleindexconfig *)sampleIndex;
- (id)init;
- (struct sampleindexconfig)sampleIndex:(long long)arg1;
- (BOOL)indexes:(id)arg1 aboveValue:(double)arg2 forTime:(double)arg3;
- (BOOL)indexes:(id)arg1 belowValue:(double)arg2 forTime:(double)arg3;
- (void)freeFullStorage;
- (id)_initWithSampleCount:(long long)arg1;
- (struct samplepeaks *)samplePeaks;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;

@end

