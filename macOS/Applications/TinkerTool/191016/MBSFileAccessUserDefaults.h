//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MBSUserDefaultsFileObserver, NSMutableDictionary, NSString, NSURL;

@interface MBSFileAccessUserDefaults : NSObject
{
    NSMutableDictionary *_cacheByDomain;
    NSString *_homeFolderPath;
    NSURL *_userDefaultsBookmark;
    NSURL *_containersBookmark;
    NSURL *_systemDefaultsBookmark;
    MBSUserDefaultsFileObserver *_userDefaultsObserver;
    MBSUserDefaultsFileObserver *_systemDefaultsObserver;
    MBSUserDefaultsFileObserver *_sandboxObserver;
}

+ (void)enableLogWriteOperationsDuringSynchronization:(BOOL)arg1;
+ (id)legacyKeysForLocaleAccess;
+ (BOOL)isValidObjectForUserDefaults:(id)arg1;
+ (id)hostIdentifierAsUUIDString;
+ (unsigned long long)lastObjectCreationError;
+ (id)isSecurityScopedAccessPossibleForURLsWithBookmarkKeys:(id)arg1;
+ (BOOL)getURLsForCompleteDefaultsAccess:(id *)arg1 localizedTitles:(id *)arg2 securityScopedBookmarkKeys:(id *)arg3;
+ (BOOL)isCompleteDefaultsAccessViaSecurityScopedBookmarksPossible;
+ (BOOL)isCompleteDefaultsAccessPossible;
+ (id)userDefaults;
@property(readonly) MBSUserDefaultsFileObserver *sandboxObserver; // @synthesize sandboxObserver=_sandboxObserver;
@property(readonly) MBSUserDefaultsFileObserver *systemDefaultsObserver; // @synthesize systemDefaultsObserver=_systemDefaultsObserver;
@property(readonly) MBSUserDefaultsFileObserver *userDefaultsObserver; // @synthesize userDefaultsObserver=_userDefaultsObserver;
@property(readonly) NSURL *systemDefaultsBookmark; // @synthesize systemDefaultsBookmark=_systemDefaultsBookmark;
@property(readonly) NSURL *containersBookmark; // @synthesize containersBookmark=_containersBookmark;
@property(readonly) NSURL *userDefaultsBookmark; // @synthesize userDefaultsBookmark=_userDefaultsBookmark;
@property(readonly) NSString *homeFolderPath; // @synthesize homeFolderPath=_homeFolderPath;
@property(readonly) NSMutableDictionary *cacheByDomain; // @synthesize cacheByDomain=_cacheByDomain;
- (void).cxx_destruct;
- (id)effectiveDestinationURLForWriteOperationAtURL:(id)arg1;
- (BOOL)savePersistentValuesForCacheEntry:(id)arg1 error:(id *)arg2;
- (BOOL)saveCacheEntryIfNecessary:(id)arg1;
- (id)userDefaultsValuesFromURL:(id)arg1 usingCachedSearchPathElement:(id)arg2;
- (id)domainNameSetForAnyUser:(BOOL)arg1 anyHost:(BOOL)arg2 atPreferencesURL:(id)arg3 filteredByDomain:(id)arg4;
- (BOOL)objectIsForcedForKey:(id)arg1 inDomain:(id)arg2;
- (BOOL)objectIsForcedForKey:(id)arg1;
- (void)setPersistentDomain:(id)arg1 forName:(id)arg2;
- (void)removePersistentDomainForName:(id)arg1;
- (id)persistentDomainNames;
- (id)persistentDomainForName:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (id)dictionaryRepresentation;
- (double)doubleForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (float)floatForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (BOOL)boolForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (void)resetUnsynchronizedChangesForDomain:(id)arg1;
- (BOOL)synchronize;
- (BOOL)synchronizeDomain:(id)arg1 anyUser:(BOOL)arg2 anyHost:(BOOL)arg3;
- (void)removeValueForKey:(id)arg1 inDomain:(id)arg2 anyUser:(BOOL)arg3 anyHost:(BOOL)arg4;
- (void)setValue:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3 anyUser:(BOOL)arg4 anyHost:(BOOL)arg5;
- (id)valueForKey:(id)arg1 ofDomain:(id)arg2 anyUser:(BOOL)arg3 anyHost:(BOOL)arg4;
- (id)allValuesOfDomain:(id)arg1 anyUser:(BOOL)arg2 anyHost:(BOOL)arg3;
- (BOOL)getScopesAnyUser:(char *)arg1 anyHost:(char *)arg2 forSearchPathIndex:(unsigned long long)arg3;
- (unsigned long long)indexInNonGlobalSearchPathForAnyUser:(BOOL)arg1 anyHost:(BOOL)arg2;
- (id)legacyDomainForLanguages;
- (id)effectivePersistentDomainValuesForDomain:(id)arg1;
- (id)domainValuesInSearchPathOrderForDomain:(id)arg1;
- (id)persistentNonGlobalDomainValuesInSearchPathOrderForDomain:(id)arg1;
- (BOOL)getAffectedDomain:(id *)arg1 anyUser:(char *)arg2 anyHost:(char *)arg3 sandboxContainer:(id *)arg4 forURL:(id)arg5;
- (BOOL)isSandboxProtectedDomain:(id)arg1;
- (id)domainNamesForAnyUser:(BOOL)arg1 anyHost:(BOOL)arg2;
- (id)preferencesURLsForSearchPathWithoutGlobalsForDomain:(id)arg1;
- (id)preferencesFileURLForDomain:(id)arg1 anyUser:(BOOL)arg2 anyHost:(BOOL)arg3 usingSandboxContainer:(id)arg4;
- (id)folderURLForAnyUser:(BOOL)arg1 anyHost:(BOOL)arg2 usingSandboxContainer:(id)arg3;
- (void)observeURL:(id)arg1 forChange:(unsigned long long)arg2 reportedBy:(id)arg3;
- (void)applicationWillTerminate:(id)arg1;
- (void)dealloc;
- (id)init;

@end

