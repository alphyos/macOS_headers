//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@protocol OS_dispatch_queue;

@interface KIODBStore : NSObject
{
    struct keen_io_sqlite3 *keen_dbname;
    BOOL dbIsOpen;
    struct keen_io_sqlite3_stmt *insert_event_stmt;
    struct keen_io_sqlite3_stmt *find_event_stmt;
    struct keen_io_sqlite3_stmt *count_all_events_stmt;
    struct keen_io_sqlite3_stmt *count_pending_events_stmt;
    struct keen_io_sqlite3_stmt *make_pending_event_stmt;
    struct keen_io_sqlite3_stmt *reset_pending_events_stmt;
    struct keen_io_sqlite3_stmt *purge_events_stmt;
    struct keen_io_sqlite3_stmt *delete_event_stmt;
    struct keen_io_sqlite3_stmt *delete_all_events_stmt;
    struct keen_io_sqlite3_stmt *increment_event_attempts_statement;
    struct keen_io_sqlite3_stmt *delete_too_many_attempts_events_statement;
    struct keen_io_sqlite3_stmt *age_out_events_stmt;
    struct keen_io_sqlite3_stmt *insert_query_stmt;
    struct keen_io_sqlite3_stmt *count_all_queries_stmt;
    struct keen_io_sqlite3_stmt *get_query_stmt;
    struct keen_io_sqlite3_stmt *get_query_with_attempts_stmt;
    struct keen_io_sqlite3_stmt *increment_query_attempts_statement;
    struct keen_io_sqlite3_stmt *delete_all_queries_stmt;
    struct keen_io_sqlite3_stmt *age_out_queries_stmt;
    NSObject<OS_dispatch_queue> *_dbQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dbQueue; // @synthesize dbQueue=_dbQueue;
- (void).cxx_destruct;
- (void)handleSQLiteFailure:(id)arg1;
- (BOOL)prepareAllSQLiteStatements;
- (void)resetSQLiteStatement:(struct keen_io_sqlite3_stmt *)arg1;
- (BOOL)prepareSQLStatement:(struct keen_io_sqlite3_stmt **)arg1 sqlQuery:(char *)arg2 failureMessage:(id)arg3;
- (BOOL)checkOpenDB:(id)arg1;
- (void)deleteQueriesOlderThan:(id)arg1;
- (void)deleteAllQueries;
- (BOOL)hasQueryWithMaxAttempts:(id)arg1 queryType:(id)arg2 collection:(id)arg3 projectID:(id)arg4 maxAttempts:(int)arg5 queryTTL:(int)arg6;
- (unsigned long long)getTotalQueryCountWithProjectID:(id)arg1;
- (void)findOrUpdateQuery:(id)arg1 queryType:(id)arg2 collection:(id)arg3 projectID:(id)arg4;
- (BOOL)incrementQueryAttempts:(id)arg1;
- (id)getQuery:(id)arg1 queryType:(id)arg2 collection:(id)arg3 projectID:(id)arg4;
- (BOOL)addQuery:(id)arg1 queryType:(id)arg2 collection:(id)arg3 projectID:(id)arg4;
- (void)purgePendingEventsWithProjectID:(id)arg1;
- (void)incrementEventUploadAttempts:(id)arg1;
- (void)deleteEventsFromOffset:(id)arg1;
- (void)deleteAllEvents;
- (void)deleteEvent:(id)arg1;
- (unsigned long long)getTotalEventCountWithProjectID:(id)arg1;
- (unsigned long long)getPendingEventCountWithProjectID:(id)arg1;
- (BOOL)hasPendingEventsWithProjectID:(id)arg1;
- (void)resetPendingEventsWithProjectID:(id)arg1;
- (id)getEventsWithMaxAttempts:(int)arg1 andProjectID:(id)arg2;
- (BOOL)addEvent:(id)arg1 collection:(id)arg2 projectID:(id)arg3;
- (BOOL)endTransaction;
- (BOOL)rollbackTransaction;
- (BOOL)commitTransaction;
- (BOOL)beginTransaction;
- (BOOL)doTransaction:(id)arg1;
- (int)runMigration:(int)arg1;
- (BOOL)migrateFromVersion:(int)arg1;
- (BOOL)migrateTable;
- (BOOL)setUserVersion:(int)arg1;
- (int)queryUserVersion;
- (BOOL)createTables;
- (void)closeDB;
- (BOOL)openAndInitDB;
- (BOOL)openDB;
- (id)init;

@end

