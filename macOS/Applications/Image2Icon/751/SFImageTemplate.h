//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSSecureCoding-Protocol.h"

@class NSColor, NSDictionary, NSNumber;

@interface SFImageTemplate : NSObject <NSSecureCoding>
{
    BOOL _imageCover;
    int _resizeType;
    int _type;
    NSNumber *_imageHaveTransparentPixels;
    double _horizzontalOffSet;
    double _verticalOffset;
    double _zoom;
    double _alpha;
    double _rotation;
    NSColor *_backgroundColor;
    double _defaultX;
    double _defaultY;
    double _defaultWidth;
    double _defaultHeight;
    double _defaultRotation;
    NSColor *_defaultBackgroundColor;
    NSDictionary *_settingsDefaults;
}

+ (BOOL)supportsSecureCoding;
+ (id)CIImageFromBundleResurcePath:(id)arg1 type:(id)arg2 andSize:(struct CGSize)arg3;
+ (struct CGRect)reconvertRect:(struct CGRect)arg1 forSize:(struct CGSize)arg2;
+ (struct CGRect)convertRect:(struct CGRect)arg1 forSize:(struct CGSize)arg2;
+ (double)reconvertDimension:(double)arg1 forSize:(double)arg2;
+ (double)convertDimension:(double)arg1 forSize:(double)arg2;
+ (id)templateWithName:(int)arg1;
@property int type; // @synthesize type=_type;
@property(retain) NSDictionary *settingsDefaults; // @synthesize settingsDefaults=_settingsDefaults;
@property int resizeType; // @synthesize resizeType=_resizeType;
@property(retain) NSColor *defaultBackgroundColor; // @synthesize defaultBackgroundColor=_defaultBackgroundColor;
@property double defaultRotation; // @synthesize defaultRotation=_defaultRotation;
@property double defaultHeight; // @synthesize defaultHeight=_defaultHeight;
@property double defaultWidth; // @synthesize defaultWidth=_defaultWidth;
@property double defaultY; // @synthesize defaultY=_defaultY;
@property double defaultX; // @synthesize defaultX=_defaultX;
@property(retain) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property double rotation; // @synthesize rotation=_rotation;
@property double alpha; // @synthesize alpha=_alpha;
@property double zoom; // @synthesize zoom=_zoom;
@property double verticalOffset; // @synthesize verticalOffset=_verticalOffset;
@property double horizzontalOffSet; // @synthesize horizzontalOffSet=_horizzontalOffSet;
@property BOOL imageCover; // @synthesize imageCover=_imageCover;
@property(retain) NSNumber *imageHaveTransparentPixels; // @synthesize imageHaveTransparentPixels=_imageHaveTransparentPixels;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGRect)calcolateRectForSize:(struct CGSize)arg1 andImageSize:(struct CGSize)arg2;
- (void)calcolatePositioningForThumbWithImageSize:(struct CGSize)arg1 andRect:(struct CGRect)arg2;
- (void)calcolatePositioningForCoverWithImageSize:(struct CGSize)arg1 andRect:(struct CGRect)arg2;
- (struct CGSize)calcolateDefaultValuesForPopOverWithImage:(id)arg1;
- (struct CGSize)calcolateImageSizeForImage:(id)arg1;
- (id)applyBackgroundColorToImage:(id)arg1 mask:(id)arg2 andSize:(struct CGSize)arg3;
- (void)setDefaultValuesForText;
- (void)setDefaultValues;
- (id)rotateImage:(id)arg1;
- (id)applyAlphaToImage:(id)arg1;
- (int)resizeTypeForText;
- (BOOL)isLocked;
- (id)unlocalizatedTemplateDescription;
- (id)templateDescription;
- (BOOL)shadowPrerendered;
- (id)applyTemplateToImage:(id)arg1 forSize:(struct CGSize)arg2;
- (id)applyTemplateToTextImage:(id)arg1 forSize:(struct CGSize)arg2;
- (void)initilize;
- (id)init;

@end

