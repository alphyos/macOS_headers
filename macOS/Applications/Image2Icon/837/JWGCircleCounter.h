//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

@class NSColor, NSDate, NSTimer;

@interface JWGCircleCounter : NSView
{
    BOOL _didStart;
    BOOL _isRunning;
    BOOL _didFinish;
    id <JWGCircleCounterDelegate> _delegate;
    NSColor *_circleColor;
    NSColor *_circleBackgroundColor;
    double _circleTimerWidth;
    double _elapsedTime;
    NSTimer *_timer;
    NSDate *_lastStartTime;
    double _totalTime;
    double _completedTimeUpToLastStop;
    NSTimer *_resetTimer;
}

+ (void)validateInputTime:(long long)arg1;
+ (id)defaultAnimationForKey:(id)arg1;
@property(retain, nonatomic) NSTimer *resetTimer; // @synthesize resetTimer=_resetTimer;
@property(nonatomic) double completedTimeUpToLastStop; // @synthesize completedTimeUpToLastStop=_completedTimeUpToLastStop;
@property(nonatomic) double totalTime; // @synthesize totalTime=_totalTime;
@property(retain, nonatomic) NSDate *lastStartTime; // @synthesize lastStartTime=_lastStartTime;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(readonly, nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property(readonly, nonatomic) BOOL didFinish; // @synthesize didFinish=_didFinish;
@property(readonly, nonatomic) BOOL isRunning; // @synthesize isRunning=_isRunning;
@property(readonly, nonatomic) BOOL didStart; // @synthesize didStart=_didStart;
@property(nonatomic) double circleTimerWidth; // @synthesize circleTimerWidth=_circleTimerWidth;
@property(retain, nonatomic) NSColor *circleBackgroundColor; // @synthesize circleBackgroundColor=_circleBackgroundColor;
@property(retain, nonatomic) NSColor *circleColor; // @synthesize circleColor=_circleColor;
@property(retain, nonatomic) id <JWGCircleCounterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (void)timerCompleted;
- (void)reset;
- (void)stop;
- (void)resume;
- (void)timerFired;
- (void)startWithSeconds:(double)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)baseInit;

@end

