//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "LPWebSocketServerDelegate-Protocol.h"

@class LPAppController, LPHTTPServer, LPProject, LPTLS, LPWebSocketServer, NSString, NSTimer, NSURL;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface LPServerController : NSObject <LPWebSocketServerDelegate>
{
    LPAppController *_appController;
    LPProject *_lastActiveProject;
    BOOL _initalized;
    BOOL _useTLS;
    LPHTTPServer *_httpServer;
    NSURL *_httpServerURL;
    NSURL *_httpServerNonBonjourURL;
    LPWebSocketServer *_websocketServer;
    NSObject<OS_dispatch_queue> *_websocketServerDelegateQueue;
    BOOL _refreshAvailable;
    long long _queuedRefresh;
    NSTimer *_delayedRefreshTimer;
    NSTimer *_heartbeatTimer;
    BOOL _webSocketServerRunning;
    BOOL _webSocketServerIsStarting;
    BOOL _httpServerRunning;
    BOOL _httpServerIsStarting;
    BOOL _httpServerIsUpdatingAddresses;
    BOOL _reachabilityRestartQueued;
    BOOL _mampCachingCheckComplete;
    long long _state;
    LPTLS *_tlsManager;
}

@property BOOL useTLS; // @synthesize useTLS=_useTLS;
@property(retain, nonatomic) LPTLS *tlsManager; // @synthesize tlsManager=_tlsManager;
@property(retain) NSURL *httpServerNonBonjourURL; // @synthesize httpServerNonBonjourURL=_httpServerNonBonjourURL;
@property(retain) NSURL *httpServerURL; // @synthesize httpServerURL=_httpServerURL;
@property long long state; // @synthesize state=_state;
- (void)editMampPHPINI;
- (void)checkMAMPCaching;
@property BOOL webSocketServerIsStarting;
@property BOOL webSocketServerRunning;
@property BOOL httpServerIsUpdatingAddresses;
@property BOOL httpServerIsStarting;
@property BOOL httpServerRunning;
- (void)updateState;
- (id)URLStringWithCacheBusterFromURLString:(id)arg1;
- (id)currentIPAndPopuplateAllIPs:(id *)arg1;
- (id)currentHostnameAndPopulateAllHostnames:(id *)arg1;
- (void)restartAllServersInBackgroundAndForceNewCACertificate:(BOOL)arg1;
- (void)stopWebSocketServer;
- (void)stopHTTPServer;
- (void)regenerateTLSCertificatesFromUI;
- (void)restartServersFromUI;
- (void)handleClientMessage:(id)arg1 fromSocketWithSessionID:(unsigned long long)arg2;
- (void)setQueuedRefresh:(long long)arg1;
- (void)setRefreshAvailable:(BOOL)arg1;
- (void)heartbeatTimerTrigger:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (void)processQueuedRefresh;
- (void)delayedRefreshTimerHandler;
- (void)executeRefreshOfType:(long long)arg1;
- (id)previewURLWithLocalhost;
- (id)previewURLWithoutBonjour;
- (id)previewURLWithBonjour;
- (void)refreshBrowsersAndAllowInjection:(BOOL)arg1;
- (void)refreshBrowsersAndAllowInjection:(BOOL)arg1 afterDelay:(double)arg2;
- (void)previewInBrowserWithBundleID:(id)arg1 andAddressType:(long long)arg2;
- (void)previewInBrowser:(long long)arg1 withAddressType:(long long)arg2;
- (void)updateServerSettingsAndResetToRoot:(BOOL)arg1;
- (void)handleChangedSettingsOnActiveProject;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)initializeServersAndForceNewCACertificate:(BOOL)arg1;
- (void)initializeServers;
- (void)dealloc;
- (id)initWithAppController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

