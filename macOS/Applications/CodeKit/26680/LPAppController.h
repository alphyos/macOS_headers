//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSWindowController.h>

#import "GrowlApplicationBridgeDelegate-Protocol.h"
#import "NSUserNotificationCenterDelegate-Protocol.h"

@class LPAboutWindowController, LPBowerInspectorViewController, LPBowerListScopePopoverViewController, LPBowerListViewController, LPBuildViewController, LPCommandPaneViewController, LPCompiler, LPDocsPopoverViewController, LPEmptyAppViewController, LPFileInspectorViewController, LPFilesListScopePopoverViewController, LPFilesListViewController, LPFilesTreeController, LPLogsScopePopoverViewController, LPLogsViewController, LPMainSplitViewController, LPMainWindow, LPModelController, LPProjectsPaneViewController, LPProjectsPopoverViewController, LPProjectsTreeController, LPServerController, LPServerPopoverViewController, LPSettingsInspectorViewController, LPSettingsListViewController, LPSpinnerItem, LPSplitViewItem, NSArray, NSButton, NSDictionary, NSMutableArray, NSMutableSet, NSProgressIndicator, NSString, NSTextField, NSView;

__attribute__((visibility("hidden")))
@interface LPAppController : NSWindowController <GrowlApplicationBridgeDelegate, NSUserNotificationCenterDelegate>
{
    NSView *_spinnerContainerView;
    NSProgressIndicator *_spinner;
    NSTextField *_spinnerLabel;
    NSButton *_spinnerCancelButton;
    NSMutableArray *_spinnerItems;
    long long _spinnerStatus;
    NSMutableSet *_spinnerItemsScheduledToPop;
    NSArray *_growlNotifications;
    NSDictionary *_humanReadableGrowlNames;
    NSView *_newCompassProjectAccessoryView;
    NSView *_newFoundationProjectAccessoryView;
    NSView *_newWebStarterKitProjectAccessoryView;
    LPMainWindow *_appWindow;
    LPCompiler *_appCompiler;
    LPModelController *_modelController;
    LPServerController *_serverController;
    LPMainSplitViewController *_mainSplitViewController;
    LPProjectsTreeController *_projectsTreeController;
    LPFilesTreeController *_filesTreeController;
    LPProjectsPaneViewController *_projectsPaneViewController;
    LPProjectsPopoverViewController *_projectsPopoverViewController;
    LPServerPopoverViewController *_serverPopoverViewController;
    LPCommandPaneViewController *_commandPaneViewController;
    LPFilesListViewController *_filesListViewController;
    LPFileInspectorViewController *_fileInspectorViewController;
    LPFilesListScopePopoverViewController *_filesListScopePopoverViewController;
    LPBowerListViewController *_bowerListViewController;
    LPBowerInspectorViewController *_bowerInspectorViewController;
    LPBowerListScopePopoverViewController *_bowerListScopePopoverViewController;
    LPSettingsListViewController *_settingsListViewController;
    LPSettingsInspectorViewController *_settingsInspectorViewController;
    LPDocsPopoverViewController *_docsPopoverViewController;
    LPLogsViewController *_logsViewController;
    LPLogsScopePopoverViewController *_logsScopePopoverViewController;
    LPEmptyAppViewController *_emptyAppViewController;
    LPBuildViewController *_buildViewController;
    LPAboutWindowController *_aboutWindowController;
    NSView *_outputPathPanelAccessoryView;
    NSTextField *_outputPathPanelAccessoryViewTextField;
    LPSpinnerItem *_activeSpinnerItem;
    LPSplitViewItem *_projectsPaneSplitViewItem;
    LPSplitViewItem *_commandPaneSplitViewItem;
    LPSplitViewItem *_fileInspectorSplitViewItem;
    LPSplitViewItem *_settingsInspectorSplitViewItem;
    LPSplitViewItem *_bowerInspectorSplitViewItem;
}

@property(retain, nonatomic) LPSplitViewItem *bowerInspectorSplitViewItem; // @synthesize bowerInspectorSplitViewItem=_bowerInspectorSplitViewItem;
@property(retain, nonatomic) LPSplitViewItem *settingsInspectorSplitViewItem; // @synthesize settingsInspectorSplitViewItem=_settingsInspectorSplitViewItem;
@property(retain, nonatomic) LPSplitViewItem *fileInspectorSplitViewItem; // @synthesize fileInspectorSplitViewItem=_fileInspectorSplitViewItem;
@property(retain, nonatomic) LPSplitViewItem *commandPaneSplitViewItem; // @synthesize commandPaneSplitViewItem=_commandPaneSplitViewItem;
@property(retain, nonatomic) LPSplitViewItem *projectsPaneSplitViewItem; // @synthesize projectsPaneSplitViewItem=_projectsPaneSplitViewItem;
@property(retain, nonatomic) LPSpinnerItem *activeSpinnerItem; // @synthesize activeSpinnerItem=_activeSpinnerItem;
@property(readonly, nonatomic) NSView *spinnerContainerView; // @synthesize spinnerContainerView=_spinnerContainerView;
@property(readonly, nonatomic) long long spinnerStatus; // @synthesize spinnerStatus=_spinnerStatus;
@property(nonatomic) NSTextField *outputPathPanelAccessoryViewTextField; // @synthesize outputPathPanelAccessoryViewTextField=_outputPathPanelAccessoryViewTextField;
@property(nonatomic) NSView *outputPathPanelAccessoryView; // @synthesize outputPathPanelAccessoryView=_outputPathPanelAccessoryView;
@property(retain, nonatomic) LPAboutWindowController *aboutWindowController; // @synthesize aboutWindowController=_aboutWindowController;
@property(retain, nonatomic) LPBuildViewController *buildViewController; // @synthesize buildViewController=_buildViewController;
@property(retain, nonatomic) LPEmptyAppViewController *emptyAppViewController; // @synthesize emptyAppViewController=_emptyAppViewController;
@property(retain, nonatomic) LPLogsScopePopoverViewController *logsScopePopoverViewController; // @synthesize logsScopePopoverViewController=_logsScopePopoverViewController;
@property(retain, nonatomic) LPLogsViewController *logsViewController; // @synthesize logsViewController=_logsViewController;
@property(retain, nonatomic) LPDocsPopoverViewController *docsPopoverViewController; // @synthesize docsPopoverViewController=_docsPopoverViewController;
@property(retain, nonatomic) LPSettingsInspectorViewController *settingsInspectorViewController; // @synthesize settingsInspectorViewController=_settingsInspectorViewController;
@property(retain, nonatomic) LPSettingsListViewController *settingsListViewController; // @synthesize settingsListViewController=_settingsListViewController;
@property(retain, nonatomic) LPBowerListScopePopoverViewController *bowerListScopePopoverViewController; // @synthesize bowerListScopePopoverViewController=_bowerListScopePopoverViewController;
@property(retain, nonatomic) LPBowerInspectorViewController *bowerInspectorViewController; // @synthesize bowerInspectorViewController=_bowerInspectorViewController;
@property(retain, nonatomic) LPBowerListViewController *bowerListViewController; // @synthesize bowerListViewController=_bowerListViewController;
@property(retain, nonatomic) LPFilesListScopePopoverViewController *filesListScopePopoverViewController; // @synthesize filesListScopePopoverViewController=_filesListScopePopoverViewController;
@property(retain, nonatomic) LPFileInspectorViewController *fileInspectorViewController; // @synthesize fileInspectorViewController=_fileInspectorViewController;
@property(retain, nonatomic) LPFilesListViewController *filesListViewController; // @synthesize filesListViewController=_filesListViewController;
@property(retain, nonatomic) LPCommandPaneViewController *commandPaneViewController; // @synthesize commandPaneViewController=_commandPaneViewController;
@property(retain, nonatomic) LPServerPopoverViewController *serverPopoverViewController; // @synthesize serverPopoverViewController=_serverPopoverViewController;
@property(retain, nonatomic) LPProjectsPopoverViewController *projectsPopoverViewController; // @synthesize projectsPopoverViewController=_projectsPopoverViewController;
@property(retain, nonatomic) LPProjectsPaneViewController *projectsPaneViewController; // @synthesize projectsPaneViewController=_projectsPaneViewController;
@property(retain, nonatomic) LPFilesTreeController *filesTreeController; // @synthesize filesTreeController=_filesTreeController;
@property(retain, nonatomic) LPProjectsTreeController *projectsTreeController; // @synthesize projectsTreeController=_projectsTreeController;
@property(retain, nonatomic) LPMainSplitViewController *mainSplitViewController; // @synthesize mainSplitViewController=_mainSplitViewController;
@property(retain, nonatomic) LPServerController *serverController; // @synthesize serverController=_serverController;
@property(retain, nonatomic) LPModelController *modelController; // @synthesize modelController=_modelController;
@property(readonly, nonatomic) LPCompiler *appCompiler; // @synthesize appCompiler=_appCompiler;
@property(retain, nonatomic) LPMainWindow *appWindow; // @synthesize appWindow=_appWindow;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)growlWithNoteName:(id)arg1 message:(id)arg2 title:(id)arg3;
- (id)applicationNameForGrowl;
- (id)registrationDictionaryForGrowl;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)spinnerCancelButtonAction:(id)arg1;
- (void)updateSpinner;
- (void)popSpinnerItem:(id)arg1 removeImmediately:(BOOL)arg2;
- (void)pushSpinnerItem:(id)arg1;
- (void)displayDefaultsForNewProjects;
- (void)saveWindowState;
- (void)trialButtonAction:(id)arg1;
- (void)logAppMessage:(id)arg1 switchToLog:(BOOL)arg2 beep:(BOOL)arg3;
- (void)openHelpWebsite;
- (void)toggleProjectsSidebar:(id)arg1;
- (void)handleNotification:(id)arg1;
- (void)registerForNotifications;
- (void)respondToDockTileDropWithPath:(id)arg1;
- (BOOL)mainWindowShouldPerformDragOperation:(id)arg1 isFrameworkDrop:(BOOL)arg2;
- (unsigned long long)draggingEnteredMainWindow:(id)arg1;
- (void)buildProject:(id)arg1;
- (void)createNewWebStarterKitProjectAction:(id)arg1;
- (void)createNewZurbFoundationProjectAction:(id)arg1;
- (void)createNewCompassProjectAction:(id)arg1;
- (void)addFrameworkAction:(id)arg1;
- (void)addProjectAction:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithWindowNibName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

