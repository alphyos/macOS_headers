//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FConnectionDelegate.h"

@class FAtomicNumber, FConnection, FIRDatabaseConfig, FIRRetryHelper, FRepoInfo, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSString;

@interface FPersistentConnection : NSObject <FConnectionDelegate>
{
    int connectionState;
    BOOL firstConnection;
    double reconnectDelay;
    double lastConnectionAttemptTime;
    double lastConnectionEstablishedTime;
    struct __SCNetworkReachability *reachability;
    BOOL _pauseWrites;
    BOOL _forceAuthTokenRefresh;
    id <FPersistentConnectionDelegate> _delegate;
    FConnection *_realtime;
    NSMutableDictionary *_listens;
    NSMutableDictionary *_outstandingPuts;
    NSMutableArray *_onDisconnectQueue;
    FRepoInfo *_repoInfo;
    FAtomicNumber *_putCounter;
    FAtomicNumber *_requestNumber;
    NSMutableDictionary *_requestCBHash;
    FIRDatabaseConfig *_config;
    unsigned long long _unackedListensCount;
    NSMutableArray *_putsToAck;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSString *_lastSessionID;
    NSMutableSet *_interruptReasons;
    FIRRetryHelper *_retryHelper;
    id <FAuthTokenProvider> _authTokenProvider;
    NSString *_authToken;
    unsigned long long _currentFetchTokenAttempt;
}

@property(nonatomic) unsigned long long currentFetchTokenAttempt; // @synthesize currentFetchTokenAttempt=_currentFetchTokenAttempt;
@property(nonatomic) BOOL forceAuthTokenRefresh; // @synthesize forceAuthTokenRefresh=_forceAuthTokenRefresh;
@property(retain, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(retain, nonatomic) id <FAuthTokenProvider> authTokenProvider; // @synthesize authTokenProvider=_authTokenProvider;
@property(retain, nonatomic) FIRRetryHelper *retryHelper; // @synthesize retryHelper=_retryHelper;
@property(retain, nonatomic) NSMutableSet *interruptReasons; // @synthesize interruptReasons=_interruptReasons;
@property(retain, nonatomic) NSString *lastSessionID; // @synthesize lastSessionID=_lastSessionID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(retain, nonatomic) NSMutableArray *putsToAck; // @synthesize putsToAck=_putsToAck;
@property(nonatomic) unsigned long long unackedListensCount; // @synthesize unackedListensCount=_unackedListensCount;
@property(retain, nonatomic) FIRDatabaseConfig *config; // @synthesize config=_config;
@property(retain, nonatomic) NSMutableDictionary *requestCBHash; // @synthesize requestCBHash=_requestCBHash;
@property(retain, nonatomic) FAtomicNumber *requestNumber; // @synthesize requestNumber=_requestNumber;
@property(retain, nonatomic) FAtomicNumber *putCounter; // @synthesize putCounter=_putCounter;
@property(retain, nonatomic) FRepoInfo *repoInfo; // @synthesize repoInfo=_repoInfo;
@property(retain, nonatomic) NSMutableArray *onDisconnectQueue; // @synthesize onDisconnectQueue=_onDisconnectQueue;
@property(retain, nonatomic) NSMutableDictionary *outstandingPuts; // @synthesize outstandingPuts=_outstandingPuts;
@property(retain, nonatomic) NSMutableDictionary *listens; // @synthesize listens=_listens;
@property(retain, nonatomic) FConnection *realtime; // @synthesize realtime=_realtime;
@property(nonatomic) BOOL pauseWrites; // @synthesize pauseWrites=_pauseWrites;
@property(nonatomic) __weak id <FPersistentConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)dumpListens;
- (void)sendConnectStats;
- (void)sendStats:(id)arg1;
- (void)handleTimestamp:(id)arg1;
- (void)ackPuts;
- (void)purgeOutstandingWrites;
- (id)removeAllListensAtPath:(id)arg1;
- (id)removeListen:(id)arg1;
- (void)restoreState;
- (void)restoreAuth;
- (void)onDataPushWithAction:(id)arg1 andBody:(id)arg2;
- (void)cancelSentTransactions;
- (void)sendAction:(id)arg1 body:(id)arg2 sensitive:(BOOL)arg3 callback:(CDUnknownBlockType)arg4;
- (int)getNextRequestNumber;
- (void)warnOnListenWarningsForQuery:(id)arg1 payload:(id)arg2;
- (void)sendListen:(id)arg1;
- (void)putInternal:(id)arg1 forAction:(id)arg2 forPath:(id)arg3 withHash:(id)arg4 withCallback:(CDUnknownBlockType)arg5;
- (void)sendUnlisten:(id)arg1 queryParams:(id)arg2 tagId:(id)arg3;
- (void)sendPut:(id)arg1;
- (void)sendOnDisconnectAction:(id)arg1 forPath:(id)arg2 withData:(id)arg3 andCallback:(CDUnknownBlockType)arg4;
- (void)onListenRevoked:(id)arg1;
- (void)onAuthRevokedWithStatus:(id)arg1 andReason:(id)arg2;
- (void)sendUnauth;
- (void)sendAuthAndRestoreStateAfterComplete:(BOOL)arg1;
- (void)setupNotifications;
- (void)enteringForeground;
- (void)openNetworkConnectionWithToken:(id)arg1;
- (void)tryScheduleReconnect;
- (BOOL)isInterruptedForReason:(id)arg1;
- (BOOL)shouldReconnect;
- (void)resumeForReason:(id)arg1;
- (void)interruptForReason:(id)arg1;
- (void)onKill:(id)arg1 withReason:(id)arg2;
- (void)onDisconnect:(id)arg1 withReason:(int)arg2;
- (void)onDataMessage:(id)arg1 withMessage:(id)arg2;
- (void)onReady:(id)arg1 atTime:(id)arg2 sessionID:(id)arg3;
- (BOOL)canSendWrites;
- (BOOL)connected;
- (void)refreshAuthToken:(id)arg1;
- (void)unlisten:(id)arg1 tagId:(id)arg2;
- (void)onDisconnectCancelPath:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)onDisconnectMergeData:(id)arg1 forPath:(id)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)onDisconnectPutData:(id)arg1 forPath:(id)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)mergeData:(id)arg1 forPath:(id)arg2 withCallback:(CDUnknownBlockType)arg3;
- (void)putData:(id)arg1 forPath:(id)arg2 withHash:(id)arg3 withCallback:(CDUnknownBlockType)arg4;
- (void)listen:(id)arg1 tagId:(id)arg2 hash:(id)arg3 onComplete:(CDUnknownBlockType)arg4;
- (void)open;
- (void)dealloc;
- (id)initWithRepoInfo:(id)arg1 dispatchQueue:(id)arg2 config:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

