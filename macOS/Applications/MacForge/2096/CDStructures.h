//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AppendOnlyList<firebase::firestore::core::Filter> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> contents_;
    unsigned long long size_;
};

struct AppendOnlyList<firebase::firestore::core::OrderBy> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> contents_;
    unsigned long long size_;
};

struct ArraySortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::util::Empty>>> array_;
    struct DocumentComparator comparator_;
};

struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> array_;
    struct Comparator<firebase::firestore::model::DocumentKey> comparator_;
};

struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>>> array_;
    struct Comparator<firebase::firestore::model::DocumentKey> comparator_;
};

struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>> _field1;
    struct Comparator<std::__1::basic_string<char>> _field2;
};

struct AsyncQueue;

struct BaseValue;

struct Bound {
    vector_51b5b3c0 _field1;
    _Bool _field2;
};

struct ByteString {
    struct pb_bytes_array_s *_field1;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct Cache;

struct CleanupNode {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
    void *_field3;
    struct CleanupNode *_field4;
};

struct CollectionReference {
    shared_ptr_e3fec009 _field1;
    Query_f22cd5e9 _field2;
};

struct Comparator;

struct Comparator<firebase::firestore::model::DocumentKey>;

struct Comparator<std::__1::basic_string<char>>;

struct CredentialsProvider;

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct DatabaseId {
    struct shared_ptr<const firebase::firestore::model::DatabaseId::Rep> rep_;
};

struct DelayedConstructor<firebase::firestore::api::QuerySnapshot> {
    union Space {
        char empty;
        struct QuerySnapshot value;
    } space_;
};

struct DelayedConstructor<firebase::firestore::api::WriteBatch> {
    union Space {
        char empty;
        struct WriteBatch {
            shared_ptr_e3fec009 firestore_;
            struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> mutations_;
            _Bool committed_;
        } value;
    } space_;
};

struct Direction {
    int _field1;
};

struct Document {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> rep_;
};

struct DocumentChange {
    int type_;
    struct DocumentSnapshot document_;
    unsigned long long old_index_;
    unsigned long long new_index_;
};

struct DocumentComparator {
    struct function<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> function_;
};

struct DocumentKey {
    struct shared_ptr<const firebase::firestore::model::ResourcePath> path_;
};

struct DocumentMap {
    struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> map_;
};

struct DocumentReference {
    shared_ptr_e3fec009 firestore_;
    struct DocumentKey key_;
};

struct DocumentSet {
    struct DocumentMap index_;
    struct SortedSet<firebase::firestore::model::Document, firebase::firestore::model::DocumentComparator, firebase::firestore::util::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator>> sorted_set_;
};

struct DocumentSnapshot {
    shared_ptr_e3fec009 firestore_;
    struct DocumentKey internal_key_;
    optional_0ae1c4d0 internal_document_;
    struct SnapshotMetadata metadata_;
};

struct DocumentViewChange;

struct Env;

struct EventListener<firebase::firestore::api::DocumentSnapshot>;

struct EventListener<firebase::firestore::api::QuerySnapshot>;

struct FieldFilter {
    struct shared_ptr<const firebase::firestore::core::Filter::Rep> _field1;
};

struct FieldMask {
    struct set<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> _field1;
};

struct FieldPath {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> segments_;
};

struct FieldTransform {
    struct FieldPath _field1;
    struct TransformOperation _field2;
};

struct FieldValue {
    struct shared_ptr<firebase::firestore::model::FieldValue::BaseValue> _field1;
};

struct FieldValueOptions {
    int _field1;
    _Bool _field2;
};

struct FilterPolicy;

struct Firestore;

struct FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::util::Empty>>;

struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>;

struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>>;

struct FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>;

struct GeoPoint {
    double _field1;
    double _field2;
};

struct Iterator {
    CDUnknownFunctionPointerType *_field1;
    struct CleanupNode _field2;
};

struct ListenOptions {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct ListenerRegistration;

struct LlrbNode<firebase::firestore::model::Document, firebase::firestore::util::Empty> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::Document, firebase::firestore::util::Empty>::Rep> rep_;
};

struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>::Rep> rep_;
};

struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>::Rep> rep_;
};

struct LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue> {
    struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>::Rep> _field1;
};

struct Logger;

struct MaybeDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct Mutation {
    struct shared_ptr<firebase::firestore::model::Mutation::Rep> _field1;
};

struct MutationBatch {
    int _field1;
    struct Timestamp _field2;
    struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> _field3;
    struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> _field4;
};

struct MutationResult {
    struct SnapshotVersion _field1;
    struct optional<const std::__1::vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>>> _field2;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NoDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct ObjectValue {
    struct FieldValue _field1;
};

struct Options {
    struct Comparator *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    struct Env *_field5;
    struct Logger *_field6;
    unsigned long long _field7;
    int _field8;
    struct Cache *_field9;
    unsigned long long _field10;
    int _field11;
    unsigned long long _field12;
    int _field13;
    _Bool _field14;
    struct FilterPolicy *_field15;
};

struct OrderBy {
    struct FieldPath _field1;
    struct Direction _field2;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct ParseAccumulator;

struct ParseContext {
    struct ParseAccumulator *_field1;
    struct unique_ptr<firebase::firestore::model::FieldPath, std::__1::default_delete<firebase::firestore::model::FieldPath>> _field2;
    _Bool _field3;
};

struct ParsedSetData {
    struct ObjectValue _field1;
    struct FieldMask _field2;
    vector_974658d4 _field3;
    _Bool _field4;
};

struct ParsedUpdateData {
    struct ObjectValue _field1;
    struct FieldMask _field2;
    vector_974658d4 _field3;
};

struct Precondition {
    int _field1;
    struct SnapshotVersion _field2;
    _Bool _field3;
};

struct QueryData {
    Query_f22cd5e9 _field1;
    int _field2;
    long long _field3;
    int _field4;
    struct SnapshotVersion _field5;
    struct ByteString _field6;
};

struct QuerySnapshot {
    shared_ptr_e3fec009 firestore_;
    Query_f22cd5e9 internal_query_;
    struct ViewSnapshot snapshot_;
    struct SnapshotMetadata metadata_;
};

struct ReadOptions {
    _Bool verify_checksums;
    _Bool fill_cache;
    struct Snapshot *snapshot;
};

struct Rep;

struct ResourcePath {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> segments_;
};

struct Settings {
    basic_string_23d93216 _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
};

struct Snapshot;

struct SnapshotMetadata {
    _Bool pending_writes_;
    _Bool from_cache_;
};

struct SnapshotVersion {
    struct Timestamp _field1;
};

struct SortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> array_;
        struct TreeSortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> tree_;
    } ;
};

struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> array_;
        struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> tree_;
    } ;
};

struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    int tag_;
    union {
        struct ArraySortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> array_;
        struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> tree_;
    } ;
};

struct SortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    int _field1;
    union {
        struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field1;
        struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field2;
    } _field2;
};

struct SortedSet<firebase::firestore::model::Document, firebase::firestore::model::DocumentComparator, firebase::firestore::util::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator>> {
    struct SortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> map_;
};

struct SortedSet<firebase::firestore::model::DocumentKey, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>, firebase::firestore::util::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>>> {
    struct SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> map_;
};

struct Timestamp {
    long long _field1;
    int _field2;
};

struct Transaction;

struct TransformOperation {
    struct shared_ptr<const firebase::firestore::model::TransformOperation::Rep> _field1;
};

struct TreeSortedMap<firebase::firestore::model::Document, firebase::firestore::util::Empty, firebase::firestore::model::DocumentComparator> {
    struct DocumentComparator value_;
    struct LlrbNode<firebase::firestore::model::Document, firebase::firestore::util::Empty> root_;
};

struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument> root_;
};

struct TreeSortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>> {
    struct LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty> root_;
};

struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    struct LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue> _field1;
};

struct UnknownDocument {
    struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> _field1;
};

struct ViewSnapshot {
    Query_f22cd5e9 query_;
    struct DocumentSet documents_;
    struct DocumentSet old_documents_;
    struct vector<firebase::firestore::core::DocumentViewChange, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> document_changes_;
    struct SortedSet<firebase::firestore::model::DocumentKey, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>, firebase::firestore::util::Empty, firebase::firestore::immutable::SortedMap<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty, firebase::firestore::util::Comparator<firebase::firestore::model::DocumentKey>>> mutated_keys_;
    _Bool from_cache_;
    _Bool sync_state_changed_;
    _Bool excludes_metadata_changes_;
};

struct WatchChange;

struct WriteOptions {
    _Bool sync;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _base1_2list {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct _logs_proto_mobilesdk_ios_ICoreConfiguration {
    _Bool has_configuration_type;
    int configuration_type;
    unsigned int sdk_service_installed_count;
    int *sdk_service_installed;
    struct pb_bytes_array_s *device_model;
    struct pb_bytes_array_s *app_id;
    struct pb_bytes_array_s *bundle_id;
    _Bool has_pod_name;
    int pod_name;
    struct pb_bytes_array_s *icore_version;
    struct pb_bytes_array_s *sdk_version;
    _Bool has_sdk_name;
    int sdk_name;
    _Bool has_app_count;
    int app_count;
    struct pb_bytes_array_s *os_version;
    struct pb_bytes_array_s *min_supported_ios_version;
    _Bool has_use_default_app;
    _Bool use_default_app;
    _Bool has_deployed_in_app_store;
    _Bool deployed_in_app_store;
    _Bool has_dynamic_framework_count;
    int dynamic_framework_count;
    struct pb_bytes_array_s *apple_framework_version;
    _Bool has_using_zip_file;
    _Bool using_zip_file;
    _Bool has_deployment_type;
    int deployment_type;
    struct pb_bytes_array_s *platform_info;
    _Bool has_swizzling_enabled;
    _Bool swizzling_enabled;
    _Bool has_using_gdt;
    _Bool using_gdt;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct dummy_type {
    struct empty_struct data[16];
};

struct empty_struct;

struct function<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> {
    struct __value_func<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> {
        struct type __buf_;
        struct __base<firebase::firestore::util::ComparisonResult (const firebase::firestore::model::Document &, const firebase::firestore::model::Document &)> *__f_;
    } __f_;
};

struct optional<const std::__1::vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>>> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        vector_51b5b3c0 _field2;
    } _field2;
};

struct optional<firebase::firestore::model::Document> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct Document data_;
    } ;
};

struct optional<firebase::firestore::model::FieldValue> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct FieldValue _field2;
    } _field2;
};

struct pb_bytes_array_s;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct set<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> {
    struct __tree<firebase::firestore::model::FieldPath, std::__1::less<firebase::firestore::model::FieldPath>, std::__1::allocator<firebase::firestore::model::FieldPath>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<firebase::firestore::model::FieldPath, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<firebase::firestore::model::FieldPath>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<const firebase::firestore::core::Filter::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::util::Empty>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::Document, firebase::firestore::util::Empty>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>>> {
    struct FixedArray<std::__1::pair<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::immutable::impl::FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>>> {
    struct FixedArray<std::__1::pair<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const firebase::firestore::model::DatabaseId::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::MaybeDocument::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::ResourcePath> {
    struct ResourcePath *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const firebase::firestore::model::TransformOperation::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const std::__1::basic_string<char>> {
    basic_string_23d93216 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::api::Firestore> {
    struct Firestore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::auth::CredentialsProvider> {
    struct CredentialsProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::core::Bound> {
    struct Bound *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::core::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::Document, firebase::firestore::util::Empty>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::model::MaybeDocument>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<firebase::firestore::model::DocumentKey, firebase::firestore::util::Empty>::Rep> {
    struct Rep *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<firebase::firestore::immutable::impl::LlrbNode<std::__1::basic_string<char>, firebase::firestore::model::FieldValue>::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::model::FieldValue::BaseValue> {
    struct BaseValue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::model::Mutation::Rep> {
    struct Rep *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<firebase::firestore::util::AsyncQueue> {
    struct AsyncQueue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> {
    struct vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> {
    struct vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct string_view {
    char *_field1;
    unsigned long long _field2;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct type {
    unsigned char __lx[32];
};

struct unique_ptr<firebase::firestore::api::ListenerRegistration, std::__1::default_delete<firebase::firestore::api::ListenerRegistration>> {
    struct __compressed_pair<firebase::firestore::api::ListenerRegistration *, std::__1::default_delete<firebase::firestore::api::ListenerRegistration>> {
        struct ListenerRegistration *__value_;
    } __ptr_;
};

struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
        struct EventListener<firebase::firestore::api::DocumentSnapshot> *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
        struct EventListener<firebase::firestore::api::QuerySnapshot> *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::model::FieldPath, std::__1::default_delete<firebase::firestore::model::FieldPath>> {
    struct __compressed_pair<firebase::firestore::model::FieldPath *, std::__1::default_delete<firebase::firestore::model::FieldPath>> {
        struct FieldPath *_field1;
    } _field1;
};

struct unique_ptr<firebase::firestore::remote::WatchChange, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
    struct __compressed_pair<firebase::firestore::remote::WatchChange *, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
        struct WatchChange *_field1;
    } _field1;
};

struct vector<firebase::firestore::core::DocumentViewChange, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> {
    struct DocumentViewChange *__begin_;
    struct DocumentViewChange *__end_;
    struct __compressed_pair<firebase::firestore::core::DocumentViewChange *, std::__1::allocator<firebase::firestore::core::DocumentViewChange>> {
        struct DocumentViewChange *__value_;
    } __end_cap_;
};

struct vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>;

struct vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>;

struct vector<firebase::firestore::model::FieldTransform, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
    struct FieldTransform *_field1;
    struct FieldTransform *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldTransform *, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
        struct FieldTransform *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>> {
    struct FieldValue *_field1;
    struct FieldValue *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldValue *, std::__1::allocator<firebase::firestore::model::FieldValue>> {
        struct FieldValue *_field1;
    } _field3;
};

struct vector<firebase::firestore::model::Mutation, std::__1::allocator<firebase::firestore::model::Mutation>> {
    struct Mutation *__begin_;
    struct Mutation *__end_;
    struct __compressed_pair<firebase::firestore::model::Mutation *, std::__1::allocator<firebase::firestore::model::Mutation>> {
        struct Mutation *__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_23d93216 *__begin_;
    basic_string_23d93216 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_23d93216 *__value_;
    } __end_cap_;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct ResourcePath path_;
    struct shared_ptr<const std::__1::basic_string<char>> collection_group_;
    AppendOnlyList_50725817 filters_;
    AppendOnlyList_9597473c explicit_order_bys_;
    AppendOnlyList_9597473c memoized_order_bys_;
    int limit_;
    shared_ptr_1d749e41 start_at_;
    shared_ptr_1d749e41 end_at_;
    basic_string_23d93216 canonical_id_;
} Query_f22cd5e9;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void *_field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned long long *_field5;
} CDStruct_3098c0ae;

typedef struct {
    char _field1;
    unsigned char _field2;
    char _field3;
    unsigned long long _field4;
} CDStruct_c6e275e6;

// Template types
typedef struct AppendOnlyList<firebase::firestore::core::Filter> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::Filter, std::__1::allocator<firebase::firestore::core::Filter>>> contents_;
    unsigned long long size_;
} AppendOnlyList_50725817;

typedef struct AppendOnlyList<firebase::firestore::core::OrderBy> {
    struct shared_ptr<std::__1::vector<firebase::firestore::core::OrderBy, std::__1::allocator<firebase::firestore::core::OrderBy>>> contents_;
    unsigned long long size_;
} AppendOnlyList_9597473c;

typedef struct SortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> {
    int _field1;
    union {
        struct ArraySortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field1;
        struct TreeSortedMap<std::__1::basic_string<char>, firebase::firestore::model::FieldValue, firebase::firestore::util::Comparator<std::string>> _field2;
    } _field2;
} SortedMap_50e2822c;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_23d93216;

typedef struct optional<firebase::firestore::model::Document> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct Document data_;
    } ;
} optional_0ae1c4d0;

typedef struct optional<firebase::firestore::model::FieldValue> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct FieldValue _field2;
    } _field2;
} optional_0d4b65d9;

typedef struct shared_ptr<firebase::firestore::api::Firestore> {
    struct Firestore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e3fec009;

typedef struct shared_ptr<firebase::firestore::auth::CredentialsProvider> {
    struct CredentialsProvider *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_80c12b7c;

typedef struct shared_ptr<firebase::firestore::core::Bound> {
    struct Bound *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1d749e41;

typedef struct shared_ptr<firebase::firestore::core::Transaction> {
    struct Transaction *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1e1d82c1;

typedef struct shared_ptr<firebase::firestore::util::AsyncQueue> {
    struct AsyncQueue *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ada94aa4;

typedef struct unique_ptr<firebase::firestore::api::ListenerRegistration, std::__1::default_delete<firebase::firestore::api::ListenerRegistration>> {
    struct __compressed_pair<firebase::firestore::api::ListenerRegistration *, std::__1::default_delete<firebase::firestore::api::ListenerRegistration>> {
        struct ListenerRegistration *__value_;
    } __ptr_;
} unique_ptr_de6749c7;

typedef struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::DocumentSnapshot>>> {
        struct EventListener<firebase::firestore::api::DocumentSnapshot> *_field1;
    } _field1;
} unique_ptr_c03f27e0;

typedef struct unique_ptr<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
    struct __compressed_pair<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>*, std::__1::default_delete<firebase::firestore::core::EventListener<firebase::firestore::api::QuerySnapshot>>> {
        struct EventListener<firebase::firestore::api::QuerySnapshot> *_field1;
    } _field1;
} unique_ptr_59522b24;

typedef struct unique_ptr<firebase::firestore::remote::WatchChange, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
    struct __compressed_pair<firebase::firestore::remote::WatchChange *, std::__1::default_delete<firebase::firestore::remote::WatchChange>> {
        struct WatchChange *_field1;
    } _field1;
} unique_ptr_3a773cf6;

typedef struct vector<firebase::firestore::model::FieldTransform, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
    struct FieldTransform *_field1;
    struct FieldTransform *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldTransform *, std::__1::allocator<firebase::firestore::model::FieldTransform>> {
        struct FieldTransform *_field1;
    } _field3;
} vector_974658d4;

typedef struct vector<firebase::firestore::model::FieldValue, std::__1::allocator<firebase::firestore::model::FieldValue>> {
    struct FieldValue *_field1;
    struct FieldValue *_field2;
    struct __compressed_pair<firebase::firestore::model::FieldValue *, std::__1::allocator<firebase::firestore::model::FieldValue>> {
        struct FieldValue *_field1;
    } _field3;
} vector_51b5b3c0;

typedef struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
} vector_3203cf93;

