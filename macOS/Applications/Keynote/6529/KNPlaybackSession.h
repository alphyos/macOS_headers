//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TSDAnimationSession.h"

@class CALayer, KNAnimatedSlideView, KNAnimatedTextureManager, KNAnimationContext, KNAnimationTestResultLogger, KNShow, KNSlide, KNSlideNode, NSArray, NSMutableArray, NSString, TSDBitmapRenderingQualityInfo, TSDGLLayer, TSDMPSImageConversionStorage, TSDMetalLayer, TSKAccessController;

@interface KNPlaybackSession : NSObject <TSDAnimationSession>
{
    KNSlideNode *_currentSlideNode;
    NSMutableArray *_breadCrumbTrail;
    BOOL _hasEndShowHandlerBeenCancelled;
    id <MTLLibrary> _defaultMetalLibrary;
    unsigned int _isMetalEnabledByCaller:1;
    unsigned int _isMetalCapable:1;
    unsigned int _isMetalCapableCheckInitialized:1;
    unsigned int _isDiscreteGPUAcquired:1;
    unsigned int _notifyRegisterPerformed:1;
    int _thermalNotificationToken;
    CALayer *_noMetalBadgeLayer;
    BOOL _disableAutoAnimationRemoval;
    BOOL _disableTransitionTextureCaching;
    BOOL _isExitingShow;
    BOOL _isMovieExport;
    BOOL _isShowLayerVisible;
    BOOL _shouldAlwaysSetCurrentGLContextWhenDrawing;
    BOOL _shouldAnimateTransitionOnLastSlide;
    BOOL _shouldAnimateNullTransitions;
    BOOL _shouldAutomaticallyPlayMovies;
    BOOL _shouldDrawTexturesAsynchronously;
    BOOL _shouldForceTextureGeneration;
    BOOL _shouldAllowBackgroundAlpha;
    BOOL _shouldNotBakeActionTextures;
    BOOL _shouldPreferCARenderer;
    BOOL _shouldShowVideoReflectionsAndMasks;
    BOOL _shouldUseContentlessLayers;
    BOOL _shouldUseSourceImage;
    BOOL _shouldSkipBuilds;
    BOOL _shouldRespectSkippedSlides;
    BOOL _shouldAlwaysLoop;
    BOOL _shouldExcludeFloatingComments;
    TSDGLLayer *_sharedGLLayer;
    KNShow *_show;
    CALayer *_rootLayer;
    id <TSDCanvasDelegate> _canvasDelegate;
    CDUnknownBlockType _endShowHandler;
    id <TSKAccessControllerReadTicket> _accessControllerReadTicket;
    KNAnimatedTextureManager *_textureManager;
    KNAnimationContext *_animationContext;
    KNAnimationTestResultLogger *_animationTestResultLogger;
    TSDBitmapRenderingQualityInfo *_bitmapRenderingQualityInfo;
    long long _playMode;
    TSDMetalLayer *_sharedMetalLayer;
    TSDMPSImageConversionStorage *_mpsImageConversionStorage;
    NSArray *_slideNodesWithinPlayableRange;
    NSMutableArray *_animationDurationArray;
    NSMutableArray *_eventDurationArray;
    NSMutableArray *_workDurationArray;
    NSMutableArray *_animationStringArray;
    KNAnimatedSlideView *_animatedSlideViewForNextSlide;
    KNSlideNode *_alternateNextSlideNode;
}

@property(retain, nonatomic) KNSlideNode *alternateNextSlideNode; // @synthesize alternateNextSlideNode=_alternateNextSlideNode;
@property(readonly, nonatomic) KNAnimatedSlideView *animatedSlideViewForNextSlide; // @synthesize animatedSlideViewForNextSlide=_animatedSlideViewForNextSlide;
@property(readonly, nonatomic) NSMutableArray *animationStringArray; // @synthesize animationStringArray=_animationStringArray;
@property(readonly, nonatomic) NSMutableArray *workDurationArray; // @synthesize workDurationArray=_workDurationArray;
@property(readonly, nonatomic) NSMutableArray *eventDurationArray; // @synthesize eventDurationArray=_eventDurationArray;
@property(readonly, nonatomic) NSMutableArray *animationDurationArray; // @synthesize animationDurationArray=_animationDurationArray;
@property(copy, nonatomic) NSArray *slideNodesWithinPlayableRange; // @synthesize slideNodesWithinPlayableRange=_slideNodesWithinPlayableRange;
@property(nonatomic) BOOL shouldExcludeFloatingComments; // @synthesize shouldExcludeFloatingComments=_shouldExcludeFloatingComments;
@property(nonatomic) BOOL shouldAlwaysLoop; // @synthesize shouldAlwaysLoop=_shouldAlwaysLoop;
@property(nonatomic) BOOL shouldRespectSkippedSlides; // @synthesize shouldRespectSkippedSlides=_shouldRespectSkippedSlides;
@property(nonatomic) BOOL shouldSkipBuilds; // @synthesize shouldSkipBuilds=_shouldSkipBuilds;
@property(nonatomic) BOOL shouldUseSourceImage; // @synthesize shouldUseSourceImage=_shouldUseSourceImage;
@property(nonatomic) BOOL shouldUseContentlessLayers; // @synthesize shouldUseContentlessLayers=_shouldUseContentlessLayers;
@property(nonatomic) BOOL shouldShowVideoReflectionsAndMasks; // @synthesize shouldShowVideoReflectionsAndMasks=_shouldShowVideoReflectionsAndMasks;
@property(nonatomic) BOOL shouldPreferCARenderer; // @synthesize shouldPreferCARenderer=_shouldPreferCARenderer;
@property(nonatomic) BOOL shouldNotBakeActionTextures; // @synthesize shouldNotBakeActionTextures=_shouldNotBakeActionTextures;
@property(nonatomic) BOOL shouldAllowBackgroundAlpha; // @synthesize shouldAllowBackgroundAlpha=_shouldAllowBackgroundAlpha;
@property(nonatomic) BOOL shouldForceTextureGeneration; // @synthesize shouldForceTextureGeneration=_shouldForceTextureGeneration;
@property(nonatomic) BOOL shouldDrawTexturesAsynchronously; // @synthesize shouldDrawTexturesAsynchronously=_shouldDrawTexturesAsynchronously;
@property(nonatomic) BOOL shouldAutomaticallyPlayMovies; // @synthesize shouldAutomaticallyPlayMovies=_shouldAutomaticallyPlayMovies;
@property(nonatomic) BOOL shouldAnimateNullTransitions; // @synthesize shouldAnimateNullTransitions=_shouldAnimateNullTransitions;
@property(nonatomic) BOOL shouldAnimateTransitionOnLastSlide; // @synthesize shouldAnimateTransitionOnLastSlide=_shouldAnimateTransitionOnLastSlide;
@property(nonatomic) BOOL shouldAlwaysSetCurrentGLContextWhenDrawing; // @synthesize shouldAlwaysSetCurrentGLContextWhenDrawing=_shouldAlwaysSetCurrentGLContextWhenDrawing;
@property(readonly, nonatomic) TSDMPSImageConversionStorage *mpsImageConversionStorage; // @synthesize mpsImageConversionStorage=_mpsImageConversionStorage;
@property(retain, nonatomic) TSDMetalLayer *sharedMetalLayer; // @synthesize sharedMetalLayer=_sharedMetalLayer;
@property(nonatomic) long long playMode; // @synthesize playMode=_playMode;
@property(nonatomic) BOOL isShowLayerVisible; // @synthesize isShowLayerVisible=_isShowLayerVisible;
@property(nonatomic) BOOL isMovieExport; // @synthesize isMovieExport=_isMovieExport;
@property(nonatomic) BOOL isExitingShow; // @synthesize isExitingShow=_isExitingShow;
@property(nonatomic) BOOL disableTransitionTextureCaching; // @synthesize disableTransitionTextureCaching=_disableTransitionTextureCaching;
@property(nonatomic) BOOL disableAutoAnimationRemoval; // @synthesize disableAutoAnimationRemoval=_disableAutoAnimationRemoval;
@property(retain, nonatomic) TSDBitmapRenderingQualityInfo *bitmapRenderingQualityInfo; // @synthesize bitmapRenderingQualityInfo=_bitmapRenderingQualityInfo;
@property(readonly, nonatomic) KNAnimationTestResultLogger *animationTestResultLogger; // @synthesize animationTestResultLogger=_animationTestResultLogger;
@property(readonly, nonatomic) KNAnimationContext *animationContext; // @synthesize animationContext=_animationContext;
@property(retain, nonatomic) KNAnimatedTextureManager *textureManager; // @synthesize textureManager=_textureManager;
@property(retain, nonatomic) id <TSKAccessControllerReadTicket> accessControllerReadTicket; // @synthesize accessControllerReadTicket=_accessControllerReadTicket;
@property(copy, nonatomic) CDUnknownBlockType endShowHandler; // @synthesize endShowHandler=_endShowHandler;
@property(nonatomic) __weak id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=_canvasDelegate;
@property(readonly, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(readonly, nonatomic) KNShow *show; // @synthesize show=_show;
- (void).cxx_destruct;
- (unsigned long long)p_findIndexIncludingUUID:(id)arg1 object:(id)arg2;
- (BOOL)p_checkNodeEqualityIncludingUUID:(id)arg1 secondSlideNode:(id)arg2;
- (BOOL)p_checkArrayInclusionIncludingUUID:(id)arg1 object:(id)arg2;
- (BOOL)p_slideNodeIsPlayable:(id)arg1;
- (id)p_intersectArraysWithUUIDEquality:(id)arg1 secondArray:(id)arg2;
- (void)discardDiscreteGPUIfAcquired;
- (void)acquireDiscreteGPUIfNeeded;
- (void)enableMetalBadge:(BOOL)arg1;
- (void)p_setupBadging;
@property(readonly, nonatomic) BOOL isMetalEnabled;
@property(readonly, nonatomic) BOOL isMetalCapable;
@property(readonly, nonatomic) id <MTLDevice> metalDevice;
- (void)makeSharedMetalLayerVisible:(BOOL)arg1;
- (void)setSharedGLContextAsCurrentContextShouldCreate:(BOOL)arg1;
- (void)tearDownSharedGLLayer;
@property(readonly, nonatomic) TSDGLLayer *sharedGLLayer; // @synthesize sharedGLLayer=_sharedGLLayer;
@property(readonly, nonatomic) NSArray *playableSlideNodes;
- (void)resizeShowLayer;
@property(readonly, nonatomic) BOOL isWideGamut;
@property(readonly, nonatomic) BOOL isDisplayLinkThread;
@property(readonly, nonatomic) BOOL isTexturePreCachingThread;
@property(readonly, nonatomic) BOOL isPreCachingOperationActive;
@property(readonly, nonatomic) int thermalNotificationToken;
- (void)cancelEndShowHandler;
- (void)p_executeEndShowHandler;
- (void)executeEndShowHandlerAfterDelay:(double)arg1;
- (void)waitUntilSlideTextureRenderingIsCompleteForIdentifier:(id)arg1;
- (id)repForInfo:(id)arg1 onCanvas:(id)arg2;
@property(readonly, nonatomic) double showScale;
@property(readonly, nonatomic) BOOL isOffscreenPlayback;
@property(readonly, nonatomic) BOOL isPreview;
- (unsigned long long)slideNumberForSlideNode:(id)arg1;
- (id)animatedSlideViewFor:(id)arg1;
@property(readonly, nonatomic) KNAnimatedSlideView *animatedSlideViewForCurrentSlide;
- (id)breadCrumb;
- (void)dropABreadCrumb;
@property(copy, nonatomic) NSArray *breadCrumbTrail;
- (id)gotoLastSlide;
@property(readonly, nonatomic) KNSlideNode *lastSlideNode;
- (id)gotoFirstSlide;
@property(readonly, nonatomic) KNSlideNode *firstSlideNode;
@property(readonly, nonatomic) BOOL atEndOfDeck;
@property(readonly, nonatomic) BOOL atBeginningOfDeck;
- (id)gotoPreviousSlide;
- (id)previousSlideNodeBeforeSlideNode:(id)arg1;
@property(readonly, nonatomic) KNSlideNode *previousSlideNodeBeforeCurrent;
- (id)gotoNextSlide;
@property(readonly, nonatomic) KNSlide *nextSlideAfterCurrent;
- (id)p_nextBestSlideNodeToSlideNode:(id)arg1;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
@property(readonly, nonatomic) KNSlideNode *nextSlideNodeAfterCurrent;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic) KNSlide *currentSlide;
- (void)gotoSlideNode:(id)arg1;
- (void)p_setCurrentSlideNode:(id)arg1;
- (void)performSlideRead:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) TSKAccessController *accessController;
- (void)tearDown;
- (void)dealloc;
- (id)initWithShow:(id)arg1 viewScale:(double)arg2 showLayer:(id)arg3 canvasDelegate:(id)arg4 isMetalEnabled:(BOOL)arg5 endShowHandler:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) BOOL shouldShowInstructionalText;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

