//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSTTableKnobTracker.h"

#import "CALayerDelegate-Protocol.h"
#import "TSTTableAnimationController-Protocol.h"
#import "TSTTableAnimationObserver-Protocol.h"
#import "TSTTableKnobTrackerExtendedProtocol-Protocol.h"
#import "TSTTableKnobTrackerVisitorProtocol-Protocol.h"

@class CALayer, CAShapeLayer, NSString, TSTCell, TSTTableAnimationDirector, TSTTableKnob, TSTTableRep, TSTTableSelectionMoverAnimation, TSUBezierPath, TSUImage;

@interface TSTTableSelectionMoverKnobTracker : TSTTableKnobTracker <CALayerDelegate, TSTTableAnimationController, TSTTableAnimationObserver, TSTTableKnobTrackerExtendedProtocol, TSTTableKnobTrackerVisitorProtocol>
{
    struct TSUCellRect mKnobTrackInitialSelection;
    unsigned short mNumHiddenRows;
    unsigned short mNumHiddenColumns;
    struct CGPoint mPosition;
    struct CGAffineTransform mScaleTransform;
    struct CGAffineTransform mScaledTransformInRoot;
    struct CGAffineTransform mKnobToDropZoneTransform;
    struct CGAffineTransform mKnobToDropZoneCornerTransform;
    struct CGAffineTransform mImageCenterToKnobTransform;
    struct TSUCellRect mEntireTableCellRange;
    TSTTableAnimationDirector *mAnimationDirector;
    TSTCell *mDynamicBodyCell;
    CALayer *mTarget;
    CALayer *mTargetContent;
    struct TSUCellRect mTargetContentImagedRange;
    struct CGRect mTargetContentImagedRangeFrame;
    CALayer *mTargetShadow;
    TSUBezierPath *mTargetShadowBezierPath;
    CALayer *mTargetScreen;
    TSUBezierPath *mTargetScreenBezierPath;
    TSUImage *mTargetImage;
    struct CGPoint mTargetPosition;
    struct CGPoint mTargetCornerPosition;
    struct CGPoint mTargetImageCenterShift;
    struct CGPoint mTargetImageCornerShift;
    TSTTableSelectionMoverAnimation *mTargetAnimation;
    struct CGRect mAdjustedCellRangeBounds;
    CAShapeLayer *mStartZone;
    CAShapeLayer *mStartZoneMask;
    TSTTableRep *mDropZoneTableRep;
    struct CGPoint mDropZonePosition;
    struct CGPoint mDropZoneCornerPosition;
    struct TSUCellRect mDropZoneCellRange;
    BOOL mDropZoneValid;
    BOOL mDidEndKnobTracking;
    BOOL mFinalAnimationShouldSlideDown;
    BOOL mSuspendedCollaboration;
}

+ (void)moveFromTableRep:(id)arg1 sourceCellRange:(struct TSUCellRect)arg2 destTableRep:(id)arg3 destCellRange:(struct TSUCellRect)arg4;
+ (void)moveWithSameTableRep:(id)arg1 sourceCellRange:(struct TSUCellRect)arg2 destCellRange:(struct TSUCellRect)arg3;
@property(readonly, nonatomic) BOOL finalAnimationShouldSlideDown; // @synthesize finalAnimationShouldSlideDown=mFinalAnimationShouldSlideDown;
@property(readonly, nonatomic) BOOL didEndKnobTracking; // @synthesize didEndKnobTracking=mDidEndKnobTracking;
- (void)animationObserverAllCompleted:(BOOL)arg1;
- (void)animationObserverTaskCompleted:(id)arg1;
- (void)validateUnderlayLayers;
- (void)validateOverlayLayers;
- (BOOL)shouldRenderTableRep;
- (id)getAnimationUnderlayLayers;
- (id)getAnimationOverlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_positionTargetLayer;
- (void)p_updateDropZone;
- (void)p_addTargetSubLayers;
- (void)p_prepareTargetLayer;
- (struct CGRect)visitorBoundsForStandardKnobsAndCellRange:(struct TSUCellRect *)arg1;
- (struct CGRect)currentBoundsForStandardKnobsAndCellRange:(struct TSUCellRect *)arg1;
- (BOOL)p_validateWithSourceTable:(id)arg1 sourceRange:(struct TSUCellRect)arg2 destTable:(id)arg3 destRange:(struct TSUCellRect)arg4;
- (BOOL)shouldEndMovingKnobOnESC;
- (BOOL)allowHUDToDisplay;
- (BOOL)operationShouldBeDynamic;
- (double)delay;
- (BOOL)shouldHideSelectionHighlight;
- (BOOL)shouldHideOtherKnobs;
- (struct CGRect)currentBoundsForStandardKnobs;
- (void)endMovingKnobWorkCleanup;
- (void)p_EndMovingKnobWork;
- (void)endMovingKnob;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
- (void)beginMovingKnob;
- (id)initWithRep:(id)arg1 knob:(id)arg2;
@property(readonly, nonatomic) TSTTableKnob *tableKnob;
@property(readonly, nonatomic) TSTTableRep *tableRep;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

