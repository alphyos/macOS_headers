//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@protocol OS_dispatch_source;

@interface KNShowcastKPFPackageLoaderDownloadTaskContext : NSObject
{
    BOOL _didStart;
    double _duration;
    long long _dataLength;
    long long _dataRate;
    double _fallbackTimeoutInterval;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_source> *_fallbackTimeoutTimer;
    double _startTimeIntervalSinceReferenceDate;
    long long _totalBytesWritten;
    double _dataRateSamplingStartTimeIntervalSinceReferenceDate;
    double _dataRateSamplingEndTimeIntervalSinceReferenceDate;
    long long _dataRateSamplingStartTotalBytesWritten;
}

@property(nonatomic) long long dataRateSamplingStartTotalBytesWritten; // @synthesize dataRateSamplingStartTotalBytesWritten=_dataRateSamplingStartTotalBytesWritten;
@property(nonatomic) double dataRateSamplingEndTimeIntervalSinceReferenceDate; // @synthesize dataRateSamplingEndTimeIntervalSinceReferenceDate=_dataRateSamplingEndTimeIntervalSinceReferenceDate;
@property(nonatomic) double dataRateSamplingStartTimeIntervalSinceReferenceDate; // @synthesize dataRateSamplingStartTimeIntervalSinceReferenceDate=_dataRateSamplingStartTimeIntervalSinceReferenceDate;
@property(nonatomic) long long totalBytesWritten; // @synthesize totalBytesWritten=_totalBytesWritten;
@property(nonatomic) double startTimeIntervalSinceReferenceDate; // @synthesize startTimeIntervalSinceReferenceDate=_startTimeIntervalSinceReferenceDate;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *fallbackTimeoutTimer; // @synthesize fallbackTimeoutTimer=_fallbackTimeoutTimer;
@property(nonatomic) BOOL didStart; // @synthesize didStart=_didStart;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) double fallbackTimeoutInterval; // @synthesize fallbackTimeoutInterval=_fallbackTimeoutInterval;
@property(nonatomic) long long dataRate; // @synthesize dataRate=_dataRate;
@property(nonatomic) long long dataLength; // @synthesize dataLength=_dataLength;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (void).cxx_destruct;
- (void)p_unscheduleFallbackTimeoutTimer;
- (void)p_scheduleFallbackTimeoutTimerForDownloadTask:(id)arg1 queue:(id)arg2;
- (void)resetFallbackTimeoutForDownloadTask:(id)arg1 interval:(double)arg2 queue:(id)arg3;
- (void)downloadTaskDidFinishDownloadingToURL:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)downloadTask:(id)arg1 didWriteTotalBytes:(long long)arg2 totalBytesExpectedToWrite:(long long)arg3;
- (void)downloadTask:(id)arg1 didStartOnQueue:(id)arg2;
- (id)init;
- (id)initWithFallbackTimeoutInterval:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

