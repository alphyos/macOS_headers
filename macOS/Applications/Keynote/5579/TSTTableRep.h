//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSWPTextHostRep.h"

#import "CALayerDelegate-Protocol.h"
#import "TSDDecorator-Protocol.h"
#import "TSKChangeSourceObserver-Protocol.h"
#import "TSTTableRepInternal-Protocol.h"
#import "TSWPHyperlinkHostRepProtocol-Protocol.h"
#import "TSWPSelectionPathDetailsProvider-Protocol.h"
#import "TSWPStorageObserver-Protocol.h"
#import "TSWPTextEditingDelegate-Protocol.h"

@class CALayer, CAShapeLayer, NSMutableArray, NSMutableDictionary, NSSet, NSString, TSDCanvasView, TSDEditorController, TSDKnobTracker, TSDTilingLayer, TSKHighlightArrayController, TSTAnimation, TSTCellSelection, TSTEditingState, TSTInfo, TSTLayout, TSTMasterLayout, TSTSelectionDragController, TSTTableCellTextEditingRep, TSTTableEditor, TSTTableModel, TSTTableReferences, TSWPTextEditing;
@protocol TSTCanvasReferenceController, TSTTableAnimationController, TSTTableChromeProvider, TSTTableKnobTrackerVisitorProtocol, TSTTableRepDelegate;

@interface TSTTableRep : TSWPTextHostRep <TSWPSelectionPathDetailsProvider, TSTTableRepInternal, TSKChangeSourceObserver, TSDDecorator, TSWPHyperlinkHostRepProtocol, TSWPTextEditingDelegate, TSWPStorageObserver, CALayerDelegate>
{
    BOOL _selectionDragAbortedOnNewSelection;
    BOOL _selectionUsesBezierPath;
    BOOL _selectsCellOnInitialTap;
    BOOL _usesWholeChromeResizer;
    BOOL _isSettingSelection;
    BOOL _isZoomToEditOperationInProgress;
    BOOL _tableNameValid;
    BOOL _shouldRepositionStockPopover;
    BOOL _zoomToEditOperationIsInProgress;
    BOOL _aspectOperationIsInProgress;
    BOOL _zoomOperationIsInProgress;
    BOOL _recursivelyDrawingInContext;
    BOOL _dragByHandleOnly;
    struct TSUCellCoord _ratingsDragCellID;
    NSMutableDictionary *_childTextReps;
    TSTTableReferences *_references;
    TSTSelectionDragController *_cellDragController;
    TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *_visitorKnobTracker;
    NSSet *_visibleFillKnobs;
    id <TSTTableAnimationController> _animationController;
    id <TSTTableRepDelegate> _delegate;
    id <TSTTableChromeProvider> _tableChrome;
    id <TSTCanvasReferenceController> _canvasReferenceController;
    TSTTableCellTextEditingRep *_containedTextEditingRep;
    TSWPTextEditing *_tableNameTextEditing;
    TSDTilingLayer *_overlayTableName;
    TSDTilingLayer *_overlayFrozenHeaderCorner;
    TSDTilingLayer *_overlayFrozenHeaderRows;
    TSDTilingLayer *_overlayFrozenHeaderColumns;
    CALayer *_overlayFrozenHeaderRowsMask;
    CALayer *_overlayFrozenHeaderColumnsMask;
    CALayer *_overlayFrozenHeaderTableBodyMask;
    CALayer *_overlayFrozenHeaderTableNameMask;
    double _currentScreenScale;
    struct TSUCellRect _dirtyCellRange;
    NSMutableArray *_animationStack;
    struct TSUCellRect _zoomToEditVisibleCellRange;
    CAShapeLayer *_cellEditingMaskLayer;
    CAShapeLayer *_findSelectionHighlightLayer;
    TSKHighlightArrayController *_bodyHighlightArrayController;
    TSKHighlightArrayController *_containedTextEditingHighlightArrayController;
    TSKHighlightArrayController *_frozenCornerHighlightArrayController;
    TSKHighlightArrayController *_frozenColumnsHighlightArrayController;
    TSKHighlightArrayController *_frozenRowsHighlightArrayController;
    struct CGRect _searchSelectionBounds;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3;
+ (unsigned long long)p_countOfIdenticalCellsBetweenOutgoingTableInfo:(id)arg1 incomingTableInfo:(id)arg2;
+ (Class)tableRepDelegateClass;
@property(retain, nonatomic) TSKHighlightArrayController *frozenRowsHighlightArrayController; // @synthesize frozenRowsHighlightArrayController=_frozenRowsHighlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *frozenColumnsHighlightArrayController; // @synthesize frozenColumnsHighlightArrayController=_frozenColumnsHighlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *frozenCornerHighlightArrayController; // @synthesize frozenCornerHighlightArrayController=_frozenCornerHighlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *containedTextEditingHighlightArrayController; // @synthesize containedTextEditingHighlightArrayController=_containedTextEditingHighlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *bodyHighlightArrayController; // @synthesize bodyHighlightArrayController=_bodyHighlightArrayController;
@property(retain, nonatomic) CAShapeLayer *findSelectionHighlightLayer; // @synthesize findSelectionHighlightLayer=_findSelectionHighlightLayer;
@property(retain, nonatomic) CAShapeLayer *cellEditingMaskLayer; // @synthesize cellEditingMaskLayer=_cellEditingMaskLayer;
@property(readonly, nonatomic) BOOL dragByHandleOnly; // @synthesize dragByHandleOnly=_dragByHandleOnly;
@property(nonatomic) struct TSUCellRect zoomToEditVisibleCellRange; // @synthesize zoomToEditVisibleCellRange=_zoomToEditVisibleCellRange;
@property(readonly, nonatomic) NSMutableArray *animationStack; // @synthesize animationStack=_animationStack;
@property(nonatomic, getter=isRecursivelyDrawingInContext) BOOL recursivelyDrawingInContext; // @synthesize recursivelyDrawingInContext=_recursivelyDrawingInContext;
@property(nonatomic) struct TSUCellRect dirtyCellRange; // @synthesize dirtyCellRange=_dirtyCellRange;
@property(nonatomic) double currentScreenScale; // @synthesize currentScreenScale=_currentScreenScale;
@property(retain, nonatomic) CALayer *overlayFrozenHeaderTableNameMask; // @synthesize overlayFrozenHeaderTableNameMask=_overlayFrozenHeaderTableNameMask;
@property(retain, nonatomic) CALayer *overlayFrozenHeaderTableBodyMask; // @synthesize overlayFrozenHeaderTableBodyMask=_overlayFrozenHeaderTableBodyMask;
@property(retain, nonatomic) CALayer *overlayFrozenHeaderColumnsMask; // @synthesize overlayFrozenHeaderColumnsMask=_overlayFrozenHeaderColumnsMask;
@property(retain, nonatomic) CALayer *overlayFrozenHeaderRowsMask; // @synthesize overlayFrozenHeaderRowsMask=_overlayFrozenHeaderRowsMask;
@property(retain, nonatomic) TSDTilingLayer *overlayFrozenHeaderColumns; // @synthesize overlayFrozenHeaderColumns=_overlayFrozenHeaderColumns;
@property(retain, nonatomic) TSDTilingLayer *overlayFrozenHeaderRows; // @synthesize overlayFrozenHeaderRows=_overlayFrozenHeaderRows;
@property(retain, nonatomic) TSDTilingLayer *overlayFrozenHeaderCorner; // @synthesize overlayFrozenHeaderCorner=_overlayFrozenHeaderCorner;
@property(retain, nonatomic) TSDTilingLayer *overlayTableName; // @synthesize overlayTableName=_overlayTableName;
@property(nonatomic) BOOL zoomOperationIsInProgress; // @synthesize zoomOperationIsInProgress=_zoomOperationIsInProgress;
@property(nonatomic) BOOL aspectOperationIsInProgress; // @synthesize aspectOperationIsInProgress=_aspectOperationIsInProgress;
@property(nonatomic) BOOL zoomToEditOperationIsInProgress; // @synthesize zoomToEditOperationIsInProgress=_zoomToEditOperationIsInProgress;
@property(nonatomic) BOOL shouldRepositionStockPopover; // @synthesize shouldRepositionStockPopover=_shouldRepositionStockPopover;
@property(nonatomic, getter=isTableNameValid) BOOL tableNameValid; // @synthesize tableNameValid=_tableNameValid;
@property(readonly, nonatomic) BOOL isZoomToEditOperationInProgress; // @synthesize isZoomToEditOperationInProgress=_isZoomToEditOperationInProgress;
@property(retain, nonatomic) TSWPTextEditing *tableNameTextEditing; // @synthesize tableNameTextEditing=_tableNameTextEditing;
@property(nonatomic) BOOL isSettingSelection; // @synthesize isSettingSelection=_isSettingSelection;
@property(retain, nonatomic) TSTTableCellTextEditingRep *containedTextEditingRep; // @synthesize containedTextEditingRep=_containedTextEditingRep;
@property(readonly, nonatomic) __weak id <TSTCanvasReferenceController> canvasReferenceController; // @synthesize canvasReferenceController=_canvasReferenceController;
@property(readonly, nonatomic) id <TSTTableChromeProvider> tableChrome; // @synthesize tableChrome=_tableChrome;
@property(readonly, nonatomic) id <TSTTableRepDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <TSTTableAnimationController> animationController; // @synthesize animationController=_animationController;
@property(copy, nonatomic) NSSet *visibleFillKnobs; // @synthesize visibleFillKnobs=_visibleFillKnobs;
@property(retain, nonatomic) TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *visitorKnobTracker; // @synthesize visitorKnobTracker=_visitorKnobTracker;
@property(readonly, nonatomic) BOOL usesWholeChromeResizer; // @synthesize usesWholeChromeResizer=_usesWholeChromeResizer;
@property(readonly, nonatomic) BOOL selectsCellOnInitialTap; // @synthesize selectsCellOnInitialTap=_selectsCellOnInitialTap;
@property(readonly, nonatomic) BOOL selectionUsesBezierPath; // @synthesize selectionUsesBezierPath=_selectionUsesBezierPath;
@property(nonatomic) BOOL selectionDragAbortedOnNewSelection; // @synthesize selectionDragAbortedOnNewSelection=_selectionDragAbortedOnNewSelection;
@property(nonatomic) __weak TSTSelectionDragController *cellDragController; // @synthesize cellDragController=_cellDragController;
@property(readonly, nonatomic) TSTTableReferences *references; // @synthesize references=_references;
@property(nonatomic) struct TSUCellCoord ratingsDragCellID; // @synthesize ratingsDragCellID=_ratingsDragCellID;
@property(nonatomic) struct CGRect searchSelectionBounds; // @synthesize searchSelectionBounds=_searchSelectionBounds;
@property(readonly, nonatomic) NSMutableDictionary *childTextReps; // @synthesize childTextReps=_childTextReps;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (struct CGRect)boundsForResizeGuideUI;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (int)tilingMode;
- (BOOL)canDrawInParallel;
- (BOOL)mustDrawOnMainThreadForInteractiveCanvas;
- (BOOL)canDrawInBackgroundDuringScroll;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (void)inspectorUIIsDismissing:(id)arg1;
- (void)inspectorUIIsPresenting:(id)arg1;
- (void)viewDidTransition;
- (void)viewScrollDidChange;
- (void)didEndScrollingOperation;
- (void)willBeginScrollingOperation;
- (void)didEndZoomingOperation;
- (void)willBeginZoomingOperation;
- (void)didEndDynamicOperation;
- (void)willBeginDynamicOperation;
- (id)decoratorOverlayLayers;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (void)invalidateFrozenHeaders;
- (void)validateFrozenHeaderTableBodyMask;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)validateFrozenHeaderColumns;
- (void)validateFrozenHeaderRows;
- (void)validateFrozenHeaderCorner;
- (struct CGRect)p_alignedLayerFrameForLayoutSpace:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_frozenHeaderOverlayLayers;
- (void)validateTableName;
- (id)p_tableNameOverlayLayers;
- (void)didUpdateLayer:(id)arg1;
- (id)additionalLayersUnderLayer;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)textureForDescription:(id)arg1;
- (void)popAnimation;
- (void)pushAnimation:(id)arg1;
@property(readonly, nonatomic) TSTAnimation *currentAnimation;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)processChanges:(id)arg1;
- (void)p_processChangeActions:(id)arg1;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;
- (void)didDrawCellImageFill:(id)arg1 inCellRange:(struct TSUCellRect)arg2;
- (void)transitionEditingMode;
- (void)setTableChrome:(id)arg1;
- (struct CGPoint)unscaledActivityLineEndPointForAnnotation:(id)arg1 withSearchReference:(id)arg2;
- (BOOL)wantsActivityLine;
- (void)invalidateComments;
- (void)invalidateAnnotationColor;
- (void)p_invalidateCellCommentBadges;
- (void)dirtyCellRange:(struct TSUCellRect)arg1;
- (void)setNeedsDisplayInCellRange:(struct TSUCellRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)invalidateTableName;
- (void)invalidateCellRange:(struct TSUCellRect)arg1 fittingRange:(struct TSUCellRect)arg2 invalidateSize:(BOOL)arg3;
- (void)invalidateCellRange:(struct TSUCellRect)arg1;
- (void)invalidateSelection;
- (void)p_resetDynamicModePropertiesForContainedTextEditing;
- (void)p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:(struct TSUCellRect)arg1;
- (void)p_updateDynamicModePropertiesForContainedTextEditing;
- (void)screenScaleDidChange;
- (void)viewScaleDidChange;
- (BOOL)isFullyVisibleWithBorder:(int)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)validateVisibleRect;
- (void)validateStrokesInEditingSpillingTextRange;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3;
- (void)updateFromLayout;
- (id)hyperlinkRegions;
- (id)hyperlinkContainerRep;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(id)arg1;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(BOOL)arg2;
- (void)setHighlightedHyperlinkField:(id)arg1;
- (struct CGAffineTransform)p_horizontalAlignmentTransformForHyperlinkWithBounds:(struct CGRect)arg1 inCell:(struct TSUCellCoord)arg2;
- (struct TSUCellCoord)p_cellIDForHyperlinkField:(id)arg1;
- (id)smartFieldAtPoint:(struct CGPoint)arg1;
- (id)p_columnForCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)logicalCellIDForUnscaledCanvasPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSTCellSelection *editorSelection;
- (struct CGRect)frameInUnscaledCanvasIncludingChrome;
- (void)setCurrentKnobTracker:(id)arg1;
- (void)contentsRectForCellRangeAcrossSpaces:(struct TSUCellRect)arg1 contentsCenterInfo:(CDStruct_08b9d696 *)arg2 canvasFrame:(struct CGRect *)arg3 contentsRect:(struct CGRect *)arg4;
- (struct CGRect)boundsForCellSelection:(struct TSUCellCoord)arg1;
- (struct CGRect)canvasBoundsForCellRange:(struct TSUCellRect)arg1;
- (struct CGRect)deviceBoundsForCellRange:(struct TSUCellRect)arg1;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)isDraggable;
- (id)stringValueOfEditingCell;
- (BOOL)p_shouldPerformOnChildTextReps:(SEL)arg1;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (id)childReps;
- (void)updateChildrenFromLayout;
@property(nonatomic) struct TSUCellCoord editingCellID;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)beginEditingStockCellID:(struct TSUCellCoord)arg1;
- (void)beginEditingControlCellID:(struct TSUCellCoord)arg1 canvasPoint:(struct CGPoint)arg2 wantsKeyboard:(BOOL)arg3;
- (void)endTableNameEditing;
- (BOOL)disableInspector;
- (BOOL)suppressInvisiblePathHighlight;
- (BOOL)suppressPhonetics;
- (BOOL)suppressBreaks;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (void)beginTableNameEditingAtUnscaledCanvasPoint:(struct CGPoint)arg1 withDefaultText:(id)arg2;
- (void)beginTableNameEditingAtUnscaledCanvasPoint:(struct CGPoint)arg1;
- (void)changeEditingMode:(int)arg1 maybeBecomePrimary:(BOOL)arg2;
- (void)changeEditingMode:(int)arg1;
- (int)editingMode;
@property(readonly, nonatomic) TSTTableEditor *tableEditor;
- (id)tableNameEditor;
- (void)willBeRemoved;
- (void)invalidateEditingCell;
- (void)asyncPostTextChangedInRange:(struct TSUCellRect)arg1;
- (BOOL)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (id)beginEditing;
- (void)canvasReferenceEditingModeChanged:(id)arg1;
- (BOOL)p_selectionChangedOfClass:(Class)arg1 fromOldPath:(id)arg2 toNewPath:(id)arg3;
- (BOOL)p_strokeSelectionRemovedFromOldPath:(id)arg1 toNewPath:(id)arg2;
- (void)editorControllerSelectionDidChange:(id)arg1;
- (BOOL)shouldDismissHyperlinkUIOnApplicationEnterBackground;
- (id)p_beginHyperlinkEditing:(id)arg1 inCell:(struct TSUCellCoord)arg2;
- (id)hyperlinkFieldForEditingHyperlinkField:(id)arg1;
- (BOOL)shouldShowHyperlinkUI;
- (unsigned long long)hyperlinkActionForHyperlinkField:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (BOOL)hyperlinkEditingReadonlyForCellID:(struct TSUCellCoord)arg1;
- (BOOL)wantsContextMenuAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (BOOL)handlesEditMenu;
- (BOOL)shouldShowContextMenu;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)p_addObservers;
- (void)p_removeObservers;
- (void)dealloc;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (struct CGRect)layerFrameInScaledCanvas;
- (id)repForDragging;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
@property(readonly, nonatomic) long long selectionType;
- (struct CGRect)rectForPresentationPopover;
@property(readonly, nonatomic) TSTCellSelection *selection;
@property(readonly, nonatomic) CALayer *layerForRep;
@property(readonly, nonatomic) struct CGRect canvasVisibleRect;
@property(readonly, nonatomic) struct CGAffineTransform transformFromCanvas;
@property(readonly, nonatomic) struct CGAffineTransform transformToCanvas;
@property(readonly, nonatomic) TSDEditorController *editorController;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) BOOL layoutDirectionIsLeftToRight;
@property(readonly, nonatomic) TSTLayout *tableLayout;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTInfo *tableInfo;
- (struct CGRect)p_convertRectIntoZoomCoordinates:(struct CGRect)arg1;
- (void)updateUniversalAccessZoomWindow;
- (void)hideDragAndDropUI;
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 dragInfo:(id)arg2;
- (id)dragAndDropHighlightLayer;
- (BOOL)shouldShowDragAndDropHighlight;
- (BOOL)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (BOOL)p_wantsToPreventDragOperationForDragInfo:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)addCollaborationDebugItemsToMenuItems:(id)arg1;
- (id)tableContextMenuItems;
- (id)cellContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (id)rowContextMenuItemsForRow:(unsigned short)arg1 inColumn:(unsigned char)arg2;
- (id)rowContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (id)columnContextMenuItemsForColumn:(unsigned char)arg1;
- (id)columnContextMenuItemsAtPoint:(struct CGPoint)arg1;
- (BOOL)shouldPreventSelectionChangeForMouseDownAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)p_selectionPathForContextMenuClickAtCanvasPoint:(struct CGPoint)arg1;
- (BOOL)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 onKnob:(id)arg3;
- (void)mouseExitedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseEnteredAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseMovedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withEvent:(id)arg3;
- (id)newMouseEventHandlerForKnob:(id)arg1 atPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (id)p_newMouseEventHandler:(id)arg1 delayedByKnob:(id)arg2;
- (id)newMouseEventHandlerAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)macTableEditor;
- (void)endKnobTrackerVisit:(id)arg1;
- (void)beginKnobTrackerVisit:(id)arg1;
- (void)willBeginTextOrFormulaEditing;
- (void)setupContainedTextEditingRep:(struct TSUCellCoord)arg1;
- (void)endTextEditing;
- (void)beginTextEditingAtCellID:(struct TSUCellCoord)arg1 setTextSelectionAtUnscaledCanvasPoint:(struct CGPoint)arg2;
- (void)p_beginTextEditingAtCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2;
- (void)beginTextEditingAtCellID:(struct TSUCellCoord)arg1;
- (void)p_selectTableAsOnlyInfoIfNecessary;
- (void)p_swapActiveCellToCellID:(struct TSUCellCoord)arg1;
- (void)p_swapActiveCellToCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2;
- (void)willBeginEditingContainedRep;
- (BOOL)canEditWithEditor:(id)arg1;
- (void)endRatingsDrag;
- (void)moveRatingsDragToPoint:(struct CGPoint)arg1;
- (void)startRatingsDragAtPoint:(struct CGPoint)arg1;
- (BOOL)canStartRatingsDragAtPoint:(struct CGPoint)arg1 isLongPress:(BOOL)arg2;
- (void)p_hideStepperHUDIfVisibleAsync:(BOOL)arg1;
- (void)hideStepperHUDIfVisible;
- (void)stepperHUDWillDisappear;
- (void)stepperHUDWillAppear;
- (BOOL)stepperHUDIsVisible;
- (id)sharedStepperHUDViewController;
- (BOOL)hitReferenceBadgesWithPoint:(struct CGPoint)arg1 includeCells:(BOOL)arg2;
- (BOOL)shouldShowKnobs;
- (BOOL)shouldCreateKnobs;
- (void)hideAllFillKnobs;
- (id)p_knobsForRangeSelection;
- (id)p_knobsForWholeTab;
- (id)p_knobsForFillMode;
- (void)validateFillDirections:(id)arg1 withinSelection:(BOOL)arg2 canFillUp:(char *)arg3 canFillDown:(char *)arg4 canFillLeading:(char *)arg5 canFillTrailing:(char *)arg6;
- (void)validateFillDirections:(id)arg1 withinSelection:(BOOL)arg2 canFillUp:(char *)arg3 canFillDown:(char *)arg4 canFillLeft:(char *)arg5 canFillRight:(char *)arg6;
- (id)p_knobsForTableResize;
- (id)p_tableKnobWithTag:(unsigned long long)arg1 knobVariant:(int)arg2;
- (id)p_knobsForReferences;
- (void)p_updateKnobReferenceIdentifiers;
- (Class)knobClassForVariant:(int)arg1;
- (BOOL)fillKnobsEnabled;
- (id)newTrackerForKnob:(id)arg1;
- (struct CGPoint)positionOfKnob:(id)arg1 forTableSelectionBounds:(struct CGRect)arg2 withContentsRect:(struct CGRect)arg3 andCellRange:(struct TSUCellRect)arg4;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)boundsForTableKnobsAndCellRange:(struct TSUCellRect *)arg1;
- (struct CGRect)boundsForStandardKnobs;
- (BOOL)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (BOOL)shouldCreateSelectionKnobs;
- (unsigned long long)enabledKnobMask;
- (void)invalidateKnobs;
- (id)knobs;
- (BOOL)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)dismissControlCellEditor;
- (void)p_enumerateCollabCursorSelectionHighlightLayers:(CDUnknownBlockType)arg1;
- (void)addCollaboratorCursorHoverKnobsToArray:(id)arg1;
- (id)currentCollaboratorCursorColor;
- (id)collaboratorCursorLayer;
- (void)invalidateCollaboratorCursorLayer;
- (void)hideCollaboratorCursors;
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;
- (BOOL)isEditingAnimations;
- (void)endTabDragSelection:(id)arg1;
- (void)updateTabDragSelection:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)startTabDragSelection:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)selectionDragDidAbortWithInitialSelection:(id)arg1 currentSelection:(id)arg2;
- (int)chromeMode;
- (void)becameNotSelected;
- (void)becameSelected;
- (BOOL)shouldShowSelectionHighlight;
- (id)selectionHighlightLayer;
- (BOOL)wantsToHandleTapsWhenLocked;
- (void)beginEditingCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 unscaledCanvasPoint:(struct CGPoint)arg3;
- (BOOL)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)wantsToHandleTapsOnContainingGroup;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)p_shouldHandleTap;
- (BOOL)p_didHitWarningIconInCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 atPoint:(struct CGPoint)arg3;
- (BOOL)p_didHitFormulaErrorInCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 atPoint:(struct CGPoint)arg3;
- (BOOL)cellFormatUsesInputProxy:(int)arg1;
- (BOOL)cellIsStockCell:(struct TSUCellCoord)arg1;
- (int)formatTypeForCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForWarningIndicatorInCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForFormulaErrorIndicatorInCell:(struct TSUCellCoord)arg1;
- (struct CGRect)contentFrameForCell:(struct TSUCellCoord)arg1;
- (id)subSelectionForSelectingTextInStorage:(id)arg1;
- (id)parentInfoForSelecting;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(BOOL)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (const struct CGPath *)_newPathForSearchReference:(id)arg1 inset:(double)arg2;
- (struct CGRect)_contentFrameFromSearchReference:(id)arg1 adjustForContainedRep:(BOOL)arg2;
- (id)_textImageForReference:(id)arg1 path:(struct CGPath *)arg2 shouldPulsate:(BOOL)arg3 cellID:(struct TSUCellCoord)arg4;
- (void)_drawTextBackground:(struct CGContext *)arg1 pulsating:(BOOL)arg2 shouldTint:(BOOL)arg3;
- (BOOL)_shouldHighlightGray:(struct TSUCellCoord)arg1;
- (BOOL)doesRepContainSearchReference:(id)arg1;
- (void)setPulseControllerActive:(BOOL)arg1 autohide:(BOOL)arg2;
- (void)updateHighlights;
- (BOOL)useFindOverlayers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

