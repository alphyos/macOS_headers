//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVPlayerItemLegibleOutputPushDelegate-Protocol.h"
#import "TSKMediaPlayerControllerDelegate-Protocol.h"

@class AVPlayerItemLegibleOutput, AVPlayerItemVideoOutput, KNAnimationSubtitleRenderer, KNPlaybackSession, NSString, TSDGPUDataBuffer, TSDMetalShader, TSDMovieInfo;
@protocol MTLDevice, MTLTexture, OS_dispatch_queue, TSDMovieHUDViewController, TSKLayerMediaPlayerController;

@interface KNAnimatedMovieController : NSObject <AVPlayerItemLegibleOutputPushDelegate, TSKMediaPlayerControllerDelegate>
{
    BOOL _isWideGamut;
    BOOL _isAnimatedGIF;
    id <MTLTexture> _posterTexture;
    unsigned long long _state;
    KNPlaybackSession *_session;
    AVPlayerItemVideoOutput *_videoOutput;
    id <MTLDevice> _device;
    struct __CVMetalTextureCache *_textureCache;
    struct CGSize _videoSize;
    AVPlayerItemLegibleOutput *_legibleOutput;
    KNAnimationSubtitleRenderer *_subtitleRenderer;
    TSDGPUDataBuffer *_videoQuad;
    BOOL _subtitleHasChanged;
    struct CGImage *_subtitleImage;
    id <MTLTexture> _subtitleTexture;
    TSDMetalShader *_subtitleShader;
    NSObject<OS_dispatch_queue> *_subtitleQueue;
    struct os_unfair_lock_s _subtitleLock;
    BOOL _shouldTeardownPlayerController;
    TSDMovieInfo *_info;
    NSObject<TSKLayerMediaPlayerController> *_playerController;
    id <TSDMovieHUDViewController> _viewController;
    id <MTLTexture> _videoTexture;
}

@property(readonly) id <MTLTexture> videoTexture; // @synthesize videoTexture=_videoTexture;
@property(retain) id <TSDMovieHUDViewController> viewController; // @synthesize viewController=_viewController;
@property(readonly) NSObject<TSKLayerMediaPlayerController> *playerController; // @synthesize playerController=_playerController;
@property(readonly) TSDMovieInfo *info; // @synthesize info=_info;
- (void).cxx_destruct;
- (void)p_drawSubtitlesWithRenderEncoder:(id)arg1 mvpTransform:(struct CATransform3D)arg2;
- (void)p_updateSubtitleTextureWithContext:(id)arg1;
- (void)p_setSubtitleImage:(struct CGImage *)arg1 asChanged:(BOOL)arg2;
- (void)p_teardownSubtitlesOnPlayerItem:(id)arg1;
- (void)p_setupSubtitlesOnPlayerItem:(id)arg1;
- (void)legibleOutput:(id)arg1 didOutputAttributedStrings:(id)arg2 nativeSampleBuffers:(id)arg3 forItemTime:(CDStruct_1b6d18a9)arg4;
- (void)hideHUDWithAnimation:(BOOL)arg1;
- (void)showHUD;
- (id)p_metalTextureFromCGImage:(struct CGImage *)arg1 colorSpace:(struct CGColorSpace *)arg2 device:(id)arg3 commandQueue:(id)arg4;
- (void)updateVideoTextureWithMetalContext:(id)arg1;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
- (void)reset;
- (void)applyMovieControl:(long long)arg1;
- (void)p_updateMovieState:(long long)arg1;
- (void)teardown;
- (void)p_teardownPlayerController;
- (BOOL)p_shouldDownscalePixelBufferForFrameRate:(double)arg1;
- (BOOL)p_assetTrackHasAlpha:(id)arg1;
- (void)p_setupPlayerControllerIfNecessary;
@property(readonly) BOOL isPlaying;
@property(readonly) BOOL isAudioOnly;
- (id)initWithMovieInfo:(id)arg1 session:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

