//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDEditor-Protocol.h"
#import "TSTLayoutDynamicContentProtocol-Protocol.h"

@class NSResponder, NSSet, NSString, NSView, TSDEditorController, TSKDocumentRoot, TSTCell, TSTInfo, TSTLayout, TSTTableModel, TSTTableRep, TSULocale;
@protocol TSTDataCellEditorDelegate, TSTDataCellEditorPresenting, TSTDataCellEditorValueProvider, TSTWPTextEditorRawArrowKeyEventDelegate;

@interface TSTDataCellEditor : NSObject <TSDEditor, TSTLayoutDynamicContentProtocol>
{
    id <TSTDataCellEditorDelegate> mDelegate;
    id <TSTDataCellEditorValueProvider> mValueProvider;
    BOOL mPreventResigningFirstResponder;
    BOOL mResigning;
    BOOL mImplicitModeNavigates;
    struct TSUCellRect mInvalidationRange;
    BOOL mTornDown;
    TSTCell *mOriginalCell;
    id <TSTDataCellEditorPresenting> mPresenter;
}

+ (id)defaultNibName;
+ (Class)presenterClass;
@property(retain, nonatomic) TSTCell *originalCell; // @synthesize originalCell=mOriginalCell;
@property(nonatomic) BOOL preventResigningFirstResponder; // @synthesize preventResigningFirstResponder=mPreventResigningFirstResponder;
@property(nonatomic, getter=implicitModeNavigates) BOOL implicitModeNavigates; // @synthesize implicitModeNavigates=mImplicitModeNavigates;
@property(nonatomic) BOOL resigning; // @synthesize resigning=mResigning;
@property(nonatomic) id <TSTDataCellEditorDelegate> delegate; // @synthesize delegate=mDelegate;
@property id <TSTDataCellEditorValueProvider> valueProvider; // @synthesize valueProvider=mValueProvider;
@property(readonly, retain, nonatomic) id <TSTDataCellEditorPresenting> presenter; // @synthesize presenter=mPresenter;
- (struct TSUCellRect)p_updateInvalidationRange:(struct TSUCellCoord)arg1;
- (id)p_tableEditor;
- (void)shouldScrollToCurrentSelection:(char *)arg1;
- (BOOL)dynamicContentMustDrawOnMainThread;
- (BOOL)cell:(id *)arg1 forCellID:(struct TSUCellCoord)arg2;
- (id)selectionWithRange:(struct _NSRange)arg1;
- (void)setSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)setSelection:(id)arg1;
- (id)selection;
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (struct _NSRange)rangeOfEnclosingWordAtCharIndex:(unsigned int)arg1;
- (void)extendSelectionForward;
- (void)extendSelectionBackward;
- (void)deleteForward;
- (id)textInRange:(struct _NSRange)arg1;
- (unsigned long long)textLength;
- (void)endEditingAndSelectParent:(id)arg1;
- (void)willResignCurrentEditor;
- (void)willResignTextInputEditor;
- (void)didBecomeTextInputEditor;
- (BOOL)canResignFirstResponder;
- (id)permittedSharedReadOnlyActions;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (id)selectionWillChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3 inSelectionPath:(id)arg4 withNewEditors:(id)arg5;
- (id)nextEditorForSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;
- (BOOL)shouldRemainOnEditorStackForSelection:(id)arg1 inSelectionPath:(id)arg2 withNewEditors:(id)arg3;
- (BOOL)canRemainDuringDragInsert;
@property(retain, nonatomic) TSDEditorController *editorController;
@property(readonly) BOOL canEditCells;
- (void)arrowKeyReceivedInDirection:(int)arg1 withModifierKeys:(int)arg2;
- (BOOL)delegateWantsImplicitEditing;
- (void)attemptActivateFormulaMode;
- (id)fieldEditorUndoManager;
- (void)localeDidChange;
- (id)customFormatForKey:(id)arg1;
- (void)invalidateCell;
- (void)replaceContentWithMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)replaceContentWithText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)clearContent:(BOOL)arg1 submodes:(BOOL)arg2;
- (void)commitAndKeepEditing;
- (void)commitWithPreferredFormatType:(int)arg1;
- (void)commit;
- (void)prepareToCommitWithAutocorrectionBehavior:(long long)arg1;
- (void)i_commitWithPreferredFormatType:(int)arg1 andKeepEditing:(BOOL)arg2;
- (id)formattedStringFromFocusedCell;
- (void)coerceValueFromPreviousEditor:(id)arg1;
- (void)reloadValueFromValueProvider;
- (void)reloadValueFromFocusedCell;
- (void)reloadValue;
- (Class)wpSelectionClass;
- (void)dealloc;
- (void)teardown;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (id)initWithDelegate:(id)arg1 nibName:(id)arg2;
- (void)selectionRect:(struct CGRect *)arg1;
@property(readonly, nonatomic, getter=impliedSelection) BOOL impliedSelection;
@property(readonly) NSResponder *responder;
@property(readonly, retain, nonatomic) NSView *view;
@property(nonatomic) id <TSTWPTextEditorRawArrowKeyEventDelegate> rawArrowKeyEventDelegate;
- (id)cellToCommitWithPreferredFormatType:(int)arg1;
@property(readonly) TSTCell *cellToCommit;
@property(readonly) TSTInfo *tableInfo;
@property(readonly) TSTLayout *layout;
@property(readonly) TSTTableRep *tableRep;
@property(readonly, nonatomic) TSULocale *documentLocale;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) TSTTableModel *tableModel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly) Class superclass;

@end

