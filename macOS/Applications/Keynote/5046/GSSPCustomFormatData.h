//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "GSSPMessageBase.h"

#import "GSSPAutoDecodable-Protocol.h"

@class NSString;

@interface GSSPCustomFormatData : GSSPMessageBase <GSSPAutoDecodable>
{
    vector_a093891c mInterstitialStringList;
    vector_e0f2bd7e mInterstitialStringInsertionIndexList;
    NSString *mFormatString;
    double mScaleFactor;
    int mFractionAccuracy;
    int mMinimumIntegerWidth;
    int mDecimalWidth;
    int mNumberOfNonSpaceIntegerPlaceholderDigits;
    int mNumberOfNonSpaceDecimalPlaceholderDigits;
    int mIndexFromRightOfLastDigitPlaceholder;
    int mNumberOfHashDecimalPlaceholders;
    int mTotalNumberOfDecimalPlaceholdersInFormat;
    NSString *mCurrencyCode;
    BOOL mShowThousandsSeparator;
    BOOL mUseAccountingStyle;
    BOOL mRequiresFractionReplacement;
    BOOL mIsConditional;
    BOOL mFormatContainsIntegerToken;
    BOOL mIsComplexFormat;
    BOOL mDefinedFormatString;
    BOOL mDefinedScaleFactor;
    BOOL mDefinedFractionAccuracy;
    BOOL mDefinedMinimumIntegerWidth;
    BOOL mDefinedDecimalWidth;
    BOOL mDefinedNumberOfNonSpaceIntegerPlaceholderDigits;
    BOOL mDefinedNumberOfNonSpaceDecimalPlaceholderDigits;
    BOOL mDefinedIndexFromRightOfLastDigitPlaceholder;
    BOOL mDefinedNumberOfHashDecimalPlaceholders;
    BOOL mDefinedTotalNumberOfDecimalPlaceholdersInFormat;
    BOOL mDefinedCurrencyCode;
    BOOL mDefinedShowThousandsSeparator;
    BOOL mDefinedUseAccountingStyle;
    BOOL mDefinedRequiresFractionReplacement;
    BOOL mDefinedIsConditional;
    BOOL mDefinedFormatContainsIntegerToken;
    BOOL mDefinedIsComplexFormat;
}

+ (Class)realClass;
+ (void)registerRealGsspClass:(Class)arg1;
+ (CDUnknownFunctionPointerType)defaultDecodeConversionFunc;
+ (CDUnknownFunctionPointerType)autoDecodeConversionFunc;
+ (void)setAutoDecodeConversionFuncForDocServer:(CDUnknownFunctionPointerType)arg1;
+ (Class)autoDecodedClass;
@property(readonly, nonatomic) BOOL definedIsComplexFormat; // @synthesize definedIsComplexFormat=mDefinedIsComplexFormat;
@property(readonly, nonatomic) BOOL definedFormatContainsIntegerToken; // @synthesize definedFormatContainsIntegerToken=mDefinedFormatContainsIntegerToken;
@property(readonly, nonatomic) BOOL definedIsConditional; // @synthesize definedIsConditional=mDefinedIsConditional;
@property(readonly, nonatomic) BOOL definedRequiresFractionReplacement; // @synthesize definedRequiresFractionReplacement=mDefinedRequiresFractionReplacement;
@property(readonly, nonatomic) BOOL definedUseAccountingStyle; // @synthesize definedUseAccountingStyle=mDefinedUseAccountingStyle;
@property(readonly, nonatomic) BOOL definedShowThousandsSeparator; // @synthesize definedShowThousandsSeparator=mDefinedShowThousandsSeparator;
@property(readonly, nonatomic) BOOL definedCurrencyCode; // @synthesize definedCurrencyCode=mDefinedCurrencyCode;
@property(readonly, nonatomic) BOOL definedTotalNumberOfDecimalPlaceholdersInFormat; // @synthesize definedTotalNumberOfDecimalPlaceholdersInFormat=mDefinedTotalNumberOfDecimalPlaceholdersInFormat;
@property(readonly, nonatomic) BOOL definedNumberOfHashDecimalPlaceholders; // @synthesize definedNumberOfHashDecimalPlaceholders=mDefinedNumberOfHashDecimalPlaceholders;
@property(readonly, nonatomic) BOOL definedIndexFromRightOfLastDigitPlaceholder; // @synthesize definedIndexFromRightOfLastDigitPlaceholder=mDefinedIndexFromRightOfLastDigitPlaceholder;
@property(readonly, nonatomic) BOOL definedNumberOfNonSpaceDecimalPlaceholderDigits; // @synthesize definedNumberOfNonSpaceDecimalPlaceholderDigits=mDefinedNumberOfNonSpaceDecimalPlaceholderDigits;
@property(readonly, nonatomic) BOOL definedNumberOfNonSpaceIntegerPlaceholderDigits; // @synthesize definedNumberOfNonSpaceIntegerPlaceholderDigits=mDefinedNumberOfNonSpaceIntegerPlaceholderDigits;
@property(readonly, nonatomic) BOOL definedDecimalWidth; // @synthesize definedDecimalWidth=mDefinedDecimalWidth;
@property(readonly, nonatomic) BOOL definedMinimumIntegerWidth; // @synthesize definedMinimumIntegerWidth=mDefinedMinimumIntegerWidth;
@property(readonly, nonatomic) BOOL definedFractionAccuracy; // @synthesize definedFractionAccuracy=mDefinedFractionAccuracy;
@property(readonly, nonatomic) BOOL definedScaleFactor; // @synthesize definedScaleFactor=mDefinedScaleFactor;
@property(readonly, nonatomic) BOOL definedFormatString; // @synthesize definedFormatString=mDefinedFormatString;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)dspClassName;
- (id)jsonNSDictionaryValue;
- (void)populateJsonNSDictionaryValueToDictionary:(id)arg1;
- (int)p_getDiffEncodingScoreWith:(id)arg1;
- (void)p_populateStructHashKey:(struct GSSPHashKeyBuilder *)arg1;
- (unsigned long long)p_getStructHashKeyLength;
- (int)getStructHashId;
- (void)serializeRequiredFieldsWithSerializationContext:(struct GSSPSerializationContext *)arg1 withNextFieldNeedSerialize:(BOOL)arg2 diffBy:(id)arg3;
- (void)serializeOptionalFieldsWithSerializationContext:(struct GSSPSerializationContext *)arg1 withNextFieldNeedSerialize:(BOOL)arg2 diffBy:(id)arg3;
- (id)dspTypeIdString;
- (void)populateRequiredField:(int)arg1 fromContext:(struct GSSPDeserializationContext *)arg2;
- (void)populateOptionalField:(int)arg1 fromContext:(struct GSSPDeserializationContext *)arg2;
- (void)shallowCopyAllFieldsFrom:(id)arg1;
- (void)dealloc;
- (BOOL)clearIsComplexFormat;
- (BOOL)clearFormatContainsIntegerToken;
- (BOOL)clearIsConditional;
- (BOOL)clearRequiresFractionReplacement;
- (BOOL)clearUseAccountingStyle;
- (BOOL)clearShowThousandsSeparator;
- (BOOL)clearCurrencyCode;
- (BOOL)clearTotalNumberOfDecimalPlaceholdersInFormat;
- (BOOL)clearNumberOfHashDecimalPlaceholders;
- (BOOL)clearIndexFromRightOfLastDigitPlaceholder;
- (BOOL)clearNumberOfNonSpaceDecimalPlaceholderDigits;
- (BOOL)clearNumberOfNonSpaceIntegerPlaceholderDigits;
- (BOOL)clearDecimalWidth;
- (BOOL)clearMinimumIntegerWidth;
- (BOOL)clearFractionAccuracy;
- (BOOL)clearScaleFactor;
- (BOOL)clearFormatString;
- (void)setIsComplexFormat:(BOOL)arg1;
- (BOOL)isComplexFormat;
- (void)setFormatContainsIntegerToken:(BOOL)arg1;
- (BOOL)formatContainsIntegerToken;
- (void)setIsConditional:(BOOL)arg1;
- (BOOL)isConditional;
- (void)setRequiresFractionReplacement:(BOOL)arg1;
- (BOOL)requiresFractionReplacement;
- (void)setUseAccountingStyle:(BOOL)arg1;
- (BOOL)useAccountingStyle;
- (void)setShowThousandsSeparator:(BOOL)arg1;
- (BOOL)showThousandsSeparator;
- (void)setCurrencyCode:(id)arg1;
- (id)currencyCode;
- (void)setTotalNumberOfDecimalPlaceholdersInFormat:(int)arg1;
- (int)totalNumberOfDecimalPlaceholdersInFormat;
- (void)setNumberOfHashDecimalPlaceholders:(int)arg1;
- (int)numberOfHashDecimalPlaceholders;
- (void)setIndexFromRightOfLastDigitPlaceholder:(int)arg1;
- (int)indexFromRightOfLastDigitPlaceholder;
- (void)setNumberOfNonSpaceDecimalPlaceholderDigits:(int)arg1;
- (int)numberOfNonSpaceDecimalPlaceholderDigits;
- (void)setNumberOfNonSpaceIntegerPlaceholderDigits:(int)arg1;
- (int)numberOfNonSpaceIntegerPlaceholderDigits;
- (void)setDecimalWidth:(int)arg1;
- (int)decimalWidth;
- (void)setMinimumIntegerWidth:(int)arg1;
- (int)minimumIntegerWidth;
- (void)setFractionAccuracy:(int)arg1;
- (int)fractionAccuracy;
- (void)setScaleFactor:(double)arg1;
- (double)scaleFactor;
- (void)setFormatString:(id)arg1;
- (id)formatString;
- (void)setInterstitialStringInsertionIndexList:(const vector_e0f2bd7e *)arg1;
- (vector_e0f2bd7e *)interstitialStringInsertionIndexList;
- (void)setInterstitialStringList:(const vector_a093891c *)arg1;
- (vector_a093891c *)interstitialStringList;

@end

