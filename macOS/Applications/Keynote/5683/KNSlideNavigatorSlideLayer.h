//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDNoDefaultImplicitActionLayer.h"

@class CALayer, KNSlideNavigatorDisclosureIndicatorLayer, KNSlideNavigatorSelectionHighlightLayer, KNSlideNavigatorSlideData, KNSlideNavigatorSlideElementCache, KNSlideNavigatorSlideImageLayer, NSDictionary, TSUImage;

@interface KNSlideNavigatorSlideLayer : TSDNoDefaultImplicitActionLayer
{
    KNSlideNavigatorSlideElementCache *_elementCache;
    TSUImage *_thumbnailImage;
    CALayer *_imageContainerLayer;
    KNSlideNavigatorSlideImageLayer *_imageLayer;
    CALayer *_buildIndicatorLayer;
    CALayer *_transitionIndicatorLayer;
    KNSlideNavigatorDisclosureIndicatorLayer *_disclosureIndicatorLayer;
    CALayer *_skippedIndicatorLayer;
    CALayer *_slideNumberLayer;
    CALayer *_tapHighlightLayer;
    CALayer *_presenterNotesIndicatorLayer;
    BOOL _shouldOverrideThumbnailSize;
    BOOL _shouldPrepareForSkipAnimation;
    struct CGSize _overriddenThumbnailSize;
    BOOL _wideGamut;
    BOOL _showsBuildIndicator;
    BOOL _showsTransitionIndicator;
    BOOL _showsPresenterNotesIndicator;
    BOOL _showsTappedHighlight;
    BOOL _dragging;
    KNSlideNavigatorSlideData *_slideData;
    double _screenScale;
    double _thumbAspectRatio;
    unsigned long long _selectionState;
    KNSlideNavigatorSelectionHighlightLayer *_selectionHighlightLayer;
    double _additionalSelectionRightInset;
    double _additionalContentLeftInset;
}

+ (void)addSublayerWaveAnimationOnLayer:(id)arg1 withScale:(double)arg2 offset:(struct CGSize)arg3 waveCenter:(struct CGPoint)arg4 zPosition:(double)arg5;
+ (BOOL)showsDisclosureHighlightForSelectionState:(unsigned long long)arg1;
+ (BOOL)showsSelectionHighlightForSelectionState:(unsigned long long)arg1;
+ (double)skippedIndicatorHeight;
+ (double)rightMargin;
+ (struct CGSize)baseThumbnailSizeForNavigatorWidth:(double)arg1;
+ (double)indentAtLevel:(unsigned long long)arg1;
+ (struct CATransform3D)skippedIndicatorTransformForThumbnailSize:(struct CGSize)arg1 isSkipped:(BOOL)arg2;
+ (struct CATransform3D)thumbnailTransformForThumbnailSize:(struct CGSize)arg1 isSkipped:(BOOL)arg2;
+ (struct CGRect)thumbnailFrameForNavigatorWidth:(double)arg1 aspectRatio:(double)arg2 indentLevel:(unsigned long long)arg3;
+ (struct CGSize)thumbnailSizeForNavigatorWidth:(double)arg1 aspectRatio:(double)arg2 indentLevel:(unsigned long long)arg3;
+ (double)p_adjustedRightMarginForNavigatorWidth:(double)arg1 aspectRatio:(double)arg2;
+ (struct CGSize)p_largestThumbnailSizeForNavigatorWidth:(double)arg1 aspectRatio:(double)arg2;
+ (struct CGSize)p_indentedBaseThumbnailSizeForNavigatorWidth:(double)arg1 indentLevel:(unsigned long long)arg2;
@property(nonatomic) double additionalContentLeftInset; // @synthesize additionalContentLeftInset=_additionalContentLeftInset;
@property(nonatomic) double additionalSelectionRightInset; // @synthesize additionalSelectionRightInset=_additionalSelectionRightInset;
@property(nonatomic) __weak KNSlideNavigatorSelectionHighlightLayer *selectionHighlightLayer; // @synthesize selectionHighlightLayer=_selectionHighlightLayer;
@property(nonatomic) unsigned long long selectionState; // @synthesize selectionState=_selectionState;
@property(readonly, nonatomic, getter=isDragging) BOOL dragging; // @synthesize dragging=_dragging;
@property(nonatomic) BOOL showsTappedHighlight; // @synthesize showsTappedHighlight=_showsTappedHighlight;
@property(nonatomic) BOOL showsPresenterNotesIndicator; // @synthesize showsPresenterNotesIndicator=_showsPresenterNotesIndicator;
@property(nonatomic) BOOL showsTransitionIndicator; // @synthesize showsTransitionIndicator=_showsTransitionIndicator;
@property(nonatomic) BOOL showsBuildIndicator; // @synthesize showsBuildIndicator=_showsBuildIndicator;
@property(readonly, nonatomic) TSUImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(nonatomic) double thumbAspectRatio; // @synthesize thumbAspectRatio=_thumbAspectRatio;
@property(nonatomic) BOOL wideGamut; // @synthesize wideGamut=_wideGamut;
@property(nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(retain, nonatomic) KNSlideNavigatorSlideData *slideData; // @synthesize slideData=_slideData;
- (void).cxx_destruct;
- (void)removeWaveAnimationAnimated:(BOOL)arg1;
- (void)addWaveAnimationWithScale:(double)arg1 offset:(struct CGSize)arg2 zPosition:(double)arg3 addPerspectiveProjection:(BOOL)arg4;
- (void)addInsertAnimationWithDuration:(double)arg1 forKey:(id)arg2;
- (void)addExpandAnimationFrom:(double)arg1 zPosition:(double)arg2 duration:(double)arg3 forKey:(id)arg4;
- (void)addCollapseAnimationWithDelegate:(id)arg1 toTarget:(double)arg2 zPosition:(double)arg3 duration:(double)arg4 attributes:(id)arg5 forKey:(id)arg6;
- (void)addDeletionAnimationWithDelegate:(id)arg1 duration:(double)arg2 attributes:(id)arg3 forKey:(id)arg4;
- (struct CGPoint)notesIndicatorPositionForImageLayerFrame:(struct CGRect)arg1 indicatorSize:(struct CGSize)arg2;
- (struct CGPoint)buildIndicatorPositionForImageLayerFrame:(struct CGRect)arg1 indicatorSize:(struct CGSize)arg2;
- (BOOL)shouldFlipThumbnailHorizontally;
- (double)thumbnailShadowRadius;
- (double)thumbnailShadowOpacity;
- (struct CGSize)thumbnailShadowOffset;
- (const struct CGPath *)thumbnailShadowPathForRect:(struct CGRect)arg1;
- (id)slideNumberLayerImageForSlideNumber:(unsigned long long)arg1 selectionState:(unsigned long long)arg2;
- (struct CGColor *)thumbnailBorderColor;
- (double)thumbnailBorderWidth;
- (struct CGRect)contentsCenterForThumbnailSize:(struct CGSize)arg1;
- (id)skippedIndicatorImage;
- (id)processedSlideThumbImageForImage:(id)arg1;
- (id)i_rerenderedImageForImage:(id)arg1;
- (id)makeDisclosureIndicator;
- (struct CGSize)disclosureIndicatorOffset;
- (struct CGSize)slideNumberOffset;
- (void)endDragOperation;
- (void)dragOperationWillEnd;
- (void)slideWasDraggedWithIndexInStack:(unsigned long long)arg1 thumbnailImageSizeOverride:(struct CGSize)arg2;
- (void)beginDragOperation;
- (void)p_updateTapHighlight;
- (BOOL)hitTestMasterNameAtPoint:(struct CGPoint)arg1;
- (BOOL)hitTestDisclosureIndicatorAtPoint:(struct CGPoint)arg1;
- (void)p_updateDisclosureLayer;
- (void)p_updateSkippedState;
- (void)p_updateSkippedLayerContents;
- (void)p_updatePresenterNotesIndicatorWithContentsUpdate:(BOOL)arg1;
- (void)p_updatePresenterNotesIndicatorLayerContents;
- (id)presenterNotesIndicatorImage;
- (void)p_updateTransitionIndicatorWithContentsUpdate:(BOOL)arg1;
- (void)p_updateTransitionIndicatorLayerContents;
- (id)transitionIndicatorImage;
- (void)p_updateBuildIndicatorWithContentsUpdate:(BOOL)arg1;
- (void)p_updateBuildIndicatorLayerContents;
- (id)buildIndicatorImage;
- (void)p_updateSlideNumberLayerContents;
- (double)thumbnailHeightForSlideNavigatorWidth:(double)arg1;
- (double)slideLayerHeightForSlideNavigatorWidth:(double)arg1;
- (void)updateThumbnailImageWithImage:(id)arg1;
@property(readonly, nonatomic) struct CGRect skippedIndicatorFrame;
@property(readonly, nonatomic) struct CGRect thumbnailFrame;
@property(readonly, nonatomic) struct CGSize thumbnailImageSize;
@property(readonly, nonatomic) struct CGSize largestThumbnailImageSize;
- (void)reset;
- (void)layoutSublayers;
- (struct CGRect)p_thumbnailFrameForNavigatorWidth:(double)arg1;
@property(readonly, nonatomic) KNSlideNavigatorSlideImageLayer *imageLayer;
- (struct CGRect)p_imageLayerFrame;
- (const struct CGPath *)p_imageShadowPathForImageSize:(struct CGSize)arg1;
- (id)hitTest:(struct CGPoint)arg1;
@property(readonly, nonatomic) NSDictionary *implicitSlideNumberActions;
@property(readonly, nonatomic) NSDictionary *implicitThumbnailActions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithElementCache:(id)arg1;
- (long long)buildIndicatorLocation;

@end

