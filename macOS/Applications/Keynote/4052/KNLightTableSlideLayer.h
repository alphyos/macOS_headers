//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDNoDefaultImplicitActionLayer.h"

@class CALayer, KNLightTableSlideHighlightLayer, KNLightTableSlideNumberLayer, KNSlideNavigatorSlideData, TSUImage;

@interface KNLightTableSlideLayer : TSDNoDefaultImplicitActionLayer
{
    KNLightTableSlideNumberLayer *mSlideNumberLayer;
    KNLightTableSlideHighlightLayer *mSelectionHighlightLayer;
    CALayer *mPresenterNotesIndicatorLayer;
    CALayer *mBuildIndicatorLayer;
    CALayer *mTransitionIndicatorLayer;
    BOOL mSelected;
    BOOL mPrimary;
    BOOL mInContext;
    BOOL mDragging;
    double mScreenScale;
    TSUImage *mThumbnailImage;
    double mThumbnailAspectRatio;
    KNSlideNavigatorSlideData *mSlideData;
    CALayer *mContentLayer;
    CALayer *mThumbnailLayer;
}

+ (struct CGSize)p_thumbnailSizeForLayerSize:(struct CGSize)arg1;
+ (double)thumbnailLayerBottomInset;
+ (double)thumbnailLayerSideInset;
+ (double)thumbnailLayerTopInset;
+ (struct CGSize)thumbnailSizeForZoomScale:(double)arg1 withAspectRatio:(double)arg2;
+ (struct CGSize)slideLayerSizeForZoomScale:(double)arg1 withAspectRatio:(double)arg2;
@property(readonly, nonatomic, getter=isDragging) BOOL dragging; // @synthesize dragging=mDragging;
@property(nonatomic, getter=isInContext) BOOL inContext; // @synthesize inContext=mInContext;
@property(nonatomic, getter=isPrimary) BOOL primary; // @synthesize primary=mPrimary;
@property(nonatomic, getter=isSelected) BOOL selected; // @synthesize selected=mSelected;
@property(readonly, nonatomic) CALayer *thumbnailLayer; // @synthesize thumbnailLayer=mThumbnailLayer;
@property(readonly, nonatomic) CALayer *contentLayer; // @synthesize contentLayer=mContentLayer;
@property(retain, nonatomic) KNSlideNavigatorSlideData *slideData; // @synthesize slideData=mSlideData;
@property(nonatomic) double thumbnailAspectRatio; // @synthesize thumbnailAspectRatio=mThumbnailAspectRatio;
@property(readonly, nonatomic) TSUImage *thumbnailImage; // @synthesize thumbnailImage=mThumbnailImage;
@property(nonatomic) double screenScale; // @synthesize screenScale=mScreenScale;
- (void)p_updateSlideNumber;
- (void)p_updateSelectionHighlightFrame;
- (void)p_updateSkippedState;
- (void)endDragOperation;
- (void)slideWasDraggedWithIndexInStack:(unsigned long long)arg1;
- (void)beginDragOperation;
- (id)hitTest:(struct CGPoint)arg1;
- (id)p_hittableSublayer;
- (void)p_updateSelectionHighlight;
- (void)updateThumbnailImageWithImage:(id)arg1;
- (void)p_updateTransitionIndicator;
- (void)p_updateTransitionIndicatorLayerContents;
- (void)p_updateBuildIndicator;
- (void)p_updateBuildIndicatorLayerContents;
- (void)p_updatePresenterNotesIndicator;
- (void)p_updatePresenterNotesIndicatorLayerContents;
- (void)addDeleteAnimationForKey:(id)arg1;
- (void)addInsertAnimationForKey:(id)arg1;
@property(readonly, nonatomic) struct CGRect thumbnailFrameInSlideLayer;
- (void)layoutSublayers;
- (double)thumbnailShadowOpacity;
- (id)p_layerActions;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

