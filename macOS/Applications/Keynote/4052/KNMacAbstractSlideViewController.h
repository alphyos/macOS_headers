//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "KNMacMainContentContainer-Protocol.h"
#import "KNMacZoomableContentContainer-Protocol.h"
#import "NSTouchBarProvider-Protocol.h"
#import "TSWPMacRulerControllerDelegate-Protocol.h"

@class KNInteractiveCanvasController, KNMacCanvasViewController, KNSlideNode, NSArray, NSColor, NSCountedSet, NSMutableSet, NSObject, NSString, NSTouchBar, NSView, TMAZoomStepper, TSDEditorController, TSKScrollView, TSWPMacRulerController;
@protocol KNSlideCollectionEditor, NSTouchBarDelegate, TSDCanvasEditor;

@interface KNMacAbstractSlideViewController : NSViewController <TSWPMacRulerControllerDelegate, NSTouchBarProvider, KNMacMainContentContainer, KNMacZoomableContentContainer>
{
    TSKScrollView *mCanvasScrollView;
    NSCountedSet *mPreferFitsContentInWindowReasons;
    NSMutableSet *mForceFitsContentInWindowReasons;
    unsigned long long mViewScaleUpdatesDisableCount;
    double mSavedCanvasViewScale;
    struct CGPoint mSavedCanvasUnscaledContentCenter;
    BOOL mNeedsToRestoreSavedCanvasViewScale;
    unsigned long long mZoomingToFitContentInWindowCount;
    TSWPMacRulerController *mRulerController;
    NSArray *mCanvasRulerConstraints;
    NSView *mHorizontalRulerView;
    NSView *mVerticalRulerView;
    NSView *mCornerRulerView;
    NSObject<NSTouchBarDelegate> *mTouchBarDelegate;
    NSTouchBar *mMainContentTouchBar;
    NSObject<NSTouchBarDelegate> *mMainContentTouchBarDelegate;
    BOOL _savedFitsContentInWindow;
    KNMacCanvasViewController *mCanvasViewController;
    TMAZoomStepper *mZoomStepper;
    double mFitContentInWindowInset;
    double mTopContentInset;
}

+ (id)keyPathsForValuesAffectingSavedViewScale;
+ (BOOL)automaticallyNotifiesObserversOfFitsContentInWindow;
+ (id)keyPathsForValuesAffectingFitsContentInWindow;
+ (BOOL)canSetSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
@property(nonatomic) BOOL savedFitsContentInWindow; // @synthesize savedFitsContentInWindow=_savedFitsContentInWindow;
@property(nonatomic) double topContentInset; // @synthesize topContentInset=mTopContentInset;
@property(nonatomic) double fitContentInWindowInset; // @synthesize fitContentInWindowInset=mFitContentInWindowInset;
@property(readonly, nonatomic) TMAZoomStepper *zoomStepper; // @synthesize zoomStepper=mZoomStepper;
@property(readonly, nonatomic) KNMacCanvasViewController *canvasViewController; // @synthesize canvasViewController=mCanvasViewController;
- (void)invalidateTouchBar;
@property(readonly, nonatomic) NSTouchBar *mainContentTouchBar;
- (id)makeTouchBar;
@property(readonly, nonatomic) NSArray *touchBarItemIdentifiers;
- (void)teardownTouchBarDelegate:(id)arg1;
- (id)newTouchBarDelegate;
- (id)canvasViewScaleDetentsForInteractiveCanvasController:(id)arg1 isFastPinch:(BOOL)arg2;
@property(readonly, nonatomic) KNInteractiveCanvasController *targetInteractiveCanvasControllerForActions;
- (struct _NSRange)listLevelParagraphIndexRangeForStorage:(id)arg1 range:(struct _NSRange)arg2 rulerController:(id)arg3;
- (struct CGSize)pageSizeForRulerController:(id)arg1;
- (CDStruct_825d95ef)rulerPropertiesForRulerController:(id)arg1;
@property(readonly, nonatomic) TSDEditorController *editorControllerForInspector;
@property(readonly, nonatomic) NSObject<TSDCanvasEditor> *canvasEditorForInsertingDrawables;
- (void)p_canvasScrollViewFrameDidChange:(id)arg1;
- (void)p_restoreSavedCanvasViewScaleIfNeeded;
- (void)p_fitCanvasToWindowIfNeededAnimated:(BOOL)arg1;
- (id)p_createRulerContainerViewForRulerView:(id)arg1;
@property(nonatomic) BOOL showsRulers;
- (void)enableViewScaleUpdates;
- (void)disableViewScaleUpdates;
- (double)p_scrollerHeight;
- (double)p_scrollerWidth;
@property(readonly, nonatomic) double p_fitViewScale;
@property(readonly, nonatomic) struct CGPoint savedUnscaledContentCenter;
@property(readonly, nonatomic) double savedViewScale;
- (void)p_didEndForcingFitsContentInWindowForAllReasons;
- (void)p_didEndForcingFitsContentInWindowForReason:(id)arg1;
- (void)p_didBeginForcingFitsContentInWindowForReason:(id)arg1;
- (BOOL)p_isForcingFitsContentInWindow;
- (BOOL)fitsContentInWindowWithoutReason:(id)arg1;
- (void)endPreferringFitsContentInWindowWithReason:(id)arg1 restorePreviousViewScaleIfNeeded:(BOOL)arg2;
- (void)beginPreferringFitsContentInWindowWithReason:(id)arg1;
@property(nonatomic) BOOL fitsContentInWindow;
@property(readonly, nonatomic) BOOL canChangeFitsContentInWindow;
@property(readonly, nonatomic) BOOL canPreviewSlideAnimations;
@property(readonly, nonatomic) BOOL usesZoomMenu;
- (void)didUpdateZoom;
@property(readonly, nonatomic) NSView *initialFirstResponder;
- (void)discardAllEditing;
- (void)commitAllEditing;
- (id)startingSearchReference;
- (void)endTransformingCurrentSelectionPaths;
- (void)transformCurrentSelectionPathsUsingOperationTransformer:(id)arg1;
- (void)beginTransformingCurrentSelectionPaths;
- (void)setSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
- (BOOL)canSetSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
- (struct CGSize)p_sizeFittingContentAtViewScale:(double)arg1;
- (struct NSEdgeInsets)p_scrollInsetForRulers;
- (struct NSEdgeInsets)p_totalScrollInsetIncludingRulers;
- (void)updateViewConstraints;
@property(readonly, nonatomic) struct NSEdgeInsets scrollViewContentInsets;
@property(readonly, nonatomic) struct CGSize sizeFittingContent;
- (void)teardown;
- (void)loadView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCanvasViewController:(id)arg1 zoomStepper:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) BOOL adjustsToUndersizedWindow;
@property(readonly, nonatomic) NSColor *containerBackgroundColor;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) double kn_maximumSize;
@property(readonly, nonatomic) double kn_minimumSize;
@property(readonly, nonatomic) KNSlideNode *nextSlideNode;
@property(readonly, nonatomic) KNSlideNode *previousSlideNode;
@property(readonly, nonatomic) NSObject<KNSlideCollectionEditor> *slideCollectionEditor;
@property(readonly) Class superclass;
@property(readonly) NSTouchBar *touchBar; // @dynamic touchBar;
@property(nonatomic) double undersizedWindowFactor;

@end

