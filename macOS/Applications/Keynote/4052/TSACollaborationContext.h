//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSKCollaborationContext-Protocol.h"
#import "TSPPassphraseConsumer-Protocol.h"

@class NSArray, NSData, NSDate, NSError, NSString, NSURL, NSUUID, TSACollaborationDocumentSessionStateJournalingController, TSACollaborationRevisionLog, TSACollaborationValidator, TSADocumentRevisionNotifier, TSKICloudHTTPRequestSenderFactory, TSKSharingState, TSUFakeProgress, TSUProgress, TSUURLTracker, TSUWeakReference;
@protocol OS_dispatch_queue, OS_dispatch_source, TSACollaborationPassphraseRetriever, TSACollaborationReconnectToken, TSKCollaborationDocumentSessionStateJournaling;

@interface TSACollaborationContext : NSObject <TSPPassphraseConsumer, TSKCollaborationContext>
{
    TSUWeakReference *_documentRootReference;
    TSUWeakReference *_filePresenterReference;
    TSUFakeProgress *_progress;
    TSKICloudHTTPRequestSenderFactory *_requestSenderFactory;
    BOOL _skipWaitingIfUnsupportedForPasswordConsumer;
    BOOL _shouldProcessNotifications;
    BOOL _cloudUpdateCanCancelValidator;
    TSACollaborationRevisionLog *_revisionLog;
    NSObject<OS_dispatch_source> *_ubiquityStalledTimer;
    TSACollaborationDocumentSessionStateJournalingController *_collaborationDocumentSessionStateJournalingController;
    BOOL _needsUpdatedRevision;
    BOOL _expectSameRevision;
    BOOL _ignoreCache;
    BOOL _canImportDocument;
    BOOL _hasCoordinatedReadLock;
    BOOL _removeCollaborationCacheOnError;
    BOOL _didReceiveRevisionUpdateNotificationFromMetadataQuery;
    BOOL _didReceiveRevisionUpdateNotificationFromTimer;
    BOOL _deleted;
    BOOL _documentNeedsImport;
    BOOL _cancelled;
    BOOL _isDownloading;
    BOOL _isUploading;
    NSString *_password;
    NSObject<OS_dispatch_queue> *_accessQueue;
    TSUURLTracker *_documentURLTracker;
    CDUnknownBlockType _fileCoordinationInterrupter;
    double _validationTimerFrequency;
    NSURL *_collaborationURL;
    struct NSUUID *_cacheIdentifier;
    TSACollaborationValidator *_validator;
    NSURL *_initialContentsURL;
    TSKSharingState *_sharingState;
    NSArray *_diffs;
    CDUnknownBlockType _completionBlock;
    TSADocumentRevisionNotifier *_notifier;
    NSObject<OS_dispatch_source> *_revisionUpdateTimer;
    id <TSACollaborationPassphraseRetriever> _passwordRetriever;
    TSACollaborationValidator *_passwordValidator;
    NSString *_passwordHint;
    NSError *_error;
    NSURL *_divergedCacheURL;
    id <TSACollaborationReconnectToken> _divergedCacheReconnectToken;
    CDUnknownBlockType _divergedCacheCleanupBlock;
    NSDate *_lastTimeDownloadingOrUploadingProgressed;
    double _percentDownloaded;
    double _percentUploaded;
}

+ (id)collaborationDocumentDirectoryForDocumentUUID:(id)arg1 error:(id *)arg2;
@property(nonatomic) double percentUploaded; // @synthesize percentUploaded=_percentUploaded;
@property(nonatomic) double percentDownloaded; // @synthesize percentDownloaded=_percentDownloaded;
@property(nonatomic) BOOL isUploading; // @synthesize isUploading=_isUploading;
@property(nonatomic) BOOL isDownloading; // @synthesize isDownloading=_isDownloading;
@property(copy, nonatomic) NSDate *lastTimeDownloadingOrUploadingProgressed; // @synthesize lastTimeDownloadingOrUploadingProgressed=_lastTimeDownloadingOrUploadingProgressed;
@property(copy, nonatomic) CDUnknownBlockType divergedCacheCleanupBlock; // @synthesize divergedCacheCleanupBlock=_divergedCacheCleanupBlock;
@property(copy, nonatomic) id <TSACollaborationReconnectToken> divergedCacheReconnectToken; // @synthesize divergedCacheReconnectToken=_divergedCacheReconnectToken;
@property(copy, nonatomic) NSURL *divergedCacheURL; // @synthesize divergedCacheURL=_divergedCacheURL;
@property(nonatomic) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) BOOL documentNeedsImport; // @synthesize documentNeedsImport=_documentNeedsImport;
@property(nonatomic) BOOL deleted; // @synthesize deleted=_deleted;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSString *passwordHint; // @synthesize passwordHint=_passwordHint;
@property(retain, nonatomic) TSACollaborationValidator *passwordValidator; // @synthesize passwordValidator=_passwordValidator;
@property(retain, nonatomic) id <TSACollaborationPassphraseRetriever> passwordRetriever; // @synthesize passwordRetriever=_passwordRetriever;
@property(nonatomic) BOOL didReceiveRevisionUpdateNotificationFromTimer; // @synthesize didReceiveRevisionUpdateNotificationFromTimer=_didReceiveRevisionUpdateNotificationFromTimer;
@property(nonatomic) BOOL didReceiveRevisionUpdateNotificationFromMetadataQuery; // @synthesize didReceiveRevisionUpdateNotificationFromMetadataQuery=_didReceiveRevisionUpdateNotificationFromMetadataQuery;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *revisionUpdateTimer; // @synthesize revisionUpdateTimer=_revisionUpdateTimer;
@property(retain, nonatomic) TSADocumentRevisionNotifier *notifier; // @synthesize notifier=_notifier;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSArray *diffs; // @synthesize diffs=_diffs;
@property(copy, nonatomic) TSKSharingState *sharingState; // @synthesize sharingState=_sharingState;
@property(copy, nonatomic) NSURL *initialContentsURL; // @synthesize initialContentsURL=_initialContentsURL;
@property(retain, nonatomic) TSACollaborationValidator *validator; // @synthesize validator=_validator;
@property(copy, nonatomic) NSUUID *cacheIdentifier; // @synthesize cacheIdentifier=_cacheIdentifier;
@property(copy) NSURL *collaborationURL; // @synthesize collaborationURL=_collaborationURL;
@property(nonatomic) BOOL removeCollaborationCacheOnError; // @synthesize removeCollaborationCacheOnError=_removeCollaborationCacheOnError;
@property(readonly, nonatomic) double validationTimerFrequency; // @synthesize validationTimerFrequency=_validationTimerFrequency;
@property(readonly, nonatomic) CDUnknownBlockType fileCoordinationInterrupter; // @synthesize fileCoordinationInterrupter=_fileCoordinationInterrupter;
@property(readonly, nonatomic) BOOL hasCoordinatedReadLock; // @synthesize hasCoordinatedReadLock=_hasCoordinatedReadLock;
@property(readonly, nonatomic) BOOL canImportDocument; // @synthesize canImportDocument=_canImportDocument;
@property(readonly, nonatomic) BOOL ignoreCache; // @synthesize ignoreCache=_ignoreCache;
@property(readonly, nonatomic) BOOL expectSameRevision; // @synthesize expectSameRevision=_expectSameRevision;
@property(readonly, nonatomic) TSUURLTracker *documentURLTracker; // @synthesize documentURLTracker=_documentURLTracker;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(readonly, nonatomic) BOOL needsUpdatedRevision; // @synthesize needsUpdatedRevision=_needsUpdatedRevision;
@property(readonly, nonatomic) TSUProgress *progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) NSString *service;
@property(readonly, nonatomic) NSData *keychainGenericItem;
@property(readonly, nonatomic) NSString *passphraseHint;
- (void)setPassphrase:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSString *lastPasswordAttempted;
- (BOOL)setPassphrase:(id)arg1;
- (void)queueUploadFogDocument;
- (void)queueDownloadFogDocumentIfNeeded;
- (BOOL)skipRevisionEnforcement;
- (BOOL)prepCollaborationDocumentWithContentsFromURL:(id)arg1 collaborationDocumentDirectoryURL:(id)arg2 error:(id *)arg3;
- (void)updateProgressWithStage:(long long)arg1;
- (BOOL)hasConflicts;
- (BOOL)isFinished;
- (void)cleanup;
- (void)stopRevisionNotifierAndTimer;
- (void)callCompletionWithCollaborationURL:(id)arg1 error:(id)arg2;
- (void)finishedPreparingDocumentWithError:(id)arg1;
- (void)cancelFromAccessQueue;
- (void)closeFromAccessQueue;
- (void)removeCollaborationCacheEntry;
- (void)restoreDivergedCacheAfterError;
- (BOOL)setupCollaborationCacheEntryWithContentsOfURL:(id)arg1 documentURL:(id)arg2 shouldSetupRevisionNotifier:(BOOL)arg3 error:(id *)arg4;
- (void)p_verifyDocumentURLRevisionWithURL:(id)arg1;
- (void)verifyDocumentURLRevision;
- (BOOL)validatePassphraseWithURL:(id)arg1;
- (void)stopSharingForDocumentThatNeedsImportIfPossibleWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)validateCollaborativeDocumentURL:(id)arg1 canCancel:(BOOL)arg2 skipWaitingIfUnsupported:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)reuseExistingDocument;
- (void)p_disconnectFromCacheAllowingAccessToDivergedDocument:(BOOL)arg1 andVerifyDocumentURLRevisionWithShareIdentifier:(struct NSObject *)arg2;
- (void)ubiquityStalledTimerFired;
- (void)updateDownloadAndUploadProgressWith:(id)arg1;
- (void)handleLastNotificationFromTimer:(BOOL)arg1;
- (void)setupRevisionNotifierAndTimerIfNeededWithURL:(id)arg1 initialRevision:(id)arg2;
- (void)refreshSharingStateWithRefreshQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)documentRoot;
- (void)checkForPreviouslyDivergedCache:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) id <TSKCollaborationDocumentSessionStateJournaling> collaborationDocumentSessionStateJournalingController;
- (id)popDiffs;
- (void)close;
- (void)cancel;
- (void)didReuseRequestSenderFactory;
@property(readonly, nonatomic) TSKICloudHTTPRequestSenderFactory *requestSenderFactory;
- (void)startOpeningDocumentRetrievingSharingState:(BOOL)arg1 refreshQueue:(id)arg2 reuseExistingCollaborationURL:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initCollaborationContextWithDocumentRoot:(id)arg1 documentURL:(id)arg2 initialContentsURL:(id)arg3 sharingState:(id)arg4 passphrase:(id)arg5 expectSameRevision:(BOOL)arg6 ignoreCache:(BOOL)arg7 canImportDocument:(BOOL)arg8 hasCoordinatedReadLock:(BOOL)arg9 fileCoordinationInterrupter:(CDUnknownBlockType)arg10 validationTimerFrequency:(double)arg11 filePresenter:(id)arg12;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

