//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSSPAutoEncodable-Protocol.h"
#import "NSCopying-Protocol.h"
#import "TSSPropertyCommandSerializing-Protocol.h"
#import "TSTCellDiffing-Protocol.h"

@class NSDate, NSString, TSUFormatObject, TSWPStorage;

@interface TSTCellFormatAndValue : NSObject <GSSPAutoEncodable, NSCopying, TSTCellDiffing, TSSPropertyCommandSerializing>
{
    unsigned int mValueType:8;
    BOOL mUseAllSpareFormats;
    BOOL mSuppressApplyValue;
    BOOL mApplySpareFormatOnly;
    int mSpareFormatType;
    union {
        double mDouble;
        char mBool;
        NSDate *mDate;
        NSString *mString;
        TSWPStorage *mStorage;
    } mValue;
    NSString *mFormattedValue;
    TSWPStorage *mFormattedRichTextStorage;
    int mExplicitFlags;
    int mCurrentFormatType;
    TSUFormatObject *mNumberFormat;
    TSUFormatObject *mCurrencyFormat;
    TSUFormatObject *mDateFormat;
    TSUFormatObject *mDurationFormat;
    TSUFormatObject *mStepperSliderFormat;
    TSUFormatObject *mBaseFormat;
    TSUFormatObject *mMultipleChoiceFormat;
    TSUFormatObject *mCustomFormat;
}

+ (id)cellDiffProperties;
+ (id)formatAndValueFromCell:(id)arg1 applySpareFormatOnly:(int)arg2;
+ (id)formatAndValueForCoercingControlCellToNonControlType:(id)arg1;
+ (id)formatAndValueFromRichTextCell:(id)arg1 updatingStorageWithBlock:(CDUnknownBlockType)arg2;
+ (id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 forceNoContent:(BOOL)arg3;
+ (id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2;
- (id *)p_formatObjectForFormatType:(int)arg1;
- (void)saveToPropertyCommandMessage:(struct Message *)arg1 archiver:(id)arg2;
- (id)initFromPropertyCommandMessage:(const struct Message *)arg1 unarchiver:(id)arg2;
- (id)objectByRemovingPropertiesInMap:(id)arg1 addingPropertiesInMap:(id)arg2 updateInverseResetPropertyMap:(id)arg3 updateInverseSetPropertyMap:(id)arg4;
- (void)applyToCell:(id)arg1;
- (BOOL)hasStringContentMatchingCell:(id)arg1;
- (CDStruct_28403e59)getCurrentFormat;
- (BOOL)isFormulaSyntaxError;
- (BOOL)isControl;
- (int)valueType;
- (id)p_sikritCopyStorage:(id)arg1;
- (id)copyForApplyingNoContentWithSuppressApplyValue:(BOOL)arg1;
- (id)copyForNotApplyingValue;
- (id)copyForApplyingNoContent;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 forceNoContent:(BOOL)arg3 applySpareFormatOnly:(int)arg4;
- (id)initFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2;
- (void)populateGSSPCellFormatAndValue:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

