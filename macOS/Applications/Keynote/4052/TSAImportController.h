//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSFilePresenter-Protocol.h"
#import "TSADocumentRootDelegate-Protocol.h"
#import "TSKImportExportDelegate-Protocol.h"
#import "TSPObjectContextDelegate-Protocol.h"

@class NSDictionary, NSError, NSMutableArray, NSMutableSet, NSOperationQueue, NSString, NSURL, NSUUID, TSAUbiquitousRefreshQueue, TSPObjectContext, TSUDownloadSession, TSUProgressContext, TSUTemporaryDirectory;
@protocol NSFilePresenter, OS_dispatch_group, TSAImportDelegate, TSKImporter;

@interface TSAImportController : NSObject <TSADocumentRootDelegate, TSPObjectContextDelegate, NSFilePresenter, TSKImportExportDelegate>
{
    TSUTemporaryDirectory *_temporaryDirectory;
    TSUTemporaryDirectory *_temporaryDFFDirectory;
    NSString *_documentType;
    NSObject<OS_dispatch_group> *_passphraseCompletionGroup;
    NSMutableSet *_importWarnings;
    TSUDownloadSession *_downloadSession;
    NSURL *_presentedItemURL;
    NSOperationQueue *_presentedItemOperationQueue;
    NSMutableArray *_deferredWriters;
    struct {
        unsigned int success:1;
        unsigned int isPasswordProtected:1;
        unsigned int isCleanedUp:1;
        unsigned int isImportCancelled:1;
        unsigned int preserveDocumentAfterImport:1;
        unsigned int shouldNotifyProgress:1;
    } _flags;
    id <TSKImporter> _importer;
    id <TSAImportDelegate> _delegate;
    NSString *_sourcePath;
    NSError *_error;
    TSPObjectContext *_documentContext;
    TSUProgressContext *_progressContext;
    NSURL *_fileURL;
}

@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) TSUProgressContext *progressContext; // @synthesize progressContext=_progressContext;
@property(readonly, nonatomic) TSPObjectContext *documentContext; // @synthesize documentContext=_documentContext;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSString *sourcePath; // @synthesize sourcePath=_sourcePath;
@property(nonatomic) id <TSAImportDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id <TSKImporter> importer; // @synthesize importer=_importer;
@property(readonly, copy) NSURL *presentedItemURL; // @synthesize presentedItemURL=_presentedItemURL;
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue; // @synthesize presentedItemOperationQueue=_presentedItemOperationQueue;
@property(readonly, nonatomic) BOOL areNewExternalReferencesToDataAllowed;
- (void)addPersistenceWarnings:(id)arg1;
- (void)presentPersistenceError:(id)arg1;
@property(readonly, nonatomic) NSDictionary *additionalDocumentSupportPropertiesForWrite;
@property(readonly, nonatomic) NSDictionary *additionalDocumentPropertiesForWrite;
- (id)packageDataForWrite;
@property(readonly, nonatomic) BOOL ignoreDocumentSupport;
- (void)addIncompatibleMediaContainer:(id)arg1 incompatibleData:(id)arg2 compatibilityLevel:(long long)arg3;
- (void)removeWarning:(id)arg1;
- (void)addWarning:(id)arg1;
- (id)warnings;
@property(readonly, nonatomic) BOOL hasWarnings;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, nonatomic) NSString *name;
- (id)collaborationStateForContext:(id)arg1;
- (void)_setPresentedItemURL:(id)arg1;
- (void)removeFilePresenter;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (void)relinquishPresentedItemToWriter:(CDUnknownBlockType)arg1;
- (id)defaultProgressMessage;
- (void)_downloadDocumentResourcesForContext:(id)arg1;
- (id)_downloadTemplateIfNeeded:(id)arg1;
- (void)showDownloadPermissionAlertIfNeededForDownloadingTemplateInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_prepareTemplate:(id)arg1;
@property(nonatomic) BOOL preserveDocumentAfterImport;
@property(readonly, nonatomic) BOOL isBrowsingVersions;
@property(readonly, nonatomic) BOOL isPasswordProtected;
@property(readonly, nonatomic) BOOL isImportCancelled;
- (void)cancelImport;
- (void)finishImportWithSuccess:(BOOL)arg1 error:(id)arg2;
- (void)didSaveImportedDocumentWithPassphrase:(id)arg1;
- (void)willSaveImportedDocument;
- (void)_performImportWithCompletedSteps:(int)arg1;
- (BOOL)_saveContextToTemporaryURL:(id)arg1 passphrase:(id)arg2 originalURL:(id)arg3 documentUUID:(id)arg4 error:(id *)arg5;
- (BOOL)needsFileCoordination;
- (id)templateInfoWithName:(id)arg1 variantIndex:(unsigned long long)arg2;
- (id)templateInfoWithName:(id)arg1;
- (void)didBeginImportToTemporaryURL:(id)arg1;
- (id)makeObjectContextWithTemplateInfo:(id)arg1 error:(id *)arg2;
- (void)_continueImportWithSuccess:(BOOL)arg1 error:(id)arg2 completedSteps:(int)arg3;
- (void)_beginImport;
- (void)showProgressIfNeededForURL:(id)arg1;
- (void)retrievePassphraseForEncryptedDocumentWithImporter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (Class)importerClass;
- (void)beginImportAsync;
- (BOOL)beginImport;
- (void)prepareForImportDisplayingProgress:(BOOL)arg1;
- (BOOL)import;
@property(readonly, nonatomic) NSURL *temporaryURL;
@property(readonly, nonatomic) long long documentTypeCategory;
- (void)dealloc;
- (id)initWithPath:(id)arg1 documentType:(id)arg2 delegate:(id)arg3;
- (id)initWithPath:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *documentCachePath;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSDictionary *incompatibleMediaContainersWithDataUnsupportedOnAllDevices;
@property(readonly, nonatomic) NSDictionary *incompatibleMediaContainersWithDataUnsupportedOnThisDevice;
@property(readonly, nonatomic) BOOL isDocumentSupportTemporary;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
@property(readonly, nonatomic) TSAUbiquitousRefreshQueue *refreshQueue;
@property(readonly) Class superclass;

@end

