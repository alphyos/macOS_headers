//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDNoDefaultImplicitActionLayer.h"

#import "CAAnimationDelegate-Protocol.h"

@class KNSlideNavigatorSlideElementCache, NSArray, NSDictionary, NSIndexSet, NSMutableArray, NSMutableIndexSet, NSString;
@protocol KNSlideNavigatorLayerDataSource, KNSlideNavigatorLayerHost;

@interface KNNavigatorLayer : TSDNoDefaultImplicitActionLayer <CAAnimationDelegate>
{
    NSMutableArray *mRowLayers;
    NSMutableIndexSet *mActiveRowIndexes;
    NSMutableArray *mRowLayersBeingDragged;
    NSMutableArray *mCopiedLayersBeingDragged;
    NSMutableIndexSet *mSecondarySelectedRowIndexes;
    KNSlideNavigatorSlideElementCache *mElementCache;
    NSDictionary *mSlideLayerActions;
    BOOL mShouldLoadThumbnails;
    struct _NSRange mMinimumVisibleRange;
    struct _NSRange mVisibleRange;
    double mAddAnimationDuration;
    double mExpandCollapseAnimationDuration;
    double mDeleteAnimationDuration;
    double mRowLayoutOnDeletionDuration;
    double mSkipAnimationDuration;
    double mIndentAnimationDuration;
    BOOL mWideGamut;
    BOOL mAutoscrolling;
    BOOL mCanCopyDrag;
    BOOL mShowsBuildIndicators;
    BOOL mShowsTransitionIndicators;
    BOOL mShowsPresenterNotesIndicators;
    BOOL mInFocus;
    BOOL mIsWindowInFocus;
    BOOL mShowsRippleAnimation;
    id <KNSlideNavigatorLayerDataSource> mDataSource;
    id <KNSlideNavigatorLayerHost> mLayerHost;
    Class mSlideLayerClass;
    Class mSelectionHighlightLayerClass;
    double mThumbnailAspectRatio;
    double mScreenScale;
    double mRowSpacing;
    double mTopRowSpacing;
    unsigned long long mTapIndex;
    unsigned long long mPrimarySelectedRowIndex;
    unsigned long long mLayoutState;
    unsigned long long mDropIndex;
    unsigned long long mDropIndentLevel;
    struct CGPoint mLastScrollOffset;
}

@property(nonatomic) BOOL showsRippleAnimation; // @synthesize showsRippleAnimation=mShowsRippleAnimation;
@property(nonatomic) double indentAnimationDuration; // @synthesize indentAnimationDuration=mIndentAnimationDuration;
@property(nonatomic) double skipAnimationDuration; // @synthesize skipAnimationDuration=mSkipAnimationDuration;
@property(nonatomic) double rowLayoutOnDeletionDuration; // @synthesize rowLayoutOnDeletionDuration=mRowLayoutOnDeletionDuration;
@property(nonatomic) double deleteAnimationDuration; // @synthesize deleteAnimationDuration=mDeleteAnimationDuration;
@property(nonatomic) double expandCollapseAnimationDuration; // @synthesize expandCollapseAnimationDuration=mExpandCollapseAnimationDuration;
@property(nonatomic) double addAnimationDuration; // @synthesize addAnimationDuration=mAddAnimationDuration;
@property(nonatomic) BOOL isWindowInFocus; // @synthesize isWindowInFocus=mIsWindowInFocus;
@property(nonatomic) BOOL inFocus; // @synthesize inFocus=mInFocus;
@property(nonatomic) BOOL showsPresenterNotesIndicators; // @synthesize showsPresenterNotesIndicators=mShowsPresenterNotesIndicators;
@property(nonatomic) BOOL showsTransitionIndicators; // @synthesize showsTransitionIndicators=mShowsTransitionIndicators;
@property(nonatomic) BOOL showsBuildIndicators; // @synthesize showsBuildIndicators=mShowsBuildIndicators;
@property(nonatomic) unsigned long long dropIndentLevel; // @synthesize dropIndentLevel=mDropIndentLevel;
@property(nonatomic) unsigned long long dropIndex; // @synthesize dropIndex=mDropIndex;
@property(nonatomic) unsigned long long layoutState; // @synthesize layoutState=mLayoutState;
@property(nonatomic) BOOL canCopyDrag; // @synthesize canCopyDrag=mCanCopyDrag;
@property(copy, nonatomic) NSIndexSet *secondarySelectedRowIndexes; // @synthesize secondarySelectedRowIndexes=mSecondarySelectedRowIndexes;
@property(nonatomic) unsigned long long primarySelectedRowIndex; // @synthesize primarySelectedRowIndex=mPrimarySelectedRowIndex;
@property(readonly, nonatomic) NSIndexSet *activeRowIndexes; // @synthesize activeRowIndexes=mActiveRowIndexes;
@property(nonatomic, getter=isAutoScrolling) BOOL autoscrolling; // @synthesize autoscrolling=mAutoscrolling;
@property(nonatomic) struct CGPoint lastScrollOffset; // @synthesize lastScrollOffset=mLastScrollOffset;
@property(nonatomic) unsigned long long tapIndex; // @synthesize tapIndex=mTapIndex;
@property(readonly, nonatomic) NSArray *rowLayersBeingDragged; // @synthesize rowLayersBeingDragged=mRowLayersBeingDragged;
@property(readonly, nonatomic) NSArray *rowLayers; // @synthesize rowLayers=mRowLayers;
@property(nonatomic) double topRowSpacing; // @synthesize topRowSpacing=mTopRowSpacing;
@property(nonatomic) double rowSpacing; // @synthesize rowSpacing=mRowSpacing;
@property(nonatomic) BOOL wideGamut; // @synthesize wideGamut=mWideGamut;
@property(nonatomic) double screenScale; // @synthesize screenScale=mScreenScale;
@property(nonatomic) double thumbAspectRatio; // @synthesize thumbAspectRatio=mThumbnailAspectRatio;
@property(nonatomic) Class selectionHighlightLayerClass; // @synthesize selectionHighlightLayerClass=mSelectionHighlightLayerClass;
@property(nonatomic) Class slideLayerClass; // @synthesize slideLayerClass=mSlideLayerClass;
@property(nonatomic) id <KNSlideNavigatorLayerHost> layerHost; // @synthesize layerHost=mLayerHost;
@property(nonatomic) id <KNSlideNavigatorLayerDataSource> dataSource; // @synthesize dataSource=mDataSource;
- (struct _NSRange)p_rangeOfVisibleIndexesWithHint:(unsigned long long)arg1;
- (void)p_setSelectedIndexesWithoutChangingLayers:(id)arg1;
- (void)addRippleAnimationAtIndexes:(id)arg1;
- (void)p_addDeleteAnimationAtIndexes:(id)arg1 duration:(double)arg2;
- (void)p_addCollapseAnimationAtIndexes:(id)arg1 duration:(double)arg2;
- (void)p_addInsertAnimationAtIndexes:(id)arg1 duration:(double)arg2;
- (void)p_addExpandAnimationAtIndexes:(id)arg1 duration:(double)arg2;
- (void)endDragForSlideLayer:(id)arg1;
- (void)dragWillEnd;
- (void)dragPerformedForSlideLayer:(id)arg1 thumbnailImageSizeOverride:(struct CGSize)arg2;
- (id)beginDragOperationAtIndex:(unsigned long long)arg1;
- (BOOL)hasLayersBeingDragged;
- (void)p_finishMoveForLayers:(id)arg1 firstIndexToUpdate:(unsigned long long)arg2 selectedLayerBeforeMove:(id)arg3 selectedLayersBeforeMove:(id)arg4;
- (void)moveRowAtIndex:(unsigned long long)arg1 toIndexAfterMove:(unsigned long long)arg2;
- (void)rearrangeRowsToBoxedIndexes:(id)arg1;
- (void)insertRowsForDropAtIndexes:(id)arg1;
- (void)insertRowsForExpandAtIndexes:(id)arg1;
- (void)insertRowsAtIndexes:(id)arg1;
- (void)p_insertRowsAtIndexes:(id)arg1 forInsertionType:(unsigned long long)arg2;
- (void)deleteRowsForCollapseAtIndexes:(id)arg1;
- (void)deleteRowsAtIndexes:(id)arg1;
- (void)p_deleteRowsAtIndexes:(id)arg1 forCollapse:(BOOL)arg2;
- (double)p_maxSlideHeight;
- (unsigned long long)indexOfMasterNameUnderPoint:(struct CGPoint)arg1;
- (unsigned long long)indexOfDisclosureTriangleIndicatorRowUnderPoint:(struct CGPoint)arg1;
- (unsigned long long)indexOfRowThumbnailUnderPoint:(struct CGPoint)arg1;
- (unsigned long long)indexOfRowInIndexSet:(id)arg1 closestToPoint:(struct CGPoint)arg2;
- (id)indexesOfRowsInRect:(struct CGRect)arg1;
- (unsigned long long)indexOfRowUnderPoint:(struct CGPoint)arg1;
- (id)p_slideLayerUnderPoint:(struct CGPoint)arg1;
- (unsigned long long)indentLevelForRow:(unsigned long long)arg1;
- (struct CGRect)thumbnailRectForRow:(unsigned long long)arg1;
- (struct CGRect)rectForRow:(unsigned long long)arg1;
- (BOOL)hasTappedHighlightAtIndex:(unsigned long long)arg1;
- (void)removeTappedHighlightAtIndex:(unsigned long long)arg1;
- (void)addTappedHighlightAtIndex:(unsigned long long)arg1;
- (void)disableThumbnailLoading;
- (void)enableThumbnailLoading;
- (id)makeSelectionLayer;
- (void)reloadSelectionStateWithTapIndex;
- (void)reloadSelectionHighlights;
- (void)clearActiveRowIndexes;
- (void)reloadActiveRowIndexesWithCurrentSelection;
@property(readonly, nonatomic) struct CGRect dropIndicatorFrame;
- (void)setLayoutStateWithLayoutDuration:(double)arg1 layoutState:(unsigned long long)arg2;
- (void)removeIndexFromSecondarySelectedRowIndexes:(unsigned long long)arg1;
- (void)addIndexToSecondarySelectedRowIndexes:(unsigned long long)arg1;
- (void)setPrimarySelectedRowIndex:(unsigned long long)arg1 secondarySelectedRowIndexes:(id)arg2;
- (void)p_updateSelectionStateForIndex:(unsigned long long)arg1;
- (void)p_removeSelectionHighlightForIndex:(unsigned long long)arg1;
- (void)p_addSelectionHighlightForIndex:(unsigned long long)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)layoutSublayers;
- (struct CGSize)p_slideSizeForIndentLevel:(unsigned long long)arg1;
- (struct CGRect)p_frameWithGapForRowLayer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)p_clearRowsOutsideOfMinimumVisibleRange;
- (void)p_emptyRowsInIndexSet:(id)arg1;
- (void)p_fillVisibleRows;
- (void)shrinkSlideImageCacheIfNecessary;
- (void)releaseExtraMemory;
- (void)dirtyRowDataInIndexSet:(id)arg1;
- (void)dirtyRowDataInRowRange:(struct _NSRange)arg1;
- (void)p_dirtyRowDataAtRowIndexToLastIndex:(unsigned long long)arg1;
- (void)dirtyRowDataAtRowIndex:(unsigned long long)arg1;
- (void)dirtyAllRowData;
- (void)dirtySlideImagesInIndexSet:(id)arg1;
- (void)dirtySlideImagesInRowRange:(struct _NSRange)arg1;
- (void)dirtySlideImageAtRowIndex:(unsigned long long)arg1;
- (void)dirtyAllSlideImages;
- (void)p_disposeSlideLayer:(id)arg1;
- (void)p_createRowLayers;
- (id)p_createRowLayerForSlideAtIndex:(unsigned long long)arg1;
- (void)loadRows;
- (void)clearRows;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

