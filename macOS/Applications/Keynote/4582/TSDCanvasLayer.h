//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDNoDefaultImplicitActionLayer.h"

@class TSDCanvasView, TSDInteractiveCanvasController;

@interface TSDCanvasLayer : TSDNoDefaultImplicitActionLayer
{
    TSDInteractiveCanvasController *mController;
    struct CGSize mUnscaledSize;
    struct NSEdgeInsets mContentInset;
    double mViewScale;
    unsigned long long mViewScaleAnimationCount;
    BOOL mAllowsPinchZoom;
    double mMinimumPinchViewScale;
    double mMaximumPinchViewScale;
    BOOL mShowsScaleFeedback;
    BOOL mIsInfinite;
    BOOL mHorizontallyCenteredInScrollView;
    BOOL mVerticallyCenteredInScrollView;
    BOOL mDisableLayout;
}

@property(nonatomic) BOOL verticallyCenteredInScrollView; // @synthesize verticallyCenteredInScrollView=mVerticallyCenteredInScrollView;
@property(nonatomic) BOOL horizontallyCenteredInScrollView; // @synthesize horizontallyCenteredInScrollView=mHorizontallyCenteredInScrollView;
@property(nonatomic, getter=isLayoutDisabled) BOOL disableLayout; // @synthesize disableLayout=mDisableLayout;
@property(nonatomic) struct NSEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;
@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;
@property(nonatomic, getter=isInfinite) BOOL infinite; // @synthesize infinite=mIsInfinite;
@property(nonatomic) BOOL showsScaleFeedback; // @synthesize showsScaleFeedback=mShowsScaleFeedback;
@property(nonatomic) BOOL allowsPinchZoom; // @synthesize allowsPinchZoom=mAllowsPinchZoom;
@property(nonatomic) double maximumPinchViewScale; // @synthesize maximumPinchViewScale=mMaximumPinchViewScale;
@property(nonatomic) double minimumPinchViewScale; // @synthesize minimumPinchViewScale=mMinimumPinchViewScale;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
- (void)p_fixFrameAndScrollView;
- (struct CGRect)p_fixedScaledBoundsForScrollViewSize:(struct CGSize)arg1 viewScale:(double)arg2 contentInset:(struct NSEdgeInsets)arg3;
- (void)p_setEnclosingScrollViewZoomParameters;
- (void)p_setViewScale:(double)arg1 preservingScrollOffset:(BOOL)arg2;
- (void)p_setViewScale:(double)arg1;
- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1 animated:(BOOL)arg2;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct NSEdgeInsets)arg3 duration:(double)arg4 animation:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct NSEdgeInsets)arg3 duration:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(BOOL)arg3 animated:(BOOL)arg4;
- (struct CGPoint)p_scrollViewContentOffsetForUnscaledContentCenter:(struct CGPoint)arg1 viewScale:(double)arg2 contentInset:(struct NSEdgeInsets)arg3;
- (struct CGPoint)contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint unscaledContentCenter;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_reenableDrawingAfterResumingFromBackground;
- (void)layoutSublayers;
- (void)layoutIfNeededIgnoringDisabledLayout;
- (void)setNeedsLayout;
- (void)fixFrameAndScrollView;
- (void)setHorizontallyCenteredInScrollView:(BOOL)arg1 verticallyCenteredInScrollView:(BOOL)arg2 fixFrame:(BOOL)arg3;
@property(nonatomic) BOOL centeredInScrollView; // @dynamic centeredInScrollView;
- (void)setUnscaledSize:(struct CGSize)arg1 fixFrame:(BOOL)arg2;
- (void)teardown;
- (void)p_scrollViewScrollerStyleDidChange:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)p_commonInit;

@end

