//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <QuartzCore/CALayer.h>

@class NSArray, TSUColor;

@interface KNOverlayLayer : CALayer
{
    TSUColor *mStrokeColor;
    NSArray *mStrokes;
    KNOverlayLayer *mMirrorLayer;
    CALayer *mLaserLayer;
    double mLaserScale;
    BOOL mCompensatingForAirPlay;
    TSUColor *mRemoteControlLastColor;
    double mNormalizedForce;
}

+ (Class)p_preferredSubclass;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(nonatomic) double laserScale; // @synthesize laserScale=mLaserScale;
@property(retain, nonatomic) TSUColor *remoteControlLastColor; // @synthesize remoteControlLastColor=mRemoteControlLastColor;
@property(nonatomic, getter=isCompensatingForAirPlay) BOOL compensatingForAirPlay; // @synthesize compensatingForAirPlay=mCompensatingForAirPlay;
@property(copy, nonatomic) NSArray *strokes; // @synthesize strokes=mStrokes;
@property(nonatomic) KNOverlayLayer *mirrorLayer; // @synthesize mirrorLayer=mMirrorLayer;
@property(nonatomic) double normalizedForce; // @synthesize normalizedForce=mNormalizedForce;
- (struct CGPoint)i_boundsPointForTelestratorPoint:(struct CGPoint)arg1;
- (void)endLaser;
- (void)moveLaserToPoint:(struct CGPoint)arg1;
- (void)startLaserAtPoint:(struct CGPoint)arg1;
- (void)clearAll;
- (void)endDrawing;
- (void)drawToPoint:(struct CGPoint)arg1 atTime:(double)arg2;
- (void)startDrawingAtPoint:(struct CGPoint)arg1 atTime:(double)arg2 withColor:(id)arg3;
- (void)drawContentsInContext:(struct CGContext *)arg1;
- (BOOL)hasActiveStroke;
@property(nonatomic) struct CGPoint laserLocation;
- (void)dealloc;
- (id)init;

@end

