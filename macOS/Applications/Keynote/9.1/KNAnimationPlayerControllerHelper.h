//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVPlayerItemLegibleOutputPushDelegate.h"
#import "TSKMediaPlayerControllerDelegate.h"

@class AVPlayerItemLegibleOutput, AVPlayerItemVideoOutput, KNAnimationSubtitleRenderer, KNPlaybackSession, NSObject<OS_dispatch_queue>, NSObject<TSKLayerMediaPlayerController>, NSObject<TSKMediaPlayerController>, NSString, TSDGPUDataBuffer, TSDMetalShader, TSDMovieInfo;

@interface KNAnimationPlayerControllerHelper : NSObject <AVPlayerItemLegibleOutputPushDelegate, TSKMediaPlayerControllerDelegate>
{
    NSObject<TSKLayerMediaPlayerController> *_playerController;
    BOOL _isWideGamut;
    BOOL _isAnimatedGIF;
    BOOL _isAudioOnly;
    double _cachedVideoDisplayLinkPresentationTime;
    id <MTLTexture> _cachedVideoTexture;
    id <MTLTexture> _emptyTexture;
    id <MTLTexture> _lastVideoTexture;
    TSDMovieInfo *_movieInfo;
    AVPlayerItemVideoOutput *_videoOutput;
    id <MTLDevice> _device;
    struct __CVMetalTextureCache *_textureCache;
    struct __CVBuffer *_currentPixelBuffer;
    struct __CVBuffer *_currentCacheTexture;
    KNPlaybackSession *_session;
    struct CGSize _videoSize;
    TSDGPUDataBuffer *_videoQuad;
    // Error parsing type: {?="MVPMatrix"{?="columns"[4]}}, name: _vertexUniforms
    CDStruct_2b46dc60 _fragmentUniforms;
    AVPlayerItemLegibleOutput *_legibleOutput;
    KNAnimationSubtitleRenderer *_subtitleRenderer;
    BOOL _subtitleHasChanged;
    struct CGImage *_subtitleImage;
    id <MTLTexture> _subtitleTexture;
    TSDMetalShader *_subtitleShader;
    NSObject<OS_dispatch_queue> *_subtitleQueue;
    struct os_unfair_lock_s _subtitleLock;
    BOOL _isPlayerControllerPermanentlyTornDown;
    BOOL _isObservingPlayerItemStatus;
    BOOL _shouldPlayWhenReady;
    struct os_unfair_lock_s _frameUpdatingLock;
    BOOL _isReadyToPlay;
    id <MTLTexture> _posterTexture;
}

@property(readonly, nonatomic) BOOL isReadyToPlay; // @synthesize isReadyToPlay=_isReadyToPlay;
@property(readonly, nonatomic) id <MTLTexture> posterTexture; // @synthesize posterTexture=_posterTexture;
- (void).cxx_destruct;
- (void)legibleOutput:(id)arg1 didOutputAttributedStrings:(id)arg2 nativeSampleBuffers:(id)arg3 forItemTime:(CDStruct_1b6d18a9)arg4;
- (void)p_updateSubtitleTextureWithContext:(id)arg1;
- (void)p_setSubtitleImage:(struct CGImage *)arg1;
- (void)p_teardownSubtitlesOnPlayerItem:(id)arg1;
- (void)p_setupSubtitlesOnPlayerItem:(id)arg1;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
- (id)p_updateVideoTextureWithMetalContext:(id)arg1;
- (void)updateVideoTextureWithMetalContext:(id)arg1;
- (id)videoTextureWithMetalContext:(id)arg1;
- (id)p_createEmptyTextureIfNeeded;
- (unsigned long long)p_metalPixelFormat;
- (id)p_metalTextureFromCGImage:(struct CGImage *)arg1 colorSpace:(struct CGColorSpace *)arg2 device:(id)arg3 commandQueue:(id)arg4;
- (struct __CVBuffer *)p_metalTextureRefFromPixelBuffer:(struct __CVBuffer *)arg1 pixelFormat:(unsigned long long)arg2 planeIndex:(unsigned long long)arg3;
- (BOOL)p_shouldDownscalePixelBufferForFrameRate:(double)arg1;
- (BOOL)p_assetTrackHasAlpha:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_setupPlayerControllerIfNecessary;
@property(readonly, nonatomic) NSObject<TSKMediaPlayerController> *playerController;
- (void)p_teardownPlayerControllerForFlush:(BOOL)arg1;
- (void)flushVideoBuffers;
- (void)playWhenReady;
- (void)teardown;
- (id)initWithMovieInfo:(id)arg1 session:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

