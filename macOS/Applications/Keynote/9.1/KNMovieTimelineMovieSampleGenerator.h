//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAssetReader, AVAssetReaderAudioMixOutput, KNMovieTimeline, KNMovieTimelineMovieSampleGeneratorAudioTrack, NSArray, NSError, NSObject<OS_dispatch_queue>, NSSet, TSUOnce, TSUTemporaryDirectory;

@interface KNMovieTimelineMovieSampleGenerator : NSObject
{
    KNMovieTimeline *_movieTimeline;
    id <KNMovieTimelineMovieSampleGeneratorDelegate> _delegate;
    CDStruct_1b6d18a9 _videoFrameDuration;
    TSUOnce *_createSampleGeneratorsOnce;
    NSSet *_loadingAssets;
    AVAssetReader *_assetReader;
    NSArray *_assetReaderVideoTrackOutputHelpers;
    AVAssetReaderAudioMixOutput *_assetReaderAudioMixOutput;
    NSObject<OS_dispatch_queue> *_assetReaderCopySampleBufferQueue;
    NSArray *_assetImageGeneratorHelpers;
    CDStruct_1b6d18a9 _nextVideoFrameTime;
    KNMovieTimelineMovieSampleGeneratorAudioTrack *_audioSampleGeneratorTrack;
    NSObject<OS_dispatch_queue> *_cancellableObjectsQueue;
    BOOL _isCancelled;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_errorQueue;
    TSUTemporaryDirectory *_temporaryDirectory;
    TSUOnce *_temporaryDirectoryOnce;
}

- (void).cxx_destruct;
- (id)p_temporaryDirectoryURL;
- (BOOL)p_writeMovieFileForAnimatedGIFData:(id)arg1 ofType:(id)arg2 toURL:(id)arg3;
- (id)p_makeAssetFromAnimatedGIFData:(id)arg1;
- (id)makeAssetFromMovieInfo:(id)arg1;
- (id)makeAssetFromData:(id)arg1;
- (void)p_assetReaderDidFailWithError:(id)arg1;
- (BOOL)p_checkAssetReaderStatusReturningError:(out id *)arg1;
@property(readonly, nonatomic) NSError *error;
- (void)cancel;
- (id)p_makeAssetImageGeneratorHelpersWithLoadedAssetsForMovieIdentifiers:(id)arg1;
- (id)p_makeAssetReaderWithComposition:(id)arg1 movieSegmentsForVideoTracks:(id)arg2 audioMix:(id)arg3 assetReaderVideoTrackOutputHelpers:(out id *)arg4 assetReaderAudioMixOutput:(out id *)arg5 error:(out id *)arg6;
- (void)p_addVolume:(float)arg1 forTimeRange:(CDStruct_e83c9415)arg2 toAudioMixInputParameters:(id)arg3;
- (id)p_audioMixInputParametersForCompositionTrack:(id)arg1 inAudioMixInputParametersArray:(id)arg2;
- (id)p_compositionTrackInComposition:(id)arg1 compatibleWithSegmentsFromTrack:(id)arg2 appendedAtTime:(CDStruct_1b6d18a9)arg3;
- (void)p_insertTimeRange:(CDStruct_e83c9415)arg1 ofFirstAudioTrackInBackgroundMovieAsset:(id)arg2 atTime:(CDStruct_1b6d18a9)arg3 inComposition:(id)arg4 withVolume:(float)arg5 inAudioMixInputParametersArray:(id)arg6;
- (id)p_makeCompositionWithLoadedAssetsForMovieIdentifiers:(id)arg1 audioVolumesForMovieIdentifiers:(id)arg2 containingMovieSegmentsForVideoTracks:(out id *)arg3 audioMix:(out id *)arg4;
- (id)p_makeAudioVolumesForMovieIdentifiersFromDelegate:(id)arg1;
- (id)p_makeLoadedAssetsForMovieIdentifiersFromDelegate:(id)arg1;
- (void)p_createSampleGeneratorsIfNeeded;
- (struct opaqueCMSampleBuffer *)p_copyNextAudioSampleBuffer;
@property(readonly, nonatomic) id <KNMovieSampleGeneratorTrack> audioSampleGeneratorTrack;
- (id)nextVideoFrameSet;
- (void)dealloc;
- (id)init;
- (id)initWithMovieTimeline:(id)arg1 delegate:(id)arg2 videoFrameDuration:(CDStruct_1b6d18a9)arg3;

@end

