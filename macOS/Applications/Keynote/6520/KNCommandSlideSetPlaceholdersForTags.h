//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "TSKCommand.h"

#import "GSSPAutoEncodable.h"

@class KNAbstractSlide, NSDictionary, NSUUID;

@interface KNCommandSlideSetPlaceholdersForTags : TSKCommand <GSSPAutoEncodable>
{
    NSUUID *_slideId;
    struct NSDictionary *_newPlaceholdersForTags;
    struct NSDictionary *_oldPlaceholdersForTags;
}

@property(copy, nonatomic) NSDictionary *newPlaceholdersForTags; // @synthesize newPlaceholdersForTags=_newPlaceholdersForTags;
- (void).cxx_destruct;
- (id)objectsBeingModified;
-     // Error parsing type: v32@0:8^{CommandSlideSetPlaceholdersForTagsArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}{RepeatedPtrField<TSP::Reference>=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedPtrField<TSP::Reference>=^{Arena}ii^{Rep}}^{CommandArchive}^{UUID}}16@24, name: saveToArchive:archiver:
- (void)saveToArchiver:(id)arg1;
-     // Error parsing type: v32@0:8r^{CommandSlideSetPlaceholdersForTagsArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}{RepeatedPtrField<TSP::Reference>=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedPtrField<TSP::Reference>=^{Arena}ii^{Rep}}^{CommandArchive}^{UUID}}16@24, name: loadFromArchive:unarchiver:
- (void)loadFromUnarchiver:(id)arg1;
- (void)rollback;
- (BOOL)supportsCollaboration;
- (void)undo;
- (void)p_setPlaceholdersForTagsDictionary:(id)arg1;
- (void)notifyOfChanges;
- (void)p_doRedo;
- (void)redo;
- (void)commit;
- (id)computeNewPlaceholdersForTags:(id)arg1;
- (BOOL)process;
@property(readonly, nonatomic) KNAbstractSlide *slide;
- (void)didInitFromSOS;
- (id)initWithAbstractSlide:(id)arg1;
- (void)populateGSSPCmdSlideSetPlaceholdersForTags:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

@end

