//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "GSSPMessageBase.h"

#import "GSSPAutoDecodable-Protocol.h"

@class GSSPCellFormats, GSSPCellValue, GSSPFormula, NSString, TSDCommentStorage, TSTCellBorder, TSTCellSpec, TSTCellStyle, TSTConditionalStyleSet, TSWPParagraphStyle, TSWPStorage;

@interface GSSPTableCell : GSSPMessageBase <GSSPAutoDecodable>
{
    int mValueType;
    GSSPCellValue *mValue;
    NSString *mFormattedValue;
    GSSPFormula *mFormulaSyntaxError;
    GSSPCellFormats *mCellFormats;
    TSTCellSpec *mCellSpec;
    TSTCellStyle *mCellStyle;
    TSWPParagraphStyle *mTextStyle;
    TSTCellBorder *mCellBorder;
    TSWPStorage *mTextStorage;
    TSWPStorage *mTextStorageForLayout;
    TSDCommentStorage *mCommentStorage;
    TSTConditionalStyleSet *mConditionalStyleSet;
    int mConditionalStyleAppliedRuleIndex;
    BOOL mDefinedValue;
    BOOL mDefinedFormattedValue;
    BOOL mDefinedFormulaSyntaxError;
    BOOL mDefinedCellFormats;
    BOOL mDefinedCellSpec;
    BOOL mDefinedCellStyle;
    BOOL mDefinedTextStyle;
    BOOL mDefinedCellBorder;
    BOOL mDefinedTextStorage;
    BOOL mDefinedTextStorageForLayout;
    BOOL mDefinedCommentStorage;
    BOOL mDefinedConditionalStyleSet;
    BOOL mDefinedConditionalStyleAppliedRuleIndex;
}

+ (Class)realClass;
+ (void)registerRealGsspClass:(Class)arg1;
+ (CDUnknownFunctionPointerType)defaultDecodeConversionFunc;
+ (CDUnknownFunctionPointerType)autoDecodeConversionFunc;
+ (void)setAutoDecodeConversionFuncForDocServer:(CDUnknownFunctionPointerType)arg1;
+ (Class)autoDecodedClass;
@property(readonly, nonatomic) BOOL definedConditionalStyleAppliedRuleIndex; // @synthesize definedConditionalStyleAppliedRuleIndex=mDefinedConditionalStyleAppliedRuleIndex;
@property(readonly, nonatomic) BOOL definedConditionalStyleSet; // @synthesize definedConditionalStyleSet=mDefinedConditionalStyleSet;
@property(readonly, nonatomic) BOOL definedCommentStorage; // @synthesize definedCommentStorage=mDefinedCommentStorage;
@property(readonly, nonatomic) BOOL definedTextStorageForLayout; // @synthesize definedTextStorageForLayout=mDefinedTextStorageForLayout;
@property(readonly, nonatomic) BOOL definedTextStorage; // @synthesize definedTextStorage=mDefinedTextStorage;
@property(readonly, nonatomic) BOOL definedCellBorder; // @synthesize definedCellBorder=mDefinedCellBorder;
@property(readonly, nonatomic) BOOL definedTextStyle; // @synthesize definedTextStyle=mDefinedTextStyle;
@property(readonly, nonatomic) BOOL definedCellStyle; // @synthesize definedCellStyle=mDefinedCellStyle;
@property(readonly, nonatomic) BOOL definedCellSpec; // @synthesize definedCellSpec=mDefinedCellSpec;
@property(readonly, nonatomic) BOOL definedCellFormats; // @synthesize definedCellFormats=mDefinedCellFormats;
@property(readonly, nonatomic) BOOL definedFormulaSyntaxError; // @synthesize definedFormulaSyntaxError=mDefinedFormulaSyntaxError;
@property(readonly, nonatomic) BOOL definedFormattedValue; // @synthesize definedFormattedValue=mDefinedFormattedValue;
@property(readonly, nonatomic) BOOL definedValue; // @synthesize definedValue=mDefinedValue;
- (void).cxx_destruct;
- (id)description;
- (id)dspClassName;
- (id)jsonNSDictionaryValue;
- (void)populateJsonNSDictionaryValueToDictionary:(id)arg1;
- (int)p_getDiffEncodingScoreWith:(id)arg1;
- (void)p_populateStructHashKey:(struct GSSPHashKeyBuilder *)arg1;
- (unsigned long long)p_getStructHashKeyLength;
- (int)getStructHashId;
- (void)serializeRequiredFieldsWithSerializationContext:(struct GSSPSerializationContext *)arg1 withNextFieldNeedSerialize:(BOOL)arg2 diffBy:(id)arg3;
- (void)serializeOptionalFieldsWithSerializationContext:(struct GSSPSerializationContext *)arg1 withNextFieldNeedSerialize:(BOOL)arg2 diffBy:(id)arg3;
- (id)dspTypeIdString;
- (void)populateRequiredField:(int)arg1 fromContext:(struct GSSPDeserializationContext *)arg2;
- (void)populateOptionalField:(int)arg1 fromContext:(struct GSSPDeserializationContext *)arg2;
- (void)shallowCopyAllFieldsFrom:(id)arg1;
- (BOOL)clearConditionalStyleAppliedRuleIndex;
- (BOOL)clearConditionalStyleSet;
- (BOOL)clearCommentStorage;
- (BOOL)clearTextStorageForLayout;
- (BOOL)clearTextStorage;
- (BOOL)clearCellBorder;
- (BOOL)clearTextStyle;
- (BOOL)clearCellStyle;
- (BOOL)clearCellSpec;
- (BOOL)clearCellFormats;
- (BOOL)clearFormulaSyntaxError;
- (BOOL)clearFormattedValue;
- (BOOL)clearValue;
- (void)setConditionalStyleAppliedRuleIndex:(int)arg1;
- (int)conditionalStyleAppliedRuleIndex;
- (void)setConditionalStyleSet:(id)arg1;
- (id)conditionalStyleSet;
- (void)setCommentStorage:(id)arg1;
- (id)commentStorage;
- (void)setTextStorageForLayout:(id)arg1;
- (id)textStorageForLayout;
- (void)setTextStorage:(id)arg1;
- (id)textStorage;
- (void)setCellBorder:(id)arg1;
- (id)cellBorder;
- (void)setTextStyle:(id)arg1;
- (id)textStyle;
- (void)setCellStyle:(id)arg1;
- (id)cellStyle;
- (void)setCellSpec:(id)arg1;
- (id)cellSpec;
- (void)setCellFormats:(id)arg1;
- (id)cellFormats;
- (void)setFormulaSyntaxError:(id)arg1;
- (id)formulaSyntaxError;
- (void)setFormattedValue:(id)arg1;
- (id)formattedValue;
- (void)setValue:(id)arg1;
- (id)value;
- (void)setValueType:(int)arg1;
- (int)valueType;

@end

