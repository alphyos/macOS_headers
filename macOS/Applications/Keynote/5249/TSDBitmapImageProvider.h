//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDImageProvider.h"

@class NSMutableDictionary, NSObject, TSUOnce;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface TSDBitmapImageProvider : TSDImageProvider
{
    struct CGImageSource *mImageSource;
    struct CGImage *mImage;
    NSMutableDictionary *mResampledImages;
    unsigned long long mImageGamut;
    struct CGSize mNaturalSize;
    int mOrientation;
    BOOL mIsOpaque;
    BOOL mIsValid;
    unsigned long long mValidationStatus;
    unsigned long long mDPI;
    NSObject<OS_dispatch_queue> *mImageQueue;
    TSUOnce *mCheckIfValidOnce;
    NSObject<OS_dispatch_semaphore> *mFlushableContentLock;
    BOOL mHasFlushableContent;
    unsigned long long mEstimatedSize;
}

+ (struct CGImageSource *)p_newImageSourceFromFilePath:(id)arg1;
+ (struct CGImageSource *)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2;
+ (void)clearCacheForData:(id)arg1;
+ (id)p_cacheStringForData:(id)arg1;
+ (id)p_cacheDirectoryForData:(id)arg1;
+ (void)initialize;
+ (struct CGSize)naturalSizeForImageData:(id)arg1;
+ (id)TSUImageForImageData:(id)arg1;
+ (struct CGImage *)CGImageForImageData:(id)arg1;
@property(readonly, nonatomic) unsigned long long validationStatus; // @synthesize validationStatus=mValidationStatus;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGImageSource *CGImageSource;
- (struct CGImageSource *)p_newImageOfSize:(struct CGSize)arg1 andWriteToCacheWithSuffix:(id)arg2;
- (struct CGImageSource *)p_newCGImageSourceForTemporaryUse;
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource *)arg1 andImage:(struct CGImage *)arg2;
- (BOOL)p_dataIsGeneric;
- (struct CGImage *)p_newImageFromSource:(struct CGImageSource *)arg1;
- (struct CGImageSource *)p_newCGImageSource;
- (void)p_loadSourceRefIfNecessary;
- (void)p_loadFullSizedImageIfNecessary;
- (void)p_loadImageMetadata;
- (void)p_updateEstimatedSize;
- (unsigned long long)i_flushableMemoryEstimate;
- (BOOL)i_hasFlushableContent;
- (void)flush;
- (BOOL)p_shouldScaleRetinaScreenshots;
- (struct CGSize)dpiAdjustedNaturalSize;
@property(readonly, nonatomic) struct CGSize dpiAdjustedFillSize;
@property(readonly, nonatomic) unsigned long long imageDPI;
- (unsigned long long)imageGamut;
@property(readonly, nonatomic) BOOL isOpaque;
@property(readonly, nonatomic) int orientation;
- (struct CGImage *)p_resampledImageOfReciprocalScale:(unsigned long long)arg1;
- (struct CGImage *)p_loadOrCreateResampledImageWithReciprocalScale:(unsigned long long)arg1;
- (struct CGImage *)CGImageResampledToSize:(struct CGSize)arg1 lowQuality:(BOOL)arg2;
- (id)p_cacheSuffixForScale:(unsigned long long)arg1;
- (long long)p_reciprocalScaleForImageSize:(struct CGSize)arg1;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (struct CGImage *)CGImageForNaturalSize;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (BOOL)isValid;
- (struct CGSize)naturalSize;
- (void)dealloc;
- (void)i_commonInit;

@end

