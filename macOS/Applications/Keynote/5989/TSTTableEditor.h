//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDDrawableEditor.h"

#import "TSDDrawableInsertionEditor-Protocol.h"
#import "TSDKeyValueProxyVendingEditor-Protocol.h"
#import "TSDPasteboardReadingEditor-Protocol.h"
#import "TSDStylePresetsInspectorPaneDelegate-Protocol.h"
#import "TSDTextInput-Protocol.h"
#import "TSKChangeSourceObserver-Protocol.h"
#import "TSTAdaptiveLayoutMediatorOngoingDelegate-Protocol.h"
#import "TSTCanvasReferenceProvider-Protocol.h"
#import "TSTWPTextEditorRawArrowKeyEventDelegate-Protocol.h"
#import "TSWPFontInspecting-Protocol.h"
#import "TSWPTextInspecting-Protocol.h"

@class NSArray, NSLock, NSMutableArray, NSSet, NSString, TSDEditorController, TSDFill, TSKDocumentRoot, TSKSelection, TSTCellRegion, TSTCellSelection, TSTEditingState, TSTFormulaFieldEditor, TSTInfo, TSTReferenceColorHelper, TSTTableCategoriesEditorHelper, TSWPTextEditor;
@protocol TSDTextSelection, TSKSearchReference;

@interface TSTTableEditor : TSDDrawableEditor <TSDKeyValueProxyVendingEditor, TSTCanvasReferenceProvider, TSTWPTextEditorRawArrowKeyEventDelegate, TSKChangeSourceObserver, TSDPasteboardReadingEditor, TSTAdaptiveLayoutMediatorOngoingDelegate, TSWPTextInspecting, TSWPFontInspecting, TSDTextInput, TSDDrawableInsertionEditor, TSDStylePresetsInspectorPaneDelegate>
{
    NSMutableArray *_actionSelectors;
    int _currentSortingType;
    struct TSUCellRect _dragSourceRange;
    BOOL _lastCopyWasDrag;
    BOOL _resignedTextInput;
    BOOL _swappingActiveCell;
    BOOL _didSwapActiveCell;
    BOOL _insertingText;
    BOOL _editCellFont;
    NSArray *_biuProperties;
    struct set<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> _mergeRegionRemaindersToSkip;
    struct TSUCellCoord _cachedCursorOverCellIDForRemainders;
    struct TSUCellCoord _cachedNextOverCellIDForRemainders;
    struct TSUCellCoord _cachedCursorDownCellIDForRemainders;
    struct TSUCellCoord _cachedNextDownCellIDForRemainders;
    BOOL _endingContainedTextEditing;
    BOOL _previousSelectionWasCellEditing;
    BOOL _ignoreChangeNotificationsWhileSyncingReferences;
    BOOL _willSyncReferenceHighlightsAfterSelectionChange;
    BOOL _isCurrentEditor;
    BOOL _insertingNewLine;
    BOOL _providingReferences;
    BOOL _isInLongTermEditingSession;
    TSTFormulaFieldEditor *_formulaFieldEditor;
    TSTReferenceColorHelper *_cachedReferenceColorHelper;
    NSSet *_cachedReferences;
    NSLock *_referenceColorLock;
    TSTTableCategoriesEditorHelper *_categoriesEditorHelper;
}

+ (id)p_propertyMapForProperty:(int)arg1 withValue:(id)arg2;
+ (id)dragPasteboard;
+ (id)drawableFromAsyncProvider:(id)arg1 withContext:(id)arg2 error:(id *)arg3;
+ (Class)categoriesEditorHelperClass;
+ (Class)tableNameEditorClass;
+ (Class)cellEditorClass;
+ (id)editorFromEditorController:(id)arg1;
+ (id)keysResolvedByKeyValueProxy;
+ (id)commandToSetGroupingColumnsWhenRemovingColumnsInTable:(id)arg1 atUids:(const vector_4dc5f307 *)arg2;
@property(retain, nonatomic) TSTTableCategoriesEditorHelper *categoriesEditorHelper; // @synthesize categoriesEditorHelper=_categoriesEditorHelper;
@property(readonly, nonatomic) BOOL isInLongTermEditingSession; // @synthesize isInLongTermEditingSession=_isInLongTermEditingSession;
@property(nonatomic) BOOL providingReferences; // @synthesize providingReferences=_providingReferences;
@property(retain, nonatomic) NSLock *referenceColorLock; // @synthesize referenceColorLock=_referenceColorLock;
@property(retain, nonatomic) NSSet *cachedReferences; // @synthesize cachedReferences=_cachedReferences;
@property(retain, nonatomic) TSTReferenceColorHelper *cachedReferenceColorHelper; // @synthesize cachedReferenceColorHelper=_cachedReferenceColorHelper;
@property(getter=isInsertingNewLine) BOOL insertingNewLine; // @synthesize insertingNewLine=_insertingNewLine;
@property(readonly, nonatomic) TSTFormulaFieldEditor *formulaFieldEditor; // @synthesize formulaFieldEditor=_formulaFieldEditor;
@property(nonatomic) BOOL editCellFont; // @synthesize editCellFont=_editCellFont;
@property(nonatomic) BOOL isCurrentEditor; // @synthesize isCurrentEditor=_isCurrentEditor;
@property(nonatomic) BOOL didSwapActiveCell; // @synthesize didSwapActiveCell=_didSwapActiveCell;
@property(nonatomic) BOOL swappingActiveCell; // @synthesize swappingActiveCell=_swappingActiveCell;
@property(readonly, nonatomic) BOOL endingContainedTextEditing; // @synthesize endingContainedTextEditing=_endingContainedTextEditing;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)p_cellRangeIsSingleCell:(struct TSUCellRect)arg1 outOriginCellID:(struct TSUCellCoord *)arg2;
- (void)beginEditingSelectedCell;
- (void)beginFormulaEditingOnSelectedCell;
- (void)transitionToFormulaEditing;
- (void)transitionFromFormulaEditing;
- (void)toggleCellEditor:(id)arg1;
- (BOOL)selectionIsSingleCellWithFormula;
- (BOOL)selectionIsSingleControlCell;
- (BOOL)editingCellIsGroupValueCell;
- (BOOL)editingCellIsControlCell;
- (BOOL)editingCellIsExplicitText;
- (id)selectedCellRegionForEditorAction:(id)arg1;
- (id)selectionForEditorActionWithObject:(id)arg1;
- (id)selectedCellRegionWithCellSelection:(id)arg1;
- (id)selectionForEditorAction:(SEL)arg1;
- (int)nextOverCellState;
- (int)nextDownCellState;
- (struct TSUCellCoord)nextOverCellID;
- (struct TSUCellCoord)nextDownCellID;
- (void)updateRemainders;
- (void)resetMergeRemainders;
- (void)resetRemainders;
- (void)resetRemaindersCache;
- (void)removeCharacterSpacing:(id)arg1;
- (void)decreaseCharacterSpacing:(id)arg1;
- (void)increaseCharacterSpacing:(id)arg1;
- (void)useAllLigatures:(id)arg1;
- (void)useStandardLigatures:(id)arg1;
- (void)turnOffLigatures:(id)arg1;
- (BOOL)ligatureStateIsSetForType:(int)arg1;
- (void)outline:(id)arg1;
- (BOOL)outlineIsSet;
- (void)strikethrough:(id)arg1;
- (BOOL)strikethroughIsSet;
- (void)underline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (BOOL)inspectableForInspector:(id)arg1;
- (id)documentRootForInspector:(id)arg1;
- (id)interactiveCanvasControllerForInspector:(id)arg1;
- (int)valueForVerticalAlignmentPropertyForInspector:(id)arg1;
- (int)valueForWritingDirectionPropertyForInspector:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)reverseTableDirection:(id)arg1;
- (void)reverseDirection:(id)arg1;
- (void)alignNatural:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignLeft:(id)arg1;
- (int)valueForParagraphAlignmentPropertyForInspector:(id)arg1;
- (void)inspector:(id)arg1 applyWritingDirection:(long long)arg2;
- (id)valueForBIUProperties:(id)arg1 forInspector:(id)arg2;
- (void)inspector:(id)arg1 applyShapeValue:(id)arg2 forProperty:(int)arg3;
- (void)inspector:(id)arg1 applyFormatValue:(id)arg2 forProperty:(int)arg3 coalesceable:(BOOL)arg4;
- (void)applyListStyle:(id)arg1 createVariationUsingPropertyMap:(id)arg2;
- (void)applyListStyleOverrideForCurrentSelectionWithValue:(id)arg1 forProperty:(int)arg2;
- (void)inspector:(id)arg1 applyTextStylePreset:(id)arg2 stripCharacterStyles:(BOOL)arg3;
- (void)inspector:(id)arg1 applyListStyle:(id)arg2 createVariationUsingPropertyMap:(id)arg3 withName:(id)arg4;
- (void)inspector:(id)arg1 applyCharacterStyle:(id)arg2;
- (void)inspector:(id)arg1 applyParagraphStyle:(id)arg2 stripCharacterStyles:(BOOL)arg3;
- (void)inspector:(id)arg1 toggleIntProperty:(int)arg2 onValue:(int)arg3 offValue:(int)arg4;
- (void)inspector:(id)arg1 toggleBoolProperty:(int)arg2;
- (id)currentParagraphStyleForInspector:(id)arg1;
- (id)currentCharacterStyleForInspector:(id)arg1;
- (BOOL)supportsAlignmentInspecting;
- (BOOL)supportsCharacterStyleInspecting;
- (BOOL)supportsParagraphStyleInspecting;
- (void)setBaselineShift:(id)arg1;
- (id)baselineShift;
- (void)lowerBaseline:(id)arg1;
- (void)raiseBaseline:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)unscript:(id)arg1;
- (void)applyCaps:(id)arg1;
- (long long)predicateTypeSuggestionForCellRegion:(id)arg1 inTable:(id)arg2;
- (id)selectionPathFromSelection:(id)arg1 forArrowKeyReceivedInDirection:(int)arg2 withModifierKeys:(int)arg3 suppressWrap:(BOOL)arg4;
- (id)selectionPathFromSelection:(id)arg1 forArrowKeyReceivedInDirection:(int)arg2 withModifierKeys:(int)arg3;
- (id)selectionPathForSelectingCellID:(struct TSUCellCoord)arg1;
- (id)selectionPathForTextEditingAtCellID:(struct TSUCellCoord)arg1;
- (id)selectionPathForSelectingCellSelection:(id)arg1;
- (id)selectionPathToEndContainedTextEditing;
- (void)arrowKeyReceivedInDirection:(int)arg1 withModifierKeys:(int)arg2;
- (BOOL)canAddColumnsFromKeyboardBefore:(BOOL)arg1;
- (BOOL)canAddRowsFromKeyboardAbove:(BOOL)arg1;
- (void)p_hideAllTableChromeContextMenus;
- (void)p_hideAllErrorWarningPopovers;
@property(readonly) BOOL wantsRawArrowKeyEvents;
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(BOOL)arg2;
- (void)clearMarkedRange;
@property(readonly, nonatomic) struct _NSRange markedRange;
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(BOOL)arg2;
- (id)selectionWithRange:(struct _NSRange)arg1;
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (void)extendSelectionForward;
- (void)extendSelectionBackward;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteForward;
- (void)deleteBackward;
@property(readonly, nonatomic) BOOL canInsertText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (id)validAttributesForMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)moveToNextRowAndLastTouchedColumnAndCanAddRow:(BOOL)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)handleInsertTab:(id)arg1 ignoringFieldEditor:(BOOL)arg2;
- (void)navigateToNextCell;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)p_updateRangeOfCellsWithText:(id)arg1;
- (void)p_beginEditingCellWithText:(id)arg1 forceFormulaEditor:(BOOL)arg2 selectedRange:(struct _NSRange)arg3;
- (BOOL)supportsTextEditingInControlCells:(id)arg1 forcingFormulaEditing:(BOOL)arg2;
- (BOOL)p_textShouldPreservePercent:(id)arg1;
- (id)newFieldEditorWithDelegate:(id)arg1 nibName:(id)arg2;
- (void)p_trimSelectionPath:(id)arg1 toClass:(Class)arg2;
- (id)startEditingFieldWithDelegate:(id)arg1 nibName:(id)arg2;
- (void)insertText:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)handleInsertNewline:(id)arg1 ignoringFieldEditor:(BOOL)arg2 shift:(BOOL)arg3;
- (void)p_setTableSelection:(id)arg1;
- (void)p_setTableSubSelections:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)p_setTableSubSelections:(id)arg1;
- (unsigned long long)textLength;
- (BOOL)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (void)endEditing;
- (id)editorForArrowKeyEvents;
- (BOOL)wantsKeyboard;
@property(retain, nonatomic) TSKSelection<TSDTextSelection> *selectionForArrowKeys;
- (struct _NSRange)editRange;
- (void)p_plainTableDragColumnsOrRows:(long long)arg1 withinTableRep:(id)arg2 sourceCellRange:(struct TSUCellRect)arg3 destIndex:(unsigned int)arg4;
- (void)dragColumnsOrRows:(long long)arg1 withinTableRep:(id)arg2 sourceCellRange:(struct TSUCellRect)arg3 destIndex:(unsigned int)arg4;
- (void)dragCutTableSubselection:(id)arg1;
- (void)dragClearTableSubselection:(id)arg1;
- (void)dragCopyAndClearTableSubselection:(id)arg1;
- (BOOL)dragCopyTableSubselection:(id)arg1;
- (void)clearCellsForAction:(id)arg1 clearCategoriesCells:(BOOL)arg2;
- (void)clearCells:(id)arg1;
- (BOOL)canClearCells;
- (void)deleteCellContents:(id)arg1;
- (void)selectAllTableSubselection:(id)arg1;
- (void)selectTableSubselection:(id)arg1;
- (void)customPaste:(id)arg1;
- (void)pasteTableSubselection:(id)arg1;
- (void)copyTableSubselection:(id)arg1;
- (void)cutTableSubselection:(id)arg1;
- (void)clearAllImportWarnings;
- (void)clearImportWarningInAllCells:(id)arg1;
- (void)p_applyCellDiffToAllTables:(id)arg1 withSelectionBehavior:(id)arg2;
- (void)clearImportWarningInSelectedCell:(id)arg1;
- (void)setPopupControlStartWithFirstItem:(BOOL)arg1 emptyCellUIDs:(id)arg2;
- (void)setPopupControlByMovingItemfromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)setPopupControlByDeletingItemAtIndex:(unsigned long long)arg1;
- (void)setPopupControlByEditingItemAtIndex:(unsigned long long)arg1 withNewContent:(id)arg2;
- (void)p_setPopupCellSpecDeletingOrEditingItemAtIndex:(unsigned long long)arg1 editedContent:(id)arg2;
- (void)setSelectedCellsToPopupControl:(char *)arg1;
- (void)p_setSelectedCellsToPopupControl:(id)arg1 startWithFirstItem:(BOOL)arg2 action:(int)arg3;
- (id)popupMenuForCurrentSelection;
- (id)emptyCellUIDListforPopupMenu;
- (void)insertProduct:(id)arg1;
- (void)insertCount:(id)arg1;
- (void)insertMaximum:(id)arg1;
- (void)insertMinimum:(id)arg1;
- (void)insertAverage:(id)arg1;
- (void)insertSum:(id)arg1;
- (void)insertStockQuote:(id)arg1;
- (void)editExistingFormula:(id)arg1;
- (void)insertNewFormula:(id)arg1;
- (BOOL)canOpenFormulaEditor;
- (void)openFormulaEditor:(id)arg1;
- (void)setSelectedCellsToCustom:(id)arg1;
- (void)coerceSelectedCellsTo:(int)arg1 formatIsGenericNumber:(BOOL)arg2 removingControl:(BOOL)arg3;
- (void)applyControlToSelectedCells:(int)arg1;
- (void)setAutomaticFormat;
- (double)rangeControlIncrement;
- (double)rangeControlMaximum;
- (double)rangeControlMinimum;
- (void)setIncrement:(double)arg1 forInteractionType:(int)arg2;
- (void)setMaximum:(double)arg1 forInteractionType:(int)arg2;
- (void)setMinimum:(double)arg1 forInteractionType:(int)arg2;
- (void)setDurationUnitSmallest:(int)arg1 largest:(int)arg2;
- (int)durationUnitLargest;
- (int)durationUnitSmallest;
- (void)setDurationStyle:(int)arg1;
- (int)durationStyle;
- (void)setAutomaticDurationUnits:(BOOL)arg1;
- (BOOL)automaticDurationUnits;
- (void)p_runCellRegionBasedCommandWithAdaptiveLayout:(id)arg1;
- (void)p_runCellRegionBasedCommandWithAdaptiveLayout:(id)arg1 selectionBehavior:(id)arg2;
- (void)p_setDateFormatString:(id)arg1 orTimeFormatString:(id)arg2;
- (void)setTimeFormatString:(id)arg1;
- (void)setDateFormatString:(id)arg1;
- (id)dateTimeFormatString;
- (void)setCurrencyCode:(id)arg1 forInteractionType:(int)arg2;
- (id)currencyCode;
- (void)setUseAccountingStyle:(BOOL)arg1 forInteractionType:(int)arg2;
- (BOOL)useAccountingStyle;
- (void)setShowThousandsSeparator:(BOOL)arg1 coercingToFormatType:(int)arg2 forInteractionType:(int)arg3;
- (BOOL)showThousandsSeparatorForFormatType:(int)arg1;
- (void)setNumberOfDecimalPlaces:(long long)arg1 coercingToFormatType:(int)arg2 forInteractionType:(int)arg3;
- (long long)numberOfDecimalPlacesForFormatType:(int)arg1;
- (void)setNegativeNumberStyle:(int)arg1 coercingToFormatType:(int)arg2 forInteractionType:(int)arg3;
- (int)negativeNumberStyleForFormatType:(int)arg1;
- (void)setBaseUseMinusSign:(BOOL)arg1 forInteractionType:(int)arg2;
- (BOOL)baseUseMinusSign;
- (void)setBasePlaces:(unsigned char)arg1 forInteractionType:(int)arg2;
- (unsigned char)basePlaces;
- (void)setBase:(unsigned char)arg1 forInteractionType:(int)arg2;
- (unsigned char)base;
- (void)setFractionAccuracy:(int)arg1 forInteractionType:(int)arg2;
- (int)fractionAccuracy;
- (id)spareFormatForCurrentSelectionOfType:(int)arg1;
- (id)p_cellForNumberFormatInspector;
- (struct CGSize)imageSizeForPreset:(id)arg1 swatchSize:(struct CGSize)arg2;
- (id)imageForPreset:(id)arg1 size:(struct CGSize)arg2;
- (void)redefinePresetFromSelection:(id)arg1;
- (void)stylePresetInspector:(id)arg1 removePreset:(id)arg2;
- (void)addPresetFromSelection:(id)arg1;
- (BOOL)canAddPresetFromSelection;
- (void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2 useAlternateApplicationBehavior:(BOOL)arg3;
- (void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2;
- (id)stylePresetKindForInspector;
- (void)selectCellsWithEquivalentConditionalStyles;
- (void)setConditionalStyles:(id)arg1;
- (void)mergeConditionalStyles:(id)arg1;
- (void)removeConditionalStyles:(id)arg1;
- (BOOL)currentIsNamedPointSize;
- (double)currentFontSizeForFontSizeController:(id)arg1;
- (void)fontSizeController:(id)arg1 choseFontSize:(double)arg2;
- (void)applyDiffToAllFontSizes:(int)arg1;
- (void)fontPicker:(id)arg1 choseFont:(id)arg2 preserveFace:(BOOL)arg3;
- (id)currentFontForFontPicker:(id)arg1;
- (struct TSUCellCoord)p_cellIDForSelectedCellWithComment;
- (void)addOrShowComment:(id)arg1;
- (BOOL)canAddOrShowComment;
- (void)resetFillToDefault;
- (void)setCellFill:(id)arg1;
- (void)setCellStrokePresetNumber:(unsigned long long)arg1 clearStroke:(BOOL)arg2;
- (id)cellFill;
- (void)setTextShadow:(id)arg1;
- (id)textShadow;
- (void)setTextStyle:(id)arg1;
- (void)setFontColor:(id)arg1;
- (id)currentFontColor;
- (void)setStrokeChangeInformation:(id)arg1;
@property(nonatomic) int tableWritingDirection;
- (void)setHasFooterRowDividers:(BOOL)arg1;
- (BOOL)hasFooterRowDividers;
- (void)setHasHeaderRowDividers:(BOOL)arg1;
- (BOOL)hasHeaderRowDividers;
- (void)setHasHeaderColumnDividers:(BOOL)arg1;
- (BOOL)hasHeaderColumnDividers;
- (void)setHasVerticalStrokes:(BOOL)arg1;
- (BOOL)hasVerticalStrokes;
- (void)setHasHorizontalStrokes:(BOOL)arg1;
- (BOOL)hasHorizontalStrokes;
- (id)commandToDeleteFilterRule:(unsigned long long)arg1 inFilter:(unsigned long long)arg2;
- (id)commandToAddFilterRule:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)commandToSetFilterRule:(id)arg1 atIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (id)commandToDeleteFilterAtIndex:(unsigned long long)arg1;
- (void)deleteFilterRule:(unsigned long long)arg1 inFilter:(unsigned long long)arg2;
- (void)addFilterRule:(id)arg1 inFilter:(unsigned long long)arg2;
- (void)setFilterRule:(id)arg1 atIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (void)deleteFilterAtIndex:(unsigned long long)arg1;
- (void)setFilterSetType:(int)arg1;
- (int)filterSetType;
- (BOOL)canDisableFilters;
- (BOOL)canEnableFilters;
- (BOOL)canToggleFilters;
- (void)disableFilters:(id)arg1;
- (void)enableFilters:(id)arg1;
- (void)toggleFilters:(id)arg1;
@property(nonatomic) BOOL filtersEnabled;
- (BOOL)p_hasTableFilters;
- (BOOL)canAddFilterRulesWithCount:(unsigned long long)arg1;
@property(readonly, nonatomic) BOOL canFilterTable;
@property(nonatomic) BOOL tableAutoResizeEnabled;
@property(nonatomic) TSDFill *bandedFillObject;
@property(nonatomic) BOOL hasAlternatingRows;
- (void)setBorderStroke:(id)arg1 forTable:(id)arg2;
@property(nonatomic) BOOL hasTableBorder;
- (id)p_commandToSetTable:(id)arg1 withIntProperty:(int)arg2 value:(int)arg3 actionString:(id)arg4;
- (id)p_commandToSetTable:(id)arg1 withBoolProperty:(int)arg2 value:(BOOL)arg3 actionString:(id)arg4;
- (void)p_transposeTable:(id)arg1 withOptionalCommandGroup:(id)arg2;
- (void)transposeTable;
- (void)transposeTable:(id)arg1;
- (BOOL)canTransposeTable;
@property(readonly, nonatomic) id <TSKSearchReference> editingSearchReference;
- (void)categorizeByColumnIndex:(unsigned short)arg1 replaceRulesIfCategoriesDisabled:(BOOL)arg2;
- (int)groupingTypeSuggestionForColumnIndex:(unsigned short)arg1 inTable:(id)arg2;
- (void)toggleOnCategories:(id)arg1;
- (void)toggleCategories:(id)arg1;
- (void)toggleOffCategories:(id)arg1;
- (void)categorize:(id)arg1;
- (void)setSortOrder:(id)arg1 sortNow:(BOOL)arg2;
- (void)setSortOrder:(id)arg1;
- (id)sortOrder;
- (void)sortTable:(id)arg1;
- (id)p_regionForSortingTableWithEditorAction:(id)arg1;
- (void)sortDescending:(id)arg1;
- (void)sortAscending:(id)arg1;
- (void)sortWithRule:(id)arg1 region:(id)arg2;
- (void)toggleSorting;
- (unsigned int)numberOfFooterRows;
- (void)disableFreezeHeaderRows;
- (void)enableFreezeHeaderRows;
- (int)headerRowsFrozen;
- (unsigned int)numberOfHeaderRows;
- (void)disableRepeatingHeaderColumns;
- (void)enableRepeatingHeaderColumns;
- (void)disableRepeatingHeaderRows;
- (void)enableRepeatingHeaderRows;
- (int)repeatingHeaderColumnsEnabled;
- (int)repeatingHeaderRowsEnabled;
- (void)disableFreezeHeaderColumns;
- (void)enableFreezeHeaderColumns;
- (void)freezeHeaderColumns:(id)arg1;
- (void)freezeHeaderRows:(id)arg1;
- (int)headerColumnsFrozen;
- (int)p_mixedStateOfSelectedTablesForBlock:(CDUnknownBlockType)arg1;
- (BOOL)footerRowsPermitted:(unsigned int)arg1 outMixedState:(int *)arg2;
- (BOOL)headerRowsPermitted:(unsigned int)arg1 outMixedState:(int *)arg2;
- (BOOL)headerColumnsPermitted:(unsigned int)arg1 outMixedState:(int *)arg2;
- (int)p_mixedStateForNumberOfHeaders:(unsigned int)arg1 gettingNumberOfHeadersEnabled:(char *)arg2 numberOfHeadersAvailableFunction:(CDUnknownBlockType)arg3 numberOfHeadersFunction:(CDUnknownBlockType)arg4 findIllegalCountFunction:(CDUnknownBlockType)arg5;
- (void)applyTableAreaTransition:(unsigned long long)arg1 toRange:(struct _NSRange)arg2;
- (void)setNumberOfFooterRowsByIndex:(unsigned int)arg1;
- (void)setNumberOfHeaderRowsByIndex:(unsigned int)arg1;
- (void)setNumberOfHeaderColumnsByIndex:(unsigned int)arg1;
- (void)setNumberOfFooterRows:(id)arg1;
- (void)setNumberOfHeaderColumns:(id)arg1;
- (void)setNumberOfHeaderRows:(id)arg1;
- (unsigned int)numberOfHeaderColumns;
- (BOOL)isNumberOfFooterRowsMixed;
- (BOOL)isNumberOfHeaderColumnsMixed;
- (BOOL)isNumberOfHeaderRowsMixed;
- (void)toggleTextStyleProperty:(int)arg1;
- (id)p_propertyMapWithToggledTextStyleProperty:(int)arg1 currentValue:(int)arg2;
- (BOOL)isSubscript;
- (BOOL)isSuperscript;
- (BOOL)isOutline;
- (BOOL)isStrike;
- (BOOL)isUnderline;
- (BOOL)isItalic;
- (BOOL)isBold;
- (BOOL)p_hasBIUProperty:(int)arg1;
- (BOOL)p_storageHasBIUProperty:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (id)p_biuProperties;
- (void)setVerticalAlignment:(int)arg1;
- (int)verticalAlignment;
- (void)setWritingDirection:(int)arg1;
- (void)setParagraphAlignment:(int)arg1;
- (int)paragraphAlignment;
- (BOOL)p_canSetWritingDirectionTo:(int)arg1;
- (int)paragraphDirection;
- (void)disableTextWrap;
- (void)enableTextWrap;
- (void)p_setTextWrapEnabled:(BOOL)arg1;
- (id)p_getBIUPropertiesOfFirstSelectedCellForProperty:(int)arg1 biuProperties:(id)arg2 defaultValue:(id)arg3;
- (id)p_getObjectValueOfFirstSelectedCellForProperty:(int)arg1 defaultValue:(id)arg2;
- (double)p_getCGFloatValueOfFirstSelectedCellForProperty:(int)arg1 defaultValue:(double)arg2;
- (int)p_getIntValueOfFirstSelectedCellForProperty:(int)arg1 defaultValue:(int)arg2;
- (void)p_examineFirstVisibleSelectedCellUsingBlock:(CDUnknownBlockType)arg1;
- (id)p_valueSetForBIUPropertiesOfParagraphStyle:(id)arg1;
- (void)p_applyPropertiesToTableName:(id)arg1;
- (void)p_applyPropertiesWithTextEditor:(id)arg1;
- (void)p_applyPropertiesToTableNameWithTextEditor:(id)arg1;
- (void)p_applyProperties:(id)arg1 toParagraphStyle:(id)arg2;
- (id)p_valueForPropertyInTextEditor:(int)arg1;
- (id)p_valueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (double)p_CGFloatValueForPropertyInTextEditor:(int)arg1;
- (int)p_intValueForPropertyInTextEditor:(int)arg1;
- (double)p_CGFloatValueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (int)p_intValueForPropertyInStorage:(id)arg1 property:(int)arg2 index:(unsigned int)arg3;
- (void)p_beginEditingTableNameWithText:(id)arg1;
- (void)setTableNameBorderEnabled:(BOOL)arg1 forTable:(id)arg2;
- (BOOL)tableNameBorderEnabled;
- (void)disableTableNameAndEndEditingIfNeeded:(BOOL)arg1;
- (void)disableTableName;
- (void)disableTableName:(id)arg1;
- (void)enableTableName;
- (void)enableTableName:(id)arg1;
- (BOOL)tableNameEnabled;
- (void)preserveGeometryForTable:(id)arg1 withFrame:(struct CGRect)arg2 modifiedDirection:(long long)arg3;
- (void)distributeColumnsEvenly:(id)arg1;
- (void)distributeRowsEvenly:(id)arg1;
- (void)distributeRowsOrColumnsEvenly:(id)arg1 direction:(long long)arg2;
- (void)distributeColumnsEvenlyWorker:(id)arg1 cellRegion:(id)arg2;
- (void)distributeRowsEvenlyWorker:(id)arg1 cellRegion:(id)arg2;
- (BOOL)canDistributeColumnsEvenly;
- (BOOL)canDistributeRowsEvenly;
- (id)commandsToSetColumnWidths:(id)arg1 inTable:(id)arg2 columnIndexes:(id)arg3;
- (void)setColumnWidths:(id)arg1 selection:(id)arg2 columnWidths:(id)arg3 mediator:(id)arg4;
- (void)setColumnWidths:(double)arg1;
- (id)commandsToSetRowHeights:(id)arg1 inTable:(id)arg2 rowIndexes:(id)arg3;
- (void)setRowHeights:(id)arg1 selection:(id)arg2 rowHeights:(id)arg3 mediator:(id)arg4;
- (void)setRowHeights:(double)arg1;
@property(readonly, nonatomic) BOOL canInspectCellBorders;
@property(readonly, nonatomic) BOOL canInspectCellFill;
- (void)toggleWrapTextInCell:(id)arg1;
@property(readonly, nonatomic) BOOL canInspectTextWrap;
- (BOOL)textWrapEnabled;
- (void)showAllColumns:(id)arg1;
- (void)showContainedColumns:(id)arg1;
- (void)showRightColumns:(id)arg1;
- (void)showLeftColumns:(id)arg1;
- (void)showColumns:(id)arg1;
- (void)showColumnsWorker:(id)arg1 expandLeft:(BOOL)arg2 expandRight:(BOOL)arg3;
- (void)hideColumns:(id)arg1;
- (void)showAllRows:(id)arg1;
- (void)showContainedRows:(id)arg1;
- (void)showBelowRows:(id)arg1;
- (void)showAboveRows:(id)arg1;
- (void)showRows:(id)arg1;
- (void)showRowsWorker:(id)arg1 expandUp:(BOOL)arg2 expandDown:(BOOL)arg3;
- (void)hideRows:(id)arg1;
- (void)unmergeCells:(id)arg1;
- (void)mergeCells:(id)arg1;
- (void)setRepeatingHeaderColumnsEnabled:(id)arg1;
- (void)setRepeatingHeaderRowsEnabled:(id)arg1;
- (void)p_FillCellSelection:(int)arg1;
- (void)fillCellsWithinSelectionDown:(id)arg1;
- (void)fillCellsWithinSelectionUp:(id)arg1;
- (void)fillCellsWithinSelectionLeft:(id)arg1;
- (void)fillCellsWithinSelectionRight:(id)arg1;
- (void)fillCells:(id)arg1;
- (void)fitColumnContent:(id)arg1;
- (struct CGRect)p_frameBeforeGeometryChangeForTableInfo:(id)arg1;
- (void)fitColumnContentInCellRegion:(id)arg1;
- (void)fitRowContent:(id)arg1;
- (void)fitRowContentInCellRegion:(id)arg1;
- (void)deleteColumns:(id)arg1 selection:(id)arg2 mediator:(id)arg3 ignoreSelectionBehavior:(BOOL)arg4;
- (void)deleteLastColumn:(id)arg1 ignoreSelectionBehavior:(BOOL)arg2;
- (void)deleteColumns:(id)arg1;
- (void)addBodyColumnsAfter:(id)arg1;
- (void)addBodyColumnsBefore:(id)arg1;
- (void)addColumnsAfter:(id)arg1;
- (void)addColumnsBefore:(id)arg1;
- (void)addHeaderColumnsAfter:(id)arg1;
- (void)addHeaderColumnsBefore:(id)arg1;
- (void)addHeaderColumnBefore:(id)arg1;
- (void)deleteRows:(id)arg1 selection:(id)arg2 mediator:(id)arg3 ignoreSelectionBehavior:(BOOL)arg4;
- (void)deleteLastRow:(id)arg1 ignoreSelectionBehavior:(BOOL)arg2;
- (void)deleteRows:(id)arg1;
- (void)addBodyRowsBelow:(id)arg1;
- (void)addBodyRowsAbove:(id)arg1;
- (void)addRowsBelow:(id)arg1;
- (void)addRowsAbove:(id)arg1;
- (void)addFooterRowsBelow:(id)arg1;
- (void)addFooterRowsAbove:(id)arg1;
- (void)addFooterRowBelow:(id)arg1;
- (void)addHeaderRowsBelow:(id)arg1;
- (void)addHeaderRowsAbove:(id)arg1;
- (void)addHeaderRowAbove:(id)arg1;
- (long long)relativeDirectionForAddingDimensionWithEditAction:(SEL)arg1;
- (long long)additionDimensionForEditAction:(SEL)arg1;
- (void)tableUnhideAll:(id)arg1;
- (id)p_adjustedSelectedCellRegionFromTable:(id)arg1 mergeProcessingType:(unsigned long long)arg2 removeSummaryAndLabelCellsWhenMixed:(BOOL)arg3;
- (id)p_adjustedSelectedCellRegionFromTable:(id)arg1 mergeProcessingType:(unsigned long long)arg2;
- (id)p_adjustedSelectedCellRegionFromTable:(id)arg1;
- (id)p_visibleSelectedCellRegionFromTable:(id)arg1 pruningBehavior:(unsigned long long)arg2;
- (id)p_cellRegionFromRegion:(id)arg1 subtractingIneligibleMergeCellsInTable:(id)arg2 mergeProcessingType:(unsigned long long)arg3;
- (id)p_cellRegionFromRegion:(id)arg1 subtractingHiddenCellsInTable:(id)arg2;
@property(readonly, nonatomic) BOOL canRedefinePresetFromSelection;
@property(readonly, nonatomic) BOOL canToggleCellEditor;
- (BOOL)canFillCellsWithinSelection:(int)arg1;
- (BOOL)canHideColumns:(id)arg1;
@property(readonly, nonatomic) BOOL canHideColumns;
- (BOOL)canHideRows:(id)arg1;
@property(readonly, nonatomic) BOOL canHideRows;
@property(readonly, nonatomic) BOOL canShowAllColumns;
- (BOOL)canShowColumns:(id)arg1;
@property(readonly, nonatomic) BOOL canShowColumns;
@property(readonly, nonatomic) BOOL canShowAllRows;
@property(readonly, nonatomic) BOOL canShowRows;
@property(readonly, nonatomic) BOOL canDrag;
@property(readonly, nonatomic) BOOL canDragUsingKnobs;
- (BOOL)canInsertFormula;
@property(readonly, nonatomic) BOOL canEditFormula;
@property(readonly, nonatomic) BOOL canInsertStockQuote;
@property(readonly, nonatomic) BOOL canDeleteRows;
- (BOOL)canDeleteRowsForTable:(id)arg1 selection:(id)arg2;
@property(readonly, nonatomic) BOOL canDeleteColumns;
- (BOOL)canDeleteColumnsForTable:(id)arg1 selection:(id)arg2;
- (BOOL)needToFitColumnContentForTable:(id)arg1 selection:(id)arg2;
@property(readonly, nonatomic) BOOL needToFitColumnContent;
- (BOOL)needToFitRowContentForTable:(id)arg1 selection:(id)arg2;
@property(readonly, nonatomic) BOOL needToFitRowContent;
- (void)toggleQuickFilterRules:(id)arg1;
- (int)p_toggleQuickFilterRulesEditorResponseWithEditorAction:(SEL)arg1;
- (id)quickFilterRuleToggleOperationsWithMaximumNumberOfOperations:(id)arg1;
- (id)quickFilterRuleToggleOperationsForCellSelection:(id)arg1 maximumNumberOfOperations:(id)arg2;
- (id)quickFilterRuleToggleOperationsForCellSelection:(id)arg1 maximumNumberOfOperations:(id)arg2 maximumItemDisplayStringLength:(id)arg3;
- (BOOL)_providesQuickFilterRuleToggleOperationsForCellSelection:(id)arg1;
- (id)p_sortedQuickFilterItemsForOperationsInCellSelection:(id)arg1 maximumNumberOfItems:(id)arg2;
- (id)toggleRulesForQuickFilterItems:(id)arg1;
- (unsigned long long)p_filterIndexForNewQuickFilterRuleInFilterSet:(id)arg1 baseColumn:(struct TSUModelColumnIndex)arg2;
@property(readonly, nonatomic) BOOL hasQuickFilterItems;
@property(readonly, copy, nonatomic) NSArray *sortedQuickFilterItems;
- (id)sortedQuickFilterItemsIncludingHiddenCells:(BOOL)arg1;
- (id)sortedQuickFilterItemsIncludingHiddenCells:(BOOL)arg1 maximumNumberOfItems:(id)arg2;
- (id)sortedQuickFilterItemsInCellRegion:(id)arg1 includingHiddenCells:(BOOL)arg2 maximumNumberOfItems:(id)arg3;
- (void)getSortedQuickFilterItemsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)getSortedQuickFilterItemsIncludingHiddenCells:(BOOL)arg1 maximumNumberOfItems:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)p_quickFilterCellRegionForCurrentSelection;
- (void)getSortedQuickFilterItemsInCellRegion:(id)arg1 includingHiddenCells:(BOOL)arg2 maximumNumberOfItems:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (unsigned long long)p_quickFilterIndexForCell:(id)arg1 filterSet:(id)arg2 baseColumnIndex:(struct TSUModelColumnIndex)arg3 ruleIndex:(out unsigned long long *)arg4;
- (unsigned long long)quickFilterIndexForCell:(id)arg1 filterSet:(id)arg2 filterIndices:(id)arg3 ruleIndex:(out unsigned long long *)arg4;
@property(readonly, nonatomic) BOOL canManageQuickFilters;
@property(readonly, nonatomic) TSTCellSelection *cellSelectionForManagingFilters;
@property(readonly, nonatomic) BOOL filterSetIsEnabled;
@property(readonly, nonatomic) BOOL hasSubselectionContainingOnlyCellsInCategoryColumnsAndRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingOnlyCellsInSummaryAndLabelRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingOnlyCellsInSummaryRow;
@property(readonly, nonatomic) BOOL hasSubselectionContainingOnlyCellsInCategoryColumn;
@property(readonly, nonatomic) BOOL hasSubselectionContainingCellsInCategoryColumnsOrRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingCellsInSummaryOrLabelRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingCellsInSummaryRow;
@property(readonly, nonatomic) BOOL hasSubselectionContainingCellsInCategoryColumn;
@property(readonly, nonatomic) BOOL hasSubselectionContainingFooterRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingHeaderRows;
@property(readonly, nonatomic) BOOL hasSubselectionContainingHeaderColumns;
@property(readonly, nonatomic) BOOL selectionContainsCategorizedTable;
@property(readonly, nonatomic) BOOL selectionContainsUncategorizedTable;
@property(readonly, nonatomic) BOOL selectionPartiallyIntersectsMergeRange;
@property(readonly, nonatomic) BOOL selectionComprisedOfSingleMergeRange;
@property(readonly, nonatomic) BOOL canUnmerge;
@property(readonly, nonatomic) BOOL canMerge;
- (BOOL)canToggleOffCategories;
- (BOOL)canToggleOnCategories;
- (BOOL)canToggleCategories;
- (BOOL)canInspectCategories;
- (BOOL)canCategorizeByColumns:(id)arg1;
- (BOOL)canCategorize;
- (BOOL)p_canSortTableWithSortOrder:(id)arg1;
@property(readonly, nonatomic) BOOL canSortTable;
@property(readonly, nonatomic) BOOL canSortColumns;
- (BOOL)canSortSelectedColumns:(id)arg1;
- (BOOL)canSortByViewColumns:(id)arg1 region:(id)arg2;
- (BOOL)canUnhideAll;
- (id)permittedSharedReadOnlyActions;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (void)insertDrawables:(id)arg1 withInsertionContext:(id)arg2 postProcessBlock:(CDUnknownBlockType)arg3;
- (void)prepareGeometryForInsertingDrawables:(id)arg1 withInsertionContext:(id)arg2;
- (BOOL)canHandleInsertionOfDrawables:(id)arg1 insertionContext:(id)arg2;
- (BOOL)p_canInsertAttachments;
- (void)endEditingAndSelectParent:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (BOOL)canCancelOperation;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)p_hideEditMenuIfShowing;
- (void)paste:(id)arg1 viaKeyboard:(BOOL)arg2;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)syncReferenceHighlightsAndSelection:(id)arg1;
- (void)reimportWithNewSettings:(id)arg1;
- (void)pasteCopiedColumnsValues:(id)arg1;
- (void)pasteCopiedColumns:(id)arg1;
- (void)pasteCopiedRowsValues:(id)arg1;
- (void)pasteCopiedRows:(id)arg1;
- (void)pasteExactly:(id)arg1;
- (void)pasteStyle:(id)arg1;
- (void)pasteValues:(id)arg1;
- (void)pasteTableSubselectionForDragMove:(id)arg1 pasteType:(unsigned long long)arg2;
- (void)pasteTableSubselectionForDrag:(id)arg1;
- (void)pasteUpdateWithPasteboard:(id)arg1;
- (BOOL)p_pasteUpdateWithTable:(id)arg1 specializedTableType:(id)arg2 continueIfRemappingFails:(BOOL)arg3;
- (BOOL)p_canPasteSpecializedTables;
- (void)applyNewImageFill:(id)arg1 forSelection:(id)arg2 andBehavior:(id)arg3;
- (void)pasteWithType:(unsigned long long)arg1 withPasteboard:(id)arg2;
@property(readonly, nonatomic) BOOL canPasteCopiedRows;
@property(readonly, nonatomic) BOOL canPasteCopiedColumns;
@property(readonly, nonatomic) BOOL canPasteStyle;
@property(readonly, nonatomic) BOOL canPaste;
- (BOOL)canPasteWithPasteboard:(id)arg1;
@property(readonly, nonatomic) BOOL canPasteValues;
- (BOOL)p_isTableLinkedToAForm:(id)arg1;
- (BOOL)p_pasteWillFit;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
@property(readonly, nonatomic) BOOL canDelete;
- (int)editorResponseForCanDelete;
- (void)copyStyle:(id)arg1;
- (void)copy:(id)arg1;
- (void)copy:(id)arg1 withPasteboard:(id)arg2;
@property(readonly, nonatomic) BOOL canCopyStyle;
@property(readonly, nonatomic) BOOL canCopy;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2 shouldStop:(char *)arg3;
- (void)pasteWithPasteboard:(id)arg1 sender:(id)arg2;
- (BOOL)canPasteWithPasteboard:(id)arg1 sender:(id)arg2;
- (BOOL)shouldExtendLongTermEditingSession;
- (void)_editorControllerSelectionPathDidChange:(id)arg1;
- (void)didBecomeTextInputEditor;
- (void)willResignTextInputEditor;
- (void)willResignCurrentEditor;
- (void)didBecomeCurrentEditorForEditorController:(id)arg1;
@property(readonly, nonatomic) BOOL shouldZoomOutDueToSelectionChange;
- (void)tableSubselectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)didEndTableNameEditing;
- (void)willEndTableNameEditing;
- (void)willBeginTableNameEditing;
- (void)tableNameEditorBecameInactive;
- (void)tableNameEditorBecameActive;
- (void)cellEditorDidResign;
- (BOOL)wantsToReceiveTextInput;
- (id)model;
- (BOOL)shouldDiscardAllSubselectionsStartingWithSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (id)nextEditorForSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;
- (BOOL)shouldRemainOnEditorStackForSelection:(id)arg1 inSelectionPath:(id)arg2 withNewEditors:(id)arg3;
@property(readonly, nonatomic) BOOL isEditingTableName;
@property(readonly, nonatomic) BOOL isTableNameSelected;
@property(readonly, nonatomic) BOOL isEditingStroke;
@property(readonly, nonatomic) BOOL isEditingStockCell;
@property(readonly, nonatomic) BOOL isEditingControlCell;
@property(readonly, nonatomic) BOOL isEditingFormulaCell;
@property(readonly, nonatomic) BOOL isCellReferenceEditing;
@property(readonly, nonatomic) BOOL isEditingCellOrFormulaAsText;
- (BOOL)hasSubSelectionForCopyPaste;
@property(readonly, nonatomic) BOOL hasSubselection;
@property(readonly, nonatomic) BOOL hasSingleTableInfo;
@property(readonly, nonatomic) BOOL selectionIsInSingleTableBody;
@property(readonly, nonatomic) BOOL hasCellSubselection;
@property(readonly, nonatomic) long long cellSubselectionType;
@property(readonly, nonatomic) long long deprecatedTableSubselectionType;
- (int)editingMode;
@property(readonly, nonatomic) struct TSUCellCoord firstViewCellIDPrunedToBaseTableCells;
@property(readonly, nonatomic) TSTCellRegion *selectedCellRegion;
- (id)selectedCellRegionForTableInfo:(id)arg1;
- (void)changeEditingMode:(int)arg1;
- (void)cancelOngoingAdaptiveLayout;
- (void)containedEditorDidBecomeTextInputEditor:(id)arg1;
- (void)containedEditorWillResign:(id)arg1;
- (void)p_annotationFieldEditingWillBeginWhileEditing:(id)arg1;
- (void)p_styleWillUpdateWhileEditing:(id)arg1;
- (BOOL)p_commandPermittedDuringEditing:(id)arg1;
- (void)p_commandWillExecuteWhileEditing:(id)arg1;
- (void)p_commandWillUndoOrRedo:(id)arg1;
- (void)p_unregisterFromNotificationsWhileEditing;
- (void)p_registerForNotificationsWhileEditing;
- (void)p_setTextSelectionForContainedTextEditingAtCellID:(struct TSUCellCoord)arg1 unscaledCanvasPoint:(struct CGPoint)arg2 wantsKeyboard:(BOOL)arg3;
- (void)beginContainedTextEditingAtCellID:(struct TSUCellCoord)arg1 wantsKeyboard:(BOOL)arg2 setTextSelectionAtUnscaledCanvasPoint:(struct CGPoint)arg3;
- (void)p_endContainedTextEditingDuringSelectionChange:(BOOL)arg1;
- (void)endContainedTextEditing;
- (void)endCellEditing;
@property(readonly, nonatomic) TSWPTextEditor *containedTextEditor;
- (id)p_repForCellID:(struct TSUCellCoord)arg1 createIfNeeded:(BOOL)arg2;
- (void)p_modifySelectedTablesForFormatParameterWithTargetFormatType:(int)arg1 interactionType:(int)arg2 commandBlock:(CDUnknownBlockType)arg3;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 withActionString:(id)arg2 withSetCellBlock:(CDUnknownBlockType)arg3;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 textStyleProperties:(id)arg2;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 withActionString:(id)arg2 cellDiff:(id)arg3;
- (void)p_modifySelectedTablesAndSetSelectionWithAdaptiveLayoutDirection:(int)arg1 cellDiff:(id)arg2;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 cellDiff:(id)arg2;
- (void)p_modifySelectedTablesAndSetSelectionWithAdaptiveLayoutDirection:(int)arg1 commandBlock:(CDUnknownBlockType)arg2;
- (void)p_modifySelectedTablesWithAdaptiveLayoutDirection:(int)arg1 commandBlock:(CDUnknownBlockType)arg2;
- (void)p_modifySelectedTablesWithSingleTableSelectionBehavior:(id)arg1 adaptiveLayoutDirection:(int)arg2 commandBlock:(CDUnknownBlockType)arg3;
- (id)p_simplestSelectionBehavior;
@property(readonly, nonatomic) BOOL hasMergedBodyRows;
- (void)setCellSubselection:(id)arg1 withFlags:(unsigned long long)arg2;
- (id)selection;
@property(readonly, retain, nonatomic) TSKSelection<TSDTextSelection> *textInputSelection;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) BOOL multipleTableInfos;
@property(readonly, nonatomic) TSTInfo *firstTableInfo;
@property(readonly, nonatomic) TSTInfo *tableInfo;
@property(readonly, nonatomic) TSTCellSelection *cellSubselection;
@property(readonly, nonatomic) TSTCellSelection *deprecatedTableSubselection;
- (void)preflightEditorAction;
- (id)localeSpecificStorage;
- (id)initWithInteractiveCanvasController:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)keyValueProxy;
- (void)deleteGroupWithSelection:(id)arg1;
- (void)deleteGroup:(id)arg1;
- (BOOL)canDeleteGroupWithSelection:(id)arg1;
- (BOOL)canDeleteGroup;
- (id)p_commandToAddRowToBottomOfGroupInSelection:(id)arg1 outNewRowUIDs:(vector_4dc5f307 *)arg2;
- (void)addRowToGroupWithSelection:(id)arg1;
- (void)addRowToGroup:(id)arg1;
- (BOOL)canAddRowToGroupWithSelection:(id)arg1;
- (BOOL)canAddRowToGroup;
- (void)addGroupBelowSelection:(id)arg1;
- (void)addGroupBelow:(id)arg1;
- (void)addGroupAboveSelection:(id)arg1;
- (void)addGroupAbove:(id)arg1;
- (BOOL)p_canAddGroupAboveOrBelowSelection:(id)arg1;
- (BOOL)canAddGroupBelowSelection:(id)arg1;
- (BOOL)canAddGroupBelow;
- (BOOL)canAddGroupAboveSelection:(id)arg1;
- (BOOL)canAddGroupAbove;
- (id)p_commandToSetNewGroupNameInSelection:(id)arg1 inGroupingLevel:(unsigned char)arg2;
- (id)p_commandToSetGroupNamesWithApplyCellMap:(id)arg1;
- (id)p_commandToInsertNewGroupByColumn:(id)arg1;
- (id)p_groupByRowsCategoryNameSuffixString;
- (id)p_groupByRowsCategoryNamePrefixString;
- (id)p_groupByRowsGroupNameSuffixString;
- (id)p_groupByRowsGroupNamePrefixString;
- (void)groupByRowsWithSelection:(id)arg1;
- (void)groupByRows:(id)arg1;
- (BOOL)canGroupByRowsWithSelection:(id)arg1;
- (BOOL)canGroupByRows;
- (id)commandToSetGroupingColumnsWhenRemovingColumnsInTable:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)_setAggregateType:(unsigned char)arg1;
- (void)setGroupNameAggregateType:(id)arg1;
- (void)setCountAggregateType:(id)arg1;
- (void)setMinAggregateType:(id)arg1;
- (void)setMaxAggregateType:(id)arg1;
- (void)setAverageAggregateType:(id)arg1;
- (void)setSubtotalAggregateType:(id)arg1;
- (void)setBlankAggregateType:(id)arg1;
- (void)toggleSummaryLabelRowWithSelection:(id)arg1;
- (void)toggleSummaryLabelRow:(id)arg1;
- (BOOL)canToggleSummaryLabelRowWithSelection:(id)arg1;
- (BOOL)canToggleSummaryLabelRow;
- (void)showCategoryColumn:(id)arg1 columnIndex:(unsigned short)arg2;
- (void)hideCategoryColumn:(id)arg1 columnIndex:(unsigned short)arg2;
- (void)changeGroupingType:(id)arg1 ruleIndex:(unsigned long long)arg2 groupingType:(int)arg3;
- (void)replaceCategoryColumn:(id)arg1 atRuleIndex:(unsigned long long)arg2 newColumnIndex:(unsigned short)arg3 newGroupingType:(int)arg4;
- (void)moveCategory:(id)arg1 fromRuleIndex:(unsigned long long)arg2 toNewIndex:(unsigned long long)arg3;
- (void)addCategoryToInfo:(id)arg1 columnIndex:(unsigned short)arg2 groupingType:(int)arg3 atRuleIndex:(unsigned long long)arg4;
- (void)removeCategoryFromInfo:(id)arg1 ruleIndexes:(id)arg2;
- (void)removeCategoryWithSelection:(id)arg1;
- (void)removeCategory:(id)arg1;
- (BOOL)canRemoveCategoryWithSelection:(id)arg1;
- (BOOL)canRemoveCategory;
- (void)toggleSummaryLabelRowForGroupLevel:(unsigned char)arg1;
- (BOOL)isLabelRowVisible:(id)arg1;
- (void)setSummaryAggregateType:(unsigned char)arg1 atColumnUID:(UUIDData_5fbc143e)arg2 rowUID:(UUIDData_5fbc143e)arg3;
- (void)sortCategorizedBodyCellsDescendingInColumn:(unsigned short)arg1 region:(id)arg2;
- (void)sortCategorizedBodyCellsAscendingInColumn:(unsigned short)arg1 region:(id)arg2;
- (void)sortSummaryCellDescendingInColumn:(unsigned short)arg1 atGroupLevels:(id)arg2;
- (void)sortSummaryCellAscendingInColumn:(unsigned short)arg1 atGroupLevels:(id)arg2;
- (BOOL)canSortSummaryCellsInSelection:(id)arg1;
- (BOOL)canSortSummaryCellsInColumn:(unsigned short)arg1;
- (BOOL)canSortSummaryCells;
- (BOOL)canSortSummaryCellsAtGroupLevel:(unsigned char)arg1 withSelection:(id)arg2;
- (BOOL)canSortSummaryCellsAtGroupLevel:(unsigned char)arg1;
- (void)sortSummaryCellInLevel5DescendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel4DescendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel3DescendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel2DescendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel1DescendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel5Descending:(id)arg1;
- (void)sortSummaryCellInLevel4Descending:(id)arg1;
- (void)sortSummaryCellInLevel3Descending:(id)arg1;
- (void)sortSummaryCellInLevel2Descending:(id)arg1;
- (void)sortSummaryCellInLevel1Descending:(id)arg1;
- (void)sortAllSummaryCellsDescending:(id)arg1;
- (void)sortSummaryCellInLevel5AscendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel4AscendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel3AscendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel2AscendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel1AscendingWithSelection:(id)arg1;
- (void)sortSummaryCellInLevel5Ascending:(id)arg1;
- (void)sortSummaryCellInLevel4Ascending:(id)arg1;
- (void)sortSummaryCellInLevel3Ascending:(id)arg1;
- (void)sortSummaryCellInLevel2Ascending:(id)arg1;
- (void)sortSummaryCellInLevel1Ascending:(id)arg1;
- (void)sortAllSummaryCellsAscending:(id)arg1;
- (BOOL)canSortAllSummariesInSelection:(id)arg1;
- (BOOL)canSortAllSummaries;
- (BOOL)canSortGroupsInColumn;
- (BOOL)canSortGroupsAtGroupLevel:(unsigned char)arg1;
- (void)sortGroupsInLevel5Descending:(id)arg1;
- (void)sortGroupsInLevel4Descending:(id)arg1;
- (void)sortGroupsInLevel3Descending:(id)arg1;
- (void)sortGroupsInLevel2Descending:(id)arg1;
- (void)sortGroupsInLevel1Descending:(id)arg1;
- (void)sortGroupsInLevel5Ascending:(id)arg1;
- (void)sortGroupsInLevel4Ascending:(id)arg1;
- (void)sortGroupsInLevel3Ascending:(id)arg1;
- (void)sortGroupsInLevel2Ascending:(id)arg1;
- (void)sortGroupsInLevel1Ascending:(id)arg1;
- (void)sortAllGroupsDescending:(id)arg1;
- (void)sortAllGroupsAscending:(id)arg1;
- (void)p_sortAllGroups:(BOOL)arg1;
- (BOOL)canSortAllGroups;
- (void)p_promoteOrDemoteGroupingAtLevel:(unsigned char)arg1 isPromotion:(BOOL)arg2;
- (void)demoteGroupingColumnWithSelection:(id)arg1;
- (void)demoteGroupingColumn:(id)arg1;
- (BOOL)canDemoteGroupingWithSelection:(id)arg1;
- (BOOL)canDemoteGroupingColumn;
- (void)promoteGroupingColumnWithSelection:(id)arg1;
- (void)promoteGroupingColumn:(id)arg1;
- (BOOL)canPromoteGroupingWithSelection:(id)arg1;
- (BOOL)canPromoteGroupingColumn;
- (BOOL)canExpandAllGroupsAtLevelInCellSelection:(id)arg1;
- (BOOL)canExpandCellSelection:(id)arg1;
- (BOOL)canExpandAllGroupsAtLevel;
- (BOOL)canExpandAllGroups;
- (BOOL)canExpandGroupAndChildren;
- (BOOL)canExpandGroup;
- (BOOL)canCollapseAllGroupsAtLevelInCellSelection:(id)arg1;
- (BOOL)canCollapseCellSelection:(id)arg1;
- (BOOL)canCollapseAllGroupsAtLevel;
- (BOOL)canCollapseAllGroups;
- (BOOL)canCollapseGroupAndChildren;
- (BOOL)canCollapseGroup;
- (void)expandGroupUIDs:(id)arg1 inTable:(id)arg2;
- (void)collapseGroupUIDs:(id)arg1 inTable:(id)arg2;
- (void)expandAllGroupsAtLevelInCellSelection:(id)arg1;
- (void)expandGroupsInCellSelection:(id)arg1;
- (void)expandAllGroupsAtLevel:(id)arg1;
- (void)expandAllGroups:(id)arg1;
- (void)expandGroupAndChildren:(id)arg1;
- (void)expandGroup:(id)arg1;
- (void)collapseAllGroupsAtLevelInCellSelection:(id)arg1;
- (void)collapseGroupsInCellSelection:(id)arg1;
- (void)collapseAllGroupsAtLevel:(id)arg1;
- (void)collapseAllGroups:(id)arg1;
- (void)collapseGroupAndChildren:(id)arg1;
- (void)collapseGroup:(id)arg1;
- (id)extendCellRegion:(id)arg1 forCollapseAndExpandInTable:(id)arg2;
- (id)p_selectionPathByRemovingUnsupportedCellEditingSelectionInPath:(id)arg1;
- (void)addColumnsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 setSelectionOnCommit:(BOOL)arg4 mediator:(id)arg5;
- (void)appendColumnToTable:(id)arg1 setSelectionOnCommit:(BOOL)arg2;
- (void)addColumnsWithObject:(id)arg1 direction:(long long)arg2 setSelectionOnCommit:(BOOL)arg3;
- (void)addColumnsRelativeToSelectionInDirection:(long long)arg1;
- (void)addColumnsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2;
- (void)addColumnsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2 count:(unsigned int)arg3;
- (void)addColumnsOfType:(long long)arg1 relativeToSelection:(id)arg2 inDirection:(long long)arg3 count:(unsigned int)arg4;
- (id)_commandForInsertingColumnsAtIndex:(unsigned short)arg1 count:(unsigned int)arg2 additionDirection:(long long)arg3 columnType:(long long)arg4;
- (unsigned long long)_copyDirectionForAdditionDirection:(long long)arg1 columnType:(long long)arg2 andUpdateColumnIndex:(unsigned short *)arg3;
- (int)_displacementMultiplierForColumnType:(long long)arg1;
- (void)addRowsRelativeToSelectionInDirection:(long long)arg1;
- (void)addRowsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2;
- (void)addRowsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2 count:(unsigned int)arg3;
- (void)addRowsOfType:(long long)arg1 relativeToSelection:(id)arg2 inDirection:(long long)arg3 count:(unsigned int)arg4;
- (id)_commandForInsertingRowsAtIndex:(unsigned int)arg1 count:(unsigned int)arg2 additionDirection:(long long)arg3 rowType:(long long)arg4;
- (unsigned long long)_copyDirectionForAdditionDirection:(long long)arg1 rowType:(long long)arg2 andUpdateRowIndex:(unsigned int *)arg3;
- (int)_displacementMultiplierForRowType:(long long)arg1;
- (void)addRowsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 setSelectionOnCommit:(BOOL)arg4 mediator:(id)arg5;
- (void)appendRowToTable:(id)arg1 afterRowIndex:(unsigned int)arg2 setSelectionOnCommit:(BOOL)arg3;
- (void)addRowsWithObject:(id)arg1 direction:(long long)arg2 setSelectionOnCommit:(BOOL)arg3;
- (BOOL)shouldPreserveGeometryForTable:(id)arg1 modifiedDirection:(long long)arg2;
- (unsigned int)numberOfRowsToAddRelativeToSelectionInDirection:(long long)arg1;
- (long long)cardinalityForAddingDimensionWithEditAction:(SEL)arg1;
- (unsigned int)numberOfRowsToAddRelativeToSelectionInDirection:(long long)arg1 type:(long long *)arg2;
- (BOOL)_canAddRowsRelativeToSelectionInDirection:(long long)arg1 type:(long long *)arg2;
@property(readonly, nonatomic) unsigned int numberOfFooterRowsToAdd;
@property(readonly, nonatomic) unsigned int numberOfBodyRowsToAdd;
@property(readonly, nonatomic) unsigned int numberOfHeaderRowsToAdd;
- (unsigned int)_actualNumberOfRowsToAddWithMaximum:(unsigned int)arg1;
- (unsigned int)desiredNumberOfRowsToAddRelativeToSelection;
- (unsigned int)numberOfColumnsToAddRelativeToSelectionInDirection:(long long)arg1;
- (unsigned int)numberOfColumnsToAddRelativeToSelectionInDirection:(long long)arg1 type:(long long *)arg2;
- (BOOL)_canAddColumnsRelativeToSelectionInDirection:(long long)arg1 type:(long long *)arg2;
@property(readonly, nonatomic) unsigned int numberOfBodyColumnsToAdd;
@property(readonly, nonatomic) unsigned int numberOfHeaderColumnsToAdd;
- (unsigned int)_actualNumberOfColumnsToAddWithMaximum:(unsigned int)arg1;
- (unsigned int)desiredNumberOfColumnsToAddRelativeToSelection;
- (id)_singleTableCellRegion;
- (BOOL)canAddFooterRow;
- (BOOL)canAddFooterRowsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 count:(unsigned int)arg4;
- (BOOL)canAddHeaderRow;
- (BOOL)canAddHeaderRowsToTable:(id)arg1 selection:(id)arg2 count:(unsigned int)arg3;
- (BOOL)canAddHeaderRowsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 count:(unsigned int)arg4;
- (BOOL)canAddBodyRow;
- (BOOL)canAddBodyRowsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 count:(unsigned int)arg4;
- (BOOL)canAddRowsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2;
- (BOOL)canAddRowsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2 count:(unsigned int)arg3;
- (BOOL)canAddRowsOfType:(long long)arg1 toTable:(id)arg2 direction:(long long)arg3 selection:(id)arg4 count:(unsigned int)arg5;
- (unsigned int)_numberOfRowsToAddOfType:(long long)arg1;
- (BOOL)canAddHeaderColumn;
- (BOOL)canAddHeaderColumnsToTable:(id)arg1 selection:(id)arg2 numberOfColumns:(unsigned int)arg3;
- (BOOL)canAddHeaderColumnsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 count:(unsigned int)arg4;
- (BOOL)canAddBodyColumn;
- (BOOL)canAddBodyColumnsToTable:(id)arg1 selection:(id)arg2 numberOfColumns:(unsigned int)arg3;
- (BOOL)canAddBodyColumnsToTable:(id)arg1 direction:(long long)arg2 selection:(id)arg3 count:(unsigned int)arg4;
- (BOOL)canAddColumnsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2;
- (BOOL)canAddColumnsOfType:(long long)arg1 relativeToSelectionInDirection:(long long)arg2 count:(unsigned int)arg3;
- (BOOL)canAddColumnsOfType:(long long)arg1 toTable:(id)arg2 direction:(long long)arg3 selection:(id)arg4 count:(unsigned int)arg5;
- (unsigned int)_numberOfColumnsToAddOfType:(long long)arg1;
- (id)_defaultSelection;
- (void)insertStockFunctionWithDetails:(id)arg1 beginEditing:(BOOL)arg2 cellSelection:(id)arg3;
- (BOOL)p_hasSingleCellSelected;
- (void)insertStockFunctionWithDetails:(id)arg1;
- (id)p_commandForSettingStockFunctionWithDetails:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)insertRangeFunctionWithIndex:(int)arg1;
- (id)p_commandForSettingRangeFunctionWithIndex:(int)arg1 argumentRange:(struct TSCERangeCoordinate)arg2 atCellID:(struct TSUCellCoord)arg3;
- (id)p_commandToEnsureDestinationRange:(struct TSUCellRect)arg1 existsForSourceRange:(struct TSUCellRect)arg2;
- (BOOL)canInsertRangeFunction;
- (BOOL)p_validateRangeFunctionReturningSourceRange:(struct TSUCellRect *)arg1 destinationRange:(struct TSUCellRect *)arg2;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionInColumns:(id)arg1;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionInRows:(id)arg1;
- (struct TSUCellRect)p_destinationRangeForFunctionInsertionSourceRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)p_sourceRangeForFunctionInsertionDestination:(struct TSUCellRect)arg1;
- (BOOL)p_cellRangeIsContainedWithinSummaryRow:(struct TSUCellRect)arg1;
- (BOOL)p_cellRangeIsFunctionInsertionSource:(struct TSUCellRect)arg1;
- (BOOL)p_cellRangeHasData:(struct TSUCellRect)arg1;
- (BOOL)isEditingDrawable:(id)arg1;
@property(readonly, nonatomic) BOOL supportsStickyReferences;
- (id)canvasReferenceController;
- (void)endEditingReference:(id)arg1;
- (void)startEditingReference:(id)arg1;
- (id)editingCanvasReferenceForRange:(id)arg1;
- (id)subregionForReference:(id)arg1 range:(id)arg2;
- (id)resizeReference:(id)arg1 toRange:(id)arg2;
- (id)moveReference:(id)arg1 toRange:(id)arg2;
- (id)references;
- (int)editingType;
- (void)syncReferenceHighlightingState;
@property(readonly, nonatomic) TSTReferenceColorHelper *referenceColorHelper;
- (id)p_referenceColorHelper;
- (void)p_addReferencesToSet:(id)arg1 fromFormulaErrorStorage:(id)arg2;
- (void)p_addReferencesToSet:(id)arg1 fromFormulaCell:(id)arg2 atCellID:(struct TSUCellCoord)arg3;
- (id)p_cellForReferenceHighlightsReturningCellID:(struct TSUCellCoord *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(retain, nonatomic) TSDEditorController *editorController;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAttribution;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEditRecording;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFreehandAnimations;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReplacement;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly) Class superclass;
@property(readonly, nonatomic) BOOL tapOutsideOfTableEndsReferenceEditing;

@end

