//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDMovieCompatibilityChecker-Protocol.h"

@class AVAsset, NSError, NSSet, NSString, TSPData;

@interface TSDMovieCompatibilityChecker : NSObject <TSDMovieCompatibilityChecker>
{
    TSPData *mData;
    AVAsset *mAsset;
    BOOL mMovieIsAnimatedImage;
    // Error parsing type: Ac, name: mCancelled
    long long mCompatibilityLevel;
    NSError *mError;
    CDStruct_79c71658 mCustomMaxPlayableVideoDimensions;
    NSSet *mCustomPlayableVideoCodecTypes;
    int mCustomMaxPlayableVideoPixelsPerFrame;
    BOOL mCanUseHEVC;
}

+ (id)p_defaultPlayableAudioCodecTypes;
+ (id)p_defaultPlayableVideoCodecTypes;
+ (int)maxPlayableVideoPixelsPerFrameForMediaCompatibilityConverterPreset:(long long)arg1;
+ (struct CGSize)maxPlayableVideoDimensionsForMediaCompatibilityConverterPreset:(long long)arg1;
+ (id)videoCodecsForMediaCompatibilityConverterPreset:(long long)arg1;
+ (BOOL)platformSupportsHEVC;
+ (BOOL)isPreset:(long long)arg1 moreCompatibleThanAsset:(id)arg2;
+ (BOOL)assetContainsH264VideoTracks:(id)arg1;
+ (BOOL)assetContainsProResVideoTracksWithAlpha:(id)arg1;
+ (BOOL)assetContainsHEVCVideoTracks:(id)arg1;
+ (BOOL)p_doesAsset:(id)arg1 containTrackWithMediaType:(id)arg2 matchingCodecTypes:(id)arg3;
+ (BOOL)p_doesTrack:(id)arg1 matchCodecTypes:(id)arg2;
@property(readonly, nonatomic) NSError *error; // @synthesize error=mError;
@property(readonly, nonatomic) long long compatibilityLevel; // @synthesize compatibilityLevel=mCompatibilityLevel;
- (void).cxx_destruct;
- (BOOL)p_isAudioTrackPlayableOnAllDevices:(id)arg1;
- (id)p_sampleDescriptionExtensionAtomDataFromVideoFormatDescription:(struct opaqueCMFormatDescription *)arg1 forAtomType:(id)arg2;
- (BOOL)p_isH263VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (BOOL)p_isMPEG4VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (BOOL)p_isH264VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (BOOL)p_isSorenson3VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (BOOL)p_isVideoTrackPlayableOnAllDevices:(id)arg1;
- (BOOL)p_assetHasSupportedFileTypeOnAllDevices;
- (BOOL)p_isLoadedAssetPlayableOnAllDevices;
- (BOOL)p_doesLoadedAssetHaveHEVCTracks;
@property(readonly, nonatomic, getter=isCancelled) BOOL cancelled;
- (void)cancel;
- (void)p_didFinishCheckingCompatibilityUpToLevel:(long long)arg1 actualLevel:(long long)arg2 error:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)checkCustomCompatibilityWithConverterPreset:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)checkCustomCompatibilityWithVideoCodecTypes:(id)arg1 maxPlayableVideoDimensions:(struct CGSize)arg2 maxPlayableVideoPixelsPerFrame:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)p_checkCompatibilityOfAVAssetUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)checkCompatibilityUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 asset:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

