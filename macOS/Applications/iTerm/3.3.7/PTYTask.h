//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class Coprocess, NSFileHandle, NSLock, NSMutableData, NSNumber, NSString;

@interface PTYTask : NSObject
{
    NSString *_tty;
    int _serverPid;
    int _serverChildPid;
    int _childPid;
    int fd;
    int status;
    NSString *path;
    BOOL hasOutput;
    NSLock *writeLock;
    NSMutableData *writeBuffer;
    Coprocess *coprocess_;
    BOOL brokenPipe_;
    NSString *command_;
    int _spinsNeeded;
    BOOL _paused;
    int _socketFd;
    struct {
        CDStruct_79c71658 gridSize;
        struct CGSize viewSize;
    } _desiredSize;
    double _timeOfLastSizeChange;
    BOOL _rateLimitedSetSizeToDesiredSizePending;
    BOOL _haveBumpedProcessCache;
    BOOL _hasMuteCoprocess;
    BOOL _isCoprocessOnly;
    BOOL _coprocessOnlyTaskIsDead;
    unsigned short _pendingHighSurrogate;
    id <PTYTaskDelegate> _delegate;
    NSNumber *_tmuxClientProcessID;
    NSFileHandle *_logHandle;
    NSString *_logPath;
}

@property(copy, nonatomic) NSString *logPath; // @synthesize logPath=_logPath;
@property(retain) NSFileHandle *logHandle; // @synthesize logHandle=_logHandle;
@property(copy, nonatomic) NSNumber *tmuxClientProcessID; // @synthesize tmuxClientProcessID=_tmuxClientProcessID;
@property(nonatomic) unsigned short pendingHighSurrogate; // @synthesize pendingHighSurrogate=_pendingHighSurrogate;
@property BOOL coprocessOnlyTaskIsDead; // @synthesize coprocessOnlyTaskIsDead=_coprocessOnlyTaskIsDead;
@property BOOL isCoprocessOnly; // @synthesize isCoprocessOnly=_isCoprocessOnly;
@property __weak id <PTYTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL hasMuteCoprocess; // @synthesize hasMuteCoprocess=_hasMuteCoprocess;
- (void).cxx_destruct;
- (void)notifierDidSpin;
- (int)getFirstChildOfPid:(int)arg1;
- (void)setTerminalSizeToDesiredSize;
- (void)rateLimitedSetSizeToDesiredSize;
- (void)closeFileDescriptor;
- (void)readTask:(char *)arg1 length:(int)arg2;
@property(readonly) BOOL hasOutput;
@property(readonly) BOOL wantsWrite;
@property(readonly) BOOL wantsRead;
- (void)reallyLaunchWithPath:(id)arg1 arguments:(id)arg2 environment:(id)arg3 gridSize:(CDStruct_1ef3fb1f)arg4 viewSize:(struct CGSize)arg5 isUTF8:(BOOL)arg6 autologPath:(id)arg7 synchronous:(BOOL)arg8 completion:(CDUnknownBlockType)arg9;
- (id)pathToNewUnixDomainSocket;
- (void)didForkParent:(const CDStruct_5c91e3af *)arg1 newEnviron:(char **)arg2 ttyState:(CDStruct_a0b32efc *)arg3 synchronous:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (void)finishLaunchingDirectChild:(CDStruct_a0b32efc *)arg1;
@property(copy) NSString *tty;
- (void)didCompleteHandshakeWithForkState:(CDStruct_5c91e3af)arg1 ttyState:(CDStruct_a0b32efc)arg2 serverConnection:(CDStruct_0b102396)arg3 completion:(CDUnknownBlockType)arg4;
- (void)finishHandshakeWithJobInServer:(const CDStruct_5c91e3af *)arg1 ttyState:(const CDStruct_a0b32efc *)arg2 synchronous:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)freeEnvironment:(char **)arg1;
- (void)failedToForkWithEnvironment:(char **)arg1 program:(id)arg2;
- (void)showFailedToCreateTempSocketError;
- (void)populateArgvArray:(const char **)arg1 fromProgram:(id)arg2 args:(id)arg3 count:(int)arg4;
- (void)setCommand:(id)arg1;
- (id)environmentBySettingShell:(id)arg1;
- (char **)environWithOverrides:(id)arg1;
- (id)mutableEnvironmentDictionary;
- (void)writeToCoprocessOnlyTask:(id)arg1;
- (void)registerAsCoprocessOnlyTask;
- (void)killServerIfRunning;
- (void)attachToServer:(CDStruct_0b102396)arg1;
- (BOOL)tryToAttachToServerWithProcessId:(int)arg1;
- (void)logData:(const char *)arg1 length:(int)arg2;
- (void)stopCoprocess;
- (void)processWrite;
- (void)processRead;
- (void)brokenPipe;
- (void)stopLogging;
- (BOOL)startLoggingToFileWithPath:(id)arg1 shouldAppend:(BOOL)arg2;
- (void)stop;
- (void)setSize:(CDStruct_1ef3fb1f)arg1 viewSize:(struct CGSize)arg2;
- (void)sendSignal:(int)arg1 toServer:(BOOL)arg2;
- (void)writeTask:(id)arg1;
- (id)cachedProcessInfoIfAvailable;
- (void)fetchProcessInfoForCurrentJobWithCompletion:(CDUnknownBlockType)arg1;
- (void)launchWithPath:(id)arg1 arguments:(id)arg2 environment:(id)arg3 gridSize:(CDStruct_1ef3fb1f)arg4 viewSize:(struct CGSize)arg5 isUTF8:(BOOL)arg6 autologPath:(id)arg7 synchronous:(BOOL)arg8 completion:(CDUnknownBlockType)arg9;
- (id)originalCommand;
- (BOOL)hasBrokenPipe;
@property(readonly, nonatomic) BOOL passwordInput;
@property(readonly) BOOL hasCoprocess;
@property(readonly) BOOL writeBufferHasRoom;
@property(retain) Coprocess *coprocess;
@property(readonly) BOOL logging;
@property(readonly) NSString *getWorkingDirectory;
@property(readonly) NSString *path;
@property(readonly) int status;
@property(readonly) int pid;
@property(readonly) int fd;
@property(readonly, nonatomic) int serverPid;
@property(readonly, nonatomic) BOOL pidIsChild;
@property BOOL paused;
- (id)description;
- (void)dealloc;
- (id)init;

@end

