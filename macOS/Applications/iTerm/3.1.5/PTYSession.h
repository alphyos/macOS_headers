//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSResponder.h>

#import "FindViewControllerDelegate-Protocol.h"
#import "PTYTaskDelegate-Protocol.h"
#import "PTYTextViewDelegate-Protocol.h"
#import "PopupDelegate-Protocol.h"
#import "TmuxGatewayDelegate-Protocol.h"
#import "VT100ScreenDelegate-Protocol.h"
#import "iTermAutomaticProfileSwitcherDelegate-Protocol.h"
#import "iTermCoprocessDelegate-Protocol.h"
#import "iTermHotKeyNavigableSession-Protocol.h"
#import "iTermPasteHelperDelegate-Protocol.h"
#import "iTermSessionViewDelegate-Protocol.h"
#import "iTermUpdateCadenceControllerDelegate-Protocol.h"
#import "iTermWeaklyReferenceable-Protocol.h"

@class DVR, DVRDecoder, FindContext, Interval, MovingAverage, NSArray, NSColor, NSDate, NSDictionary, NSImage, NSMutableArray, NSMutableData, NSMutableDictionary, NSMutableSet, NSNumber, NSObject, NSString, NSTimer, PTYTask, PTYTextView, SessionView, TerminalFile, TerminalFileUpload, TextViewWrapper, TmuxController, TmuxGateway, VT100RemoteHost, VT100Screen, VT100Terminal, iTermAutomaticProfileSwitcher, iTermColorMap, iTermCopyModeState, iTermMark, iTermPasteHelper, iTermPromptOnCloseReason, iTermQuickLookController, iTermRestorableSession, iTermThroughputEstimator, iTermUpdateCadenceController;
@protocol OS_dispatch_semaphore, PTYSessionDelegate;

@interface PTYSession : NSResponder <iTermAutomaticProfileSwitcherDelegate, iTermCoprocessDelegate, iTermHotKeyNavigableSession, iTermPasteHelperDelegate, iTermSessionViewDelegate, iTermUpdateCadenceControllerDelegate, FindViewControllerDelegate, iTermWeaklyReferenceable, PopupDelegate, PTYTaskDelegate, PTYTextViewDelegate, TmuxGatewayDelegate, VT100ScreenDelegate>
{
    BOOL _registered;
    NSString *_name;
    NSString *_defaultName;
    NSString *_windowTitle;
    NSMutableArray *_windowTitleStack;
    NSMutableArray *_iconTitleStack;
    VT100Terminal *_terminal;
    NSString *_termVariable;
    BOOL _exited;
    TextViewWrapper *_wrapper;
    NSTimer *_antiIdleTimer;
    NSDictionary *_originalProfile;
    double _lastInput;
    double _lastUpdate;
    NSMutableSet *_overriddenFields;
    DVR *_dvr;
    DVRDecoder *_dvrDecoder;
    PTYSession *_liveSession;
    BOOL _timerRunning;
    NSDate *_creationDate;
    NSString *_pasteboard;
    NSMutableData *_pbtext;
    long long _triggerLineNumber;
    NSMutableArray *_triggers;
    BOOL _focused;
    FindContext *_tailFindContext;
    NSTimer *_tailFindTimer;
    TmuxGateway *_tmuxGateway;
    int _tmuxPane;
    BOOL _tmuxSecureLogging;
    BOOL _tmuxTitleOutOfSync;
    long long _requestAttentionId;
    iTermMark *_lastMark;
    CDStruct_7a47e81c _commandRange;
    long long _lastPromptLine;
    long long _fakePromptDetectedAbsLine;
    double _timeOfLastScheduling;
    NSObject<OS_dispatch_semaphore> *_executionSemaphore;
    double _lastTimeout;
    NSImage *_patternedImage;
    CDStruct_ffe6b7c1 _lastReportedCoord;
    BOOL _reportingMouseDown;
    BOOL _shellIntegrationEverUsed;
    BOOL _cursorGuideSettingHasChanged;
    int _echoProbeState;
    double _lastPartialLineTriggerCheck;
    NSMutableDictionary *_announcements;
    NSMutableArray *_queuedTokens;
    MovingAverage *_bellRate;
    double _lastBell;
    double _ignoreBellUntil;
    double _annoyingBellOfferDeclinedAt;
    BOOL _suppressAllOutput;
    BOOL _shouldRestart;
    BOOL _synthetic;
    double _idleTime;
    iTermThroughputEstimator *_throughputEstimator;
    long long _unicodeVersion;
    NSMutableDictionary *_keyLabels;
    NSMutableArray *_keyLabelsStack;
    NSString *_missingSavedArrangementProfileGUID;
    BOOL _inLiveResize;
    VT100RemoteHost *_currentHost;
    NSMutableDictionary *_keystrokeSubscriptions;
    NSMutableDictionary *_updateSubscriptions;
    NSMutableDictionary *_promptSubscriptions;
    NSMutableDictionary *_locationChangeSubscriptions;
    NSMutableDictionary *_customEscapeSequenceNotifications;
    BOOL _hideAfterTmuxWindowOpens;
    BOOL _useAdaptiveFrameRate;
    long long _adaptiveFrameRateThroughputThreshold;
    double _slowFrameRate;
    unsigned int _autoLogId;
    iTermCopyModeState *_copyModeState;
    long long _statusChangedAbsLine;
    iTermUpdateCadenceController *_cadenceController;
    BOOL _active;
    BOOL _alertOnNextMark;
    BOOL _newOutput;
    BOOL _havePostedIdleNotification;
    BOOL _havePostedNewOutputNotification;
    BOOL _antiIdleCode;
    BOOL _autoClose;
    BOOL _treatAmbiguousWidthAsDoubleWidth;
    BOOL _xtermMouseReporting;
    BOOL _xtermMouseReportingAllowMouseWheel;
    BOOL _backgroundImageTiled;
    BOOL _bell;
    BOOL _isDivorced;
    BOOL _ignoreResizeNotifications;
    BOOL _sessionIsSeniorToTmuxSplitPane;
    BOOL _copyMode;
    BOOL _passwordInput;
    BOOL _isSingleUseSession;
    BOOL _lastDirectoryIsUnsuitableForOldPWD;
    BOOL _isUTF8;
    int _tmuxMode;
    id <PTYSessionDelegate> _delegate;
    NSString *_bookmarkName;
    PTYTask *_shell;
    NSString *_colorFgBgVariable;
    VT100Screen *_screen;
    SessionView *_view;
    PTYTextView *_textview;
    double _antiIdlePeriod;
    NSDictionary *_profile;
    NSString *_backgroundImagePath;
    NSImage *_backgroundImage;
    iTermColorMap *_colorMap;
    NSString *_jobName;
    NSNumber *_activityCounter;
    TmuxController *_tmuxController;
    NSMutableArray *_commands;
    NSMutableArray *_directories;
    NSMutableArray *_hosts;
    NSMutableDictionary *_variables;
    NSString *_guid;
    Interval *_currentMarkOrNotePosition;
    TerminalFile *_download;
    TerminalFileUpload *_upload;
    double _lastOutputIgnoringOutputAfterResizing;
    double _lastResize;
    NSString *_lastDirectory;
    VT100RemoteHost *_lastRemoteHost;
    NSColor *_cursorGuideColor;
    NSString *_badgeFormat;
    NSString *_program;
    NSDictionary *_environment;
    NSDictionary *_substitutions;
    iTermPasteHelper *_pasteHelper;
    NSString *_lastCommand;
    iTermAutomaticProfileSwitcher *_automaticProfileSwitcher;
    struct CGPoint _savedRootRelativeOrigin;
}

+ (BOOL)performKeyBindingAction:(int)arg1 parameter:(id)arg2 event:(id)arg3;
+ (id)tmuxQueue;
+ (id)guidInArrangement:(id)arg1;
+ (id)arrangementFromTmuxParsedLayout:(id)arg1 bookmark:(id)arg2;
+ (id)pasteboardString;
+ (void)selectMenuItem:(id)arg1;
+ (void)selectMenuItemWithSelector:(SEL)arg1;
+ (BOOL)handleShortcutWithoutTerminal:(id)arg1;
+ (BOOL)_recursiveSelectMenuItemWithTitle:(id)arg1 identifier:(id)arg2 inMenu:(id)arg3;
+ (BOOL)_recursiveSelectMenuWithSelector:(SEL)arg1 inMenu:(id)arg2;
+ (id)sessionFromArrangement:(id)arg1 inView:(id)arg2 withDelegate:(id)arg3 forObjectType:(long long)arg4;
+ (id)repairedArrangement:(id)arg1 replacingProfileWithGUID:(id)arg2 withProfile:(id)arg3;
+ (void)drawArrangementPreview:(id)arg1 frame:(struct CGRect)arg2;
+ (void)removeAllRegisteredSessions;
+ (void)registerSessionInArrangement:(id)arg1;
@property(retain, nonatomic) iTermAutomaticProfileSwitcher *automaticProfileSwitcher; // @synthesize automaticProfileSwitcher=_automaticProfileSwitcher;
@property(copy, nonatomic) NSString *lastCommand; // @synthesize lastCommand=_lastCommand;
@property(retain, nonatomic) iTermPasteHelper *pasteHelper; // @synthesize pasteHelper=_pasteHelper;
@property(copy, nonatomic) NSDictionary *substitutions; // @synthesize substitutions=_substitutions;
@property(nonatomic) BOOL isUTF8; // @synthesize isUTF8=_isUTF8;
@property(copy, nonatomic) NSDictionary *environment; // @synthesize environment=_environment;
@property(copy, nonatomic) NSString *program; // @synthesize program=_program;
@property(copy, nonatomic) NSString *badgeFormat; // @synthesize badgeFormat=_badgeFormat;
@property(retain, nonatomic) NSColor *cursorGuideColor; // @synthesize cursorGuideColor=_cursorGuideColor;
@property(retain, nonatomic) VT100RemoteHost *lastRemoteHost; // @synthesize lastRemoteHost=_lastRemoteHost;
@property(nonatomic) BOOL lastDirectoryIsUnsuitableForOldPWD; // @synthesize lastDirectoryIsUnsuitableForOldPWD=_lastDirectoryIsUnsuitableForOldPWD;
@property(copy, nonatomic) NSString *lastDirectory; // @synthesize lastDirectory=_lastDirectory;
@property(nonatomic) double lastResize; // @synthesize lastResize=_lastResize;
@property(nonatomic) double lastOutputIgnoringOutputAfterResizing; // @synthesize lastOutputIgnoringOutputAfterResizing=_lastOutputIgnoringOutputAfterResizing;
@property(retain, nonatomic) TerminalFileUpload *upload; // @synthesize upload=_upload;
@property(retain, nonatomic) TerminalFile *download; // @synthesize download=_download;
@property(retain, nonatomic) Interval *currentMarkOrNotePosition; // @synthesize currentMarkOrNotePosition=_currentMarkOrNotePosition;
@property(nonatomic) BOOL isSingleUseSession; // @synthesize isSingleUseSession=_isSingleUseSession;
@property(readonly, nonatomic) BOOL passwordInput; // @synthesize passwordInput=_passwordInput;
@property(nonatomic) BOOL copyMode; // @synthesize copyMode=_copyMode;
@property(readonly, nonatomic) NSDictionary *keyLabels; // @synthesize keyLabels=_keyLabels;
@property(nonatomic) BOOL sessionIsSeniorToTmuxSplitPane; // @synthesize sessionIsSeniorToTmuxSplitPane=_sessionIsSeniorToTmuxSplitPane;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property int tmuxMode; // @synthesize tmuxMode=_tmuxMode;
@property(retain, nonatomic) NSMutableDictionary *variables; // @synthesize variables=_variables;
@property(readonly, nonatomic) NSMutableArray *hosts; // @synthesize hosts=_hosts;
@property(readonly, nonatomic) NSMutableArray *directories; // @synthesize directories=_directories;
@property(readonly, nonatomic) NSMutableArray *commands; // @synthesize commands=_commands;
@property(nonatomic) struct CGPoint savedRootRelativeOrigin; // @synthesize savedRootRelativeOrigin=_savedRootRelativeOrigin;
@property(readonly, nonatomic) int tmuxPane; // @synthesize tmuxPane=_tmuxPane;
@property(retain, nonatomic) TmuxController *tmuxController; // @synthesize tmuxController=_tmuxController;
@property(retain, nonatomic) NSNumber *activityCounter; // @synthesize activityCounter=_activityCounter;
@property(nonatomic) BOOL ignoreResizeNotifications; // @synthesize ignoreResizeNotifications=_ignoreResizeNotifications;
@property(copy, nonatomic) NSString *jobName; // @synthesize jobName=_jobName;
@property(nonatomic) BOOL isDivorced; // @synthesize isDivorced=_isDivorced;
@property(nonatomic) BOOL bell; // @synthesize bell=_bell;
@property(readonly, nonatomic) BOOL exited; // @synthesize exited=_exited;
@property(retain, nonatomic) iTermColorMap *colorMap; // @synthesize colorMap=_colorMap;
@property(retain, nonatomic) NSImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(copy, nonatomic) NSString *backgroundImagePath; // @synthesize backgroundImagePath=_backgroundImagePath;
@property(nonatomic) BOOL backgroundImageTiled; // @synthesize backgroundImageTiled=_backgroundImageTiled;
@property(readonly, nonatomic) NSDictionary *originalProfile; // @synthesize originalProfile=_originalProfile;
@property(copy, nonatomic) NSDictionary *profile; // @synthesize profile=_profile;
@property(nonatomic) BOOL xtermMouseReportingAllowMouseWheel; // @synthesize xtermMouseReportingAllowMouseWheel=_xtermMouseReportingAllowMouseWheel;
@property(nonatomic) BOOL xtermMouseReporting; // @synthesize xtermMouseReporting=_xtermMouseReporting;
@property(nonatomic) BOOL treatAmbiguousWidthAsDoubleWidth; // @synthesize treatAmbiguousWidthAsDoubleWidth=_treatAmbiguousWidthAsDoubleWidth;
@property(nonatomic) BOOL autoClose; // @synthesize autoClose=_autoClose;
@property(nonatomic) double antiIdlePeriod; // @synthesize antiIdlePeriod=_antiIdlePeriod;
@property(nonatomic) BOOL antiIdleCode; // @synthesize antiIdleCode=_antiIdleCode;
@property(retain, nonatomic) PTYTextView *textview; // @synthesize textview=_textview;
@property(retain, nonatomic) SessionView *view; // @synthesize view=_view;
@property(retain, nonatomic) VT100Screen *screen; // @synthesize screen=_screen;
@property(copy, nonatomic) NSString *colorFgBgVariable; // @synthesize colorFgBgVariable=_colorFgBgVariable;
@property(copy, nonatomic) NSString *termVariable; // @synthesize termVariable=_termVariable;
@property(retain, nonatomic) PTYTask *shell; // @synthesize shell=_shell;
@property(copy, nonatomic) NSString *bookmarkName; // @synthesize bookmarkName=_bookmarkName;
@property(nonatomic) BOOL havePostedNewOutputNotification; // @synthesize havePostedNewOutputNotification=_havePostedNewOutputNotification;
@property(nonatomic) BOOL havePostedIdleNotification; // @synthesize havePostedIdleNotification=_havePostedIdleNotification;
@property(nonatomic) BOOL newOutput; // @synthesize newOutput=_newOutput;
@property(retain, nonatomic) PTYSession *liveSession; // @synthesize liveSession=_liveSession;
@property(readonly, nonatomic) DVRDecoder *dvrDecoder; // @synthesize dvrDecoder=_dvrDecoder;
@property(readonly, nonatomic) DVR *dvr; // @synthesize dvr=_dvr;
@property(nonatomic) BOOL alertOnNextMark; // @synthesize alertOnNextMark=_alertOnNextMark;
@property(nonatomic) BOOL active; // @synthesize active=_active;
@property(nonatomic) id <PTYSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)handleSetProfilePropertyForKey:(id)arg1 value:(id)arg2;
- (id)handleAPINotificationRequest:(id)arg1 connection:(id)arg2;
- (id)handleGetPromptRequest:(id)arg1;
- (id)handleGetBufferRequest:(id)arg1;
- (struct _NSRange)rangeFromLineRange:(id)arg1;
- (id)stringForLine:(struct screen_char_t *)arg1 length:(int)arg2 cppsArray:(id)arg3;
- (CDStruct_cc801f57)updateCadenceControllerState;
- (void)updateCadenceControllerUpdateDisplay:(id)arg1;
- (void)coprocess:(id)arg1 didTerminateWithErrorOutput:(id)arg2;
- (void)sessionViewBecomeFirstResponder;
- (void)sessionViewDoubleClickOnTitleBar;
- (BOOL)sessionHotkeyIsAlreadyActiveInNonkeyWindow;
- (BOOL)sessionHotkeyIsAlreadyFirstResponder;
- (void)sessionHotkeyDidNavigateToSession:(id)arg1;
- (struct CGSize)sessionViewScrollViewWillResize:(struct CGSize)arg1;
- (BOOL)sessionViewShouldUpdateSubviewsFramesAutomatically;
- (double)sessionViewDesiredHeightOfDocumentView;
- (void)sessionViewBeginDrag;
- (void)sessionViewConfirmAndClose;
- (id)sessionViewContextMenu;
- (id)sessionViewTabColor;
- (BOOL)sessionViewTerminalIsFirstResponder;
- (CDStruct_1ef3fb1f)sessionViewGridSize;
- (struct CGSize)sessionViewCellSize;
- (id)sessionViewTitle;
- (BOOL)sessionViewPerformDragOperation:(id)arg1;
- (BOOL)sessionViewShouldSplitSelectionAfterDragUpdate:(id)arg1;
- (unsigned long long)sessionViewDraggingEntered:(id)arg1;
- (void)sessionViewDrawBackgroundImageInView:(id)arg1 viewRect:(struct CGRect)arg2 blendDefaultBackground:(BOOL)arg3;
- (BOOL)sessionViewIsVisible;
- (void)sessionViewDimmingAmountDidChange:(double)arg1;
- (BOOL)sessionViewShouldForwardMouseDownToSuper:(id)arg1;
- (void)sessionViewRightMouseDown:(id)arg1;
- (void)sessionViewMouseMoved:(id)arg1;
- (void)sessionViewMouseExited:(id)arg1;
- (void)sessionViewMouseEntered:(id)arg1;
- (id)automaticProfileSwitcherAllProfiles;
- (void)automaticProfileSwitcherLoadProfile:(id)arg1;
- (id)automaticProfileSwitcherCurrentProfile;
- (id)automaticProfileSwitcherCurrentSavedProfile;
- (BOOL)pasteHelperCanWaitForPrompt;
- (BOOL)pasteHelperIsAtShellPrompt;
- (BOOL)pasteHelperShouldWaitForPrompt;
- (id)pasteHelperViewForIndicator;
- (unsigned long long)pasteHelperEncoding;
- (BOOL)pasteHelperShouldBracket;
- (void)pasteHelperKeyDown:(id)arg1;
- (void)pasteHelperWriteString:(id)arg1;
- (BOOL)popupHandleSelector:(SEL)arg1 string:(id)arg2 currentValue:(id)arg3;
- (void)popupInsertText:(id)arg1;
- (id)popupVT100TextView;
- (id)popupVT100Screen;
- (BOOL)popupWindowIsInFloatingHotkeyWindow;
- (id)popupWindowController;
- (void)popupWillClose:(id)arg1;
- (void)popupIsSearching:(BOOL)arg1;
- (void)queueAnnouncement:(id)arg1 identifier:(id)arg2;
- (void)dismissAnnouncementWithIdentifier:(id)arg1;
- (BOOL)hasAnnouncementWithIdentifier:(id)arg1;
- (id)screenValueOfVariableNamed:(id)arg1;
- (void)screenTerminalAttemptedPasteboardAccess;
- (void)screenPopKeyLabels:(id)arg1;
- (id)popKeyLabels;
- (void)screenPushKeyLabels:(id)arg1;
- (void)screenSetLabel:(id)arg1 forKey:(id)arg2;
- (void)screenSetUnicodeVersion:(long long)arg1;
- (long long)screenUnicodeVersion;
- (BOOL)screenShouldReduceFlicker;
- (void)screenSuggestShellIntegrationUpgrade;
- (void)tryToRunShellIntegrationInstallerWithPromptCheck:(BOOL)arg1;
- (id)shellIntegrationUpgradeUserDefaultsKeyForHost:(id)arg1;
- (BOOL)screenAllowTitleSetting;
- (void)screenLogWorkingDirectoryAtLine:(int)arg1 withDirectory:(id)arg2;
@property(readonly, nonatomic) NSString *currentLocalWorkingDirectory;
- (void)setLastDirectory:(id)arg1 isUnsuitableForOldPWD:(BOOL)arg2;
- (void)trimDirectoriesIfNeeded;
- (void)trimCommandsIfNeeded;
- (void)trimHostsIfNeeded;
- (id)screenProfileName;
- (BOOL)screenShouldIgnoreBellWhichIsAudible:(BOOL)arg1 visible:(BOOL)arg2;
- (void)resumeOutputIfNeeded;
- (BOOL)screenShouldPostTerminalGeneratedAlert;
- (BOOL)screenShouldPlacePromptAtFirstColumn;
- (void)screenCommandDidEndWithRange:(CDStruct_7a47e81c)arg1;
- (void)screenCommandDidChangeWithRange:(CDStruct_7a47e81c)arg1;
@property(readonly, nonatomic) NSArray *autocompleteSuggestionsForCurrentCommand;
@property(readonly, nonatomic) NSString *currentCommand;
- (id)commandInRange:(CDStruct_7a47e81c)arg1;
- (BOOL)screenShouldSendReport;
- (void)screenDidReceiveCustomEscapeSequenceWithParameters:(id)arg1 payload:(id)arg2;
- (void)screenCurrentDirectoryDidChangeTo:(id)arg1;
- (void)tryAutoProfileSwitchWithHostname:(id)arg1 username:(id)arg2 path:(id)arg3;
- (void)offerToTurnOffBracketedPasteOnHostChange;
- (void)offerToTurnOffFocusReportingOnHostChange;
- (void)offerToTurnOffMouseReportingOnHostChange;
@property(readonly, nonatomic) iTermQuickLookController *quickLookController;
@property(readonly, nonatomic) NSArray *commandUses;
- (void)screenCurrentHostDidChange:(id)arg1;
- (void)screenSetTabColorBlueComponentTo:(double)arg1;
- (void)screenSetTabColorGreenComponentTo:(double)arg1;
- (void)screenSetTabColorRedComponentTo:(double)arg1;
@property(copy, nonatomic) NSColor *tabColor;
- (void)screenSetCurrentTabColor:(id)arg1;
- (void)screenSelectColorPresetNamed:(id)arg1;
- (void)screenSetColor:(id)arg1 forKey:(int)arg2;
- (id)screenColorMap;
- (void)screenSetUserVar:(id)arg1;
- (void)screenSetBadgeFormat:(id)arg1;
- (void)screenSetBackgroundImageFile:(id)arg1;
- (void)screenRequestAttention:(unsigned long long)arg1;
- (void)screenRequestUpload:(id)arg1;
- (void)screenFileReceiptEndedUnexpectedly;
- (void)screenDidReceiveBase64FileData:(id)arg1;
- (void)screenDidFinishReceivingInlineFile;
- (void)screenDidFinishReceivingFile;
- (void)screenWillReceiveFileNamed:(id)arg1 ofSize:(int)arg2;
- (void)screenAppendDataToPasteboard:(id)arg1;
- (BOOL)screenIsAppendingToPasteboard;
- (void)screenCopyBufferToPasteboard;
- (void)screenDidEndEditingNote;
- (void)screenDidAddNote:(id)arg1;
- (void)screenSetPasteboard:(id)arg1;
- (void)setProfile:(id)arg1 preservingName:(BOOL)arg2;
- (void)screenSetProfileToProfileNamed:(id)arg1;
- (void)screenActivateWindow;
- (id)markAddedAtCursorOfClass:(Class)arg1;
- (void)screenSaveScrollPosition;
- (id)screenAddMarkOnLine:(int)arg1;
- (void)screenPromptDidEndAtLine:(int)arg1;
- (void)didInferEndOfCommand;
- (void)triggerDidDetectEndOfPromptAt:(CDStruct_dc106ac8)arg1;
- (void)triggerDidDetectStartOfPromptAt:(CDStruct_dc106ac8)arg1;
- (void)screenPromptDidStartAtLine:(int)arg1;
- (id)markAddedAtLine:(int)arg1 ofClass:(Class)arg2;
- (void)reveal;
- (BOOL)screenHasView;
@property(nonatomic) BOOL highlightCursorLine;
- (void)screenSetHighlightCursorLine:(BOOL)arg1;
- (void)screenCursorDidMoveToLine:(int)arg1;
- (void)screenSetCursorVisible:(BOOL)arg1;
- (id)screenCurrentWorkingDirectory;
- (void)screenIncrementBadge;
- (void)screenFlashImage:(id)arg1;
- (void)screenMouseModeDidChange;
- (void)screenClearHighlights;
- (struct CGSize)screenCellSize;
- (id)screenSelection;
- (void)screenRemoveSelection;
- (BOOL)screenShouldSendContentsChangedNotification;
- (void)screenPrintVisibleArea;
- (void)screenPrintString:(id)arg1;
- (void)screenShowBellIndicator;
- (void)screenDidChangeNumberOfScrollbackLines;
- (BOOL)screenShouldTreatAmbiguousCharsAsDoubleWidth;
- (BOOL)screenInTmuxMode;
- (void)screenHandleTmuxInput:(id)arg1;
- (void)screenStartTmuxModeWithDCSIdentifier:(id)arg1;
- (int)screenViewIndex;
- (int)screenTabIndex;
- (int)screenWindowIndex;
- (int)screenNumber;
- (id)screenName;
- (void)screenPopCurrentTitleForWindow:(BOOL)arg1;
- (void)screenPushCurrentTitleForWindow:(BOOL)arg1;
- (struct CGSize)screenSize;
- (struct CGRect)screenWindowFrame;
- (void)screenWriteDataToTask:(id)arg1;
- (BOOL)screenWindowIsMiniaturized;
- (void)screenRaise:(BOOL)arg1;
- (void)screenMiniaturizeWindow:(BOOL)arg1;
- (struct CGPoint)screenWindowTopLeftPixelCoordinate;
- (struct CGRect)screenWindowScreenFrame;
- (void)screenMoveWindowTopLeftPointTo:(struct CGPoint)arg1;
- (BOOL)screenWindowIsFullscreen;
- (void)screenSetName:(id)arg1;
- (id)screenDefaultName;
- (id)screenWindowTitle;
- (void)screenSetWindowTitle:(id)arg1;
- (id)screenNameExcludingJob;
- (BOOL)screenShouldBeginPrinting;
- (void)screenResizeToPixelWidth:(int)arg1 height:(int)arg2;
- (void)screenResizeToWidth:(int)arg1 height:(int)arg2;
- (BOOL)screenShouldInitiateWindowResize;
- (void)screenSetCursorBlinking:(BOOL)arg1;
- (void)screenSetCursorType:(long long)arg1;
- (void)screenDidAppendAsciiDataToCurrentLine:(CDStruct_0a2cd81d *)arg1;
- (void)screenDidAppendStringToCurrentLine:(id)arg1;
- (BOOL)screenShouldSyncTitle;
- (void)screenDidReset;
- (void)screenTriggerableChangeDidOccur;
- (void)screenSizeDidChange;
- (void)screenUpdateDisplay:(BOOL)arg1;
- (void)screenNeedsRedraw;
- (void)screenScheduleRedrawSoon;
- (id)screenSessionGuid;
- (BOOL)_localeIsSupported:(id)arg1;
- (void)printTmuxCommandOutputToScreen:(id)arg1;
- (void)printTmuxMessage:(id)arg1;
- (void)stopTailFind;
- (void)sessionContentsChanged:(id)arg1;
- (void)beginTailFind;
- (void)continueTailFind;
- (void)setDvrFrame;
- (id)_lang;
- (id)_getLocale;
- (void)startDownloadOverSCP:(id)arg1;
- (void)uploadFiles:(id)arg1 toPath:(id)arg2;
- (void)launchCoprocessWithCommand:(id)arg1;
- (void)sendText:(id)arg1;
- (void)sendHexCode:(id)arg1;
- (id)dataForHexCodes:(id)arg1;
- (void)sendEscapeSequence:(id)arg1;
- (void)bury;
- (void)textViewDidSelectRangeForFindOnPage:(CDStruct_7a47e81c)arg1;
- (void)textViewDidSelectPasswordPrompt;
- (BOOL)textViewPasswordInput;
- (CDStruct_1ef3fb1f)textViewCopyModeCursorCoord;
- (BOOL)textViewCopyModeSelecting;
- (BOOL)textViewCopyMode;
- (void)textViewShowHoverURL:(id)arg1;
- (void)textViewBurySession;
- (void)textViewBackgroundColorDidChange;
- (void)textViewDidRefresh;
- (long long)textViewUnicodeVersion;
- (void)textViewResizeFrameIfNeeded;
- (void)textViewThinksUserIsTryingToSendArrowKeysWithScrollWheel:(BOOL)arg1;
- (BOOL)textViewShouldShowMarkIndicators;
- (BOOL)textViewIsZoomedIn;
- (BOOL)textViewSuppressingAllOutput;
- (id)textViewVariables;
- (id)textViewBadgeColor;
- (id)textViewCursorGuideColor;
- (unsigned long long)textViewUnicodeNormalizationForm;
- (BOOL)textViewCanSelectCurrentCommand;
- (BOOL)textViewCanSelectOutputOfLastCommand;
- (CDStruct_7ab14d82)textViewRangeOfCurrentCommand;
- (CDStruct_7ab14d82)textViewRangeOfLastCommandOutput;
- (BOOL)textViewReportMouseEvent:(unsigned long long)arg1 modifiers:(unsigned long long)arg2 button:(int)arg3 coordinate:(CDStruct_1ef3fb1f)arg4 deltaY:(double)arg5;
- (void)textViewDidBecomeFirstResponder;
- (BOOL)textViewTabHasMaximizedPanel;
- (BOOL)textViewIsMaximized;
- (BOOL)textViewSessionIsBroadcastingInput;
- (BOOL)textViewIsActiveSession;
- (BOOL)textViewDelegateHandlesAllKeystrokes;
- (void)textViewCreateTabWithProfileGuid:(id)arg1;
- (void)textViewCreateWindowWithProfileGuid:(id)arg1;
- (BOOL)textViewAmbiguousWidthCharsAreDoubleWidth;
- (BOOL)textViewWindowUsesTransparency;
- (void)textViewPasteFromSessionWithMostRecentSelection:(unsigned int)arg1;
- (void)textViewRestartWithConfirmation;
- (void)textViewCloseWithConfirmation;
- (void)textViewToggleBroadcastingInput;
- (void)textViewEditSession;
- (void)textViewSelectPreviousPane;
- (void)textViewSelectNextPane;
- (void)textViewSelectPreviousWindow;
- (void)textViewSelectNextWindow;
- (void)textViewSelectPreviousTab;
- (void)textViewSelectNextTab;
- (void)textViewSplitVertically:(BOOL)arg1 withProfileGuid:(id)arg2;
- (void)textViewWillNeedUpdateForBlink;
- (BOOL)textViewShouldDrawFilledInCursor;
- (BOOL)textViewShouldPlaceCursorAt:(CDStruct_1ef3fb1f)arg1 verticalOk:(char *)arg2;
- (id)textViewCurrentLocation;
- (id)textViewCurrentWorkingDirectory;
- (unsigned long long)textViewEncoding;
- (void)textViewSwapPane;
- (void)textViewMovePane;
- (void)textViewBeginDrag;
- (void)textViewDidFindDirtyRects;
- (void)textViewInvalidateRestorableState;
- (void)textViewPostTabContentsChangedNotification;
- (id)processedBackgroundColor;
- (void)textViewDrawBackgroundImageInView:(id)arg1 viewRect:(struct CGRect)arg2 blendDefaultBackground:(BOOL)arg3;
- (id)patternedImage;
- (BOOL)textViewHasBackgroundImage;
- (void)textViewFontDidChange;
- (void)pasteOptions:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteString:(id)arg1 flags:(unsigned int)arg2;
- (void)menuForEvent:(id)arg1 menu:(id)arg2;
- (BOOL)applicationKeypadAllowed;
- (int)rightOptionKey;
- (int)optionKey;
- (BOOL)hasActionableKeyMappingForEvent:(id)arg1;
- (id)backspaceData;
- (void)keyDown:(id)arg1;
- (void)performKeyBindingAction:(int)arg1 parameter:(id)arg2 event:(id)arg3;
- (BOOL)textViewShouldAcceptKeyDownEvent:(id)arg1;
- (void)queueKeyDown:(id)arg1;
- (BOOL)isPasting;
- (id)encodingName;
- (long long)tmuxNumberOfLinesOfScrollbackHistory;
- (CDStruct_1ef3fb1f)tmuxClientSize;
- (void)tmuxSession:(int)arg1 renamed:(id)arg2;
- (void)tmuxWindowsDidChange;
- (void)tmuxSessionsChanged;
- (void)tmuxSessionChanged:(id)arg1 sessionId:(int)arg2;
- (void)tmuxReadTask:(id)arg1;
- (void)tmuxWriteString:(id)arg1;
- (void)tmuxSetSecureLogging:(BOOL)arg1;
- (void)tmuxCannotSendCharactersInSupplementaryPlanes:(id)arg1 windowPane:(int)arg2;
- (void)tmuxHostDisconnected:(id)arg1;
- (id)tmuxGatewayWindow;
- (void)tmuxPrintLine:(id)arg1;
- (void)tmuxInitialCommandDidFailWithError:(id)arg1;
- (void)tmuxInitialCommandDidCompleteSuccessfully;
- (void)tmuxWindowRenamedWithId:(int)arg1 to:(id)arg2;
- (void)tmuxWindowClosedWithId:(int)arg1;
- (void)tmuxWindowAddedWithId:(int)arg1;
- (void)tmuxUpdateLayoutForWindow:(int)arg1 layout:(id)arg2 zoomed:(id)arg3;
- (void)tmuxDidOpenInitialWindows;
@property(retain, nonatomic) VT100RemoteHost *currentHost;
- (void)scrollToMark:(id)arg1;
- (void)nextMarkOrNote;
- (void)previousMarkOrNote;
- (void)highlightMarkOrNote:(id)arg1;
- (void)textViewToggleAnnotations;
- (void)addNoteAtCursor;
- (CDStruct_7a47e81c)smartSelectionRangeAt:(CDStruct_1ef3fb1f)arg1;
- (BOOL)isCompatibleWith:(id)arg1;
- (void)resizeFromArrangement:(id)arg1;
- (void)toggleTmuxZoom;
@property(readonly, nonatomic) PTYSession *tmuxGatewaySession;
- (void)setTmuxPane:(int)arg1;
- (void)tmuxDetach;
@property(readonly, nonatomic) BOOL isTmuxGateway;
@property(readonly, nonatomic) BOOL isTmuxClient;
- (void)startTmuxMode:(id)arg1;
- (id)preferredTmuxClientName;
- (void)hideSession;
- (BOOL)wantsContentChangedNotification;
- (void)setFocused:(BOOL)arg1;
- (void)launchSilentCoprocessWithCommand:(id)arg1;
- (void)launchCoprocessWithCommand:(id)arg1 mute:(BOOL)arg2;
@property(readonly, nonatomic) BOOL hasCoprocess;
- (void)stopCoprocess;
- (void)setPasteboard:(id)arg1;
@property(readonly, nonatomic) NSImage *dragImage;
- (void)enterPasswordNoProbe:(id)arg1;
- (void)enterPasswordIfEchoProbeOk:(id)arg1;
- (void)enterPassword:(id)arg1;
- (void)addCapturedOutput:(id)arg1;
- (void)askAboutAbortingUpload;
- (void)askAboutAbortingDownload;
- (id)snapshot;
- (void)findViewControllerClearSearch;
- (void)findViewControllerMakeDocumentFirstResponder;
- (void)takeFocus;
- (void)copySelection;
- (id)unpaddedSelectedText;
- (void)findString:(id)arg1 forwardDirection:(BOOL)arg2 mode:(unsigned long long)arg3 withOffset:(int)arg4;
- (BOOL)canSearch;
- (id)selectedText;
- (void)growSelectionRight;
- (BOOL)growSelectionLeft;
- (BOOL)continueFind:(double *)arg1;
- (BOOL)findInProgress;
- (void)resetFindCursor;
- (void)searchPrevious;
- (void)searchNext;
- (void)showFindPanel;
- (void)findWithSelection;
- (void)useStringForFind:(id)arg1;
@property(readonly, nonatomic) BOOL hasSavedScrollPosition;
- (void)jumpToSavedScrollPosition;
- (id)divorceAddressBookEntryFromPreferences;
- (void)remarry;
- (void)setSessionSpecificProfileValues:(id)arg1;
- (void)changeFontSizeDirection:(int)arg1;
- (void)notifyTmuxFontChange;
- (void)synchronizeTmuxFonts:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)savedArrangementWasRepaired:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)apiServerUnsubscribe:(id)arg1;
- (void)sessionHotkeyDidChange:(id)arg1;
- (void)profileSessionNameDidEndEditing:(id)arg1;
- (void)terminalFileShouldStop:(id)arg1;
- (void)setFont:(id)arg1 nonAsciiFont:(id)arg2 horizontalSpacing:(float)arg3 verticalSpacing:(float)arg4;
- (id)fontWithRelativeSize:(int)arg1 from:(id)arg2;
@property(readonly, nonatomic) int columns;
@property(readonly, nonatomic) int rows;
@property(readonly, nonatomic) BOOL canInstantReplayNext;
@property(readonly, nonatomic) BOOL canInstantReplayPrev;
- (void)doAntiIdle;
- (void)refresh;
- (void)updateTitles;
- (void)updateDisplay;
- (void)updateScroll;
- (id)arrangementWithContents:(BOOL)arg1;
@property(readonly, nonatomic) NSDictionary *arrangement;
- (void)setScrollViewDocumentView;
- (BOOL)shouldSendEscPrefixForModifier:(unsigned int)arg1;
- (void)clearScrollbackBuffer;
- (void)clearBuffer;
- (void)logStop;
- (void)logStart;
@property(readonly, nonatomic) BOOL logging;
- (void)setUnicodeVersion:(long long)arg1;
@property(nonatomic) BOOL useItalicFont;
@property(nonatomic) BOOL nonAsciiLigatures;
@property(nonatomic) BOOL asciiLigatures;
@property(nonatomic) long long thinStrokes;
@property(nonatomic) BOOL useBoldFont;
@property(nonatomic) BOOL antiIdle;
- (void)setTransparencyAffectsOnlyDefaultBackgroundColor:(BOOL)arg1;
@property(nonatomic) float blend;
@property(nonatomic) float transparency;
- (void)useTransparencyDidChange;
- (BOOL)viewShouldWantLayer;
- (void)setMinimumContrast:(float)arg1;
- (void)setSmartCursorColor:(BOOL)arg1;
@property(readonly, nonatomic) NSString *tty;
@property(nonatomic) unsigned long long encoding;
@property(readonly, nonatomic) VT100Terminal *terminal;
- (void)popIconTitle;
- (void)pushIconTitle;
- (void)popWindowTitle;
- (void)pushWindowTitle;
@property(copy, nonatomic) NSString *windowTitle;
@property(copy, nonatomic) NSString *name;
@property(readonly, nonatomic) NSString *rawName;
@property(copy, nonatomic) NSString *defaultName;
@property(readonly, nonatomic) NSString *joblessDefaultName;
- (id)formattedName:(id)arg1;
@property(readonly, nonatomic) BOOL isIdle;
@property(readonly, nonatomic) BOOL isProcessing;
@property(readonly, nonatomic) BOOL isAtShellPrompt;
@property(readonly, nonatomic) NSString *badgeLabel;
- (void)setPreferencesFromAddressBookEntry:(id)arg1;
- (BOOL)reloadProfile;
- (void)sessionProfileDidChange;
- (void)sanityCheck;
- (void)sharedProfileDidChange;
- (void)setColorsFromPresetNamed:(id)arg1;
- (id)tabColorInProfile:(id)arg1;
- (void)loadInitialColorTable;
- (id)ansiColorsMatchingForeground:(id)arg1 andBackground:(id)arg2 inBookmark:(id)arg3;
- (void)openSelection;
@property(readonly, nonatomic) BOOL hasSelection;
@property(readonly, nonatomic) BOOL shouldPostGrowlNotification;
- (BOOL)textViewHasCoprocess;
- (id)textViewVerticalScroller;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)pasteString:(id)arg1;
- (id)dataByRemovingControlCodes:(id)arg1;
- (void)insertText:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)handleEvent:(id)arg1;
- (BOOL)willHandleEvent:(id)arg1;
- (void)_setKeepOutdatedKeyMapping;
- (void)_removeOutdatedKeyMapping;
- (BOOL)_askAboutOutdatedKeyMappings;
- (BOOL)hasTextSendingKeyMappingForEvent:(id)arg1;
- (int)_keyBindingActionForEvent:(id)arg1;
- (BOOL)setScrollBarVisible:(BOOL)arg1 style:(long long)arg2;
- (struct CGSize)idealScrollViewSizeWithStyle:(long long)arg1;
- (void)replaceTerminatedShellWithNewInstance;
- (BOOL)isRestartable;
- (void)queueRestartSessionAnnouncement;
- (void)brokenPipe;
- (void)taskDiedImmediately;
- (void)threadedTaskBrokenPipe;
- (void)writeForCoprocessOnlyTask:(id)arg1;
- (void)appendBrokenPipeMessage:(id)arg1;
- (void)clearTriggerLine;
- (void)appendStringToTriggerLine:(id)arg1;
- (void)checkTriggersOnPartialLine:(BOOL)arg1 stringLine:(id)arg2 lineNumber:(long long)arg3;
- (void)checkPartialLineTriggers;
- (void)checkTriggers;
- (void)finishedHandlingNewOutputOfLength:(int)arg1;
- (BOOL)haveResizedRecently;
- (void)executeTokens:(const CDStruct_88c1e25a *)arg1 bytesHandled:(int)arg2;
- (BOOL)shouldExecuteToken;
- (void)synchronousReadTask:(id)arg1;
- (void)threadedReadTask:(char *)arg1 length:(int)arg2;
- (void)updateEchoProbeStateWithBuffer:(char *)arg1 length:(int)arg2;
- (void)taskWasDeregistered;
- (void)writeTask:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3;
- (void)writeTask:(id)arg1;
- (void)writeStringWithLatin1Encoding:(id)arg1;
- (void)writeLatin1EncodedData:(id)arg1 broadcastAllowed:(BOOL)arg2;
- (void)handleKeypressInTmuxGateway:(unsigned short)arg1;
- (void)handleKeyPressInCopyMode:(id)arg1;
- (void)writeTaskNoBroadcast:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3;
- (void)writeTaskNoBroadcast:(id)arg1;
- (void)writeTaskImpl:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3 canBroadcast:(BOOL)arg4;
- (BOOL)revive;
- (void)disinter;
- (void)jumpToLocationWhereCurrentStatusChanged;
- (void)hardStop;
- (void)makeTerminationUndoable;
- (void)terminate;
- (void)softTerminate;
- (void)restartSession;
@property(readonly, nonatomic) iTermRestorableSession *restorableSession;
- (void)_maybeWarnAboutShortLivedSessions;
- (void)selectPaneBelowInCurrentTerminal;
- (void)selectPaneAboveInCurrentTerminal;
- (void)selectPaneRightInCurrentTerminal;
- (void)selectPaneLeftInCurrentTerminal;
- (void)launchProfileInCurrentTerminal:(id)arg1 withURL:(id)arg2;
- (void)startProgram:(id)arg1 environment:(id)arg2 isUTF8:(BOOL)arg3 substitutions:(id)arg4;
- (id)sessionId;
- (BOOL)shouldSetCtype;
- (id)autoLogFilename;
@property(readonly, nonatomic) iTermPromptOnCloseReason *promptOnCloseReason;
@property(readonly, nonatomic) NSArray *childJobNames;
- (int)overUnder:(int)arg1 inVerticalDimension:(BOOL)arg2;
- (void)setSplitSelectionMode:(long long)arg1 move:(BOOL)arg2;
- (void)setSize:(CDStruct_1ef3fb1f)arg1;
- (void)runCommandWithOldCwd:(id)arg1 forObjectType:(long long)arg2 forceUseOldCWD:(BOOL)arg3 substitutions:(id)arg4;
- (void)attachToServer:(CDStruct_0b102396)arg1;
- (BOOL)tryToAttachToServerWithProcessId:(int)arg1;
- (BOOL)setScreenSize:(struct CGRect)arg1 parent:(id)arg2;
- (void)showOrphanAnnouncement;
- (void)setContentsFromLineBufferDictionary:(id)arg1 includeRestorationBanner:(BOOL)arg2 reattached:(BOOL)arg3;
- (id)announcementForMissingProfileInArrangement:(id)arg1;
- (void)setSizeFromArrangement:(id)arg1;
- (void)coprocessChanged;
- (void)updateVariables;
- (void)educateAboutCopyMode;
- (void)appendLinesInRange:(struct _NSRange)arg1 fromSession:(id)arg2;
- (long long)irSeekToAtLeast:(long long)arg1;
- (void)irAdvance:(int)arg1;
- (void)setDvr:(id)arg1 liveSession:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)iterm_dealloc;
- (void)dealloc;
- (id)weakSelf;
- (id)initSynthetic:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
@property(copy, nonatomic) NSString *colorPresetName;
@property(readonly, nonatomic) NSString *profileName;
- (void)setRows:(int)arg1;
- (void)setColumns:(int)arg1;
@property(retain, nonatomic) NSColor *ansiBrightWhiteColor;
@property(retain, nonatomic) NSColor *ansiBrightCyanColor;
@property(retain, nonatomic) NSColor *ansiBrightMagentaColor;
@property(retain, nonatomic) NSColor *ansiBrightBlueColor;
@property(retain, nonatomic) NSColor *ansiBrightYellowColor;
@property(retain, nonatomic) NSColor *ansiBrightGreenColor;
@property(retain, nonatomic) NSColor *ansiBrightRedColor;
@property(retain, nonatomic) NSColor *ansiBrightBlackColor;
@property(retain, nonatomic) NSColor *ansiWhiteColor;
@property(retain, nonatomic) NSColor *ansiCyanColor;
@property(retain, nonatomic) NSColor *ansiMagentaColor;
@property(retain, nonatomic) NSColor *ansiBlueColor;
@property(retain, nonatomic) NSColor *ansiYellowColor;
@property(retain, nonatomic) NSColor *ansiGreenColor;
@property(retain, nonatomic) NSColor *ansiRedColor;
@property(retain, nonatomic) NSColor *ansiBlackColor;
- (void)setAnswerBackString:(id)arg1;
- (id)answerBackString;
- (id)text;
@property(retain, nonatomic) NSColor *selectionColor;
@property(retain, nonatomic) NSColor *selectedTextColor;
- (void)setUnderlineColor:(id)arg1;
- (id)underlineColor;
@property(retain, nonatomic) NSColor *foregroundColor;
@property(retain, nonatomic) NSColor *cursorTextColor;
@property(retain, nonatomic) NSColor *cursorColor;
@property(retain, nonatomic) NSColor *boldColor;
@property(retain, nonatomic) NSColor *backgroundColor;
- (void)handleCloseCommand:(id)arg1;
- (void)handleTerminateScriptCommand:(id)arg1;
- (id)handleSplitHorizontallyWithSameProfile:(id)arg1;
- (id)handleSplitHorizontallyWithDefaultProfile:(id)arg1;
- (id)handleSplitHorizontally:(id)arg1;
- (id)handleSplitVerticallyWithSameProfile:(id)arg1;
- (id)handleSplitVerticallyWithDefaultProfile:(id)arg1;
- (id)handleSplitVertically:(id)arg1;
- (id)splitVertically:(BOOL)arg1 withProfile:(id)arg2 command:(id)arg3;
- (id)activateSessionAndTab;
- (id)handleSetVariableNamedCommand:(id)arg1;
- (id)handleVariableNamedCommand:(id)arg1;
- (void)handleWriteScriptCommand:(id)arg1;
- (void)handleClearScriptCommand:(id)arg1;
- (void)handleSelectCommand:(id)arg1;
- (void)handleExecScriptCommand:(id)arg1;
- (id)objectSpecifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

