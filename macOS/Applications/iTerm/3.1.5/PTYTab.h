//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "NSSplitViewDelegate-Protocol.h"
#import "PSMTabBarControlRepresentedObjectIdentifierProtocol-Protocol.h"
#import "PTYSessionDelegate-Protocol.h"
#import "PTYSplitViewDelegate-Protocol.h"

@class FakeWindow, NSArray, NSDictionary, NSImage, NSMapTable, NSMutableArray, NSMutableDictionary, NSSplitView, NSString, NSTabViewItem, NSView, NSWindowController, PTYSession, SolidColorView, TmuxController;
@protocol PTYTabDelegate, WindowControllerInterface, iTermWindowController;

@interface PTYTab : NSObject <NSCopying, NSSplitViewDelegate, PTYSessionDelegate, PTYSplitViewDelegate, PSMTabBarControlRepresentedObjectIdentifierProtocol>
{
    int _activityCounter;
    int _uniqueId;
    int _tabNumberForItermSessionId;
    NSTabViewItem *tabViewItem_;
    NSWindowController<iTermWindowController> *realParentWindow_;
    FakeWindow *fakeParentWindow_;
    int objectCount_;
    NSImage *icon_;
    BOOL isProcessing_;
    BOOL newOutput_;
    NSView *tabView_;
    SolidColorView *flexibleView_;
    NSSplitView *root_;
    BOOL isMaximized_;
    NSMutableDictionary *idMap_;
    NSDictionary *savedArrangement_;
    struct CGSize savedSize_;
    BOOL reportIdeal_;
    int tmuxWindow_;
    int tmuxOriginatedResizeInProgress_;
    TmuxController *tmuxController_;
    NSMutableDictionary *parseTree_;
    NSMutableArray *hiddenLiveViews_;
    NSString *tmuxWindowName_;
    BOOL broadcasting_;
    BOOL _isDraggingSplitInTmuxTab;
    id <WindowControllerInterface> parentWindow_;
    PTYSession *activeSession_;
    PTYSession *lockedSession_;
    id <PTYTabDelegate> _delegate;
    unsigned long long _state;
    NSMapTable *_viewToSessionMap;
}

+ (id)openTabWithTmuxLayout:(id)arg1 inTerminal:(id)arg2 tmuxWindow:(int)arg3 tmuxController:(id)arg4;
+ (id)parseTreeWithInjectedRootSplit:(id)arg1;
+ (void)setSizesInTmuxParseTree:(id)arg1 inTerminal:(id)arg2 zoomed:(BOOL)arg3 profile:(id)arg4;
+ (id)arrangementForDecoratedTmuxParseTree:(id)arg1 bookmark:(id)arg2 activeWindowPane:(int)arg3;
+ (id)_recursiveArrangementForDecoratedTmuxParseTree:(id)arg1 bookmark:(id)arg2 origin:(struct CGPoint)arg3 activeWindowPane:(int)arg4;
+ (struct CGSize)_recursiveSetSizesInTmuxParseTree:(id)arg1 showTitles:(BOOL)arg2 bookmark:(id)arg3 inTerminal:(id)arg4;
+ (id)sessionMapWithArrangement:(id)arg1 sessions:(id)arg2;
+ (BOOL)_recursiveBuildSessionMap:(id)arg1 withArrangement:(id)arg2 sessions:(id)arg3;
+ (id)openTabWithArrangement:(id)arg1 inTerminal:(id)arg2 hasFlexibleView:(BOOL)arg3 viewMap:(id)arg4 sessionMap:(id)arg5;
+ (id)repairedArrangement:(id)arg1 replacingProfileWithGUID:(id)arg2 withProfile:(id)arg3;
+ (id)tabWithArrangement:(id)arg1 inTerminal:(id)arg2 hasFlexibleView:(BOOL)arg3 viewMap:(id)arg4 sessionMap:(id)arg5 tmuxController:(id)arg6;
+ (void)drawArrangementPreview:(id)arg1 frame:(struct CGRect)arg2;
+ (id)recursiveRepairedArrangementNode:(id)arg1 replacingProfileWithGUID:(id)arg2 withProfile:(id)arg3;
+ (id)_recusiveRestoreSplitters:(id)arg1 fromIdMap:(id)arg2 sessionMap:(id)arg3 revivedSessions:(id)arg4;
+ (void)_recursiveDrawArrangementPreview:(id)arg1 frame:(struct CGRect)arg2;
+ (struct CGSize)_sessionSizeWithCellSize:(struct CGSize)arg1 dimensions:(struct CGSize)arg2 showTitles:(BOOL)arg3 inTerminal:(id)arg4;
+ (void)_recursiveSetDelegateIn:(id)arg1 to:(id)arg2;
+ (id)colorForHtmlName:(id)arg1;
+ (id)htmlNameForColor:(id)arg1;
+ (struct CGRect)dictToFrame:(id)arg1;
+ (id)frameToDict:(struct CGRect)arg1;
+ (struct CGSize)cellSizeForBookmark:(id)arg1;
+ (void)registerSessionsInArrangement:(id)arg1;
+ (void)_recursiveRegisterSessionsInArrangement:(id)arg1;
+ (id)deadImage;
+ (id)idleImage;
+ (id)imageForNewOutput;
+ (id)bellImage;
@property(retain, nonatomic) NSMapTable *viewToSessionMap; // @synthesize viewToSessionMap=_viewToSessionMap;
@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) id <PTYTabDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int uniqueId; // @synthesize uniqueId=_uniqueId;
@property(nonatomic) PTYSession *lockedSession; // @synthesize lockedSession=lockedSession_;
@property(retain, nonatomic) NSTabViewItem *tabViewItem; // @synthesize tabViewItem=tabViewItem_;
@property(readonly, nonatomic) BOOL isMaximized; // @synthesize isMaximized=isMaximized_;
@property(nonatomic, getter=isBroadcasting) BOOL broadcasting; // @synthesize broadcasting=broadcasting_;
@property(nonatomic) PTYSession *activeSession; // @synthesize activeSession=activeSession_;
@property(nonatomic) id <WindowControllerInterface> parentWindow; // @synthesize parentWindow=parentWindow_;
- (CDStruct_1ef3fb1f)sessionTmuxSizeWithProfile:(id)arg1;
- (void)sessionRemoveSession:(id)arg1;
- (void)sessionCurrentHostDidChange:(id)arg1;
- (void)sessionCurrentDirectoryDidChange:(id)arg1;
- (void)sessionKeyLabelsDidChange:(id)arg1;
- (void)sessionBackgroundColorDidChange:(id)arg1;
- (unsigned long long)sessionPaneNumber:(id)arg1;
- (void)sessionDoubleClickOnTitleBar;
- (BOOL)sessionBelongsToTabWhoseSplitsAreBeingDragged;
- (BOOL)session:(id)arg1 performDragOperation:(id)arg2;
- (BOOL)session:(id)arg1 shouldAllowDrag:(id)arg2;
- (void)resetLabelAttributesIfAppropriate;
- (void)setLabelAttributesForActiveTab:(BOOL)arg1;
- (void)setLabelAttributesForIdleTab;
- (BOOL)_windowResizedRecently;
- (void)setLabelAttributesForDeadSession;
- (BOOL)sessionIsActiveInSelectedTab:(id)arg1;
- (BOOL)sessionIsActiveInTab:(id)arg1;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)_recursiveStepSize:(id)arg1 wantWidth:(BOOL)arg2;
- (void)_splitViewDidResizeSubviews:(id)arg1;
- (void)splitViewDidResizeSubviews:(id)arg1;
- (void)splitView:(id)arg1 resizeSubviewsWithOldSize:(struct CGSize)arg2;
- (void)_redistributeQuantizationError:(double)arg1 currentSumOfSizes:(double)arg2 sizes:(id)arg3 minSizes:(id)arg4 maxSizes:(id)arg5;
- (void)_recursiveLockedSize:(id)arg1 ancestors:(id)arg2 minSize:(struct CGSize *)arg3 maxSize:(struct CGSize *)arg4;
- (id)_ancestorsOfLockedSession;
- (void)_resizeSubviewsOfSplitViewWithLockedChild:(id)arg1 oldSize:(struct CGSize)arg2;
- (void)_resizeSubviewsOfSplitViewWithLockedGrandchild:(id)arg1;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)splitView:(id)arg1 draggingDidEndOfSplit:(int)arg2 pixels:(struct CGSize)arg3;
- (void)splitView:(id)arg1 draggingWillBeginOfSplit:(int)arg2;
- (void)swapSession:(id)arg1 withSession:(id)arg2;
- (BOOL)canMoveView:(id)arg1 inSplit:(id)arg2 horizontally:(BOOL)arg3 by:(int)arg4;
- (void)moveView:(id)arg1 inSplit:(id)arg2 horizontally:(BOOL)arg3 by:(int)arg4;
- (CDUnknownBlockType)blockToMoveView:(id)arg1 inSplit:(id)arg2 horizontally:(BOOL)arg3 by:(int)arg4;
- (void)moveCurrentSessionDividerBy:(int)arg1 horizontally:(BOOL)arg2;
- (BOOL)canMoveCurrentSessionDividerBy:(int)arg1 horizontally:(BOOL)arg2;
- (id)promptOnCloseReason;
- (void)unmaximize;
- (void)resizeTmuxSessionView:(id)arg1 toGridSize:(CDStruct_1ef3fb1f)arg2;
- (void)maximize;
- (BOOL)hasMaximizedPane;
- (BOOL)layoutIsTooLarge;
- (void)activateJuniorSession;
- (void)setTmuxLayout:(id)arg1 tmuxController:(id)arg2 zoomed:(id)arg3;
- (void)replaceViewHierarchyWithParseTree:(id)arg1;
- (id)tmuxController;
- (void)setRoot:(id)arg1;
- (void)resizeViewsInViewHierarchy:(id)arg1 forNewLayout:(id)arg2;
- (void)_recursiveResizeViewsInViewHierarchy:(id)arg1 forArrangement:(id)arg2;
- (BOOL)parseTree:(id)arg1 matchesViewHierarchy:(id)arg2;
- (BOOL)_recursiveParseTree:(id)arg1 matchesViewHierarchy:(id)arg2;
@property(readonly, nonatomic) struct CGSize tmuxSize;
- (int)tmuxSizeForHeight:(BOOL)arg1;
- (void)addSplitter:(id)arg1 toIntervalMap:(id)arg2 forHeight:(BOOL)arg3 origin:(struct CGPoint)arg4;
- (void)_recursiveAddSplittersUnderNode:(id)arg1 forHeight:(BOOL)arg2 toArray:(id)arg3 andSaveSessionFramesIn:(id)arg4 origin:(struct CGPoint)arg5;
- (void)reloadTmuxLayout;
- (void)setTmuxFont:(id)arg1 nonAsciiFont:(id)arg2 hSpacing:(double)arg3 vSpacing:(double)arg4;
@property(copy, nonatomic) NSString *tmuxWindowName;
- (int)tmuxWindow;
@property(readonly, getter=isTmuxTab) BOOL tmuxTab;
- (id)arrangementWithContents:(BOOL)arg1;
- (id)arrangement;
- (id)arrangementConstructingIdMap:(BOOL)arg1 contents:(BOOL)arg2;
- (id)arrangementNodeWithContentsFromArrangementNode:(id)arg1;
- (void)didAddToTerminal:(id)arg1 withArrangement:(id)arg2;
- (void)notifyWindowChanged;
- (void)enableFlexibleView;
- (void)replaceWithContentsOfTab:(id)arg1;
- (id)splitters;
- (id)_recursiveSplittersFromNode:(id)arg1 splitters:(id)arg2;
- (id)_recursiveRestoreSessions:(id)arg1 atNode:(id)arg2 inTab:(id)arg3 forObjectType:(long long)arg4;
- (id)_recursiveArrangement:(id)arg1 idMap:(id)arg2 isMaximized:(BOOL)arg3 contents:(BOOL)arg4;
- (void)recheckBlur;
- (double)blurRadius;
- (BOOL)blur;
- (struct CGSize)_minSizeOfView:(id)arg1;
- (double)_positionOfDivider:(int)arg1 inSplitView:(id)arg2;
- (BOOL)hasMultipleSessions;
- (BOOL)resizeSession:(id)arg1 toSize:(CDStruct_1ef3fb1f)arg2;
- (BOOL)fitSessionToCurrentViewSize:(id)arg1;
- (struct CGSize)sessionSizeForViewSize:(id)arg1;
- (void)recompact;
- (struct CGSize)_recursiveRecompact:(id)arg1;
- (id)image:(BOOL)arg1;
- (void)_recursiveDrawSplit:(id)arg1 inImage:(id)arg2 atOrigin:(struct CGPoint)arg3;
- (void)_drawSession:(id)arg1 inImage:(id)arg2 atOrigin:(struct CGPoint)arg3;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)minSize;
- (struct CGSize)currentSize;
- (void)setReportIdealSizeAsCurrent:(BOOL)arg1;
- (struct CGSize)size;
- (struct CGSize)_recursiveMinSize:(id)arg1;
- (struct CGSize)_recursiveSize:(id)arg1 containsLock:(char *)arg2;
- (struct CGSize)_minSessionSize:(id)arg1;
- (struct CGSize)_sessionSize:(id)arg1;
- (void)splitVertically:(BOOL)arg1 newSession:(id)arg2 before:(BOOL)arg3 targetSession:(id)arg4;
- (void)adjustSubviewsOf:(id)arg1;
- (void)dumpSubviewsOf:(id)arg1;
- (BOOL)canSplitVertically:(BOOL)arg1 withSize:(struct CGSize)arg2;
- (void)removeSession:(id)arg1;
- (void)sessionDidChangeFontSize:(id)arg1;
- (BOOL)sessionBelongsToVisibleTab;
- (void)fitSubviewsToRoot;
- (id)_recursiveSessionAtPoint:(struct CGPoint)arg1 relativeTo:(id)arg2;
- (struct CGRect)_recursiveViewFrame:(id)arg1;
- (void)_recursiveRemoveView:(id)arg1;
- (void)checkInvariants:(id)arg1;
- (void)cleanupAfterRemove:(id)arg1;
- (void)checkInvariants:(id)arg1 when:(id)arg2;
- (void)dump;
- (void)_dumpView:(id)arg1 withPrefix:(id)arg2;
- (void)showLiveSession:(id)arg1 inPlaceOf:(id)arg2;
- (void)setDvrInSession:(id)arg1;
- (int)tabNumberForItermSessionId;
- (void)replaceActiveSessionWithSyntheticSession:(id)arg1;
- (void)addHiddenLiveView:(id)arg1;
- (id)_recursiveSessionViews:(id)arg1 atNode:(id)arg2;
- (id)sessionViews;
- (id)_recursiveSessions:(id)arg1 atNode:(id)arg2;
- (id)sessions;
- (id)windowPanes;
- (void)terminateAllSessions;
- (void)closeSession:(id)arg1;
- (void)updateLabelAttributes;
- (id)sessionBelow:(id)arg1;
- (id)sessionAbove:(id)arg1;
- (id)sessionRightOf:(id)arg1;
- (id)sessionLeftOf:(id)arg1;
- (id)sessionAdjacentTo:(id)arg1 verticalDir:(BOOL)arg2 after:(BOOL)arg3;
- (BOOL)session:(id)arg1 sitsBetween:(id)arg2 and:(id)arg3 verticalDir:(BOOL)arg4 after:(BOOL)arg5;
- (id)sessionsAdjacentToSession:(id)arg1 verticalDir:(BOOL)arg2 after:(BOOL)arg3;
- (id)sessionsInProjectionOfSession:(id)arg1 verticalDirection:(BOOL)arg2 after:(BOOL)arg3;
- (id)sessionsSatisfying:(CDUnknownBlockType)arg1;
- (BOOL)anySessionHasNewOutput:(char *)arg1;
- (BOOL)anySessionIsProcessing;
- (void)setIsProcessing:(BOOL)arg1;
- (BOOL)isProcessing;
- (BOOL)realIsProcessing;
@property(retain, nonatomic) NSImage *icon;
@property(nonatomic) int objectCount;
- (int)tabNumber;
- (int)number;
- (void)setFakeParentWindow:(id)arg1;
- (void)updateFlexibleViewColors;
- (id)flexibleViewColor;
- (id)realParentWindow;
- (int)indexOfSessionView:(id)arg1;
- (void)nextSession;
- (void)previousSession;
- (void)activateSessionInDirection:(int)arg1;
@property(readonly, nonatomic) NSArray *orderedSessions;
- (struct CGPoint)rootRelativeOriginOfSession:(id)arg1;
- (id)sessionWithViewId:(int)arg1;
- (id)_recursiveSessionViewWithId:(int)arg1 atNode:(id)arg2;
- (void)setActiveSession:(id)arg1 updateActivityCounter:(BOOL)arg2;
- (void)addSession:(id)arg1 toRestorableSession:(id)arg2;
- (void)sessionInitiatedResize:(id)arg1 width:(int)arg2 height:(int)arg3;
- (void)sessionSelectContainingTab;
- (void)sessionDidChangeTmuxWindowNameTo:(id)arg1;
- (BOOL)isForegroundTab;
- (void)nameOfSession:(id)arg1 didChangeTo:(id)arg2;
- (void)loadTitleFromSession;
- (void)updateIcon;
- (void)setState:(unsigned long long)arg1 reset:(unsigned long long)arg2;
- (void)setBell:(BOOL)arg1;
- (void)_refreshLabels:(id)arg1;
- (struct CGRect)absoluteFrame;
- (id)sessionForSessionView:(id)arg1;
- (void)numberOfSessionsDidChange;
- (BOOL)updatePaneTitles;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)commonInit;
- (id)initWithRoot:(id)arg1 sessions:(id)arg2;
- (id)initWithSession:(id)arg1;
- (void)handleSelectCommand:(id)arg1;
- (void)handleCloseCommand:(id)arg1;
- (id)indexOfTab;
- (unsigned long long)countOfSessions;
- (id)valueInSessionsWithWithUniqueID:(id)arg1;
- (id)valueWithUniqueID:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)valueInSessionsAtIndex:(unsigned int)arg1;
- (id)objectSpecifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

