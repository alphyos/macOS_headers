//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSMenuDelegate-Protocol.h"

@class DBOverlayWindowBkgrnd, NSColor, NSMenu, NSMutableArray, NSMutableDictionary, NSString, NSTimer;

__attribute__((visibility("hidden")))
@interface SBMacWinHandler : NSObject <NSMenuDelegate>
{
    BOOL watching;
    struct __AXUIElement *systemWide;
    DBOverlayWindowBkgrnd *highlightWindow;
    NSMutableArray *windowList;
    NSTimer *removeTimer;
    NSColor *backgroundColorP;
    NSColor *borderColorP;
    double animationDuration;
    double borderWidthP;
    BOOL cornerSnapTopLeft;
    BOOL cornerSnapTopRight;
    BOOL cornerSnapBottomLeft;
    BOOL cornerSnapBottomRight;
    BOOL _dragPointStuffAvailable;
    BOOL animatePreviewWindow;
    NSString *movingWindowTitle;
    NSMenu *theMenu;
    NSTimer *delayTimer;
    NSTimer *dragPointTimer;
    double _tilebarSnapTime;
    BOOL _allowWordSnap;
    id _theMovingWindow;
    id _theResizingWindow;
    NSMutableDictionary *_previousHighlightWindows;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *previousHighlightWindows; // @synthesize previousHighlightWindows=_previousHighlightWindows;
@property(retain, nonatomic) NSTimer *dragPointTimer; // @synthesize dragPointTimer;
@property(retain, nonatomic) NSTimer *delayTimer; // @synthesize delayTimer;
@property(retain, nonatomic) NSMenu *theMenu; // @synthesize theMenu;
@property(copy, nonatomic) NSString *movingWindowTitle; // @synthesize movingWindowTitle;
@property(nonatomic) BOOL animatePreviewWindow; // @synthesize animatePreviewWindow;
@property(nonatomic) BOOL cornerSnapBottomRight; // @synthesize cornerSnapBottomRight;
@property(nonatomic) BOOL cornerSnapBottomLeft; // @synthesize cornerSnapBottomLeft;
@property(nonatomic) BOOL cornerSnapTopRight; // @synthesize cornerSnapTopRight;
@property(nonatomic) BOOL cornerSnapTopLeft; // @synthesize cornerSnapTopLeft;
@property(nonatomic) double borderWidthP; // @synthesize borderWidthP;
@property(nonatomic) double animationDuration; // @synthesize animationDuration;
@property(retain, nonatomic) NSColor *borderColorP; // @synthesize borderColorP;
@property(retain, nonatomic) NSColor *backgroundColorP; // @synthesize backgroundColorP;
@property(retain, nonatomic) NSTimer *removeTimer; // @synthesize removeTimer;
@property(retain, nonatomic) NSMutableArray *windowList; // @synthesize windowList;
@property(retain, nonatomic) DBOverlayWindowBkgrnd *highlightWindow; // @synthesize highlightWindow;
@property(nonatomic) BOOL watching; // @synthesize watching;
- (void)dealloc;
- (void)saveWindowList;
- (void)setSpecificRect:(struct CGRect)arg1 forWindow:(struct __AXUIElement *)arg2 atScreen:(struct CGRect)arg3 useActiveWindow:(BOOL)arg4;
- (void)setSpecificRect:(struct CGRect)arg1 forWindow:(struct __AXUIElement *)arg2;
- (void)setSpecificRect:(struct CGRect)arg1;
- (struct __AXUIElement *)activeWindow;
- (void)changeWindowSize:(long long)arg1 forWindow:(struct __AXUIElement *)arg2 isSmooth:(BOOL)arg3 mousePosition:(struct CGPoint)arg4 cycle:(long long)arg5;
- (struct CGRect)getReallyVisibleFrameForScreen:(id)arg1;
- (void)showMoveToNextMonitorWarningMT;
- (void)changeWindowSize:(long long)arg1 forWindow:(struct __AXUIElement *)arg2 isSmooth:(BOOL)arg3 mousePosition:(struct CGPoint)arg4;
- (void)setPosition:(struct CGPoint)arg1 forWindow:(struct __AXUIElement *)arg2;
- (struct CGRect)flippedScreenBounds:(struct CGRect)arg1;
- (void)setSize:(struct CGSize)arg1 forWindow:(struct __AXUIElement *)arg2 atScreenRect:(struct CGRect)arg3 atPosition:(struct CGPoint)arg4 dockPosition:(long long)arg5 andParameter:(long long)arg6;
- (void)setSize:(struct CGSize)arg1 forWindow:(struct __AXUIElement *)arg2 atScreenRect:(struct CGRect)arg3 atPosition:(struct CGPoint)arg4 dockPosition:(long long)arg5;
- (void)snapWithDraggingArea:(id)arg1;
- (long long)careForDrawer:(struct __AXUIElement *)arg1 position:(struct CGPoint)arg2;
- (void)moveWindow:(long long)arg1;
- (void)movingWindowTo:(long long)arg1;
- (void)moveWindowAtPosition:(struct CGPoint)arg1 toPosition:(long long)arg2;
- (void)moveWindowAtPosition:(struct CGPoint)arg1 toPosition:(long long)arg2 smooth:(BOOL)arg3 useActiveWindow:(BOOL)arg4 mouseSnapped:(BOOL)arg5;
- (struct __AXUIElement *)getWindowAtPosition:(struct CGPoint)arg1;
- (long long)getWindowNumberUbar:(BOOL)arg1;
- (long long)getWindowNumber;
- (long long)getWindowNumberForAXUIElementRef:(struct __AXUIElement *)arg1;
- (struct CGRect)getPositionForWindowID:(unsigned int)arg1;
- (struct CGRect)getWindowPosition;
- (BOOL)isWindowStillOpen:(long long)arg1;
- (void)removeClosedWindowsFromList;
- (void)changeWindowSize:(long long)arg1 forWindow:(struct __AXUIElement *)arg2;
- (void)changeWindowSize:(long long)arg1;
- (void)changeWindowPositionRelativeToX:(long long)arg1 andY:(long long)arg2;
- (BOOL)getMinimizeOnDoubleclick;
- (void)changeWindowSizeRelativeToX:(long long)arg1 andY:(long long)arg2;
- (void)stopRelativeWindowResizing;
- (void)stopRelativeWindowMoving;
- (void)startRelativeWindowMovingSynth:(BOOL)arg1;
- (void)startRelativeWindowMoving;
- (BOOL)isAPIActivatedWithout;
- (BOOL)isAPIActivated;
- (void)showApiAlert2;
- (void)showApiActivatedAlert;
- (void)enableAccessibility;
- (void)showMinimizeOnDoubleClickWarningMT;
- (BOOL)checkTitlebarAndPerformAction:(long long)arg1;
- (BOOL)isThisAStandardWindow:(struct __AXUIElement *)arg1;
- (BOOL)draggableAtPosition:(struct CGPoint)arg1;
- (BOOL)titlebarAtPosition:(struct CGPoint)arg1;
- (void)checkMousePositionAndCreateHighlightWindowIfNecessary2;
- (void)calledByTimer;
- (void)checkMousePositionAndCreateHighlightWindowIfNecessary;
- (id)createHighlightWindowForUIElementAtPosition:(long long)arg1 onScreen:(long long)arg2;
- (id)windowForScreenFrame:(struct CGRect)arg1;
- (void)closeHighlightWindow;
- (void)createHighlightWindowAtPosition:(long long)arg1 onScreen:(long long)arg2;
- (void)makeFullScreen;
- (void)moveWindow:(struct __AXUIElement *)arg1 toSpace:(long long)arg2;
- (void)splitScreenForWindow:(struct __AXUIElement *)arg1 left:(BOOL)arg2;
- (struct CGRect)windowRectForCurrentlyActiveWindowViaCGS;
- (struct __AXUIElement *)getCurrentlyFocusedWindowForApp:(struct __AXUIElement *)arg1;
- (struct __AXUIElement *)getCurrentlyFocusedWindow;
- (void)closeWindowUnderCursor;
- (void)minimizeWindowUnderCursor;
- (void)minimizeWindow:(struct __AXUIElement *)arg1;
- (void)closeWindow:(struct __AXUIElement *)arg1;
- (void)hideAllApplications;
- (void)zoomWindowUnderCursor;
- (id)getAttributeNameAtMousePosition;
- (void)bringToFrontWindowUnderCursor;
- (BOOL)fetchWindowUnderCursor;
- (BOOL)fetchWindowUnderCursorNOTStartedByDrag;
- (BOOL)fetchWindowUnderCursorStartedByDrag;
- (BOOL)fetchWindowUnderCursorStartedBySynthDrag;
- (void)deleteMovingWindow;
- (id)theResizingWindow;
- (void)setTheResizingWindow:(id)arg1;
- (id)theMovingWindow;
- (void)setTheMovingWindow:(id)arg1;
- (struct CGRect)getWindowRectForCurrentlyFocusedWindowWithProcessID:(int)arg1;
- (struct CGRect)getWindowRectForCurrentlyFocusedWindow;
- (void)allowSnapNow;
- (void)checkIfMoved;
- (void)removeWindowFromList:(id)arg1;
- (void)addWindowToList:(id)arg1;
- (id)getApiWindowWithID:(long long)arg1;
- (id)getExistingApiWindowWithID:(long long)arg1;
- (BOOL)resizeWindowToOldSizeIfNecessary:(struct __AXUIElement *)arg1 restoreOldPosition:(BOOL)arg2;
- (BOOL)resizeWindowToOldSizeIfNecessary:(struct __AXUIElement *)arg1;
- (BOOL)resizeWindowUnderCursorToOldSizeIfNecessary;
- (BOOL)resizeWindowToOldSizeIfNecessary;
- (struct CGRect)getWindowLiveRectForFocusedWindow;
- (struct CGRect)screenRectForMainMonitor;
- (struct CGRect)screenRectForMonitorThatContainsActiveWindow;
- (struct CGRect)screenRectForMonitorThatContainsMouse;
- (void)workspaceDidWake:(id)arg1;
- (void)showOverviewMenu:(struct CGPoint)arg1;
- (id)getCharacterForID:(long long)arg1 fromDict:(id)arg2;
- (unsigned long long)getModifierForID:(long long)arg1 fromDict:(id)arg2;
- (void)closeMenu;
- (void)menuDidClose:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)overViewMove:(id)arg1;
- (void)menubarMenuMove:(id)arg1;
- (BOOL)multipleMenubarsOnMavericks;
- (void)userDefaultsChanged;
- (void)testtest:(id)arg1;
- (double)menubarHeight;
- (void)loopThrough;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

