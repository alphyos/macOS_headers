//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class DBAUTHAccessError, DBAUTHAuthError, DBAUTHRateLimitError, DBCOMMONPathRootError, NSError, NSNumber, NSString;

@interface DBRequestError : NSObject
{
    long long _tag;
    NSString *_requestId;
    NSNumber *_statusCode;
    NSString *_errorContent;
    NSString *_userMessage;
    DBAUTHAuthError *_structuredAuthError;
    DBAUTHAccessError *_structuredAccessError;
    DBCOMMONPathRootError *_structuredPathRootError;
    DBAUTHRateLimitError *_structuredRateLimitError;
    NSNumber *_backoff;
    NSError *_nsError;
}

@property(readonly, nonatomic) NSError *nsError; // @synthesize nsError=_nsError;
@property(readonly, nonatomic) NSNumber *backoff; // @synthesize backoff=_backoff;
@property(readonly, nonatomic) DBAUTHRateLimitError *structuredRateLimitError; // @synthesize structuredRateLimitError=_structuredRateLimitError;
@property(readonly, nonatomic) DBCOMMONPathRootError *structuredPathRootError; // @synthesize structuredPathRootError=_structuredPathRootError;
@property(readonly, nonatomic) DBAUTHAccessError *structuredAccessError; // @synthesize structuredAccessError=_structuredAccessError;
@property(readonly, nonatomic) DBAUTHAuthError *structuredAuthError; // @synthesize structuredAuthError=_structuredAuthError;
@property(readonly, copy, nonatomic) NSString *userMessage; // @synthesize userMessage=_userMessage;
@property(readonly, copy, nonatomic) NSString *errorContent; // @synthesize errorContent=_errorContent;
@property(readonly, nonatomic) NSNumber *statusCode; // @synthesize statusCode=_statusCode;
@property(readonly, copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(readonly, nonatomic) long long tag; // @synthesize tag=_tag;
- (void).cxx_destruct;
- (id)description;
- (id)tagName;
- (id)asClientError;
- (id)asInternalServerError;
- (id)asRateLimitError;
- (id)asPathRootError;
- (id)asAccessError;
- (id)asAuthError;
- (id)asBadInputError;
- (id)asHttpError;
- (BOOL)isClientError;
- (BOOL)isInternalServerError;
- (BOOL)isRateLimitError;
- (BOOL)isPathRootError;
- (BOOL)isAccessError;
- (BOOL)isAuthError;
- (BOOL)isBadInputError;
- (BOOL)isHttpError;
- (id)init:(long long)arg1 requestId:(id)arg2 statusCode:(id)arg3 errorContent:(id)arg4 userMessage:(id)arg5 structuredAuthError:(id)arg6 structuredAccessError:(id)arg7 structuredPathRootError:(id)arg8 structuredRateLimitError:(id)arg9 backoff:(id)arg10 nsError:(id)arg11;
- (id)initAsClientError:(id)arg1;
- (id)initAsInternalServerError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4;
- (id)initAsRateLimitError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4 structuredRateLimitError:(id)arg5 backoff:(id)arg6;
- (id)initAsPathRootError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4 structuredPathRootError:(id)arg5;
- (id)initAsAccessError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4 structuredAccessError:(id)arg5;
- (id)initAsAuthError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4 structuredAuthError:(id)arg5;
- (id)initAsBadInputError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4;
- (id)initAsHttpError:(id)arg1 statusCode:(id)arg2 errorContent:(id)arg3 userMessage:(id)arg4;

@end

