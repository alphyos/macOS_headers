//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class BTTActions, BTTHudWC, NSDictionary, NSMutableDictionary, NSPredicate, NSString, NSTimer;

__attribute__((visibility("hidden")))
@interface BTTShortcutter : NSObject
{
    NSDictionary *Bindings;
    BTTActions *perform;
    NSString *lastGestureDescription;
    NSString *lastActionDescription;
    BOOL viewOnly;
    long long useCount;
    BOOL debugMode;
    NSTimer *delayTimer;
    NSString *lastUserActions;
    NSTimer *saveUserInformationTimer;
    BTTHudWC *_theHUD;
    NSString *_todaysKey;
    NSMutableDictionary *_globalPredicates;
    NSMutableDictionary *_appSpecificPredicates;
    NSMutableDictionary *_otherPredicates;
    NSMutableDictionary *_todaysUsage;
    NSDictionary *_usageDataPerHourPerDay;
    NSTimer *_usageDataTimer;
    NSPredicate *_parentIsNilPredicate;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSPredicate *parentIsNilPredicate; // @synthesize parentIsNilPredicate=_parentIsNilPredicate;
@property(retain, nonatomic) NSTimer *usageDataTimer; // @synthesize usageDataTimer=_usageDataTimer;
@property(retain, nonatomic) NSDictionary *usageDataPerHourPerDay; // @synthesize usageDataPerHourPerDay=_usageDataPerHourPerDay;
@property(retain, nonatomic) NSMutableDictionary *todaysUsage; // @synthesize todaysUsage=_todaysUsage;
@property(retain, nonatomic) NSMutableDictionary *otherPredicates; // @synthesize otherPredicates=_otherPredicates;
@property(retain, nonatomic) NSMutableDictionary *appSpecificPredicates; // @synthesize appSpecificPredicates=_appSpecificPredicates;
@property(retain, nonatomic) NSMutableDictionary *globalPredicates; // @synthesize globalPredicates=_globalPredicates;
@property(retain, nonatomic) NSString *todaysKey; // @synthesize todaysKey=_todaysKey;
@property(retain, nonatomic) BTTHudWC *theHUD; // @synthesize theHUD=_theHUD;
@property(retain, nonatomic) NSString *lastUserActions; // @synthesize lastUserActions;
@property(retain, nonatomic) NSTimer *saveUserInformationTimer; // @synthesize saveUserInformationTimer;
@property(retain, nonatomic) NSTimer *delayTimer; // @synthesize delayTimer;
@property(nonatomic) BOOL debugMode; // @synthesize debugMode;
@property(nonatomic) long long useCount; // @synthesize useCount;
@property(copy, nonatomic) NSString *lastActionDescription; // @synthesize lastActionDescription;
@property(nonatomic) BOOL viewOnly; // @synthesize viewOnly;
@property(copy, nonatomic) NSString *lastGestureDescription; // @synthesize lastGestureDescription;
@property(retain, nonatomic) BTTActions *perform; // @synthesize perform;
@property(retain, nonatomic) NSDictionary *Bindings; // @synthesize Bindings;
- (void)performShortcutForBindingOld:(id)arg1;
- (void)performShortcutForBindingParallels:(id)arg1;
- (void)performShortcutForBinding:(id)arg1 upThemNot:(BOOL)arg2;
- (void)performShortcutForBinding:(id)arg1;
- (void)parallelsShortcutWarningMT;
- (BOOL)upThemAll:(long long)arg1;
- (void)upKey:(long long)arg1;
- (void)downThemAgain:(long long)arg1;
- (void)performNewStyleShortcutForBinding:(id)arg1;
- (void)toggleClicking:(long long)arg1;
- (void)leftMouseDown2;
- (void)leftMouseDownForSpaceSwitch;
- (void)leftMouseDown;
- (void)leftMouseUp;
- (void)middleMouseUp;
- (void)middleMouseDown;
- (void)performActionReal:(long long)arg1 withInfo:(id)arg2 remainingChildren:(id)arg3;
- (void)performAction:(long long)arg1 withInfo:(id)arg2 remainingChildren:(id)arg3;
- (void)performAction:(long long)arg1 withInfo:(id)arg2;
- (void)moveTabletToX:(double)arg1 andY:(double)arg2;
- (long long)getActionForGestureIDMT:(long long)arg1;
- (long long)getActionForGestureID:(long long)arg1;
- (void)logUsage:(int)arg1 additional:(id)arg2;
- (void)logGesture:(id)arg1;
- (void)showMenuForMultipleGestures:(id)arg1 triggeredByShortcut:(BOOL)arg2;
- (void)showMenuForMultipleGestures:(id)arg1;
- (BOOL)shouldGestureTrigger:(id)arg1;
- (BOOL)performShortcutOrActionForGestureIDReal:(long long)arg1 checkOnly:(BOOL)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4 bezierPathName:(id)arg5;
- (id)mainFindGesturesWith:(id)arg1 additionalString:(id)arg2 additionalNumber:(id)arg3 bezierPathName:(id)arg4 triggerOnDown:(long long)arg5 onlyGlobal:(long long)arg6;
- (id)findGestureWithUUID:(id)arg1;
- (id)predicateForType:(int)arg1 gestureId:(id)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4 bezierPathName:(id)arg5 triggerOnDown:(long long)arg6 onlyGlobal:(long long)arg7 ignoreModifiers:(BOOL)arg8;
- (id)findGesturesWithIDs:(id)arg1 additionalString:(id)arg2 additionalNumber:(id)arg3 bezierPathName:(id)arg4 triggerOnDown:(long long)arg5 onlyGlobal:(long long)arg6;
- (id)findGesturesWithID:(long long)arg1 additionalString:(id)arg2 additionalNumber:(id)arg3 bezierPathName:(id)arg4 triggerOnDown:(long long)arg5 onlyGlobal:(long long)arg6;
- (id)findGesturesWithID:(long long)arg1 additionalString:(id)arg2 additionalNumber:(id)arg3 bezierPathName:(id)arg4 triggerOnDown:(long long)arg5;
- (BOOL)performShortcutOrActionForGestureIDReal:(long long)arg1 checkOnly:(BOOL)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4;
- (BOOL)performShortcutOrActionForGestureIDReal:(long long)arg1;
- (BOOL)performShortcutOrActionForGestureIDMT:(long long)arg1 checkOnly:(BOOL)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4 bezierPathName:(id)arg5;
- (BOOL)performShortcutOrActionForGestureID:(long long)arg1 checkOnly:(BOOL)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4 bezierPathName:(id)arg5;
- (BOOL)performShortcutOrActionForGestureID:(long long)arg1 checkOnly:(BOOL)arg2 additionalString:(id)arg3 additionalNumber:(id)arg4;
- (BOOL)performShortcutOrActionForGestureID:(long long)arg1 checkOnly:(BOOL)arg2;
- (BOOL)performShortcutOrActionForGestureID:(long long)arg1;
- (BOOL)performShortcutOrActionForGestureNumberObject:(id)arg1;
- (void)performMenuAction:(id)arg1;
- (BOOL)performActionForGestureChildren:(id)arg1;
- (BOOL)newPerformActionForGestureChildren:(id)arg1;
- (BOOL)performActionForGesture:(id)arg1;
- (BOOL)checkShortcutOrActionForGestureIDMT:(long long)arg1;
- (BOOL)checkShortcutOrActionForGestureID:(long long)arg1;
- (void)createDelayTimerWithArguments:(id)arg1;
- (BOOL)performShortcutOrActionForGestureID:(long long)arg1 delayedBy:(double)arg2;
- (void)stopDelayTimer;
- (long long)currentEventModifiers;
- (BOOL)checkIfAnyOfTheGesturesAreUsed:(id)arg1 inApp:(id)arg2 andOnlyInThisApp:(BOOL)arg3;
- (BOOL)checkIfAnyOfTheGesturesAreUsed:(id)arg1 inApp:(id)arg2;
- (BOOL)checkIfActionIsUsed:(long long)arg1;
- (BOOL)checkIfDeviceClassIsUsedMT:(long long)arg1;
- (BOOL)checkIfDeviceClassIsUsed:(long long)arg1;
- (BOOL)checkIfGestureIsUsed:(long long)arg1 inApp:(id)arg2 andOnlyInThisApp:(BOOL)arg3;
- (BOOL)checkIfGestureIsUsed:(long long)arg1 inApp:(id)arg2;
- (BOOL)checkIfGestureIsUsedInFrontmostApp:(long long)arg1;
- (BOOL)checkIfGestureIsUsed:(long long)arg1;
- (long long)addAction;
- (void)dealloc;
- (struct __CGEventSource *)getEventSource;
- (void)launchStartupApps;
- (void)performActionForURL:(id)arg1;
- (id)init;
- (void)checkDay;
- (void)saveUsageData;
- (void)loadTodaysUsageData;

@end

