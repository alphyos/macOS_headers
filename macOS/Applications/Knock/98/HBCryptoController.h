//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData;

@interface HBCryptoController : NSObject
{
    struct OpaqueSecKeyRef *_remotePublicKeyRef;
    struct OpaqueSecKeyRef *_publicKeyRef;
    struct OpaqueSecKeyRef *_privateKeyRef;
    struct OpaqueSecKeyRef *_symmetricKeyRef;
    NSData *_applicationLocalKeysTag;
    NSData *_applicationRemoteKeyTag;
    NSData *_applicationSymmetricKeyTag;
    NSData *_symmetricKeyData;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSData *symmetricKeyData; // @synthesize symmetricKeyData=_symmetricKeyData;
@property(retain) NSData *applicationSymmetricKeyTag; // @synthesize applicationSymmetricKeyTag=_applicationSymmetricKeyTag;
@property(retain) NSData *applicationRemoteKeyTag; // @synthesize applicationRemoteKeyTag=_applicationRemoteKeyTag;
@property(retain) NSData *applicationLocalKeysTag; // @synthesize applicationLocalKeysTag=_applicationLocalKeysTag;
- (struct OpaqueSecKeyRef *)getPrivateKeyRef;
@property(readonly) NSData *publicKeyData;
- (struct OpaqueSecKeyRef *)getLocalPublicKeyRef;
- (struct OpaqueSecKeyRef *)getRemotePublicKeyRef;
- (BOOL)keychainWithRemotePublicKeyIsLocked;
- (id)generateKeyPair:(long long)arg1;
- (void)deleteRemoteKey;
- (void)deleteLocalKeys;
- (void)deleteSymmetricKey;
- (void)generateSymmetricKey;
- (BOOL)checkcssm:(int)arg1:(id)arg2;
- (id)getHashBytes:(id)arg1;
- (BOOL)verifySignature:(id)arg1 secKeyRef:(struct OpaqueSecKeyRef *)arg2 signature:(id)arg3;
- (id)getSignatureBytes:(id)arg1;
- (id)asymmetricDecryptData:(id)arg1;
- (id)asymmetricEncryptData:(id)arg1 withKeyRef:(struct OpaqueSecKeyRef *)arg2;
- (unsigned long long)signatureSize;
- (BOOL)verifyDataWithRemotePublicKey:(id)arg1 andSignature:(id)arg2;
- (id)signWithLocalPrivateKey:(id)arg1;
- (id)decryptDataWithLocalPrivateKey:(id)arg1;
- (id)encryptDataWithLocalPublicKey:(id)arg1;
- (id)encryptDataWithRemotePublicKey:(id)arg1;
- (BOOL)remotePublicKeyExists;
- (void)addRemotePublicKey:(id)arg1;
- (id)decryptDataWithLocalSymmetricKey:(id)arg1;
- (id)encryptDataWithLocalSymmetricKey:(id)arg1;
- (BOOL)symmetricKeyExists;
- (id)nonceWithLength:(unsigned long long)arg1;
- (void)dealloc;
- (BOOL)testSymmetricKeys;
- (BOOL)testAsymmetricKeys;
- (BOOL)createLocalKeyPairIfNeeded;
- (id)init;

@end

