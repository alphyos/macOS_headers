//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MTLRenderPassDescriptor, TSDMetalContext, TSDMetalShader;
@protocol MTLCommandBuffer, MTLTexture, TSDAnimationRandomGenerator, TSDMTLDataBuffer;

@interface TSDMetalMotionBlurEffect : NSObject
{
    struct CGSize _framebufferSize;
    struct CGSize _slideSize;
    id <MTLTexture> _combinedTextureColor1;
    id <MTLTexture> _combinedTextureColor2;
    id <MTLTexture> _combinedTextureVelocity;
    TSDMetalShader *_defaultTextureShader;
    TSDMetalShader *_colorAndVelocityShader;
    TSDMetalShader *_colorAndVelocityBlendingShader;
    TSDMetalShader *_velocityVisualizerShader;
    TSDMetalShader *_velocityCollectionShader;
    TSDMetalShader *_velocityTileMaxVerticalShader;
    TSDMetalShader *_velocityTileMaxHorizontalShader;
    TSDMetalShader *_velocityNeighborMaxHorizontalShader;
    TSDMetalShader *_velocityNeighborMaxVerticalShader;
    id <MTLTexture> _colorTexture1;
    id <MTLTexture> _colorTexture2;
    id <TSDMTLDataBuffer> _colorFBODataBuffer;
    id <MTLTexture> _velocityTexture1;
    id <MTLTexture> _velocityTexture2;
    id <MTLTexture> _velocityTextureSquashed;
    id <TSDMTLDataBuffer> _velocityFBODataBuffer;
    id <TSDMTLDataBuffer> _velocitySquashedFBODataBuffer;
    id <TSDMTLDataBuffer> _FBODataBuffer;
    id <TSDMTLDataBuffer> _FBODataBufferFlipped;
    MTLRenderPassDescriptor *_colorAndVelocityPassDescriptor;
    MTLRenderPassDescriptor *_tileHorizontalPassDescriptor;
    MTLRenderPassDescriptor *_tileVerticalPassDescriptor;
    MTLRenderPassDescriptor *_neighborHorizontalPassDescriptor;
    MTLRenderPassDescriptor *_neighborVerticalPassDescriptor;
    MTLRenderPassDescriptor *_combined1PassDescriptor;
    id <TSDAnimationRandomGenerator> _randomGenerator;
    id <MTLCommandBuffer> _currentCommandBuffer;
    TSDMetalContext *_metalContext;
    BOOL _isSingleObject;
    double _motionBlurStrength;
    long long _debugDrawMode;
    double _framebufferScale;
}

@property(nonatomic) double framebufferScale; // @synthesize framebufferScale=_framebufferScale;
@property(nonatomic) long long debugDrawMode; // @synthesize debugDrawMode=_debugDrawMode;
@property(nonatomic) double motionBlurStrength; // @synthesize motionBlurStrength=_motionBlurStrength;
@property(nonatomic) BOOL isSingleObject; // @synthesize isSingleObject=_isSingleObject;
- (void).cxx_destruct;
- (void)p_setupRenderPasses;
- (void)p_setupBuffers;
- (void)p_setupTextures;
- (void)p_setupShaders;
- (void)setupMotionBlurEffectIfNecessary;
- (void)p_drawWithEncoder:(id)arg1 opacity:(double)arg2;
- (void)p_dilateVelocityTexture;
- (void)p_blitIntoVelocityTexture;
- (void)p_blitIntoColorFramebuffer;
- (void)p_debugDrawModeVelocityBufferDilatedWithEncoder:(id)arg1;
- (void)p_debugDrawModeVelocityBufferWithEncoder:(id)arg1;
- (void)p_debugDrawModeColorBufferWithEncoder:(id)arg1;
- (struct CGSize)p_squashedVelocityFramebufferSize;
- (struct CGSize)p_velocityFramebufferTextureScale;
- (struct CGSize)p_velocityFramebufferSize;
- (void)drawResultWithWorkingRenderEncoder:(id)arg1 destinationRenderEncoder:(id)arg2 opacity:(double)arg3;
- (void)drawResultWithWorkingRenderEncoder:(id)arg1 destinationRenderEncoder:(id)arg2;
- (id)colorAndVelocityBlendingShader;
- (id)colorAndVelocityShader;
- (id)bindColorAndVelocityWithMetalContext:(id)arg1 shouldFillBackground:(BOOL)arg2;
- (struct CATransform3D)adjustTransformForMotionBlurBuffer:(struct CATransform3D)arg1;
- (struct CGSize)p_updateMaxVelocityInShadersWithScale:(double)arg1 isColorFBO:(BOOL)arg2;
- (struct CGSize)velocityScale;
- (struct CGSize)velocityScaleForColorFBO:(BOOL)arg1;
- (id)description;
- (id)initWithFramebufferSize:(struct CGSize)arg1 slideSize:(struct CGSize)arg2 randomGenerator:(id)arg3 metalContext:(id)arg4;

@end

