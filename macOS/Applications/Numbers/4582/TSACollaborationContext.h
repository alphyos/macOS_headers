//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSKCollaborationContext-Protocol.h"
#import "TSKICloudHTTPRequestSenderFactoryDelegate-Protocol.h"
#import "TSPPassphraseConsumer-Protocol.h"

@class NSArray, NSData, NSError, NSString, NSURL, NSUUID, TSACollaborationDocumentSessionStateJournalingController, TSACollaborationRevisionLog, TSACollaborationValidator, TSADocumentRevisionNotifier, TSKDocumentRoot, TSKICloudHTTPRequestSenderFactory, TSKSharingState, TSUFakeProgress, TSUURLTracker;
@protocol NSFilePresenter, OS_dispatch_queue, OS_dispatch_source, TSACollaborationCacheReconnectToken, TSACollaborationPassphraseRetriever, TSKCollaborationDocumentSessionStateJournaling;

@interface TSACollaborationContext : NSObject <TSKICloudHTTPRequestSenderFactoryDelegate, TSPPassphraseConsumer, TSKCollaborationContext>
{
    unsigned long long _flags;
    BOOL _skipWaitingIfUnsupportedForPasswordConsumer;
    BOOL _shouldProcessNotifications;
    BOOL _cloudUpdateCanCancelValidator;
    TSACollaborationRevisionLog *_revisionLog;
    TSACollaborationDocumentSessionStateJournalingController *_collaborationDocumentSessionStateJournalingController;
    BOOL _needsUpdatedRevision;
    BOOL _hasCoordinatedReadLock;
    BOOL _removeCollaborationCacheOnError;
    BOOL _validatedWithServer;
    BOOL _reusedExistingCollaborationCacheEntry;
    BOOL _skipServerValidation;
    BOOL _reuseExistingCollaborationCacheEntry;
    BOOL _keepCacheIfClean;
    BOOL _expectingNoDiffsInInitialServerValidation;
    BOOL _didReceiveRevisionUpdateNotificationFromMetadataQuery;
    BOOL _didReceiveRevisionUpdateNotificationFromTimer;
    BOOL _deleted;
    BOOL _cancelled;
    TSUFakeProgress *_progress;
    NSString *_password;
    NSString *_serverPassword;
    NSObject<OS_dispatch_queue> *_accessQueue;
    TSKDocumentRoot *_documentRoot;
    TSUURLTracker *_documentURLTracker;
    id <NSFilePresenter> _filePresenter;
    CDUnknownBlockType _fileCoordinationInterrupter;
    NSURL *_collaborationURL;
    struct NSUUID *_cacheIdentifier;
    TSKICloudHTTPRequestSenderFactory *_requestSenderFactory;
    TSACollaborationValidator *_validator;
    TSKSharingState *_sharingState;
    NSString *_oldKeychainPassword;
    NSArray *_diffs;
    CDUnknownBlockType _completionBlock;
    TSADocumentRevisionNotifier *_notifier;
    NSObject<OS_dispatch_source> *_revisionUpdateTimer;
    id <TSACollaborationPassphraseRetriever> _passwordRetriever;
    TSACollaborationValidator *_passwordValidator;
    NSString *_passwordHint;
    NSError *_error;
    NSURL *_divergedCacheURL;
    id <TSACollaborationCacheReconnectToken> _divergedCacheReconnectToken;
    CDUnknownBlockType _divergedCacheCleanupBlock;
}

+ (id)p_stringForFlags:(unsigned long long)arg1;
+ (id)p_collaborationDocumentDirectoryForDocumentUUID:(id)arg1 error:(id *)arg2;
@property(copy, nonatomic) CDUnknownBlockType divergedCacheCleanupBlock; // @synthesize divergedCacheCleanupBlock=_divergedCacheCleanupBlock;
@property(copy, nonatomic) id <TSACollaborationCacheReconnectToken> divergedCacheReconnectToken; // @synthesize divergedCacheReconnectToken=_divergedCacheReconnectToken;
@property(copy, nonatomic) NSURL *divergedCacheURL; // @synthesize divergedCacheURL=_divergedCacheURL;
@property(nonatomic) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) BOOL deleted; // @synthesize deleted=_deleted;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSString *passwordHint; // @synthesize passwordHint=_passwordHint;
@property(retain, nonatomic) TSACollaborationValidator *passwordValidator; // @synthesize passwordValidator=_passwordValidator;
@property(retain, nonatomic) id <TSACollaborationPassphraseRetriever> passwordRetriever; // @synthesize passwordRetriever=_passwordRetriever;
@property(nonatomic) BOOL didReceiveRevisionUpdateNotificationFromTimer; // @synthesize didReceiveRevisionUpdateNotificationFromTimer=_didReceiveRevisionUpdateNotificationFromTimer;
@property(nonatomic) BOOL didReceiveRevisionUpdateNotificationFromMetadataQuery; // @synthesize didReceiveRevisionUpdateNotificationFromMetadataQuery=_didReceiveRevisionUpdateNotificationFromMetadataQuery;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *revisionUpdateTimer; // @synthesize revisionUpdateTimer=_revisionUpdateTimer;
@property(retain, nonatomic) TSADocumentRevisionNotifier *notifier; // @synthesize notifier=_notifier;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSArray *diffs; // @synthesize diffs=_diffs;
@property(copy, nonatomic) NSString *oldKeychainPassword; // @synthesize oldKeychainPassword=_oldKeychainPassword;
@property(nonatomic) BOOL expectingNoDiffsInInitialServerValidation; // @synthesize expectingNoDiffsInInitialServerValidation=_expectingNoDiffsInInitialServerValidation;
@property(nonatomic) BOOL keepCacheIfClean; // @synthesize keepCacheIfClean=_keepCacheIfClean;
@property(nonatomic) BOOL reuseExistingCollaborationCacheEntry; // @synthesize reuseExistingCollaborationCacheEntry=_reuseExistingCollaborationCacheEntry;
@property(nonatomic) BOOL skipServerValidation; // @synthesize skipServerValidation=_skipServerValidation;
@property(copy, nonatomic) TSKSharingState *sharingState; // @synthesize sharingState=_sharingState;
@property(retain, nonatomic) TSACollaborationValidator *validator; // @synthesize validator=_validator;
@property(retain, nonatomic) TSKICloudHTTPRequestSenderFactory *requestSenderFactory; // @synthesize requestSenderFactory=_requestSenderFactory;
@property(copy, nonatomic) NSUUID *cacheIdentifier; // @synthesize cacheIdentifier=_cacheIdentifier;
@property BOOL reusedExistingCollaborationCacheEntry; // @synthesize reusedExistingCollaborationCacheEntry=_reusedExistingCollaborationCacheEntry;
@property BOOL validatedWithServer; // @synthesize validatedWithServer=_validatedWithServer;
@property(copy) NSURL *collaborationURL; // @synthesize collaborationURL=_collaborationURL;
@property(nonatomic) BOOL removeCollaborationCacheOnError; // @synthesize removeCollaborationCacheOnError=_removeCollaborationCacheOnError;
@property(readonly, nonatomic) CDUnknownBlockType fileCoordinationInterrupter; // @synthesize fileCoordinationInterrupter=_fileCoordinationInterrupter;
@property(nonatomic) __weak id <NSFilePresenter> filePresenter; // @synthesize filePresenter=_filePresenter;
@property(readonly, nonatomic) BOOL hasCoordinatedReadLock; // @synthesize hasCoordinatedReadLock=_hasCoordinatedReadLock;
@property(retain, nonatomic) TSUURLTracker *documentURLTracker; // @synthesize documentURLTracker=_documentURLTracker;
@property(nonatomic) __weak TSKDocumentRoot *documentRoot; // @synthesize documentRoot=_documentRoot;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(copy) NSString *serverPassword; // @synthesize serverPassword=_serverPassword;
@property(copy) NSString *password; // @synthesize password=_password;
@property BOOL needsUpdatedRevision; // @synthesize needsUpdatedRevision=_needsUpdatedRevision;
@property(retain, nonatomic) TSUFakeProgress *progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL requiresNetworkValidation;
@property(readonly, nonatomic) NSData *keychainGenericItem;
@property(readonly, nonatomic) NSString *passphraseHint;
- (void)setPassphrase:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSString *lastPasswordAttempted;
- (BOOL)setPassphrase:(id)arg1;
- (void)getCollabTokenOnQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)p_queueUploadFogDocument;
- (void)p_queueDownloadFogDocumentIfNeeded;
- (BOOL)p_prepCollaborationDocumentWithContentsFromURL:(id)arg1 collaborationDocumentDirectoryURL:(id)arg2 error:(id *)arg3;
- (void)p_updateProgressWithStage:(long long)arg1;
- (BOOL)p_hasConflicts;
- (BOOL)p_isFinished;
- (void)p_cleanup;
- (void)p_stopRevisionNotifierAndTimer;
- (void)p_finishedPreparingDocumentWithError:(id)arg1;
- (void)p_cancel;
- (void)p_close;
- (void)p_removeCollaborationCacheEntry;
- (void)p_restoreDivergedCacheAfterError;
- (BOOL)p_setupCollaborationCacheEntryWithInitialContentsURL:(id)arg1 error:(id *)arg2;
- (void)p_setupAndVerifyCollaborationCacheEntry;
- (void)p_verifyInitialContentsURL:(id)arg1;
- (BOOL)p_validatePassphrase:(id)arg1 url:(id)arg2;
- (void)p_stopSharingForDocumentThatNeedsImportIfPossibleWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)p_validateCollaborativeDocumentURL:(id)arg1 reusingExistingCacheEntry:(BOOL)arg2 canCancel:(BOOL)arg3 skipWaitingIfUnsupported:(BOOL)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)p_abandonDivergedCollaborationCacheEntryAllowingUserToRestore:(BOOL)arg1;
- (void)p_reuseExistingCollaborationCacheEntryIfPossible;
- (void)p_handleLastNotificationFromTimer:(BOOL)arg1;
- (void)p_setupRevisionNotifierAndTimerIfNeededWithURL:(id)arg1 initialRevision:(id)arg2;
- (void)p_continueOpeningDocumentWithInitialContentsURL:(id)arg1;
- (void)p_refreshSharingStateWithInitialContentsURL:(id)arg1;
- (void)checkForPreviouslyDivergedCache:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) id <TSKCollaborationDocumentSessionStateJournaling> collaborationDocumentSessionStateJournalingController;
- (id)popDiffs;
- (void)close;
- (void)cancel;
- (id)popRequestSenderFactory;
- (void)prepareToOpenWithInitialContentsURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initCollaborationContextWithDocumentRoot:(id)arg1 documentURL:(id)arg2 sharingState:(id)arg3 passphrase:(id)arg4 flags:(unsigned long long)arg5 fileCoordinationInterrupter:(CDUnknownBlockType)arg6 filePresenter:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

