//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDGroupRep.h"

@class TSUWidthLimitedQueue;

@interface TSDFreehandDrawingRep : TSDGroupRep
{
    // Error parsing type: Ac, name: _safeForChildrenToDrawConcurrently
}

- (id)textureForDescription:(id)arg1;
- (id)accessibilityLabel;
- (BOOL)isAccessibilityElement;
- (BOOL)p_shouldAllowSetNeedsDisplay;
- (id)p_childrenForDrawingRecursively;
- (id)p_freehandDrawingLayout;
- (double)opacity;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)p_setWantsToRedrawWithOpenGLIfUnsafe;
- (BOOL)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (id)dragAndDropHighlightLayer;
- (BOOL)wantsToHandleDropForChildWithDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (BOOL)p_canReceiveDropWithDragInfo:(id)arg1;
- (id)p_ingestibleItemSourceForDragInfo:(id)arg1;
- (BOOL)shouldShowKnobs;
- (id)selectionHighlightLayer;
- (double)p_zPositionForSelectionHighlightLayer;
- (struct CGColor *)selectionHighlightColor;
- (BOOL)shouldShowSelectionHighlight;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)didUpdateLayer:(id)arg1;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (struct CGRect)frameInUnscaledCanvas;
- (id)childrenToExcludeWhenDrawingDescendantsIntoLayer;
- (BOOL)drawsDescendantsIntoLayer;
- (Class)layerClass;
- (BOOL)directlyManagesLayerContent;
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(BOOL)arg2 passingTest:(CDUnknownBlockType)arg3;
- (id)beginEditingChildrenIfAllowedAtUnscaledPoint:(struct CGPoint)arg1 pickingDeepestChild:(BOOL)arg2;
- (void)didUpdateChildLayers;
- (void)willUpdateChildLayers;
@property(readonly, nonatomic) TSUWidthLimitedQueue *queueForConcurrentlyDrawingChildrenIntoLayersIfSafe;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (void)p_drawChildShapeReps:(id)arg1 togetherInContext:(struct CGContext *)arg2;
- (BOOL)p_shouldDrawShapeRep:(id)arg1 withOtherShapeRep:(id)arg2;
- (BOOL)p_doesShapeRepWantToBeCoalescedIfPossible:(id)arg1;
- (void)willBeRemoved;
- (id)p_freehandDrawingInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

