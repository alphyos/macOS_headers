//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GSSPAutoEncodable-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSMutableCopying-Protocol.h"
#import "TSDMixing-Protocol.h"
#import "TSDPathPainter-Protocol.h"
#import "TSSPropertyCommandSerializing-Protocol.h"

@class NSString, TSDStrokePattern, TSUColor;

@interface TSDStroke : NSObject <GSSPAutoEncodable, TSSPropertyCommandSerializing, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    double mWidth;
    double mActualWidth;
    int mCap;
    int mJoin;
    TSDStrokePattern *mPattern;
    double mMiterLimit;
}

+ (BOOL)canMixWithNilObjects;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2;
+ (id)emptyStroke;
+ (id)stroke;
+ (id)i_newEmptyStroke;
+ (id)i_newStroke;
+ (Class)mutableClass;
+ (id)editedStrokeFromModelStroke:(id)arg1 selectedStroke:(id)arg2;
+ (long long)indexOfStroke:(id)arg1 strokeArray:(id)arg2;
+ (id)instanceWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
+ (id)portalStroke;
+ (id)mergeRangeEmptyStroke;
+ (id)zeroWidthEmptyStroke;
+ (id)emptyStrokeWithWidth:(double)arg1;
@property(nonatomic) double i_actualWidth; // @synthesize i_actualWidth=mActualWidth;
@property(copy, nonatomic, setter=i_setPattern:) TSDStrokePattern *i_pattern; // @synthesize i_pattern=mPattern;
@property(nonatomic) double i_miterLimit; // @synthesize i_miterLimit=mMiterLimit;
@property(nonatomic) int i_join; // @synthesize i_join=mJoin;
@property(nonatomic, setter=i_setCap:) int i_cap; // @synthesize i_cap=mCap;
@property(nonatomic) double i_width; // @synthesize i_width=mWidth;
@property(copy, nonatomic) TSUColor *i_color; // @synthesize i_color=mColor;
- (BOOL)canDrawWithOtherStroke:(id)arg1;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (BOOL)usesOpenGL;
- (BOOL)shouldAntialiasDefeat;
- (BOOL)drawsInOneStep;
- (void)applyToCAShapeLayer:(id)arg1 insideStroke:(BOOL)arg2 withScale:(double)arg3;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (BOOL)prefersToApplyToCAShapeLayerDuringManipulation;
- (BOOL)canApplyToCAShapeLayer;
- (void)applyToRepCALayer:(id)arg1 withScale:(double)arg2;
- (BOOL)canApplyDirectlyToRepCALayer;
@property(readonly, nonatomic) BOOL isNearlyWhite;
@property(readonly, nonatomic) BOOL isFrame;
@property(readonly, nonatomic) double suggestedMinimumLineWidth;
@property(readonly, nonatomic) BOOL supportsLineOptions;
@property(readonly, nonatomic) BOOL supportsColor;
@property(readonly, nonatomic) BOOL supportsWidth;
@property(readonly, nonatomic) BOOL supportsPattern;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
@property(readonly, nonatomic) double i_verticalOffsetForSwatch;
- (double)horizontalMarginForSwatch;
- (id)pathForLineEnd:(id)arg1 wrapPath:(BOOL)arg2 atPoint:(struct CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(BOOL)arg6;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;
- (void)paintPathWithNormalClip:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(BOOL)arg4 parameterized:(BOOL)arg5 drawWithOpenGL:(BOOL)arg6 shouldReverseDrawOrder:(BOOL)arg7;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)colorForCGContext:(struct CGContext *)arg1;
- (id)strokeLineEnd:(id)arg1;
- (double)lineEndInsetAdjustment;
@property(readonly, nonatomic) BOOL shouldRender;
@property(readonly, nonatomic) BOOL isNullStroke;
- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(BOOL)arg2;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(BOOL)arg2;
- (void)applyToContext:(struct CGContext *)arg1;
- (void)i_setPatternPropertiesFromStroke:(id)arg1;
- (void)i_setPropertiesFromStroke:(id)arg1;
@property(readonly, nonatomic) struct _TSDStrokeOutsets outsets;
- (struct CGRect)boundsForPath:(id)arg1;
- (id)pathToStrokeFromTSUBezierPath:(id)arg1;
- (struct CGPath *)pathToStrokeFromCGPath:(struct CGPath *)arg1;
- (BOOL)needsToExtendJoinsForBoundsCalculation;
@property(readonly, nonatomic) BOOL drawsOutsideStrokeBounds;
@property(readonly, nonatomic) BOOL isRoundDash;
@property(readonly, nonatomic) BOOL isDash;
@property(readonly, nonatomic) double dashSpacing;
@property(readonly, nonatomic) double renderedWidth;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, nonatomic) double actualWidth;
@property(readonly, copy, nonatomic) TSDStrokePattern *pattern;
@property(readonly, nonatomic) double miterLimit;
@property(readonly, nonatomic) int join;
@property(readonly, nonatomic) int cap;
@property(readonly, nonatomic) double width;
@property(readonly, copy, nonatomic) TSUColor *color;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
- (id)init;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;
- (void)populateGSSPStroke:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (void)saveToPropertyCommandMessage:(struct Message *)arg1 archiver:(id)arg2;
- (id)initFromPropertyCommandMessage:(const struct Message *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
- (id)strokeImageForPopupMenu:(double)arg1;
- (id)strokeImageForContentsScale:(double)arg1 withSize:(struct CGSize)arg2;
- (BOOL)isPortalStroke;
- (BOOL)isEqualToStroke:(id)arg1;
@property(readonly, nonatomic) BOOL solid;
@property(readonly, nonatomic) BOOL empty;
@property(readonly, nonatomic) BOOL dontClearBackground;
- (BOOL)isEquivalentForPreset:(id)arg1;
- (id)initWithQDStroke:(id)arg1;
- (void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

