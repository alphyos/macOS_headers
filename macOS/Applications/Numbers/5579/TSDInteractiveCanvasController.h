//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDBackgroundLayoutAndRenderStateDelegate-Protocol.h"
#import "TSDCanvasDelegate-Protocol.h"
#import "TSDCanvasProxyDelegate-Protocol.h"
#import "TSDCollaboratorCursorHUDControllerDelegate-Protocol.h"
#import "TSDDynamicCanvasDelegate-Protocol.h"
#import "TSDErrorPresenter-Protocol.h"
#import "TSDPencilAnnotationGeometryHelper-Protocol.h"
#import "TSDRepTrackerDelegateCreation-Protocol.h"
#import "TSDTilingLayerDelegate-Protocol.h"
#import "TSKChangeSourceObserver-Protocol.h"
#import "TSKScrollViewDelegate-Protocol.h"

@class CALayer, NSArray, NSFormatter, NSMutableArray, NSMutableSet, NSNumberFormatter, NSSet, NSString, TSDBackgroundLayoutAndRenderState, TSDCanvas, TSDCanvasAnimation, TSDCanvasLayer, TSDCanvasView, TSDContainerRep, TSDDynamicOperationController, TSDEditorController, TSDGestureDispatcher, TSDGuideController, TSDInteractiveCanvasLayerHelper, TSDLayoutController, TSDMacGestureRuntime, TSDSelectionModelTranslator, TSDTrackerManipulatorCoordinator, TSDUserDefinedGuideController, TSKAccessController, TSKChangeNotifier, TSKCollaborationDocumentSessionController, TSKCommandController, TSKDocumentRoot, TSKSelectionPath, TSKSelectionPathTransformer, TSPObject, TSPObjectContext, TSUPointerKeyDictionary;
@protocol TSDAnnotation, TSDAnnotationController, TSDAnnotationViewController, TSDCanvasEditor, TSDCanvasLayerHosting, TSDCanvasProxyDelegate, TSDInteractiveCanvasControllerCollaboratorCursorDelegate, TSDInteractiveCanvasControllerDelegate, TSDMediaReplacer, TSDMutableContainerInfo, TSDRulerController, TSKDocumentRootProvider;

@interface TSDInteractiveCanvasController : NSObject <TSDDynamicCanvasDelegate, TSDCanvasProxyDelegate, TSDCollaboratorCursorHUDControllerDelegate, TSDCanvasDelegate, TSDErrorPresenter, TSKChangeSourceObserver, TSKScrollViewDelegate, TSDBackgroundLayoutAndRenderStateDelegate, TSDRepTrackerDelegateCreation, TSDTilingLayerDelegate, TSDPencilAnnotationGeometryHelper>
{
    id <TSDInteractiveCanvasControllerCollaboratorCursorDelegate> mCollaboratorCursorDelegate;
    id <TSDInteractiveCanvasControllerDelegate> mDelegate;
    BOOL mCreateRepsForOffscreenLayouts;
    TSDInteractiveCanvasLayerHelper *mLayerHelper;
    NSObject<TSDCanvasEditor> *mCanvasEditor;
    BOOL mHasBeenTornDown;
    TSDCanvas *mCanvas;
    id <TSDCanvasLayerHosting> mLayerHost;
    id mObservedDocumentRoot;
    TSDEditorController *mEditorController;
    TSDGuideController *mGuideController;
    TSDUserDefinedGuideController *mUserDefinedGuideController;
    BOOL mHadLayerHost;
    BOOL mLayerHostHasBeenTornDown;
    NSFormatter *mUnitFormatter;
    NSNumberFormatter *mNumberFormatter;
    BOOL mResizeCanvasOnLayout;
    BOOL mShouldCanvasScrollingSizeGrowToFitContent;
    struct CGRect mUnscaledRectToGrowCanvasDuringDynamicOperation;
    struct CGRect mRectToIncludeWhenGrowingCanvasToFitContent;
    BOOL mOverlayLayerSuppressed;
    NSMutableArray *mDecorators;
    BOOL mShowGrayOverlay;
    unsigned long long mDynamicOperationState;
    // Error parsing type: Ai, name: mDynamicOperationCounter
    BOOL mInReadMode;
    BOOL mInVersionBrowsingMode;
    BOOL mInSharedReadOnlyMode;
    struct CGColor *mSelectionHighlightColor;
    BOOL mShowInvisibleObjects;
    long long mIsFetchingEditorController;
    BOOL mSelectionIsCurrentlyOnscreen;
    BOOL mDidTransform;
    TSDCanvasAnimation *mCurrentAnimation;
    TSDTrackerManipulatorCoordinator *mTMCoordinator;
    TSDDynamicOperationController *mDynOpController;
    NSObject<TSDRulerController> *mRulerController;
    NSMutableSet *mCurrentLobbySessions;
    TSUPointerKeyDictionary *mLobbySessionToCollaboratorHUDControllerDictionary;
    TSUPointerKeyDictionary *mLobbySessionToCollaboratorHUDControllerDictionaryForFastSizing;
    NSSet *mRepsPreviouslyShowingCollabCursors;
    BOOL mCollaboratorCursorsInvalidated;
    TSDGestureDispatcher *mGestureDispatcher;
    TSDMacGestureRuntime *mMacGestureRuntime;
    struct CGRect mVisibleBoundsRectForTiling;
    struct CGRect mVisibleUnscaledRect;
    struct CGRect mUnobscuredScrollViewFrame;
    TSDBackgroundLayoutAndRenderState *mBackgroundLayoutAndRenderState;
    BOOL mLayoutAndRenderOnThreadDuringScroll;
    BOOL mTemporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
    BOOL mCurrentlyScrolling;
    BOOL mAnimatingScroll;
    BOOL mNeedsInvalidateLayersOnMainThread;
    BOOL mTextGesturesInFlight;
    BOOL mSelectionDidChangeDuringTextGestures;
    BOOL mDidSuppressScrollToSelectionDuringTextGestures;
    BOOL mShouldAnimateScrollAfterTextGestures;
    BOOL mSuspendedLowPriorityThreadDispatcher;
    BOOL mCurrentlyWaitingOnThreadedLayoutAndRender;
    // Error parsing type: Ai, name: mDisableThreadedLayoutAndRender
    // Error parsing type: Ai, name: mEnableBeginningThreadedLayoutAndRender
    BOOL mShouldSuppressRendering;
    BOOL mSupportsBackgroundTileRendering;
    NSMutableSet *mNotificationsToPostWithValidLayouts;
    NSMutableArray *mLayersWithZoomFadeAnimation;
    BOOL mDynamicallyZooming;
    double mDynamicViewScale;
    BOOL mUsesAlternateDrawableSelectionHighlight;
    BOOL mAnimatingViewScale;
    BOOL mSuppressingKeyboard;
    struct CGPoint mZoomCenterInBounds;
    NSMutableArray *mBackgroundRenderingObjects;
    id <TSDAnnotationViewController> mAnnotationViewController;
    BOOL mShouldClipThemeContentToCanvas;
    BOOL mShowUserDefinedGuides;
    BOOL mIsDraggingToInsertDrawables;
    TSKSelectionPath *mSelectionPathToScrollTo;
    unsigned long long mOptionsForScrollingToSelection;
    BOOL mSelectionShouldBeClearedInDidProcessAllChanges;
    TSKSelectionPathTransformer *mSelectionPathTransformer;
    NSMutableSet *mVisibleLobbySessions;
    BOOL mDiscardingEdits;
    BOOL mShowsComments;
    BOOL mPencilAnnotationsHidden;
    BOOL mPreventSettingNilEditorOnTextResponder;
    BOOL mSuppressesCollaboratorHUD;
}

+ (double)smallRepOutsetForHitTesting;
+ (id)keyPathsForValuesAffectingCurrentViewScale;
+ (id)keyPathsForValuesAffectingViewScale;
+ (id)keyPathsForValuesAffectingEditorController;
+ (id)keyPathsForValuesAffectingDocumentRoot;
+ (BOOL)selectorIsActionMethod:(SEL)arg1;
@property(nonatomic) BOOL supportsBackgroundTileRendering; // @synthesize supportsBackgroundTileRendering=mSupportsBackgroundTileRendering;
@property(nonatomic) BOOL showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) BOOL inReadMode; // @synthesize inReadMode=mInReadMode;
@property(nonatomic) BOOL inSharedReadOnlyMode; // @synthesize inSharedReadOnlyMode=mInSharedReadOnlyMode;
@property(nonatomic) BOOL inVersionBrowsingMode; // @synthesize inVersionBrowsingMode=mInVersionBrowsingMode;
@property(nonatomic) BOOL suppressesCollaboratorHUD; // @synthesize suppressesCollaboratorHUD=mSuppressesCollaboratorHUD;
@property(nonatomic) BOOL showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) BOOL overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(nonatomic) BOOL shouldClipThemeContentToCanvas; // @synthesize shouldClipThemeContentToCanvas=mShouldClipThemeContentToCanvas;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(readonly, nonatomic) BOOL currentlyScrolling; // @synthesize currentlyScrolling=mCurrentlyScrolling;
@property(readonly, nonatomic) BOOL currentlyWaitingOnThreadedLayoutAndRender; // @synthesize currentlyWaitingOnThreadedLayoutAndRender=mCurrentlyWaitingOnThreadedLayoutAndRender;
@property(nonatomic) BOOL layoutAndRenderOnThreadDuringScroll; // @synthesize layoutAndRenderOnThreadDuringScroll=mLayoutAndRenderOnThreadDuringScroll;
@property(nonatomic) BOOL createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(readonly, nonatomic, getter=isDiscardingEdits) BOOL discardingEdits; // @synthesize discardingEdits=mDiscardingEdits;
@property(nonatomic) BOOL isDraggingToInsertDrawables; // @synthesize isDraggingToInsertDrawables=mIsDraggingToInsertDrawables;
@property(nonatomic) BOOL preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(retain, nonatomic) NSObject<TSDCanvasEditor> *canvasEditor; // @synthesize canvasEditor=mCanvasEditor;
@property(nonatomic) BOOL shouldCanvasScrollingSizeGrowToFitContent; // @synthesize shouldCanvasScrollingSizeGrowToFitContent=mShouldCanvasScrollingSizeGrowToFitContent;
@property(nonatomic) BOOL resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(retain, nonatomic) id <TSDAnnotationViewController> annotationViewController; // @synthesize annotationViewController=mAnnotationViewController;
@property(nonatomic) BOOL pencilAnnotationsHidden; // @synthesize pencilAnnotationsHidden=mPencilAnnotationsHidden;
@property(nonatomic) BOOL showsComments; // @synthesize showsComments=mShowsComments;
@property(nonatomic) __weak NSObject<TSDRulerController> *rulerController; // @synthesize rulerController=mRulerController;
@property(nonatomic) BOOL textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(readonly, nonatomic) BOOL animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) BOOL shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(nonatomic) __weak id <TSDInteractiveCanvasControllerCollaboratorCursorDelegate> collaboratorCursorDelegate; // @synthesize collaboratorCursorDelegate=mCollaboratorCursorDelegate;
@property(nonatomic) __weak id <TSDInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) __weak id <TSDCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
- (void).cxx_destruct;
@property(readonly, nonatomic) id canvasReferenceController;
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (void)p_syncWithLayoutThread;
- (struct CGRect)outsetSelectionRect:(struct CGRect)arg1;
- (void)p_setTargetPointSize:(double)arg1;
- (double)targetPointSize;
@property(readonly, nonatomic) double defaultTargetPointSize;
- (void)p_selectionDoneChangingWithFlags:(unsigned long long)arg1;
- (void)p_selectionPathDidChange;
- (void)p_textGesturesDidEndNotification:(id)arg1;
- (void)p_textGesturesWillBeginNotification:(id)arg1;
- (void)p_rulerUnitsDidChangeNotification:(id)arg1;
- (void)p_viewScrollingEnded;
- (BOOL)p_shouldLayoutAndRenderOnThread;
- (void)performBlockWhileAllowingBeginningBackgroundThreadedLayoutAndRender:(CDUnknownBlockType)arg1;
- (BOOL)i_temporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
- (void)enableThreadedLayoutAndRender;
- (void)disableThreadedLayoutAndRender;
- (id)p_backgroundLayoutAndRenderState;
- (void)p_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;
- (BOOL)i_isRepContentPlatformView:(id)arg1;
- (void)p_updateCanvasSizeFromLayouts;
- (void)i_setNeedsInvalidateLayersOnMainThread;
- (void)p_postNotificationOnMainThreadWithValidLayouts:(id)arg1;
- (id)i_descriptionForViewScale:(double)arg1 zoomMethod:(long long)arg2;
- (id)i_currentAnimation;
- (BOOL)i_inPrintPreviewMode;
- (BOOL)i_shouldSuppressFontSmoothing;
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;
- (void)i_repNeedsDisplay:(id)arg1;
- (void)i_recordUserViewScale;
- (void)i_viewScrollingEnded;
- (void)i_viewScrollDidChange;
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(BOOL)arg2 isFastPinch:(BOOL)arg3;
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2 isFastPinch:(BOOL)arg3;
- (void)i_viewScaleDidChange;
- (void)i_canvasWideGamutValueDidChange;
- (void)i_canvasContentsScaleDidChange;
- (void)viewDidEndZooming;
- (void)i_viewDidZoomToViewScale:(double)arg1;
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;
- (void)i_viewWillBeginZooming;
- (void)i_layout;
- (void)i_canvasWillLayout:(id)arg1;
- (void)i_layoutUnregistered:(id)arg1;
- (void)i_layoutRegistered:(id)arg1;
- (void)setAnimationCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (void)setAnimationRepeatAutoreverses:(BOOL)arg1;
- (void)setAnimationRepeatCount:(float)arg1;
- (void)setAnimationTimingFunction:(id)arg1;
- (void)setAnimationStartDate:(id)arg1;
- (void)setAnimationDelay:(double)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationDidStopSelector:(SEL)arg1;
- (void)setAnimationWillStartSelector:(SEL)arg1;
- (void)setAnimationDelegate:(id)arg1;
- (void)commitAnimations;
- (void)beginAnimations:(id)arg1 context:(void *)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)i_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
- (BOOL)selectionPathContainsOnlyInfosOnCanvas:(id)arg1;
- (void)didProcessAllChanges;
- (BOOL)shouldCancelScrollingToSelectionPath:(id)arg1 forChanges:(id)arg2 withChangeSource:(id)arg3;
- (void)preprocessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)p_setCurrentlyScrolling:(BOOL)arg1;
- (void)scrollViewDidChangeAdjustedContentInset:(id)arg1;
- (void)contentInsetsDidChangeForScrollView:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)updateTrackingAreasForScrollView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(id)arg1;
- (void)backgroundLayoutAndRenderState:(id)arg1 performWorkInBackgroundTilingOnly:(BOOL)arg2;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (BOOL)mustDrawTilingLayerOnMainThread:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (BOOL)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (BOOL)canDrawTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (BOOL)shouldLayoutTilingLayer:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (BOOL)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (BOOL)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(BOOL)arg2;
- (id)p_hitAnnotationDecoratorReps:(id)arg1 withPoint:(struct CGPoint)arg2;
- (id)hitRepAnnotationDecoratorAtUnscaledPoint:(struct CGPoint)arg1;
- (id)hitRepChromeAtUnscaledPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL shouldAcceptFirstMouse;
@property(readonly, retain, nonatomic) TSDMacGestureRuntime *macGestureRuntime;
@property(readonly, retain, nonatomic) TSDGestureDispatcher *gestureDispatcher;
@property(readonly, retain, nonatomic) TSDTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) TSDDynamicOperationController *dynamicOperationController;
- (void)p_endZoomingOperation;
- (void)p_beginZoomingOperation;
- (void)endScrollingOperation;
- (void)beginScrollingOperation;
- (void)i_invalidateSelectionHighlightLayers;
@property(nonatomic) BOOL usesAlternateDrawableSelectionHighlight;
@property(readonly, nonatomic) BOOL isInCollaborationMode;
@property(readonly, nonatomic) BOOL shouldAllowKeyCommands;
- (BOOL)isInInspectorDynamicOperation;
- (void)endPossiblyParallelInspectorDynamicOperation;
- (void)beginPossiblyParallelInspectorDynamicOperation;
@property(readonly, nonatomic) BOOL isDynamicOperationEnding;
@property(readonly, nonatomic) BOOL isInDynamicOperation;
- (void)endDynamicOperation;
- (void)willEndDynamicOperation;
- (void)beginDynamicOperation;
- (void)actionGhostKnobHitForRep:(id)arg1;
- (BOOL)canCustomizeHyperlinkViewController;
- (BOOL)canPresentHyperlinkViewController;
@property(readonly, nonatomic) BOOL alwaysOpenHyperlinkEditorInEditMode;
- (void)toggleHyperlinkUIForRep:(id)arg1;
@property(readonly, nonatomic) double visibleCanvasWidth;
@property(readonly, nonatomic) double contentsScale;
- (void)positionDidUpdateForCollaboratorHUDController:(id)arg1;
- (void)updatePositionForCollaboratorHUDController:(id)arg1;
- (void)removeCollaboratorHUDController:(id)arg1;
- (void)addCollaboratorHUDController:(id)arg1;
- (id)filteredMainCanvasRestoredSelectionPath:(id)arg1;
- (void)setShouldSuppressesCollaboratorHUD:(BOOL)arg1;
- (void)removeAllCollaboratorHUDControllers;
- (BOOL)p_canShowCollaboratorCursorHUDOnInfo:(id)arg1;
- (id)p_layoutForShowingCollaboratorCursorHUDAtSelectionPath:(id)arg1;
- (CDStruct_8a598304)p_collaboratorHUDPositionForSelectionPath:(id)arg1 lobbySession:(id)arg2 allowScroll:(BOOL)arg3 hudSize:(unsigned long long)arg4;
- (void)hideCollaboratorHUDForCollaborator:(id)arg1;
- (void)p_showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(BOOL)arg3 hudSize:(unsigned long long)arg4;
- (void)showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(BOOL)arg3;
- (void)scrollToCollaborator:(id)arg1 withSelectionPath:(id)arg2;
@property(readonly, nonatomic) NSSet *currentLobbySessions;
- (void)collaboratorCursorSelectionPathChangedFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2 lobbySession:(id)arg3;
- (id)p_repsForCollaboratorCursorSelectionPath:(id)arg1;
- (BOOL)hasAnnotations;
- (void)previousAnnotationBeforeVisibleAnnotation:(id)arg1;
- (void)nextAnnotationAfterVisibleAnnotation:(id)arg1;
- (void)previousAnnotation:(id)arg1;
- (void)nextAnnotation:(id)arg1;
@property(readonly, nonatomic) id <TSDAnnotationController> annotationController;
- (BOOL)attachedCommentsAllowedForDrawable:(id)arg1;
- (void)annotationWasClickedOrTapped:(id)arg1 onItemThatIsSelectable:(BOOL)arg2;
- (BOOL)annotationsPresentedViaSidebar;
- (void)endHoverOverAnnotation;
- (void)beginHoverOverAnnotation:(id)arg1;
- (void)hideDisplayedAnnotation;
@property(readonly, nonatomic) unsigned int annotationPreferredRectEdge;
@property(readonly, nonatomic) struct CGSize annotationPopoverSize;
@property(readonly, nonatomic) id <TSDAnnotation> displayedAnnotation;
- (struct CGRect)selectionPathRectForPencilAnnotationSelectionPath:(id)arg1 attachedType:(long long)arg2 withLayout:(id)arg3;
- (void)showAnnotation:(id)arg1 beginEditing:(BOOL)arg2 pinned:(BOOL)arg3 shouldSetSelection:(BOOL)arg4 viaHoverOverKnob:(BOOL)arg5;
- (void)setAnnotationAuthorColor:(id)arg1;
- (void)invalidateComments;
- (BOOL)shouldDisplayCommentForAuthor:(id)arg1 info:(id)arg2;
- (BOOL)shouldDisplayCommentUIForInfo:(id)arg1;
- (BOOL)shouldAllowAnnotationRollover;
- (void)addOrShowComment:(id)arg1;
- (void)showOrHideComments:(id)arg1;
- (id)currentAnnotationAuthorCreatingIfNecessary;
- (id)currentAnnotationAuthorInStorage;
- (id)currentAnnotationAuthorPrivateID;
@property(readonly, copy, nonatomic) NSString *currentAnnotationAuthorName;
- (void)getCurrentAnnotationAuthorCreatingIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showOrHidePencilAnnotations:(id)arg1;
@property(readonly, nonatomic) NSArray *i_decorators;
- (void)removeDecorator:(id)arg1;
- (void)addDecorator:(id)arg1;
- (void)closeOverlays;
@property(readonly, nonatomic) CALayer *overlayLayer;
@property(readonly, nonatomic) BOOL shouldPopKnobsOutsideEnclosingScrollView;
- (id)actionGhostKnobForRep:(id)arg1;
@property(readonly, nonatomic) BOOL shouldShowOnRepHyperlinkUI;
- (int)defaultKnobTypeForRep:(id)arg1;
@property(readonly, nonatomic) BOOL shouldShowPathHighlightOnUnselectedInvisibleShapes;
@property(readonly, nonatomic) BOOL shouldEverShowPathHighlightOnInvisibleShapes;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
@property(readonly, nonatomic) CALayer *repContainerLayer;
- (void)layoutIfNeededIncludingLayerTreeIfYouKnowWhatYouAreDoing;
- (void)layoutIfNeeded;
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelectionPath:(id)arg2;
- (id)layoutForInfoNearestVisibleRect:(id)arg1;
- (id)layoutsForInfo:(id)arg1 intersectingSelectionPath:(id)arg2;
- (id)layoutForSelectionPath:(id)arg1;
- (id)layoutForInfo:(id)arg1;
- (id)layoutsForSelectionPath:(id)arg1;
- (id)layoutsForInfo:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1;
@property(readonly, nonatomic) TSDLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 returningRep:(id *)arg2;
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inRep:(id)arg2 minDistance:(double *)arg3 hitKnob:(id *)arg4 hitRep:(id *)arg5;
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRepIgnoringClickThrough:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSArray *topLevelRepsForHitTesting;
@property(readonly, nonatomic) NSArray *topLevelRepsForDragSelecting;
@property(readonly, nonatomic) TSPObject<TSDMutableContainerInfo> *topLevelContainerInfoForEditing;
@property(readonly, nonatomic) TSDContainerRep *topLevelContainerRepForEditing;
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;
- (id)unitStringForAngle:(double)arg1;
- (id)unitStringForNumber:(double)arg1;
- (id)unitStringForSize:(struct CGSize)arg1;
- (id)unitStringForPoint:(struct CGPoint)arg1;
- (struct CGSize)rulerCenterOffsetSizeForPoint:(struct CGPoint)arg1;
- (id)numberFormatter;
- (id)unitFormatter;
- (BOOL)i_shouldAttemptToPreserveContentOffsetAfterFixFrame;
- (struct CGRect)growUnscaledCanvasLayerRect:(struct CGRect)arg1;
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
@property(readonly, nonatomic) BOOL allowNegativeAutoscroll;
@property(readonly, nonatomic) BOOL allowAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
- (struct CGRect)p_calculateVisibleUnscaledRect;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(BOOL)arg1 respectObscuredFrame:(BOOL)arg2 respectSafeArea:(BOOL)arg3;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
@property(readonly, nonatomic) BOOL allowedToEditMask;
- (void)discardRepForClassChange:(id)arg1;
- (void)recreateAllLayoutsAndReps;
- (id)layerForRep:(id)arg1;
- (id)repForLayout:(id)arg1;
- (id)p_repForLayout:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)repForInfo:(id)arg1;
- (id)repForInfo:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)repsForInfo:(id)arg1;
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;
- (void)clearLayoutsForTopLevelContainerChange;
@property(copy, nonatomic) NSArray *infosToDisplay;
- (id)localizedPercentStringForAlignmentGuide:(id)arg1;
- (id)provideUserDefinedGuides;
- (void)transformGuides:(id)arg1 forLayout:(id)arg2;
- (BOOL)shouldGenerateGuidesForLayout:(id)arg1;
- (id)provideDynamicGuidesForLayout:(id)arg1;
- (struct CGRect)boundingRectForActiveGuidesForPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) NSArray *infosForGuides;
- (double)offsetForTranslatingGuidesInStorage:(id)arg1 guideType:(int)arg2;
- (double)offsetForTranslatingToCenterRulerForGuidesInStorage:(id)arg1 guideType:(int)arg2;
- (void)translateGuides:(id)arg1 toContainerRect:(struct CGRect)arg2;
- (void)clipGuideToContainer:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (void)translateGuide:(id)arg1 toContainerRect:(struct CGRect)arg2;
- (struct CGRect)visualContainerRectForGuideStorage:(id)arg1;
- (id)guideStorageProviderAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) BOOL supportsUserDefinedGuides;
@property(readonly, nonatomic) TSDUserDefinedGuideController *userDefinedGuideController;
@property(readonly, nonatomic) Class userDefinedGuideControllerClass;
@property(readonly, nonatomic) TSDGuideController *guideController;
- (void)makeUserDefinedGuidesVisible;
- (void)toggleShouldShowUserDefinedGuides;
@property(nonatomic) BOOL shouldShowUserDefinedGuides;
@property(readonly, nonatomic) BOOL shouldShowInstructionalText;
@property(readonly, nonatomic) BOOL shouldShowTextOverflowGlyphs;
- (BOOL)isPrinting;
@property(readonly, nonatomic) BOOL isCanvasInteractive;
- (BOOL)spellCheckingSuppressed;
- (BOOL)spellCheckingSupported;
@property(readonly, nonatomic) struct CGRect visibleScaledRectForCanvasUI;
@property(readonly, nonatomic) id <TSDMediaReplacer> mediaReplacer;
@property(readonly, nonatomic) BOOL hasMediaReplacer;
- (void)hideRuler;
- (void)displayRulerDragUIForGuideType:(int)arg1 andOffset:(double)arg2;
- (void)displayRulerForRect:(struct CGRect)arg1;
- (void)displayRulerWithSlowFade:(BOOL)arg1;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (struct CGColor *)newDefaultSelectionHighlightColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;
- (void)setNeedsDisplayOnLayer:(id)arg1;
- (void)updateCanvasViewSubviewFrames;
- (struct CGSize)p_sizeOfScrollViewEnclosingCanvasForVisibleCanvasCalculations;
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
@property(readonly, nonatomic) struct CGPoint contentOffset;
- (void)setContentOffset:(struct CGPoint)arg1 scrollOptions:(unsigned long long)arg2;
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;
- (void)scrollRectToVisible:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;
- (struct CGPoint)p_contentOffsetToScrollRectToVisible:(struct CGRect)arg1 shouldCenterVertically:(BOOL)arg2 forceCentering:(BOOL)arg3;
- (void)updateScrollViewContentOffsetIfNeeded;
- (void)unobscuredFrameDidChange;
- (void)p_updateUnobscuredFrame;
- (struct CGRect)unobscuredFrameOfView:(id)arg1;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(BOOL)arg3;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(BOOL)arg3 animated:(BOOL)arg4;
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 animated:(BOOL)arg3;
@property(readonly, nonatomic) BOOL shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2;
- (void)p_notifyRepsForChangeFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2;
- (void)p_editorControllerSelectionPathDidChange:(id)arg1;
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)resumeEditing;
- (void)updateLayerForRep:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)setShouldSuppressRendering:(BOOL)arg1 animated:(BOOL)arg2;
- (void)invalidateLayers;
- (void)invalidateVisibleBounds;
- (void)invalidateReps;
- (void)layoutInvalidated;
- (void)p_scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;
- (struct CGPoint)p_computeClampedUnscaledContentOffsetWithTargetRect:(struct CGRect)arg1 selectionContextRectWhenZooming:(struct CGRect)arg2 viewScale:(double)arg3 unscaledOutset:(double)arg4;
- (double)p_safeAreaMargin;
- (void)clearOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;
- (void)setOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;
- (void)p_clearSelectionScrollingState;
- (void)scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;
- (void)cancelScrollToCurrentSelectionPathAfterLayout;
- (void)scrollToCurrentSelectionPathAfterLayoutWithOptions:(unsigned long long)arg1;
- (void)scrollToCurrentSelectionPathAfterLayout;
- (struct CGRect)p_scaledRectToScrollToForSelectionPath:(id)arg1 shouldCenterVertically:(BOOL)arg2;
- (void)forLayoutNearestVisibleRectForInfosForSelectionPath:(id)arg1 performBlock:(CDUnknownBlockType)arg2;
- (CDStruct_486845e0)p_scrollingInformationForSelectionPath:(id)arg1 allowZoom:(BOOL)arg2;
- (struct CGRect)rectInRootForScrollingToSelectionPath:(id)arg1 onLayout:(id)arg2 allowingZooming:(BOOL)arg3;
- (void)endTransformingSelectionPath;
- (void)transformSelectionPathWithOperationTransformer:(id)arg1;
- (void)beginTransformingSelectionPath;
- (void)setSelectionPath:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)scrollSearchReferenceToVisible:(id)arg1 scrollOptions:(unsigned long long)arg2;
- (void)scrollCurrentSelectionToVisibleWithOptions:(unsigned long long)arg1;
- (id)infoToScrollToForSelectionPath:(id)arg1;
@property(readonly, nonatomic) NSSet *containersForSelection;
@property(readonly, nonatomic) BOOL hasSelectedInfosInMultipleContainers;
@property(readonly, nonatomic) BOOL hasNonInteractiveInfosSelected;
- (BOOL)currentSelectionPathContainsInfo:(id)arg1;
@property(readonly, copy, nonatomic) NSSet *infosForCurrentSelectionPath;
- (id)modelsForSelectionPath:(id)arg1;
- (id)infosForSelectionPath:(id)arg1;
@property(readonly, nonatomic) TSDSelectionModelTranslator *selectionModelTranslator;
- (id)infoForSelectionPath:(id)arg1;
@property(readonly, nonatomic) BOOL shouldZoomOnSelectionChange;
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;
- (double)p_targetViewScaleForUnscaledRect:(struct CGRect)arg1;
- (void)zoomToSelectionPath:(id)arg1;
- (void)zoomToFitAllContent;
- (void)zoomToCurrentSelection;
@property(readonly, nonatomic) struct CGPoint smartZoomCenterForNoSelection;
@property(readonly, nonatomic) BOOL canZoomToCurrentSelection;
- (void)endEditingDiscardingEdits;
- (void)endEditingWithFlags:(unsigned long long)arg1;
- (void)endEditing;
- (id)newCanvasEditor;
@property(readonly, nonatomic) TSDEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeCanvasLayoutObserver:(id)arg1 name:(id)arg2;
- (void)addCanvasLayoutObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3;
@property(readonly, nonatomic) id <TSDCanvasProxyDelegate> canvasProxyDelegate;
- (void)canvas:(id)arg1 createdRep:(id)arg2;
- (id)additionalVisibleInfosForCanvas:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;
- (void)updateLayerTreeForInteractiveCanvas:(id)arg1;
- (void)p_validateLayerSuppressionAPIAccess;
- (void)i_endSuppressingLayerUpdates;
- (void)i_beginSuppressingLayerUpdatesExceptForReps:(id)arg1;
@property(readonly, nonatomic) BOOL i_currentlySuppressingLayerUpdates;
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;
- (BOOL)p_currentSelectionIsOnscreen;
- (void)p_documentSessionControllerDidUpdateRevision:(id)arg1;
- (void)canvasDidLayout:(id)arg1;
- (void)canvasDidValidateLayouts:(id)arg1;
- (void)canvasWillValidateLayouts:(id)arg1;
- (void)i_canvasDidUpdateVisibleBounds;
- (void)canvasLayoutInvalidated:(id)arg1;
@property(readonly, nonatomic) BOOL isPrintingCanvas;
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
@property(readonly, nonatomic) TSKCollaborationDocumentSessionController *collaborationDocumentSessionController;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property(readonly, nonatomic) TSKCommandController *commandController;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) id <TSKDocumentRootProvider> documentRootProvider;
@property(readonly, nonatomic) BOOL textMagnifierIsUp;
- (void)removeBackgroundRenderingObject:(id)arg1;
- (void)addBackgroundRenderingObject:(id)arg1;
- (void)teardownBackgroundRendering;
- (void)i_layerHostHasBeenTornDown;
- (void)teardown;
- (void)p_teardownCanvasEditor;
- (void)forwardInvocation:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (void)p_commonInit;
- (void)removeCommonObservers;
- (void)addCommonObservers;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

