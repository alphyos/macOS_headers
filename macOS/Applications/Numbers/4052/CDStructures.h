//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class EDString, NSDate, NSIndexSet, NSObject, NSSet, NSString, NSUUID, TSCH3DAnimationInterpolation, TSCH3DChartRep, TSCH3DScene, TSCH3DShaderVariable, TSCHChartInfo, TSCHChartSeriesType, TSCHChartType, TSTCell, TSUCustomFormat;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTNodeArrayArchive;

struct ASTNodeArrayArchive_ASTStickyBits;

struct ASTNodeArrayArchive_ASTUidList;

struct ASTNodeArrayArchive_ASTUidTract {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive_ASTUidList *_field5;
    struct ASTNodeArrayArchive_ASTUidList *_field6;
    _Bool _field7;
    int _field8;
};

struct ASTNodeArrayArchive_ASTUidTractList {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> _field5;
    struct ASTNodeArrayArchive_ASTStickyBits *_field6;
};

struct AbstractGuideCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSD::UserDefinedGuideArchive> _field6;
    struct RepeatedPtrField<TSD::UserDefinedGuideArchive> _field7;
};

struct AbstractStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
};

struct AcceptHash {
    UUIDData_5fbc143e _field1;
    vector_dadc1b26 _field2;
    id _field3;
    int _field4;
};

struct Action;

struct ActionFinder;

struct ActiveLabelsTypeBounds {
    long long _field1;
    struct ObjcSharedPtr<NSMutableIndexSet> _field2;
    struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> _field3;
};

struct ActivityLogEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    struct Date *_field7;
    struct Reference *_field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    struct Reference *_field10;
    unsigned int _field11;
};

struct AddCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct UUID *_field7;
};

struct AddIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
};

struct Address {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Address *_field6;
};

struct AdjustedColor {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct AnchorAttachmentCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    float _field8;
    unsigned int _field9;
    float _field10;
    unsigned int _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned int _field15;
    float _field16;
};

struct ApplyPlaceholderTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct UndoTransaction *_field9;
    basic_string_a1f69cfb *_field10;
};

struct ApplyRubyTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    basic_string_a1f69cfb *_field9;
    struct UndoTransaction *_field10;
};

struct ArchiveInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long identifier_;
    struct RepeatedPtrField<TSP::MessageInfo> message_infos_;
    _Bool should_merge_;
};

struct ArgumentPlaceholderNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ArrayNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AttributeSpecs {
    unsigned long long stride;
    unsigned long long offset;
    unsigned long long components;
};

struct AxisGridLocation {
    char _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    tvec3_17f03ce0 _field4;
};

struct AxisLabelCacheItem;

struct AxisParentChildren {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct ChVector<int> _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct BarElementInfo {
    char _field1;
    float _field2;
    char _field3;
    unsigned long long _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    char hasTopBevel;
    char hasBottomBevel;
    char isCylindrical;
    char isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BarIntercept {
    double _field1;
    id _field2;
};

struct BaseApplyPresetCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct BaseShapeStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFillArchive *_field5;
    struct SpecStrokeArchive *_field6;
    struct SpecDoubleArchive *_field7;
    struct SpecShadowArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct SpecReflectionArchive *_field16;
    struct SpecLineEndArchive *_field17;
    struct SpecLineEndArchive *_field18;
};

struct BaseStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct BezierPathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Size *_field6;
    struct Path *_field7;
};

struct BookmarkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct BooleanCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
};

struct BooleanNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    _Bool _field6;
};

struct BufferStates {
    struct array<TSCH3D::GLSingleState, 2> states;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CC_SHA1state_st {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8[16];
    int _field9;
};

struct CDESelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct CFUUIDArchive;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGContext;

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CHDDataPoint {
    unsigned long long index;
    struct EDValue value;
    unsigned long long contentFormatId;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct CachedLabelBounds {
    tvec3_17f03ce0 _field1;
    box_80622335 _field2;
    tvec2_84d5962d _field3;
    struct ObjcSharedPtr<NSString> _field4;
};

struct CalloutPathSourceArchive;

struct CanvasSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct Reference *_field6;
};

struct CanvasSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCollectionSelectionTransformerHelperArchive *_field5;
};

struct CellBorderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    int _field7;
    int _field8;
    struct StrokeArchive *_field9;
    struct StrokeArchive *_field10;
    int _field11;
    int _field12;
};

struct CellCoordinateVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field5;
};

struct CellFillStandIn {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct CellID;

struct CellRange;

struct CellRegion {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
};

struct CellStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CellStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CellStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    _Bool _field8;
    int _field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct PaddingArchive *_field12;
    struct StrokeArchive *_field13;
    struct StrokeArchive *_field14;
    struct StrokeArchive *_field15;
    struct StrokeArchive *_field16;
};

struct CellUIDArchive;

struct CellUIDListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    RepeatedPtrField_bfda3daa _field6;
    RepeatedField_c2891982 _field7;
    RepeatedField_c2891982 _field8;
};

struct CellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BooleanCellValueArchive *_field5;
    struct DateCellValueArchive *_field6;
    struct NumberCellValueArchive *_field7;
    struct StringCellValueArchive *_field8;
    int _field9;
};

struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> {
    struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> _field1;
};

struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> {
    struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> _field1;
};

struct ChMap<unsigned int, int, CsLess<unsigned int>> {
    struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field1;
};

struct ChStack<EshHeader> {
    struct EshHeader *_field1;
    struct EshHeader *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChStack<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<CsString *> {
    struct CsString **_field1;
    struct CsString **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshComputedRect> {
    struct EshComputedRect *_field1;
    struct EshComputedRect *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshComputedValue> {
    struct EshComputedValue *_field1;
    struct EshComputedValue *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshFormula> {
    struct EshFormula *_field1;
    struct EshFormula *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshHeader *> {
    struct EshHeader **_field1;
    struct EshHeader **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshPathCommand> {
    struct EshPathCommand *_field1;
    struct EshPathCommand *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlBrk *> {
    struct XlBrk **_field1;
    struct XlBrk **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlCell *> {
    struct XlCell **_field1;
    struct XlCell **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlCellRow *> {
    struct XlCellRow **_field1;
    struct XlCellRow **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartBinaryReader::PlotDescriptor> {
    struct PlotDescriptor *_field1;
    struct PlotDescriptor *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartBinaryReader::SeriesDescriptor> {
    struct SeriesDescriptor *_field1;
    struct SeriesDescriptor *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartCustomLabelText *> {
    struct XlChartCustomLabelText **_field1;
    struct XlChartCustomLabelText **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartCustomLegend *> {
    struct XlChartCustomLegend **_field1;
    struct XlChartCustomLegend **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartFBI> {
    struct XlChartFBI *_field1;
    struct XlChartFBI *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartPlot::DefText> {
    struct DefText *_field1;
    struct DefText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartSeriesFormat *> {
    struct XlChartSeriesFormat **_field1;
    struct XlChartSeriesFormat **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartTextFrame::TextRun> {
    struct TextRun *_field1;
    struct TextRun *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlConditionalFormat *> {
    struct XlConditionalFormat **_field1;
    struct XlConditionalFormat **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlFmtPtg *> {
    struct XlFmtPtg **_field1;
    struct XlFmtPtg **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlFont *> {
    struct XlFont **_field1;
    struct XlFont **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlGraphicsInfo::XlObjData *> {
    struct XlObjData **_field1;
    struct XlObjData **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlLink *> {
    struct XlLink **_field1;
    struct XlLink **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlRecord *> {
    struct XlRecord **_field1;
    struct XlRecord **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlXf *> {
    struct XlXf **_field1;
    struct XlXf **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlXti *> {
    struct XlXti **_field1;
    struct XlXti **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<float> {
    float *_field1;
    float *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<short *> {
    short **_field1;
    short **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<unsigned int> {
    unsigned int *_field1;
    unsigned int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<unsigned short> {
    unsigned short *_field1;
    unsigned short *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChangeDocumentPackageTypeCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    int _field6;
    int _field7;
};

struct CharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CharacterStyleChangePropertyCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    struct RepeatedPtrField<TSWP::CharacterStylePropertyChangeSetArchive> _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct CharacterStyleCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    struct RepeatedPtrField<TSWP::CharacterStyleOrNil_GArchive> _field7;
    _Bool _field8;
    _Bool _field9;
};

struct CharacterStyleOrNil_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct CharacterStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    float _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    basic_string_a1f69cfb *_field9;
    struct Color *_field10;
    basic_string_a1f69cfb *_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    struct Color *_field23;
    struct ShadowArchive *_field24;
    float _field25;
    float _field26;
    struct Color *_field27;
    struct Color *_field28;
    float _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct Color *_field34;
    float _field35;
    int _field36;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field37;
    basic_string_a1f69cfb *_field38;
    basic_string_a1f69cfb *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    int _field43;
};

struct CharacterStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecDoubleArchive *_field4;
    struct SpecIntegerArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecStringArchive *_field7;
    struct SpecBoolArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecBoolArchive *_field17;
    struct SpecColorArchive *_field18;
    struct SpecFontFeaturesArchive *_field19;
    struct SpecStringArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecStringArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecDoubleArchive *_field34;
    struct SpecColorArchive *_field35;
    struct SpecShadowArchive *_field36;
    struct SpecColorArchive *_field37;
    struct SpecIntegerArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecIntegerArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecColorArchive *_field49;
    struct SpecDoubleArchive *_field50;
    struct SpecColorArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecDoubleArchive *_field53;
    struct SpecBoolArchive *_field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    struct SpecBoolArchive *_field60;
    struct SpecIntegerArchive *_field61;
    int _field62;
};

struct Chart3DBaseImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    float _field6;
};

struct Chart3DDiffuseMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DDirectionalLightArchive;

struct Chart3DEmissiveMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DEnvironmentMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> _field6;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field7;
    _Bool _field8;
};

struct Chart3DEnvironmentPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> _field5;
};

struct Chart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DLightingModelArchive *_field5;
    basic_string_a1f69cfb *_field6;
    int _field7;
    unsigned int _field8;
};

struct Chart3DFixedFunctionLightingModelArchive;

struct Chart3DImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DBaseImageTextureTilingArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
};

struct Chart3DLightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Chart3DVectorArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    struct Chart3DVectorArchive *_field9;
    float _field10;
    unsigned int _field11;
    struct Chart3DPointLightArchive *_field12;
    struct Chart3DDirectionalLightArchive *_field13;
    struct Chart3DSpotLightArchive *_field14;
    _Bool _field15;
};

struct Chart3DLightingModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DPhongLightingModelArchive *_field5;
    struct Chart3DFixedFunctionLightingModelArchive *_field6;
    struct Chart3DEnvironmentPackageArchive *_field7;
};

struct Chart3DLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<TSCH::Chart3DLightArchive> _field6;
};

struct Chart3DModulateMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DPhongLightingModelArchive;

struct Chart3DPhongMaterialPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DEmissiveMaterialArchive *_field5;
    struct Chart3DDiffuseMaterialArchive *_field6;
    struct Chart3DModulateMaterialArchive *_field7;
    struct Chart3DSpecularMaterialArchive *_field8;
    struct Chart3DShininessMaterialArchive *_field9;
};

struct Chart3DPointLightArchive;

struct Chart3DShininessMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpecularMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpotLightArchive;

struct Chart3DTSPImageDataTextureArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DataReference *_field5;
    struct DataReference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct Chart3DTexturesMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> _field6;
};

struct Chart3DVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct ChartAnimationElementInfo {
    id _field1;
    id _field2;
    float _field3;
    id _field4;
    id _field5;
    tvec2_3b141483 _field6;
    unsigned long long _field7;
    id _field8;
};

struct ChartAnimationTimeRanges {
    box_e9f23397 elementsRange;
    box_e9f23397 valueLabelsRange;
    box_e9f23397 gridlinesRange;
    box_e9f23397 labelsRange;
    box_e9f23397 shadowBlendRange;
    char gridlinesEaseInEaseOut;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> growPerElementInterpolation;
    char blendDynamicShadows;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> labelsInterpolation;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> valueLabelsInterpolation;
};

struct ChartArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    int _field6;
    int _field7;
    struct RectArchive *_field8;
    struct Reference *_field9;
    struct ChartGridArchive *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    RepeatedPtrField_a0d2dbe7 _field16;
    RepeatedPtrField_a0d2dbe7 _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedPtrField_a0d2dbe7 _field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    RepeatedPtrField_a0d2dbe7 _field24;
    struct SparseReferenceArray *_field25;
    struct SparseReferenceArray *_field26;
    RepeatedPtrField_a0d2dbe7 _field27;
    struct Reference *_field28;
    unsigned int _field29;
};

struct ChartAxisGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct FormatStructArchive *_field4;
    struct FormatStructArchive *_field5;
    struct StrokeArchive *_field6;
    float _field7;
    int _field8;
    struct FormatStructArchive *_field9;
    struct FormatStructArchive *_field10;
    int _field11;
    int _field12;
    float _field13;
    float _field14;
    struct ShadowArchive *_field15;
    struct StrokeArchive *_field16;
    struct ShadowArchive *_field17;
    struct StrokeArchive *_field18;
    float _field19;
    int _field20;
    struct FormatStructArchive *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    int _field37;
    basic_string_a1f69cfb *_field38;
    struct ChartsNSNumberDoubleArchive *_field39;
    int _field40;
    int _field41;
    struct ChartsNSNumberDoubleArchive *_field42;
    int _field43;
};

struct ChartAxisIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    unsigned int _field6;
};

struct ChartAxisNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecFormatObjectArchive *_field4;
    struct SpecNumberFormatArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecFormatObjectArchive *_field7;
    struct SpecFormatObjectArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecNumberFormatArchive *_field17;
    struct SpecIntegerArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecIntegerArchive *_field20;
    struct SpecIntegerArchive *_field21;
    struct SpecBoolArchive *_field22;
    struct SpecIntegerArchive *_field23;
    struct SpecBoolArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecBoolArchive *_field33;
    struct SpecBoolArchive *_field34;
    struct SpecBoolArchive *_field35;
    struct SpecBoolArchive *_field36;
    struct SpecBoolArchive *_field37;
    struct SpecBoolArchive *_field38;
    struct SpecStringArchive *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    struct SpecStringArchive *_field47;
    struct SpecChartsOptionalDoubleArchiveArchive *_field48;
    struct SpecChartsOptionalDoubleArchiveArchive *_field49;
    int _field50;
};

struct ChartAxisStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct SpecDoubleArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecStrokeArchive *_field7;
    struct SpecStrokeArchive *_field8;
    struct SpecIntegerArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecIntegerArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecIntegerArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecDoubleArchive *_field24;
    struct SpecDoubleArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecShadowArchive *_field34;
    struct SpecShadowArchive *_field35;
    struct SpecStrokeArchive *_field36;
    struct SpecStrokeArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecShadowArchive *_field40;
    struct SpecShadowArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecStrokeArchive *_field50;
    struct SpecStrokeArchive *_field51;
    struct SpecBoolArchive *_field52;
    struct SpecBoolArchive *_field53;
    struct SpecBoolArchive *_field54;
    struct SpecBoolArchive *_field55;
    struct SpecBoolArchive *_field56;
    struct SpecBoolArchive *_field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct SpecBoolArchive *_field66;
    struct SpecBoolArchive *_field67;
    struct SpecBoolArchive *_field68;
    struct SpecBoolArchive *_field69;
    struct SpecBoolArchive *_field70;
    struct SpecBoolArchive *_field71;
    struct SpecIntegerArchive *_field72;
    struct SpecIntegerArchive *_field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    struct SpecIntegerArchive *_field82;
    struct SpecIntegerArchive *_field83;
    struct SpecIntegerArchive *_field84;
    struct SpecIntegerArchive *_field85;
    _Bool _field86;
};

struct ChartCDESelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UUIDPath *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct ChartFillSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    unsigned int _field8;
};

struct ChartGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    struct Chart3DLightingPackageArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    struct Chart3DVectorArchive *_field9;
    float _field10;
    float _field11;
    struct Chart3DVectorArchive *_field12;
    struct FillArchive *_field13;
    struct StrokeArchive *_field14;
    struct ShadowArchive *_field15;
    struct StrokeArchive *_field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    struct FillArchive *_field22;
    int _field23;
    float _field24;
    float _field25;
    float _field26;
    int _field27;
    float _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    struct Color *_field32;
    basic_string_a1f69cfb *_field33;
};

struct ChartGridArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_236b8a23 _field5;
    RepeatedPtrField_236b8a23 _field6;
    int _field7;
    _Bool _field8;
    struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> _field9;
};

struct ChartGrowAnimationState {
    float _field1;
    struct ClipPlaneState _field2;
    char _field3;
    char _field4;
    char _field5;
    tmat4x4_3074befe _field6;
    tmat4x4_3074befe _field7;
};

struct ChartInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct ChartModelArchive *_field6;
    struct Reference *_field7;
    struct LegendModelArchive *_field8;
    struct RectArchive *_field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
    RepeatedPtrField_a0d2dbe7 _field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    int _field15;
    int _field16;
    struct SparseReferenceArray *_field17;
    struct SparseReferenceArray *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Point *_field21;
    struct Reference *_field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    int _field24;
    int _field25;
    _Bool _field26;
};

struct ChartLabelsContainingLabelRenderInfo {
    id _field1;
    tvec2_3b141483 _field2;
    tvec2_3b141483 _field3;
    id _field4;
    tvec3_17f03ce0 _field5;
    tvec3_17f03ce0 _field6;
    unsigned int _field7;
    tvec2_84d5962d _field8;
    float _field9;
    tvec2_84d5962d _field10;
    float _field11;
};

struct ChartLegendNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct ChartLegendStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFillArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecDoubleArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct SpecShadowArchive *_field13;
    struct SpecStrokeArchive *_field14;
};

struct ChartMediatorFormulaStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field7;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field8;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field9;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field10;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field11;
    int _field12;
};

struct ChartModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    RepeatedField_27dfe32f _field7;
    struct ChartGridArchive *_field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecIntegerArchive *_field4;
    struct SpecBoolArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecChart3dVectorArchive *_field7;
    struct SpecChart3dVectorArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecChart3dVectorArchive *_field17;
    struct SpecChart3dVectorArchive *_field18;
    struct SpecChart3dVectorArchive *_field19;
    struct SpecChart3dVectorArchive *_field20;
    struct SpecChart3dVectorArchive *_field21;
    struct SpecChart3dVectorArchive *_field22;
    struct SpecIntegerArchive *_field23;
    struct SpecIntegerArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecDoubleArchive *_field33;
    struct SpecBoolArchive *_field34;
    struct SpecBoolArchive *_field35;
    struct SpecBoolArchive *_field36;
    struct SpecStringArchive *_field37;
    _Bool _field38;
    _Bool _field39;
    int _field40;
};

struct ChartProjectedBoundsConverter {
    struct ChartProjectedBoundsSpaces *_field1;
    float _field2;
    _Bool _field3;
    tvec2_84d5962d _field4;
};

struct ChartProjectedBoundsSpaces {
    box_80622335 mChart;
    box_80622335 mOrient;
    box_80622335 mDrawing;
    box_80622335 mLayout;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayout;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
};

struct ChartRefLineSubselectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSubselectionTransformerHelperArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
};

struct ChartReferenceLineNonStyleItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct UUID *_field6;
};

struct ChartReferenceLineNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecChartsOptionalDoubleArchiveArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecBoolArchive *_field7;
    struct SpecBoolArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    struct SpecBoolArchive *_field15;
    struct SpecIntegerArchive *_field16;
};

struct ChartReferenceLineStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecIntegerArchive *_field5;
    struct SpecShadowArchive *_field6;
    struct SpecStrokeArchive *_field7;
    struct SpecIntegerArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct ChartRepRenderIndexSet {
    TSCH3DChartRep *rep;
    char built;
    struct ObjcSharedPtr<NSIndexSet> series;
    long long seriesIndex;
    struct ObjcSharedPtr<NSIndexSet> values;
    long long currentChunk;
};

struct ChartSceneInfo {
    TSCH3DScene *scene;
    TSCHChartInfo *chartInfo;
    TSCHChartType *chartType;
    TSCHChartSeriesType *seriesType;
    CDStruct_2671d966 layoutSettings;
};

struct ChartScenePropertyAccessor {
    id _field1;
    id _field2;
};

struct ChartSelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSelectionPathTypeArchive *_field5;
    struct ChartSelectionPathArchive *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> _field7;
};

struct ChartSelectionPathTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
};

struct ChartSeriesGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct FormatStructArchive *_field5;
    struct FormatStructArchive *_field6;
    struct FormatStructArchive *_field7;
    struct FormatStructArchive *_field8;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field9;
    float _field10;
    float _field11;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field12;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field13;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field14;
    struct LineEndArchive *_field15;
    float _field16;
    float _field17;
    struct LineEndArchive *_field18;
    float _field19;
    int _field20;
    struct ShadowArchive *_field21;
    int _field22;
    float _field23;
    struct StrokeArchive *_field24;
    float _field25;
    int _field26;
    struct StrokeArchive *_field27;
    struct FillArchive *_field28;
    int _field29;
    float _field30;
    int _field31;
    int _field32;
    struct FormatStructArchive *_field33;
    int _field34;
    float _field35;
    struct FormatStructArchive *_field36;
    int _field37;
    int _field38;
    struct ShadowArchive *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    struct StrokeArchive *_field48;
    struct FillArchive *_field49;
    int _field50;
    float _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
    int _field56;
    struct StrokeArchive *_field57;
    float _field58;
    float _field59;
    basic_string_a1f69cfb *_field60;
    int _field61;
    int _field62;
    float _field63;
    float _field64;
    struct ShadowArchive *_field65;
    _Bool _field66;
    _Bool _field67;
    int _field68;
    struct StrokeArchive *_field69;
    float _field70;
    int _field71;
    float _field72;
    int _field73;
    int _field74;
    int _field75;
    float _field76;
    int _field77;
};

struct ChartSeriesNonStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[5];
    int _field4;
    struct SpecFormatObjectArchive *_field5;
    struct SpecNumberFormatArchive *_field6;
    struct SpecNumberFormatArchive *_field7;
    struct SpecDoubleArchive *_field8;
    struct SpecFormatObjectArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecFormatObjectArchive *_field18;
    struct SpecChartErrorBarCustomDataArchive *_field19;
    struct SpecChartErrorBarCustomDataArchive *_field20;
    struct SpecChartErrorBarCustomDataArchive *_field21;
    struct SpecChartErrorBarCustomDataArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecDoubleArchive *_field24;
    struct SpecDoubleArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecDoubleArchive *_field34;
    struct SpecIntegerArchive *_field35;
    struct SpecIntegerArchive *_field36;
    struct SpecDoubleArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecIntegerArchive *_field39;
    struct SpecIntegerArchive *_field40;
    struct SpecDoubleArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecIntegerArchive *_field50;
    struct SpecIntegerArchive *_field51;
    struct SpecIntegerArchive *_field52;
    struct SpecIntegerArchive *_field53;
    struct SpecNumberFormatArchive *_field54;
    struct SpecNumberFormatArchive *_field55;
    struct SpecIntegerArchive *_field56;
    struct SpecIntegerArchive *_field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct SpecNumberFormatArchive *_field66;
    struct SpecIntegerArchive *_field67;
    struct SpecBoolArchive *_field68;
    struct SpecBoolArchive *_field69;
    struct SpecBoolArchive *_field70;
    struct SpecBoolArchive *_field71;
    struct SpecBoolArchive *_field72;
    struct SpecBoolArchive *_field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    struct SpecBoolArchive *_field82;
    struct SpecBoolArchive *_field83;
    struct SpecBoolArchive *_field84;
    struct SpecBoolArchive *_field85;
    struct SpecBoolArchive *_field86;
    struct SpecBoolArchive *_field87;
    struct SpecBoolArchive *_field88;
    struct SpecBoolArchive *_field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
    _Bool _field94;
    _Bool _field95;
    _Bool _field96;
    _Bool _field97;
    struct SpecBoolArchive *_field98;
    struct SpecBoolArchive *_field99;
    struct SpecBoolArchive *_field100;
    struct SpecBoolArchive *_field101;
    struct SpecBoolArchive *_field102;
    struct SpecBoolArchive *_field103;
    struct SpecBoolArchive *_field104;
    struct SpecBoolArchive *_field105;
    _Bool _field106;
    _Bool _field107;
    _Bool _field108;
    _Bool _field109;
    _Bool _field110;
    _Bool _field111;
    _Bool _field112;
    _Bool _field113;
    struct SpecBoolArchive *_field114;
    struct SpecIntegerArchive *_field115;
    struct SpecIntegerArchive *_field116;
    struct SpecIntegerArchive *_field117;
    struct SpecIntegerArchive *_field118;
    struct SpecIntegerArchive *_field119;
    struct SpecIntegerArchive *_field120;
    struct SpecDoubleArchive *_field121;
    _Bool _field122;
    _Bool _field123;
    _Bool _field124;
    _Bool _field125;
    _Bool _field126;
    _Bool _field127;
    _Bool _field128;
    _Bool _field129;
    struct SpecDoubleArchive *_field130;
    struct SpecStringArchive *_field131;
    struct SpecIntegerArchive *_field132;
    struct SpecIntegerArchive *_field133;
    struct SpecDoubleArchive *_field134;
    struct SpecDoubleArchive *_field135;
    struct SpecBoolArchive *_field136;
    struct SpecBoolArchive *_field137;
    _Bool _field138;
    _Bool _field139;
    _Bool _field140;
    _Bool _field141;
    _Bool _field142;
    _Bool _field143;
    _Bool _field144;
    _Bool _field145;
    struct SpecBoolArchive *_field146;
    struct SpecIntegerArchive *_field147;
    struct SpecIntegerArchive *_field148;
    struct SpecIntegerArchive *_field149;
    struct SpecDoubleArchive *_field150;
    struct SpecIntegerArchive *_field151;
    _Bool _field152;
    _Bool _field153;
    _Bool _field154;
};

struct ChartSeriesStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[7];
    int _field4;
    struct SpecLineEndArchive *_field5;
    struct SpecLineEndArchive *_field6;
    struct SpecShadowArchive *_field7;
    struct SpecStrokeArchive *_field8;
    struct SpecStrokeArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecFillArchive *_field18;
    struct SpecFillArchive *_field19;
    struct SpecFillArchive *_field20;
    struct SpecFillArchive *_field21;
    struct SpecFillArchive *_field22;
    struct SpecFillArchive *_field23;
    struct SpecFillArchive *_field24;
    struct SpecFillArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecFillArchive *_field34;
    struct SpecFillArchive *_field35;
    struct SpecFillArchive *_field36;
    struct SpecFillArchive *_field37;
    struct SpecIntegerArchive *_field38;
    struct SpecIntegerArchive *_field39;
    struct SpecIntegerArchive *_field40;
    struct SpecIntegerArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecIntegerArchive *_field50;
    struct SpecIntegerArchive *_field51;
    struct SpecDoubleArchive *_field52;
    struct SpecIntegerArchive *_field53;
    struct SpecIntegerArchive *_field54;
    struct SpecIntegerArchive *_field55;
    struct SpecIntegerArchive *_field56;
    struct SpecIntegerArchive *_field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct SpecShadowArchive *_field66;
    struct SpecShadowArchive *_field67;
    struct SpecShadowArchive *_field68;
    struct SpecShadowArchive *_field69;
    struct SpecShadowArchive *_field70;
    struct SpecShadowArchive *_field71;
    struct SpecShadowArchive *_field72;
    struct SpecShadowArchive *_field73;
    _Bool _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    struct SpecShadowArchive *_field82;
    struct SpecShadowArchive *_field83;
    struct SpecShadowArchive *_field84;
    struct SpecShadowArchive *_field85;
    struct SpecShadowArchive *_field86;
    struct SpecShadowArchive *_field87;
    struct SpecShadowArchive *_field88;
    struct SpecStrokeArchive *_field89;
    _Bool _field90;
    _Bool _field91;
    _Bool _field92;
    _Bool _field93;
    _Bool _field94;
    _Bool _field95;
    _Bool _field96;
    _Bool _field97;
    struct SpecStrokeArchive *_field98;
    struct SpecStrokeArchive *_field99;
    struct SpecStrokeArchive *_field100;
    struct SpecStrokeArchive *_field101;
    struct SpecStrokeArchive *_field102;
    struct SpecStrokeArchive *_field103;
    struct SpecStrokeArchive *_field104;
    struct SpecStrokeArchive *_field105;
    _Bool _field106;
    _Bool _field107;
    _Bool _field108;
    _Bool _field109;
    _Bool _field110;
    _Bool _field111;
    _Bool _field112;
    _Bool _field113;
    struct SpecFillArchive *_field114;
    struct SpecFillArchive *_field115;
    struct SpecFillArchive *_field116;
    struct SpecFillArchive *_field117;
    struct SpecFillArchive *_field118;
    struct SpecFillArchive *_field119;
    struct SpecBoolArchive *_field120;
    struct SpecBoolArchive *_field121;
    _Bool _field122;
    _Bool _field123;
    _Bool _field124;
    _Bool _field125;
    _Bool _field126;
    _Bool _field127;
    _Bool _field128;
    _Bool _field129;
    struct SpecBoolArchive *_field130;
    struct SpecBoolArchive *_field131;
    struct SpecBoolArchive *_field132;
    struct SpecBoolArchive *_field133;
    struct SpecBoolArchive *_field134;
    struct SpecBoolArchive *_field135;
    struct SpecBoolArchive *_field136;
    struct SpecBoolArchive *_field137;
    _Bool _field138;
    _Bool _field139;
    _Bool _field140;
    _Bool _field141;
    _Bool _field142;
    _Bool _field143;
    _Bool _field144;
    _Bool _field145;
    struct SpecDoubleArchive *_field146;
    struct SpecDoubleArchive *_field147;
    struct SpecDoubleArchive *_field148;
    struct SpecDoubleArchive *_field149;
    struct SpecDoubleArchive *_field150;
    struct SpecStrokeArchive *_field151;
    struct SpecStrokeArchive *_field152;
    struct SpecStrokeArchive *_field153;
    _Bool _field154;
    _Bool _field155;
    _Bool _field156;
    _Bool _field157;
    _Bool _field158;
    _Bool _field159;
    _Bool _field160;
    _Bool _field161;
    struct SpecStrokeArchive *_field162;
    struct SpecStrokeArchive *_field163;
    struct SpecStrokeArchive *_field164;
    struct SpecShadowArchive *_field165;
    struct SpecStrokeArchive *_field166;
    struct SpecDoubleArchive *_field167;
    struct SpecIntegerArchive *_field168;
    struct SpecDoubleArchive *_field169;
    _Bool _field170;
    _Bool _field171;
    _Bool _field172;
    _Bool _field173;
    _Bool _field174;
    _Bool _field175;
    _Bool _field176;
    _Bool _field177;
    struct SpecIntegerArchive *_field178;
    struct SpecIntegerArchive *_field179;
    struct SpecIntegerArchive *_field180;
    struct SpecIntegerArchive *_field181;
    struct SpecIntegerArchive *_field182;
    struct SpecIntegerArchive *_field183;
    struct SpecIntegerArchive *_field184;
    struct SpecIntegerArchive *_field185;
    _Bool _field186;
    _Bool _field187;
    _Bool _field188;
    _Bool _field189;
    _Bool _field190;
    _Bool _field191;
    _Bool _field192;
    _Bool _field193;
    struct SpecIntegerArchive *_field194;
    struct SpecIntegerArchive *_field195;
    struct SpecIntegerArchive *_field196;
    struct SpecIntegerArchive *_field197;
    _Bool _field198;
};

struct ChartStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecDoubleArchive *_field4;
    struct SpecChart3dLightingPackageArchive *_field5;
    struct SpecChart3dLightingPackageArchive *_field6;
    struct SpecChart3dLightingPackageArchive *_field7;
    struct SpecChart3dLightingPackageArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecChart3dLightingPackageArchive *_field17;
    struct SpecChart3dLightingPackageArchive *_field18;
    struct SpecFillArchive *_field19;
    struct SpecStrokeArchive *_field20;
    struct SpecDoubleArchive *_field21;
    struct SpecShadowArchive *_field22;
    struct SpecStrokeArchive *_field23;
    struct SpecBoolArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecFillArchive *_field34;
    struct SpecDoubleArchive *_field35;
    struct SpecDoubleArchive *_field36;
    struct SpecDoubleArchive *_field37;
    struct SpecBoolArchive *_field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    struct SpecColorArchive *_field44;
    struct SpecIntegerArchive *_field45;
    int _field46;
};

struct ChartSubselectionIdentityTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSubselectionTransformerHelperArchive *_field5;
};

struct ChartSubselectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
};

struct ChartSubselectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct ChartTextSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct ChartUIState {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
};

struct ChartsNSArrayOfNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedField<double> _field5;
};

struct ChartsNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct ChartsNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
    unsigned int _field7;
    basic_string_a1f69cfb *_field8;
    int _field9;
    int _field10;
    basic_string_a1f69cfb *_field11;
    unsigned int _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned int _field18;
    double _field19;
    RepeatedPtrField_236b8a23 _field20;
    struct IndexSet *_field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    basic_string_a1f69cfb *_field26;
    basic_string_a1f69cfb *_field27;
    unsigned int _field28;
};

struct ClipPlaneState {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tmat4x4_3074befe _field3;
    plane_849e6053 _field4[2];
};

struct CollaborationCommandHistoryItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    unsigned long long _field9;
};

struct ColorResult {
    char _field1;
    struct Color {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
};

struct ColumnOrRowGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    struct UUID *_field7;
    struct UUID *_field8;
    RepeatedPtrField_bfda3daa _field9;
    struct RepeatedPtrField<TST::ColumnRowMetadataArchive> _field10;
};

struct ColumnOrRowUuidsInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct IndexedUidsArchive *_field7;
    struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> _field8;
    struct RangeCoordinateArchive *_field9;
    struct UUID *_field10;
    _Bool _field11;
};

struct ColumnRowMetadataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct UUID *_field8;
    unsigned int _field9;
};

struct ColumnRowRestoreDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    struct RepeatedPtrField<TST::ColumnRowMetadataArchive> _field6;
};

struct ColumnStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct ColumnStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ColumnStylePropertiesArchive;

struct ColumnStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColumnsArchive *_field5;
    struct SpecBoolArchive *_field6;
    struct SpecPaddingArchive *_field7;
    struct SpecDoubleArchive *_field8;
    struct SpecPaddingArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecBoolArchive *_field18;
    struct SpecIntegerArchive *_field19;
    struct SpecBoolArchive *_field20;
    struct SpecIntegerArchive *_field21;
    _Bool _field22;
};

struct ColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ColumnsArchive_EqualColumnsArchive *_field5;
    struct ColumnsArchive_NonEqualColumnsArchive *_field6;
};

struct ColumnsArchive_EqualColumnsArchive;

struct ColumnsArchive_NonEqualColumnsArchive;

struct CommandApplyCellMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    RepeatedPtrField_bfda3daa _field9;
    unsigned int _field10;
};

struct CommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct CommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    struct IndexSet *_field7;
    basic_string_a1f69cfb *_field8;
};

struct CommandMutateCellFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    struct CellUIDListArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    unsigned int _field9;
};

struct CommandPropertyEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    float _field9;
    double _field10;
    basic_string_a1f69cfb *_field11;
    struct Reference *_field12;
};

struct CommandPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSS::CommandPropertyEntryArchive> _field5;
};

struct CommandRowColumnRangeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableCommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct CommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SelectionPathArchive *_field5;
    struct SelectionPathArchive *_field6;
    struct SelectionPathArchive *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct Reference *_field11;
    struct Reference *_field12;
    RepeatedPtrField_a0d2dbe7 _field13;
};

struct CommandSetChartTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartCommandArchive *_field5;
    int _field6;
    int _field7;
    RepeatedPtrField_bfda3daa _field8;
    RepeatedPtrField_bfda3daa _field9;
    RepeatedPtrField_bfda3daa _field10;
    RepeatedPtrField_bfda3daa _field11;
    RepeatedPtrField_bfda3daa _field12;
    int _field13;
    _Bool _field14;
    _Bool _field15;
    RepeatedPtrField_bfda3daa _field16;
};

struct CommentInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
};

struct CommentInvalidatingCommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandSelectionBehaviorArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct CommentStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Date *_field6;
    struct Reference *_field7;
};

struct CompletionTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TokenAttachmentArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ComponentExternalReferenceInfo {
    long long _field1;
    char _field2;
};

struct ComponentInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    RepeatedField_27dfe32f _field8;
    int _field9;
    RepeatedField_27dfe32f _field10;
    int _field11;
    RepeatedPtrField_1f1a6efb _field12;
    struct RepeatedPtrField<TSP::ComponentDataReference> _field13;
    RepeatedPtrField_c964a194 _field14;
    struct RepeatedPtrField<TSP::FeatureInfo> _field15;
    unsigned long long _field16;
    _Bool _field17;
};

struct ConnectionLineArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
};

struct ConnectionLinePathSourceArchive;

struct ContactShadowArchive;

struct ContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct CopyingFileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
};

struct CopyingOutputStream;

struct CopyingOutputStreamAdaptor {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingOutputStream *_field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    struct scoped_array<unsigned char> _field6;
    int _field7;
    int _field8;
};

struct CreateHyperlinkCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    _Bool _field8;
    _Bool _field9;
};

struct CsColour {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct CsData {
    unsigned int _field1;
    char *_field2;
};

struct CsPoint<int> {
    int _field1[2];
};

struct CsRect<float> {
    float _field1[4];
};

struct CsRect<int> {
    int _field1[4];
};

struct CsSimpleHeapVector<XlFont> {
    struct ChVector<XlFont *> _field1;
};

struct CsSimpleHeapVector<XlRecord> {
    struct ChVector<XlRecord *> _field1;
};

struct CsSimpleHeapVector<XlXf> {
    struct ChVector<XlXf *> _field1;
};

struct CsString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct CurvedShadowArchive;

struct CustomFormatArchive;

struct DEPRECATEDChart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Chart3DLightingModelArchive *_field6;
    basic_string_a1f69cfb *_field7;
    int _field8;
    unsigned int _field9;
};

struct DataAttributes {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 mSize;
    unsigned long long mComponents;
    char mHasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced mSize;
    unsigned long long mComponents;
};

struct DataBufferInfo {
    int componentType;
    unsigned long long components;
    unsigned long long count;
    unsigned long long byteSize;
    unsigned long long componentByteSize;
    unsigned long long elementByteSize;
};

struct DataBufferLevelData {
    void *_field1;
    tvec3_c2818ced _field2;
};

struct DataInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
    basic_string_a1f69cfb *_field10;
    basic_string_a1f69cfb *_field11;
    _Bool _field12;
    int _field13;
    struct DataAttributes *_field14;
    struct EncryptionInfo *_field15;
    basic_string_a1f69cfb *_field16;
};

struct DataReference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
};

struct DataStore {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct HeaderStorage *_field5;
    struct Reference *_field6;
    struct TileStorage *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    unsigned int _field16;
    unsigned int _field17;
    struct TableRBTree *_field18;
    struct TableRBTree *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    unsigned int _field24;
};

struct DatabaseDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    unsigned long long _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct Date {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct DateCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
};

struct DateNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
};

struct DefText;

struct Deprecated_StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    int _field8;
};

struct Deprecated_TableStrokeArchive;

struct Descriptor {
    basic_string_a1f69cfb *_field1;
    basic_string_a1f69cfb *_field2;
    struct FileDescriptor *_field3;
    struct Descriptor *_field4;
    struct MessageOptions *_field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct FieldDescriptor *_field9;
    int _field10;
    struct OneofDescriptor *_field11;
    int _field12;
    struct Descriptor *_field13;
    int _field14;
    struct EnumDescriptor *_field15;
    int _field16;
    struct ExtensionRange *_field17;
    int _field18;
    struct FieldDescriptor *_field19;
};

struct DispatchDataInputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    char *_field7;
};

struct DocumentRevision;

struct DrawableArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    struct ExteriorTextWrapArchive *_field7;
    basic_string_a1f69cfb *_field8;
    struct Reference *_field9;
    basic_string_a1f69cfb *_field10;
    _Bool _field11;
    _Bool _field12;
};

struct DrawableAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    unsigned int _field6;
    float _field7;
    unsigned int _field8;
    float _field9;
};

struct DrawableSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct DrawableSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCollectionSelectionTransformerHelperArchive *_field5;
    struct Reference *_field6;
};

struct DrawableZOrderListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct DrawablesCommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandGroupArchive *_field5;
    struct CanvasSelectionArchive *_field6;
    struct Reference *_field7;
    int _field8;
    _Bool _field9;
    struct Reference *_field10;
};

struct DropShadowArchive;

struct DurationNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct EDAreaReference {
    int firstRow;
    int firstColumn;
    int lastRow;
    int lastColumn;
};

struct EDBuildablePtg {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    unsigned int _field4;
    unsigned short _field5;
    struct EDBuildablePtg *_field6;
    struct EDBuildablePtg *_field7;
    struct EDBuildablePtg *_field8;
    _Bool _field9;
    int _field10;
    unsigned short _field11;
    unsigned short _field12;
};

struct EDCellAnchorMarker {
    int columnIndex;
    float columnAdjustment;
    int rowIndex;
    float rowAdjustment;
};

struct EDCellHeader {
    unsigned int _field1;
    unsigned int _field2;
};

struct EDRowInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
    unsigned int :1;
    unsigned int :1;
};

struct EDToken {
    unsigned short _field1;
    unsigned int _field2;
};

struct EDValue {
    int type;
    _Bool boolean;
    double number;
    EDString *string;
    unsigned long long stringIndex;
    int error;
};

struct EFLexer {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int *_field8;
    struct basic_istream<char, std::__1::char_traits<char>> *_field9;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field10;
    char _field11;
    unsigned long long _field12;
    char *_field13;
    int _field14;
    int _field15;
    int _field16;
    unsigned long long _field17;
    unsigned long long _field18;
    struct yy_buffer_state **_field19;
    int _field20;
    char *_field21;
    int *_field22;
    int *_field23;
    char *_field24;
    int *_field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    union YYSTYPE _field33;
    id _field34;
    char _field35;
    char *_field36;
    struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field37;
    struct basic_istream<char, std::__1::char_traits<char>> *_field38;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field39;
    struct yy_buffer_state *_field40;
};

struct EFRefTok {
    int type;
    unsigned int dataSize;
    unsigned char data[12];
};

struct EFStrTok {
    id _field1;
    int _field2;
    union EFData _field3;
};

struct EITRuleRange {
    double _field1;
    char _field2;
    double _field3;
    char _field4;
    int _field5;
};

struct EdgeDetectionParameters {
    char detectSilhouetteEdges;
    char detectSharpEdges;
    float sharpEdgeThreshold;
};

struct EdgeInsetsArchive;

struct EditableBezierPathSourceArchive;

struct ElementRenderPass {
    int _field1;
};

struct EmptyExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct EnableClipDistances {
    struct array<signed char, 8> states;
};

struct EncryptionInfo;

struct EnumDescriptor;

struct EshBSE {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct EshBlip *_field4;
    unsigned short *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    int _field10;
    unsigned char _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    struct UID _field16;
};

struct EshBlip {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct UID _field4;
};

struct EshCallout {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshColor {
    struct Data {
        int _field1;
        union Value _field2;
    } _field1;
};

struct EshComputedRect;

struct EshComputedValue {
    _Bool _field1;
    int _field2;
};

struct EshContainer {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChVector<EshHeader *> _field4;
};

struct EshContent {
    CDUnknownFunctionPointerType *_field1;
};

struct EshContentData {
    struct EshOpt _field1;
    struct EshOpt _field2;
    struct EshOpt _field3;
    struct EshSp _field4;
    CsRect_0aefebc6 _field5;
};

struct EshDiagram {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshExtrusion {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFill {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFormula;

struct EshGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    CDUnknownFunctionPointerType *_field4;
    struct EshSpgr *_field5;
    struct EshGroupProperties _field6;
    struct EshGroupLocks _field7;
    struct EshDiagram _field8;
};

struct EshGroupLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshGroupProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    struct EshRectAtom *_field4;
};

struct EshHeader {
    int _field1;
    unsigned int _field2;
    short _field3;
    unsigned short _field4;
    unsigned char _field5;
};

struct EshMetafileBlipInfo {
    unsigned short *_field1;
    struct UID _field2;
    struct OcBinaryData _field3;
    int _field4;
    CsRect_0aefebc6 _field5;
    CsPoint_c846a6ec _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
};

struct EshObject {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
};

struct EshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct EshOpt {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> _field4;
    struct EshColor _field5;
};

struct EshParserVisitor;

struct EshPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshPathCommand;

struct EshPathParamTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedValue> _field2;
};

struct EshRecordWriterVisitor;

struct EshRectAtom;

struct EshRoot {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct ChVector<EshHeader *> _field3;
};

struct EshShadow {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
};

struct EshShapeBase {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
};

struct EshShapeDefaults {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    struct EshShapeDefaultsPropertiesImpl _field10;
    struct EshShapeDefaultsImageData _field11;
};

struct EshShapeDefaultsImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeDefaultsPropertiesImpl {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
};

struct EshShapeImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
};

struct EshSkew {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshSp {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct EshSpgr;

struct EshStroke {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
};

struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
};

struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
};

struct EshTextBox {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTextPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct ExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct ExtensionRange;

struct ExtensionSet {
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> _field1;
};

struct ExteriorTextWrapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    _Bool _field10;
};

struct ExteriorTextWrapCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct ExteriorTextWrapArchive *_field6;
    struct ExteriorTextWrapArchive *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    float _field11;
    float _field12;
    _Bool _field13;
};

struct ExternalLabelAttribute {
    id _field1;
    tvec2_84d5962d _field2;
};

struct ExternalReferenceCompletionInfo;

struct ExternalReferenceInfo {
    long long _field1;
    struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> _field2;
};

struct FieldDescriptor;

struct FieldInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct FieldPath *path_;
    int type_;
    int rule_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
};

struct FieldPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    int _field6;
};

struct FileDescriptor;

struct FileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingFileOutputStream _field2;
    struct CopyingOutputStreamAdaptor _field3;
};

struct FillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Color *_field6;
    struct GradientArchive *_field7;
    struct ImageFillArchive *_field8;
};

struct FilterRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaPredicateArchive *_field5;
    _Bool _field6;
};

struct FilterSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    struct RepeatedPtrField<TST::FilterRuleArchive> _field8;
    RepeatedField_27dfe32f _field9;
    RepeatedField_12b14242 _field10;
};

struct FinalCommandPairArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct FinalizeHandlerItem {
    vector_667badbd _field1;
    long long _field2;
    struct vector<long long, std::__1::allocator<long long>> _field3;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
};

struct FindLinesContext {
    char _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct __CFArray *_field4;
    char _field5;
    int _field6;
};

struct FlushResult {
    char _field1;
    char _field2;
};

struct FormatStructArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned int _field15;
    unsigned int _field16;
    basic_string_a1f69cfb *_field17;
    unsigned int _field18;
    unsigned int _field19;
    basic_string_a1f69cfb *_field20;
    double _field21;
    unsigned int _field22;
    unsigned int _field23;
    double _field24;
    double _field25;
    double _field26;
    unsigned int _field27;
    unsigned int _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    RepeatedPtrField_236b8a23 _field38;
    struct IndexSet *_field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    struct UUID *_field44;
    _Bool _field45;
    int _field46;
};

struct FormulaArchive;

struct FormulaEditingCommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ProgressiveCommandGroupArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
};

struct FormulaEqualsTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
};

struct FormulaPredicateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct FormulaRewriteSpecArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct CFUUIDArchive *_field6;
    struct ColumnOrRowUuidsInfoArchive *_field7;
    struct ColumnOrRowUuidsInfoArchive *_field8;
    struct RegionMovedInfoArchive *_field9;
    int _field10;
    _Bool _field11;
    struct RegionInfoArchive *_field12;
    struct RewriteTableIDInfoArchive *_field13;
    struct TableTransposeInfoArchive *_field14;
    struct MergeOriginMovedArchive *_field15;
    struct MergeSourceArchive *_field16;
};

struct FormulaStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> _field5;
    unsigned int _field6;
};

struct FrameArchive;

struct FramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    char linearFilter;
    char discardHint;
};

struct FramebufferBounds {
    id _field1;
    box_80622335 _field2;
    box_80622335 _field3;
    box_80622335 _field4;
};

struct FrustumRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FrustumSlice {
    line_190fbfc7 _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
};

struct FunctionEndNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct FunctionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct GLSingleState {
    unsigned int target;
    struct UpdatableValue<unsigned int> handle;
};

struct GQDTCellID {
    unsigned short mColumn;
    unsigned short mRow;
};

struct GQDTCellRange {
    struct GQDTCellID mTopLeft;
    struct GQDTCellID mBottomRight;
};

struct GQXmlEnumMapping {
    int _field1;
    char *_field2;
};

struct GSSPDecodeConversionContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
};

struct GSSPDeserializationContext {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> _field3;
    struct GSSPRetainer *_field4;
    struct GSSPDecodeConversionContext _field5;
    struct vector<id, std::__1::allocator<id>> _field6;
    struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> _field7;
    id _field8;
};

struct GSSPEncodeConversionContext {
    struct GSSPRetainer *_field1;
    id _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    id _field7;
    struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> _field8;
    struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> _field9;
};

struct GSSPHashKeyBuilder {
    basic_string_a1f69cfb _field1;
    char *_field2;
    unsigned long long _field3;
};

struct GSSPRetainer {
    id _field1;
};

struct GSSPSerializationContext {
    CDUnknownFunctionPointerType *_field1;
};

struct GSSPStringOutputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct GSUNSWrapper<GSSPCalculationEngineAstNode>;

struct GSUNSWrapper<GSSPCalculationEngineAstUidTract>;

struct GSUNSWrapper<GSSPCalculationEngineFormula>;

struct GSUNSWrapper<GSSPCellChange>;

struct GSUNSWrapper<GSSPCellRange>;

struct GSUNSWrapper<GSSPCellUID>;

struct GSUNSWrapper<GSSPChartFormattedAxisData>;

struct GSUNSWrapper<GSSPChartFormattedAxisMultiData>;

struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData>;

struct GSUNSWrapper<GSSPChartGridValue>;

struct GSUNSWrapper<GSSPChartMediatorAxisData>;

struct GSUNSWrapper<GSSPChartMediatorAxisFormat>;

struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>;

struct GSUNSWrapper<GSSPCitationRecord>;

struct GSUNSWrapper<GSSPCustomFormatCondition>;

struct GSUNSWrapper<GSSPImageData>;

struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage>;

struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>;

struct GSUNSWrapper<GSSPPasteboardDrawable>;

struct GSUNSWrapper<GSSPRange>;

struct GSUNSWrapper<GSSPRect>;

struct GSUNSWrapper<GSSPSize>;

struct GSUNSWrapper<GSSPStorageAction>;

struct GSUNSWrapper<GSSPStorageActionGroup>;

struct GSUNSWrapper<GSSPTOCMapEntry>;

struct GSUNSWrapper<GSSPTableChange>;

struct GSUNSWrapper<NSObject>;

struct GSUNSWrapper<NSString>;

struct GSUNSWrapper<NSUUID>;

struct GSUNSWrapper<TSCEOwnerUidMapper>;

struct GSUNSWrapper<TSCHChartAxisID>;

struct GSUNSWrapper<TSCHChartAxisNonStyle>;

struct GSUNSWrapper<TSCHChartAxisStyle>;

struct GSUNSWrapper<TSCHChartSeriesNonStyle>;

struct GSUNSWrapper<TSCHChartSeriesStyle>;

struct GSUNSWrapper<TSCHSelectionPath>;

struct GSUNSWrapper<TSDBezierNode>;

struct GSUNSWrapper<TSDBezierSubpath>;

struct GSUNSWrapper<TSDDrawableInfo>;

struct GSUNSWrapper<TSDUserDefinedGuide>;

struct GSUNSWrapper<TSKCommandResponse>;

struct GSUNSWrapper<TSKImageDigestData>;

struct GSUNSWrapper<TSKMovieDigestData>;

struct GSUNSWrapper<TSKWebQuickLookImage>;

struct GSUNSWrapper<TSSStyle>;

struct GSUNSWrapper<TSTCell>;

struct GSUNSWrapper<TSTColumnRowMetadata>;

struct GSUNSWrapper<TSTConditionalStyleRule>;

struct GSUNSWrapper<TSTMergeAction>;

struct GSUNSWrapper<TSTTableStrokePresetData>;

struct GSUNSWrapper<TSUCustomFormat>;

struct GSUNSWrapper<TSUUUIDPath>;

struct GSUNSWrapper<TSWPCharacterStyleOrNil_G>;

struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>;

struct GSUNSWrapper<TSWPHyperlinkField>;

struct GSUNSWrapper<TSWPListStyle>;

struct GSUNSWrapper<TSWPParagraphStyle>;

struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>;

struct GSUNSWrapper<TSWPStorage>;

struct GSUNSWrapper<TSWPTOCEntryData>;

struct GSUNSWrapper<TSWPTab>;

struct GeometryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct Size *_field6;
    unsigned int _field7;
    float _field8;
};

struct GeometryArrays {
    unsigned int offset;
    unsigned int count;
    unsigned int capoffset;
    unsigned int capcount;
};

struct GeometryResource {
    int _field1;
    struct ObjcSharedPtr<TSCH3DResource> _field2;
    struct GeometryArrays _field3;
    struct ObjcSharedPtr<TSCH3DGeometry> _field4;
};

struct GradientArchive;

struct GradientArchive_GradientStop {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
};

struct GridRow {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::GridValue> _field5;
};

struct GridValue {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct GroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct GroupSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionTransformerArchive *_field5;
};

struct GuideCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractGuideCommandArchive *_field5;
    struct UUIDPath *_field6;
};

struct HeaderStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned int _field6;
};

struct HighlightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
};

struct HyperlinkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct ICESPropertyExportEntry {
    int _field1;
    int _field2;
    CDUnknownFunctionPointerType _field3;
};

struct ICIDMovieDataTimeInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct ICISPropertyConversionEntry {
    int _field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
};

struct IdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
};

struct IdPlacementOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
    int _field7;
};

struct IdentifierNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct ImageAdjustmentsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    _Bool _field17;
    _Bool _field18;
};

struct ImageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct DataReference *_field6;
    struct Reference *_field7;
    struct Size *_field8;
    struct Reference *_field9;
    struct DataReference *_field10;
    struct DataReference *_field11;
    struct Size *_field12;
    struct Path *_field13;
    struct ImageAdjustmentsArchive *_field14;
    unsigned int _field15;
    _Bool _field16;
    struct DataReference *_field17;
    struct DataReference *_field18;
    struct DataReference *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Path *_field23;
};

struct ImageFillArchive;

struct ImageInfoAbstractGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct GeometryArchive *_field6;
    struct GeometryArchive *_field7;
    struct GeometryArchive *_field8;
    struct GeometryArchive *_field9;
    struct PathSourceArchive *_field10;
    struct PathSourceArchive *_field11;
    struct Size *_field12;
    struct Size *_field13;
};

struct ImageReplaceCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    struct DataReference *_field8;
    struct DataReference *_field9;
    struct Path *_field10;
    struct Path *_field11;
    struct Size *_field12;
    struct Size *_field13;
    struct GeometryArchive *_field14;
    struct GeometryArchive *_field15;
    struct GeometryArchive *_field16;
    struct GeometryArchive *_field17;
    struct ImageAdjustmentsArchive *_field18;
    struct DataReference *_field19;
    struct DataReference *_field20;
    struct ImageAdjustmentsArchive *_field21;
    struct DataReference *_field22;
    struct DataReference *_field23;
    struct DataReference *_field24;
    struct DataReference *_field25;
    struct DataReference *_field26;
    struct DataReference *_field27;
    struct Size *_field28;
    struct Size *_field29;
};

struct ImportWarningSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ImportWarningSetArchive_FormulaImportWarning *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    basic_string_a1f69cfb *_field19;
};

struct ImportWarningSetArchive_FormulaImportWarning;

struct ImportWarningSetByCoordinateMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> _field5;
};

struct InNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct IndentParagraphLevelCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedField_c2891982 _field7;
    _Bool _field8;
    _Bool _field9;
};

struct IndexSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
};

struct IndexedUidsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> _field5;
};

struct InducedCommandCollectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    struct IndexSet *_field8;
};

struct InducedVerifyDocumentWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct InducedVerifyObjectsWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    RepeatedPtrField_236b8a23 _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct InfoCollectionSelectionTransformerHelperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_0a3269f6 _field5;
};

struct InfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
};

struct InfoGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoCommandArchive *_field5;
    struct GeometryArchive *_field6;
    struct GeometryArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct InsertAttachmentCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ReplaceTextCommand_GArchive *_field5;
    struct Reference *_field6;
    struct AddIdOperationArgs *_field7;
};

struct InsertionMap {
    UUIDData_5fbc143e _field1;
    UUIDData_5fbc143e _field2;
    UUIDData_5fbc143e _field3;
    vector_dadc1b26 _field4;
};

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct JCColor {
    struct CGColor *_field1;
    struct CGColor *_field2;
};

struct JCHSVColor;

struct JCImageAnalyzer {
    struct JCHSVColor *_field1;
    struct CGSize _field2;
    struct JCColor _field3;
    struct JCColor _field4;
    struct JCColor _field5;
    struct JCColor _field6;
    struct JCColor _field7;
    struct JCColor _field8;
    struct JCColor _field9;
    unsigned int _field10[360];
    unsigned int _field11[256];
    unsigned int _field12[360];
    unsigned int _field13[256];
    unsigned int _field14[256];
    unsigned int _field15[256];
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    struct vector<JCColor, std::__1::allocator<JCColor>> _field25;
    struct vector<sortColorEntry, std::__1::allocator<sortColorEntry>> _field26;
    double _field27;
    double _field28;
};

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    char _field5;
};

struct LabelsMeshRendererLabelInfo {
    id _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
    tvec3_17f03ce0 _field4;
    float _field5;
    tvec2_84d5962d _field6;
    tvec2_84d5962d _field7;
    struct ExternalLabelAttribute *_field8;
};

struct LayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CellRange *_field5;
    struct CellID *_field6;
    struct Size *_field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    struct Size *_field11;
    unsigned int _field12;
};

struct LegendGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    int _field6;
    float _field7;
    struct ShadowArchive *_field8;
    struct StrokeArchive *_field9;
};

struct LegendModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct RectArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct LetNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct LineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Path *_field5;
    struct Point *_field6;
    int _field7;
    _Bool _field8;
    basic_string_a1f69cfb *_field9;
};

struct LineExtrusionGeometryXRangeInfo {
    tvec2_84d5962d _field1;
    char _field2;
};

struct LineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
};

struct ListNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct ListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    RepeatedField_c2891982 _field6;
    RepeatedField_324622b8 _field7;
    RepeatedField_324622b8 _field8;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field9;
    RepeatedField_c2891982 _field10;
    RepeatedPtrField_236b8a23 _field11;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct ShadowArchive *_field17;
    struct Color *_field18;
    basic_string_a1f69cfb *_field19;
    RepeatedField_12b14242 _field20;
    int _field21;
};

struct ListStyleCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    _Bool _field8;
    _Bool _field9;
};

struct ListStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColorArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecListStyleFloatArrayArchive *_field7;
    struct SpecListStyleListLabelGeometryArrayArchive *_field8;
    struct SpecListStyleImageDataArrayArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecListStyleFloatArrayArchive *_field18;
    struct SpecListStyleListNumberTypeArrayArchive *_field19;
    struct SpecListStyleBoolArrayArchive *_field20;
    struct SpecShadowArchive *_field21;
    struct SpecListStyleStringArrayArchive *_field22;
    struct SpecListStyleFloatArrayArchive *_field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    struct SpecListStyleListLabelTypeArrayArchive *_field29;
    struct SpecIntegerArchive *_field30;
};

struct Lookup;

struct MFPColorMatrix {
    float _field1[5][5];
};

struct MaskArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct PathSourceArchive *_field6;
};

struct MaterialShaderVariables {
    TSCH3DShaderVariable *texture;
    TSCH3DShaderVariable *intensity;
    TSCH3DShaderVariable *factor;
    TSCH3DShaderVariable *textureColor;
    TSCH3DShaderVariable *color;
    TSCH3DShaderVariable *modulation;
    TSCH3DShaderVariable *texcoords;
    TSCH3DShaderVariable *textureMatrix;
};

struct MediaInfoGeometryCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InfoGeometryCommandArchive *_field5;
    struct Size *_field6;
    struct Size *_field7;
};

struct MediaStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct MediaStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct MediaStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct ShadowArchive *_field6;
    struct ReflectionArchive *_field7;
    float _field8;
};

struct MediaStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecStrokeArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecShadowArchive *_field7;
    struct SpecReflectionArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct MediaStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseStyleSetValueCommandArchive *_field5;
    struct MediaStylePropertyChangeSetArchive *_field6;
};

struct MergeOperationArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellUIDRangeArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    RepeatedField_27dfe32f _field7;
    int _field8;
};

struct MergeOriginMovedArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
    RepeatedField_27dfe32f _field8;
};

struct MergeOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct FormulaStoreArchive *_field6;
};

struct MergeSourceArchive;

struct MeshData {
    id _field1;
    id _field2;
};

struct Message {
    CDUnknownFunctionPointerType *_field1;
};

struct MessageInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    unsigned int type_;
    unsigned int length_;
    struct RepeatedPtrField<TSP::FieldInfo> field_infos_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_27dfe32f diff_version_;
    int _diff_version_cached_byte_size_;
    struct FieldPath *diff_field_path_;
    RepeatedPtrField_5867f37b fields_to_remove_;
    unsigned int base_message_index_;
};

struct MessageOptions;

struct ModifyRubyTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    struct UndoTransaction *_field9;
};

struct ModifyTOCSettingsBaseCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct ModifyTOCSettingsForTOCInfoCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ModifyTOCSettingsBaseCommandArchive *_field5;
    struct Reference *_field6;
};

struct ModifyTOCSettingsPresetForThemeCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ModifyTOCSettingsBaseCommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
};

struct MovieArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
    float _field10;
    float _field11;
    float _field12;
    unsigned int _field13;
    int _field14;
    float _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    unsigned int _field20;
    struct DataReference *_field21;
    struct DataReference *_field22;
    struct Reference *_field23;
    struct Reference *_field24;
    struct Reference *_field25;
    struct Reference *_field26;
    struct Size *_field27;
    struct Size *_field28;
    unsigned int _field29;
};

struct MultiTableRemapperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    struct RepeatedPtrField<TSCE::OwnerUIDMapperArchive> _field9;
    struct UUIDMapArchive *_field10;
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NSObject {
    Class _field1;
};

struct NSObjectComparator<GQDWrapPoint> {
    SEL _field1;
};

struct NSString {
    Class _field1;
};

struct NSThread {
    Class _field1;
    id _field2;
    unsigned char _field3[44];
};

struct NSUUID {
    Class _field1;
};

struct NumberAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TextualAttachmentArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct NumberCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    basic_string_a1f69cfb *_field6;
    int _field7;
    _Bool _field8;
    struct FormatStructArchive *_field9;
};

struct NumberNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
};

struct OABGradientStop {
    id _field1;
    float _field2;
};

struct OABTable2DArray<EshShape *> {
    int _field1;
    int _field2;
    struct EshShape **_field3;
};

struct OABTable2DArray<OABTableCell> {
    int _field1;
    int _field2;
    struct OABTableCell *_field3;
};

struct OABTableCell;

struct OADAdjustCoord {
    char isFormulaResult;
    int value;
};

struct OADAdjustPoint {
    struct OADAdjustCoord x;
    struct OADAdjustCoord y;
};

struct OADCachedTextStyleData {
    unsigned int verticalAlign:3;
    short lineSpacing;
    short beforeSpacing;
    short afterSpacing;
    short leftMargin;
    short rightMargin;
    short indent;
    short defaultTab;
    unsigned int horizontalAlign:4;
    unsigned short fontFaceIndex;
    short fontSize;
    unsigned short fontColorIndex;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int underline:5;
    unsigned int format:2;
    unsigned int kerning:2;
    unsigned int strikethrough:2;
    unsigned int caps:2;
};

struct OADFormulaArg {
    int type;
    int value;
};

struct OADTFTemplateMatrix<OADTableCell *> {
    int _field1;
    int _field2;
    struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> _field3;
};

struct OADTFTemplateMatrix<OADTablePartStyle *> {
    int _field1;
    int _field2;
    struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> _field3;
};

struct OADTMatrixPos {
    int _field1;
    int _field2;
};

struct OAETLineEndInfo {
    id _field1;
    char _field2;
};

struct OAITListNumberInfo {
    int numberScheme;
    int startNumber;
    int blockStartNumber;
    int currentNumber;
    char prevParagraphWasEmpty;
};

struct OAVGradientStop {
    id _field1;
    float _field2;
};

struct OAVTextBoxInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct OCCBinaryStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct OCCCryptoKey {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct OCCEncryptionInfoReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OCCStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct ODIHRange {
    float mMid;
    float mLength;
};

struct ODIHRangeVector {
    struct ODIHRange *_field1;
    struct ODIHRange *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ODILayoutNodeState {
    id _field1;
    char _field2;
};

struct ODIPointIteratorState {
    int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    id _field5;
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct ObjcSharedPtr<NSIndexSet> {
    NSIndexSet *mValue;
};

struct ObjcSharedPtr<NSMutableIndexSet> {
    id _field1;
};

struct ObjcSharedPtr<NSMutableSet> {
    id _field1;
};

struct ObjcSharedPtr<NSObject> {
    NSObject *mValue;
};

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DAnimationInterpolation> {
    TSCH3DAnimationInterpolation *mValue;
};

struct ObjcSharedPtr<TSCH3DGeometry> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DResource> {
    id _field1;
};

struct ObjectBounds {
    box_a3bd9649 mBounds;
    box_a3bd9649 mProjected;
    box_a3bd9649 m2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> mBoxes;
};

struct ObjectInfo {
    struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> _field1;
};

struct ObjectLocation {
    long long _field1;
    long long _field2;
};

struct ObjectSerializationDirectory {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> entries_;
};

struct ObjectSerializationMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *source_document_uuid_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
};

struct ObjectStackEntry;

struct ObjectState {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> mAttributes;
    struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> mTextures;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
};

struct ObjectStateIdentifier {
    char _field1;
    long long _field2;
    char _field3;
    id _field4;
};

struct ObjectStateMatchObject {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> mAttributes;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
    struct array<NSObject *, 8> mTextures;
};

struct ObjectTransforms {
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field1;
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field2;
};

struct OcBinaryData {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    _Bool _field7;
    struct SsrwOOStream *_field8;
};

struct OcBinaryReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OcBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
};

struct OcReader {
    CDUnknownFunctionPointerType *_field1;
    struct EshObjectFactory *_field2;
};

struct OcText {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    char *_field7;
    _Bool _field8;
};

struct OcWriter {
    CDUnknownFunctionPointerType *_field1;
};

struct OneofDescriptor;

struct Operation {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    _Bool _field6;
};

struct OperationTransformer {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSK::Operation> _field5;
    _Bool _field6;
};

struct OperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
};

struct OwnerFormulaMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> _field5;
};

struct OwnerUIDMapperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct UUID *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
    struct UUID *_field10;
    struct UUID *_field11;
    struct UUID *_field12;
    struct UUID *_field13;
    struct UUID *_field14;
    struct UUID *_field15;
    struct UUID *_field16;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct PODType<unsigned char>;

struct PODType<unsigned short>;

struct PackageMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long last_object_identifier_;
    struct DocumentRevision *revision_;
    struct RepeatedPtrField<TSP::ComponentInfo> components_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedField_27dfe32f read_version_;
    int _read_version_cached_byte_size_;
    RepeatedField_27dfe32f write_version_;
    int _write_version_cached_byte_size_;
    RepeatedField_27dfe32f file_format_version_;
    int _file_format_version_cached_byte_size_;
    unsigned long long save_token_;
    int preferred_package_type_;
};

struct PaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct ParagraphSpecificStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecIntegerArchive *_field4;
    struct SpecStringArchive *_field5;
    struct SpecDoubleArchive *_field6;
    struct SpecColorArchive *_field7;
    struct SpecDoubleArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecParagraphStyleArchive *_field17;
    struct SpecBoolArchive *_field18;
    struct SpecListStyleArchive *_field19;
    struct SpecBoolArchive *_field20;
    struct SpecBoolArchive *_field21;
    struct SpecDoubleArchive *_field22;
    struct SpecLineSpacingArchive *_field23;
    struct SpecIntegerArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecIntegerArchive *_field33;
    struct SpecBoolArchive *_field34;
    struct SpecIntegerArchive *_field35;
    struct SpecRuleOffsetArchive *_field36;
    struct SpecDoubleArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecDoubleArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecStrokeArchive *_field49;
    struct SpecTabsArchive *_field50;
    struct SpecIntegerArchive *_field51;
    int _field52;
};

struct ParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    struct ParagraphStylePropertiesArchive *_field7;
    unsigned int _field8;
};

struct ParagraphStyleChangePropertyCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    struct RepeatedPtrField<TSWP::ParagraphStylePropertyChangeSetArchive> _field7;
    _Bool _field8;
    _Bool _field9;
};

struct ParagraphStyleCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct ParagraphStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    int _field4;
    float _field5;
    basic_string_a1f69cfb *_field6;
    struct Color *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    float _field12;
    float _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct LineSpacingArchive *_field18;
    int _field19;
    float _field20;
    struct Point *_field21;
    float _field22;
    float _field23;
    struct TabsArchive *_field24;
    float _field25;
    unsigned int _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    basic_string_a1f69cfb *_field32;
    struct StrokeArchive *_field33;
    basic_string_a1f69cfb *_field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    int _field39;
    struct Reference *_field40;
    struct Reference *_field41;
    int _field42;
};

struct ParagraphStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct CharacterStylePropertyChangeSetArchive *_field4;
    struct SpecIntegerArchive *_field5;
    struct SpecStringArchive *_field6;
    struct SpecDoubleArchive *_field7;
    struct SpecColorArchive *_field8;
    struct SpecDoubleArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct SpecParagraphStyleArchive *_field18;
    struct SpecBoolArchive *_field19;
    struct SpecListStyleArchive *_field20;
    struct SpecBoolArchive *_field21;
    struct SpecBoolArchive *_field22;
    struct SpecDoubleArchive *_field23;
    struct SpecLineSpacingArchive *_field24;
    struct SpecIntegerArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct SpecIntegerArchive *_field34;
    struct SpecBoolArchive *_field35;
    struct SpecIntegerArchive *_field36;
    struct SpecRuleOffsetArchive *_field37;
    struct SpecDoubleArchive *_field38;
    struct SpecDoubleArchive *_field39;
    struct SpecDoubleArchive *_field40;
    struct SpecDoubleArchive *_field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct SpecStrokeArchive *_field50;
    struct SpecTabsArchive *_field51;
    struct SpecIntegerArchive *_field52;
    int _field53;
};

struct PasteCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct StorageActionCommandArchive *_field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    int _field22;
    int _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    int _field28;
    struct Reference *_field29;
    int _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    struct Reference *_field35;
    RepeatedPtrField_c67bb210 _field36;
    RepeatedPtrField_a0d2dbe7 _field37;
    RepeatedPtrField_a0d2dbe7 _field38;
    struct RepeatedPtrField<TSK::AddIdOperationArgs> _field39;
    struct RepeatedPtrField<TSK::RemoveIdOperationArgs> _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    int _field51;
};

struct PasteStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    _Bool _field8;
};

struct PasteboardMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    basic_string_a1f69cfb *app_name_;
    RepeatedPtrField_fe6aca30 datas_;
    struct UUID *source_document_uuid_;
};

struct PathSelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct PathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct PointPathSourceArchive *_field5;
    struct ScalarPathSourceArchive *_field6;
    struct BezierPathSourceArchive *_field7;
    struct CalloutPathSourceArchive *_field8;
    struct ConnectionLinePathSourceArchive *_field9;
    struct EditableBezierPathSourceArchive *_field10;
    _Bool _field11;
    _Bool _field12;
};

struct PatternedStrokeArchive;

struct PlaceholderSmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
    _Bool _field7;
};

struct PlotDescriptor;

struct Point {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
};

struct PointPathSourceArchive;

struct PopUpMenuModel {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> _field5;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field6;
};

struct PostfixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PrefilteredLineVertexProperties {
    tvec3_17f03ce0 *_field1;
    tvec3_17f03ce0 *_field2;
    tvec4_ac57c72d *_field3;
    int _field4;
    box_80622335 _field5;
};

struct PrefixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PresenterInfo {
    id _field1;
    struct CGContext *_field2;
    float _field3;
    id _field4;
    char _field5;
};

struct PrimitiveInfo {
    int _field1;
    int _field2;
    int _field3;
    id _field4;
};

struct ProgressiveCommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandGroupArchive *_field5;
};

struct PropagatePresetCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct PropertyValueStorageContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct SparseReferenceArray *_field10;
    struct SparseReferenceArray *_field11;
    struct SparseReferenceArray *_field12;
    struct SparseReferenceArray *_field13;
    struct SparseReferenceArray *_field14;
    struct SparseReferenceArray *_field15;
    struct SparseReferenceArray *_field16;
    struct SparseReferenceArray *_field17;
};

struct RGB {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct Range {
    tvec2_84d5962d _field1;
    char _field2;
};

struct RangeCoordinateArchive;

struct RangeReferenceArchive;

struct RearrangeIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
    int _field7;
};

struct RectArchive;

struct Reference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    int _field6;
    _Bool _field7;
};

struct ReferenceCompletionInfo;

struct ReferenceLineGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSNumberDoubleArchive *_field5;
    basic_string_a1f69cfb *_field6;
    struct ShadowArchive *_field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct StrokeArchive *_field12;
    int _field13;
    int _field14;
};

struct ReferenceNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    struct RangeReferenceArchive *_field6;
    basic_string_a1f69cfb *_field7;
    struct UUID *_field8;
    struct CellUIDArchive *_field9;
    struct CellUIDArchive *_field10;
    unsigned int _field11;
};

struct ReferencePrinter {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> *_field10;
    struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> _field11;
};

struct ReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
};

struct RegionInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct IndexedUidsArchive *_field6;
    struct IndexedUidsArchive *_field7;
};

struct RegionMovedInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RegionInfoArchive *_field5;
    struct RegionInfoArchive *_field6;
    struct RegionInfoArchive *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct RemoveHyperlinkCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    _Bool _field7;
};

struct RemoveIdOperationArgs {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct IdOperationArgs *_field5;
    int _field6;
};

struct RemoveRubyTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct UndoTransaction *_field9;
};

struct RenderCycleInfo {
    id _field1;
    id _field2;
    id _field3;
};

struct RenderElementInfo {
    id _field1;
    id _field2;
    id _field3;
    tvec2_3b141483 _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct RenderHints {
    struct TextureSizeHint textureSizeHint;
};

struct RenderState {
    _Bool mBlend;
    int blendMode;
    _Bool depthTest;
    _Bool depthMask;
    _Bool culling;
    _Bool cullBack;
    _Bool polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct RenderbufferAllocatorInfo {
    struct FramebufferAttributes *_field1;
    tvec2_3b141483 *_field2;
    id _field3;
};

struct RepeatedExternalReferenceCompletionInfo;

struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<double> {
    double *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::DrawableZOrderListArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellValueArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::FormulaArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::OwnerUIDMapperArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteTableIDInfoArchive_TableIDMapEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DLightArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartUIState> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::UserDefinedGuideArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::AddIdOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::CollaborationCommandHistoryItem> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::IdPlacementOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::Operation> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::RemoveIdOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentDataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FeatureInfo> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FieldInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::MessageInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::Path_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::CommandPropertyEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellRange> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellUIDRangeArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::ColumnRowMetadataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FilterRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderUIDArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TileStorage_Tile> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::CharacterStyleOrNil_GArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::CharacterStylePropertyChangeSetArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::FontFeatureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ParagraphStylePropertyChangeSetArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TabArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReplaceAllChildCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
};

struct ReplaceAllTextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ReplaceAllChildCommandArchive *_field5;
    struct Reference *_field6;
    struct UndoTransaction *_field7;
};

struct ReplaceAllUsesOfStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UndoTransaction *_field7;
};

struct ReplaceCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct UUID *_field7;
    struct FormatStructArchive *_field8;
};

struct ReplaceTextCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    struct RepeatedPtrField<TSK::RemoveIdOperationArgs> _field9;
    _Bool _field10;
    _Bool _field11;
};

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct RewriteRangeEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    RepeatedPtrField_bfda3daa _field7;
    unsigned int _field8;
};

struct RewriteTableIDInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::RewriteTableIDInfoArchive_TableIDMapEntryArchive> _field5;
};

struct RubyFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct SFUZipEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct ScalarPathSourceArchive;

struct SelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct SelectionPathTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct SelectionTransformerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
    struct Reference *_field6;
    _Bool _field7;
};

struct SeriesDescriptor;

struct SessionLoadResourceResult {
    char _field1;
    char _field2;
    char _field3;
    id _field4;
    id _field5;
};

struct SetParagraphBidiCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedField_c2891982 _field7;
    _Bool _field8;
    _Bool _field9;
};

struct SetParagraphFirstTopicNumberCommand_GArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StorageActionCommandArchive *_field5;
    RepeatedPtrField_c67bb210 _field6;
    RepeatedField_c2891982 _field7;
    _Bool _field8;
    _Bool _field9;
};

struct ShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
    int _field8;
    float _field9;
    _Bool _field10;
    int _field11;
    struct DropShadowArchive *_field12;
    struct ContactShadowArchive *_field13;
    struct CurvedShadowArchive *_field14;
};

struct ShapeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct PathSourceArchive *_field7;
    struct LineEndArchive *_field8;
    struct LineEndArchive *_field9;
};

struct ShapeInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
};

struct ShapeStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeStyleArchive *_field5;
    struct ShapeStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ShapeStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseShapeStylePropertyChangeSetArchive *_field5;
    struct SpecColumnsArchive *_field6;
    struct SpecPaddingArchive *_field7;
    struct SpecBoolArchive *_field8;
    struct SpecIntegerArchive *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct SpecBoolArchive *_field16;
    struct SpecParagraphStyleArchive *_field17;
};

struct ShapeStyleSetValueCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseStyleSetValueCommandArchive *_field5;
    struct BaseShapeStylePropertyChangeSetArchive *_field6;
};

struct SheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    float _field11;
    struct EdgeInsetsArchive *_field12;
    int _field13;
    int _field14;
    float _field15;
    float _field16;
    struct Reference *_field17;
    struct Reference *_field18;
    struct Reference *_field19;
    RepeatedPtrField_a0d2dbe7 _field20;
    RepeatedPtrField_a0d2dbe7 _field21;
    _Bool _field22;
    _Bool _field23;
};

struct SheetChangeBaseArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
};

struct SheetChangeSheetNameArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SheetChangeBaseArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct SheetUIStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    float _field6;
    float _field7;
    struct Point *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct Size *_field13;
    struct Size *_field14;
    struct SelectionPathArchive *_field15;
};

struct ShortcutCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
};

struct ShortcutControllerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> _field5;
};

struct ShuffleMappingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct Size;

struct SmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
};

struct SmartStrokeArchive;

struct SnappySource {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char *_field8;
};

struct SortRuleReferenceTrackerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct SparseReferenceArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDPathArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> _field5;
    unsigned int _field6;
};

struct SpecBoolArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetBoolArchive *_field5;
};

struct SpecCharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetCharacterStyleArchive *_field5;
};

struct SpecChart3dLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChart3dLightingPackageArchive *_field5;
};

struct SpecChart3dVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChart3dVectorArchive *_field5;
};

struct SpecChartErrorBarCustomDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChartErrorBarCustomDataArchive *_field5;
};

struct SpecChartsOptionalDoubleArchiveArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetChartsOptionalDoubleArchiveArchive *_field5;
};

struct SpecColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetColorArchive *_field5;
};

struct SpecColorFillSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetColumnsArchive *_field5;
};

struct SpecDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetDoubleArchive *_field5;
};

struct SpecFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecColorFillSetColorArchive *_field5;
    struct SpecGradientFillSetAngleArchive *_field6;
    struct SpecImageFillSetTechniqueArchive *_field7;
    struct SpecSetFillArchive *_field8;
};

struct SpecFontFeaturesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetFontFeaturesArchive *_field5;
};

struct SpecFormatObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetFormatObjectArchive *_field5;
};

struct SpecFrameSetAssetScaleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecGradientFillSetAngleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecImageFillSetTechniqueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct SpecIntegerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetIntegerArchive *_field5;
};

struct SpecLineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetLineEndArchive *_field5;
};

struct SpecLineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetLineSpacingArchive *_field5;
};

struct SpecListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleArchive *_field5;
};

struct SpecListStyleBoolArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleBoolArrayArchive *_field5;
};

struct SpecListStyleFloatArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleFloatArrayArchive *_field5;
};

struct SpecListStyleImageDataArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleImageDataArrayArchive *_field5;
};

struct SpecListStyleListLabelGeometryArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListLabelGeometryArrayArchive *_field5;
};

struct SpecListStyleListLabelTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListLabelTypeArrayArchive *_field5;
};

struct SpecListStyleListNumberTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleListNumberTypeArrayArchive *_field5;
};

struct SpecListStyleStringArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetListStyleStringArrayArchive *_field5;
};

struct SpecNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetNumberFormatArchive *_field5;
};

struct SpecPaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetPaddingArchive *_field5;
};

struct SpecParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetParagraphStyleArchive *_field5;
};

struct SpecReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecReflectionSetOpacityArchive *_field5;
    struct SpecSetReflectionArchive *_field6;
};

struct SpecReflectionSetOpacityArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecRuleOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetRuleOffsetArchive *_field5;
};

struct SpecSetBoolArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct SpecSetCharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetChart3dLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DLightingPackageArchive *_field5;
    _Bool _field6;
};

struct SpecSetChart3dVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    _Bool _field6;
};

struct SpecSetChartErrorBarCustomDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field5;
    _Bool _field6;
};

struct SpecSetChartsOptionalDoubleArchiveArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSNumberDoubleArchive *_field5;
    _Bool _field6;
};

struct SpecSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    _Bool _field6;
};

struct SpecSetColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ColumnsArchive *_field5;
    _Bool _field6;
};

struct SpecSetDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    _Bool _field6;
};

struct SpecSetFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    _Bool _field6;
};

struct SpecSetFontFeaturesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetFormatObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormatStructArchive *_field5;
    _Bool _field6;
};

struct SpecSetIntegerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
};

struct SpecSetLineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LineEndArchive *_field5;
    _Bool _field6;
};

struct SpecSetLineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LineSpacingArchive *_field5;
    _Bool _field6;
};

struct SpecSetListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetListStyleBoolArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_12b14242 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleFloatArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_324622b8 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleImageDataArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListLabelGeometryArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListLabelTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_c2891982 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleListNumberTypeArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_c2891982 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetListStyleStringArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_236b8a23 _field5;
    _Bool _field6;
    _Bool _field7;
};

struct SpecSetNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormatStructArchive *_field5;
    _Bool _field6;
};

struct SpecSetPaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct PaddingArchive *_field5;
    _Bool _field6;
};

struct SpecSetParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
};

struct SpecSetReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ReflectionArchive *_field5;
    _Bool _field6;
};

struct SpecSetRuleOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    _Bool _field6;
};

struct SpecSetShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShadowArchive *_field5;
    _Bool _field6;
};

struct SpecSetStringArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    _Bool _field6;
};

struct SpecSetStrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    _Bool _field6;
};

struct SpecSetTableStrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokePresetListArchive *_field5;
    _Bool _field6;
};

struct SpecSetTabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TabsArchive *_field5;
    _Bool _field6;
};

struct SpecShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetShadowArchive *_field5;
    struct SpecShadowSetAngleArchive *_field6;
    struct SpecShadowSetColorArchive *_field7;
    struct SpecShadowSetOffsetArchive *_field8;
    struct SpecShadowSetOpacityArchive *_field9;
    struct SpecShadowSetRadiusArchive *_field10;
};

struct SpecShadowSetAngleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecShadowSetOffsetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetOpacityArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecShadowSetRadiusArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct SpecStringArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetStringArchive *_field5;
};

struct SpecStrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecFrameSetAssetScaleArchive *_field5;
    struct SpecSetStrokeArchive *_field6;
    struct SpecStrokeSetColorArchive *_field7;
    struct SpecStrokeSetPatternArchive *_field8;
    struct SpecStrokeSetWidthArchive *_field9;
};

struct SpecStrokeSetColorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct SpecStrokeSetPatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    double _field7;
    double _field8;
    struct Color *_field9;
    struct StrokePatternArchive *_field10;
};

struct SpecStrokeSetWidthArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct SpecTableStrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetTableStrokePresetListArchive *_field5;
};

struct SpecTabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecSetTabsArchive *_field5;
};

struct SsrwOORootStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
    struct _RootStorage *_field3;
};

struct SsrwOOStgInfo;

struct SsrwOOStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
};

struct SsrwOOStream {
    CDUnknownFunctionPointerType *_field1;
};

struct StateSpec {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    long long _field3;
    long long _field4;
    struct Action *_field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    struct ActionFinder *_field9;
};

struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    unsigned long long mIndex;
    struct RenderState mCurrent;
    struct RenderState mStack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    unsigned long long mIndex;
    tmat4x4_3074befe mCurrent;
    tmat4x4_3074befe mStack[8];
};

struct StorageActionCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    struct UndoTransaction *_field7;
    unsigned int _field8;
    int _field9;
    RepeatedPtrField_bfda3daa _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct StringCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
};

struct StringNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct StrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    int _field7;
    int _field8;
    float _field9;
    struct StrokePatternArchive *_field10;
    struct SmartStrokeArchive *_field11;
    struct FrameArchive *_field12;
    struct PatternedStrokeArchive *_field13;
};

struct StrokePatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    RepeatedField_324622b8 _field7;
    unsigned int _field8;
};

struct StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    struct StrokeArchive *_field7;
    int _field8;
};

struct StrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> _field5;
    struct RepeatedPtrField<TST::StrokePresetDataArchive> _field6;
    int _field7;
};

struct StrokeSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct StyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
};

struct StyleBaseCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct StyleCreateCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
};

struct StyleDeleteCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
};

struct StyleDiffArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CharacterStylePropertyChangeSetArchive *_field6;
    struct ParagraphStylePropertyChangeSetArchive *_field7;
    struct ShapeStylePropertyChangeSetArchive *_field8;
};

struct StyleOwnerPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct StyleRenameCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
};

struct StyleReorderCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleBaseCommandArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct StyleSwapUndoTupleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct UUID *_field10;
};

struct StyleSwapUndoTuplesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a96af6e2 _field5;
};

struct StyledInfoSetStyleCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AbstractStyleCommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct StylesheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field6;
    struct Reference *_field7;
    struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> _field8;
    _Bool _field9;
    _Bool _field10;
};

struct SubContext;

struct TCDumpEnumPair {
    int _field1;
    id _field2;
};

struct TCEnumerationStruct {
    int _field1;
    id _field2;
};

struct TCFontStyling {
    int fontClass;
    unsigned int stringEncoding;
    char weight;
    char italic;
    int width;
};

struct TCStrokeMatrix {
    struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> _field1;
    struct {
        unsigned short _field1;
        unsigned short _field2;
    } _field2;
};

struct TCXmlEnumDescription {
    int _field1;
    char *_field2;
};

struct TNChartRangeNode {
    struct TNChartRangeNode *_field1;
    struct TSCERangeCoordinate _field2;
};

struct TOCAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableAttachmentArchive *_field5;
};

struct TOCEntryInstanceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct Reference *_field11;
    unsigned int _field12;
};

struct TOCEntryStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStyleArchive *_field5;
    struct TOCEntryStylePropertiesArchive *_field6;
};

struct TOCEntryStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
    _Bool _field7;
};

struct TOCEntryStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStylePropertyChangeSetArchive *_field5;
    struct SpecBoolArchive *_field6;
    struct SpecCharacterStyleArchive *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct TOCInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    RepeatedPtrField_c67bb210 _field8;
};

struct TOCLayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
};

struct TOCSettingsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> _field6;
    unsigned int _field7;
};

struct TSAPasteboardImagingArguments {
    id _field1;
    id _field2;
    char _field3;
    id _field4;
    struct CGImage *_field5;
};

struct TSCEASTElement;

struct TSCEASTElementWithChildren;

struct TSCEASTNodeArray {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
};

struct TSCEASTNodeArrayReader;

struct TSCEASTNodeArrayReferenceIteratorState {
    struct TSCEASTNodeReferenceExtractionFunction _field1;
    struct TSCECReference _field2;
};

struct TSCEASTNodeCrossTableCellReference {
    unsigned int row:21;
    unsigned int column:15;
    unsigned int rowIsAbsolute:1;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeCrossTableColumnReference {
    unsigned int column:15;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeCrossTableRowReference {
    unsigned int row:21;
    unsigned int rowIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeReferenceExtractionFunction {
    CDUnknownFunctionPointerType *_field1;
    struct TSCEASTNodeArray *_field2;
    struct TSCEASTNodeArray _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    struct TSCEASTNodeArrayReader *_field7;
    struct TSCEASTNodeArrayReader *_field8;
    id _field9;
    struct TSCEFormulaContainingCell _field10;
    _Bool _field11;
    struct TSCEASTNodeArray *_field12;
    struct vector<TSCEASTElementWithChildren *, std::__1::allocator<TSCEASTElementWithChildren *>> _field13;
    vector_88016b54 _field14;
    struct vector<TSCEASTElement *, std::__1::allocator<TSCEASTElement *>> _field15;
    struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> _field16;
    struct vector<TSCECReference, std::__1::allocator<TSCECReference>> _field17;
    _Bool _field18;
    _Bool _field19;
    struct pair<TSCECReference, bool> _field20;
};

struct TSCEAbstractVector;

struct TSCEBitGrid {
    struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> _tiles;
    unsigned long long _count;
    unsigned long long _lastTileFoundAtIndex;
};

struct TSCEBitGridTile;

struct TSCEBitGridTransaction {
    struct TSCEBitGrid *_field1;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field2;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field3;
};

struct TSCEBooleanValue {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct TSCECReference {
    unsigned short referenceType;
    union {
        CDStruct_de21cb60 cellReference;
        CDStruct_fc93c73e rangeReference;
        struct {
            CDStruct_fc93c73e rangeReference;
            unsigned char rangeContext;
        } spanningRangeReference;
        struct __CFUUID *tableID;
        struct {
            unsigned long long uuidLower;
            unsigned long long uuidUpper;
        } uuidValue;
    } referenceUnion;
};

struct TSCECellRef {
    struct TSUCellCoord coordinate;
    UUIDData_5fbc143e tableUID;
};

struct TSCEDateValue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSCEFormat _field3;
};

struct TSCEDependencyTracker {
    struct _opaque_pthread_mutex_t _field1;
    id _field2;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> _field3;
    unordered_set_c04cc813 _field4;
    struct TSCEIDMap _field5;
    _Bool _field6;
    _Bool _field7;
    struct _opaque_pthread_mutex_t _field8;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field9;
    unordered_set_1019bb64 _field10;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field11;
    struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field12;
    CDStruct_de21cb60 _field13;
};

struct TSCEEvaluationContext {
    id _field1;
    id _field2;
    struct TSCEEvaluationStack _field3;
    char _field4;
    char _field5;
    char _field6;
    struct TSCEWarningReportingContext _field7;
    struct __CFUUID *_field8;
    struct TSUCellCoord _field9;
    struct TSCEValueBindingEnvironment _field10;
    struct TSCESymbolTable _field11;
    struct TSCEReferenceSet _field12;
    struct TSCERandGenerator *_field13;
    id _field14;
};

struct TSCEEvaluationStack {
    vector_10088e46 _field1;
    int _field2;
};

struct TSCEFormat {
    CDUnknownFunctionPointerType *_vptr$TSCEFormat;
    int mFormatType;
    _Bool mIsImplicitFormat;
    union {
        CDStruct_50447d3e mNumberStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b44fd3ce mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        CDStruct_f25b4237 mCustomFormatStruct;
        CDStruct_8374e35e mControlFormatStruct;
        CDStruct_4edf9c0c mMultipleChoiceListFormatStruct;
    } mData;
};

struct TSCEFormula {
    struct TSCEASTNodeArray *mASTNodeArray;
    struct TSCEFormulaTranslationFlags mTranslationFlags;
    UUIDData_5fbc143e _hostTableUID;
    UUIDData_5fbc143e _hostColumnUID;
    UUIDData_5fbc143e _hostRowUID;
};

struct TSCEFormulaContainingCell {
    struct __CFUUID *_field1;
    UUIDData_5fbc143e _field2;
    struct TSUCellCoord _field3;
    struct __CFUUID *_field4;
    UUIDData_5fbc143e _field5;
    struct TSUCellCoord _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TSCEFormulaCreator {
    CDUnknownBlockType _field1;
};

struct TSCEFormulaTranslationFlags {
    unsigned int mExcelImportTranslation:1;
    unsigned int mNumberToDateCoercionRemovalTranslation:1;
    unsigned int mContainsUidFormReferences:1;
};

struct TSCEIDAllocator<unsigned short> {
    unsigned short _field1;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> _field2;
};

struct TSCEIDMap {
    struct TSCEIDAllocator<unsigned short> _field1;
    struct unordered_map<unsigned short, const __CFUUID *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, const __CFUUID *>>> _field2;
    struct unordered_map<const __CFUUID *, unsigned short, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, unsigned short>>> _field3;
    struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> _field4;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> _field5;
    struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> _field6;
};

struct TSCEInternalCellReference {
    struct TSUCellCoord _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct TSCENamedReferenceTrieNode {
    struct __CFDictionary *mTrackedReferencesByOwnerID;
    struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> mChildren;
};

struct TSCENumberValue {
    CDUnknownFunctionPointerType *_vptr$TSCEAbstractValue;
    double mDouble;
    int mBaseUnits[1];
    struct TSCEFormat mFormat;
    char mIsUnitlessZero;
};

struct TSCERandGenerator;

struct TSCERangeCoordinate {
    struct TSUCellCoord mTopLeft;
    struct TSUCellCoord mBottomRight;
};

struct TSCEReferenceSet {
    struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> _field1;
    unordered_set_c04cc813 _field2;
    unordered_set_c04cc813 _field3;
    unordered_set_c04cc813 _field4;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> _field5;
    struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> _field6;
    struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> _field7;
    struct TSCEDependencyTracker *_field8;
};

struct TSCEReferenceValue {
    CDUnknownFunctionPointerType *_field1;
    struct TSCETableReference _field2;
    struct TSUCellCoord _field3;
    struct shared_ptr<TSCEValue> _field4;
    _Bool _field5;
    _Bool _field6;
    unsigned char _field7;
    _Bool _field8;
    struct TSCEWarningReportingContext *_field9;
};

struct TSCERegionNode {
    unsigned long long _field1;
    struct TSCERegionNode *_field2;
    void *_field3;
};

struct TSCERelativeCellRef {
    struct {
        unsigned int row:21;
        unsigned int column:15;
    } relativeCoord;
    UUIDData_5fbc143e tableUID;
    unsigned int columnIsAbsolute:1;
    unsigned int rowIsAbsolute:1;
    unsigned int isSpanningColumn:1;
    unsigned int isSpanningRow:1;
};

struct TSCEStringValue {
    CDUnknownFunctionPointerType *_field1;
    struct ObjcSharedPtr<NSString> _field2;
    struct TSCEFormat _field3;
};

struct TSCESymbolTable {
    id _field1;
    unsigned int _field2;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field3;
    struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> _field4;
    struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> _field5;
};

struct TSCETableReference {
    id _field1;
    UUIDData_5fbc143e _field2;
    struct TSUCellCoord _field3;
    struct TSUCellCoord _field4;
};

struct TSCETableReferenceVector {
    struct TSCETableReference _field1;
    id _field2;
    struct TSCERangeCoordinate _field3;
};

struct TSCETaggedDouble;

struct TSCETaggedDoubleList {
    struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> _list;
    unsigned long long _startIdx;
    unsigned long long _size;
};

struct TSCEValue {
    unsigned long long mBuff[10];
    int mType;
};

struct TSCEValueBindingEnvironment {
    struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> _field1;
    struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> _field2;
};

struct TSCEVector {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSCEFormat _field3;
};

struct TSCEVectorIndexPair {
    unsigned short column;
    unsigned short row;
};

struct TSCEWarningReportingContext {
    char _field1;
    char _field2;
    struct ObjcSharedPtr<NSMutableSet> _field3;
};

struct TSCH3DChartRotationLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    struct CGSize layoutSize;
    struct CGSize requestLayoutSize;
    struct CGSize chartBodyLayoutSize;
    struct CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_2671d966 layoutSettings;
    char forcedValid;
};

struct TSCH3DGLTextureFormat {
    int _field1;
};

struct TSCH3DOpenGLLayerFramebufferDrawInfo {
    id _field1;
    struct _CGLContextObject *_field2;
    id _field3;
    char _field4;
};

struct TSCH3DPrecalculatedLayoutCacheType {
    int platform;
    int target;
    char isLandscape;
    struct CGRect requestedSwatchFrame;
};

struct TSCH3DScenePart {
    id _field1;
    id _field2;
};

struct TSCH3DShaderType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopeType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> mScopes;
};

struct TSCH3DTouchPoint {
    struct CGPoint _field1;
    double _field2;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct TSCHLegendAnchorLine {
    struct CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSDBrushVertexData;

struct TSKCursorInRevision;

struct TSKCursorInRevisionComparator;

struct TSMOpstat_s {
    char running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSMTraceRecordHeader_s {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct timeval _field4;
};

struct TSMTraceRecord_s {
    struct TSMTraceRecordHeader_s _field1;
    char _field2[0];
};

struct TSTCSENodeData {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TSTCellReorganizePopupInfo {
    unsigned int _field1;
    long long _field2;
};

struct TSTCellReorganizeValue {
    unsigned int :8;
    unsigned int :8;
    union {
        double _field1;
        char _field2;
        unsigned int _field3;
        unsigned int _field4;
        struct TSTCellReorganizePopupInfo _field5;
    } _field1;
};

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
};

struct TSTCellUID {
    UUIDData_5fbc143e _column;
    UUIDData_5fbc143e _row;
};

struct TSTCellUIDRange {
    vector_dadc1b26 _colIdList;
    vector_dadc1b26 _rowIdList;
};

struct TSTColumnOrRowMap {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    char _field4;
};

struct TSTDurationWrapper {
    double timeInterval;
    CDStruct_b1177b60 durationFormat;
};

struct TSTImportFormulaWarning {
    long long mType;
    NSString *mOriginalFormula;
    NSString *mSupplementaryText;
};

struct TSTImportWarningSetCellWarningFlags {
    unsigned int mCondFormatAboveAvgEqualAverageImportWarning:1;
    unsigned int mCondFormatAboveAvgStdDevImportWarning:1;
    unsigned int mCondFormatComplexFormulaImportWarning:1;
    unsigned int mCondFormatContainsErrorsImportWarning:1;
    unsigned int mCondFormatExprImportWarning:1;
    unsigned int mCondFormatNotContainsErrorsImportWarning:1;
    unsigned int mCondFormatParametersNotAllTheSameTypeImportWarning:1;
    unsigned int mCondFormatStopIfTrueImportWarning:1;
    unsigned int mCondFormatUnsupportedOperatorImportWarning:1;
    unsigned int mCondFormatUnsupportedStylingImportWarning:1;
    unsigned int mCondFormatUnsupportedTimePeriodImportWarning:1;
    unsigned int mUnsupportedConditionalFormatImportWarning:1;
    unsigned int mUnsupportedDataFormatImportWarning:1;
};

struct TSTSimpleRange {
    long long origin;
    unsigned long long length;
};

struct TSTStrokeLayerRun;

struct TSTTableRBTreeNode_s {
    unsigned short _field1;
    unsigned short _field2;
    struct TSTTableRBTreeNode_s *_field3;
    struct TSTTableRBTreeNode_s *_field4;
    struct TSTTableRBTreeNode_s *_field5;
    char _field6;
};

struct TSTTokenMargin {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSUCellCoord {
    unsigned short row;
    unsigned char column;
    unsigned char reserved;
};

struct TSUCellRect {
    struct TSUCellCoord origin;
    CDStruct_0bda8247 size;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUOpstat_s {
    char running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSWPAdornmentLine {
    struct CGPoint _field1;
    double _field2;
    struct CGColor *_field3;
    double _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    double _field8;
    _Bool _field9;
    id _field10;
};

struct TSWPAdornmentRect {
    int _field1;
    id _field2;
    id _field3;
    struct CGRect _field4;
};

struct TSWPAdornments {
    int _field1;
    int _field2;
    double _field3;
    struct CGColor *_field4;
    struct __CTFont *_field5;
    vector_88016b54 _field6;
    struct vector<unsigned short, std::__1::allocator<unsigned short>> _field7;
    vector_b8c73e0a _field8;
    vector_fa824bf3 _field9;
    struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> _field10;
    double _field11;
    double _field12;
    double _field13;
    struct CGPoint _field14;
    _Bool _field15;
};

struct TSWPAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
};

struct TSWPAttributeEnumerator {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    struct TSWPAttributeArray *_field4;
    char _field5;
    unsigned long long _field6;
    _Bool _field7;
    struct TSWPAttributeRecord _field8;
};

struct TSWPAttributeRecord {
    unsigned long long _field1;
    id _field2;
    struct TSWPParagraphData _field3;
};

struct TSWPChangeAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    id _field9;
};

struct TSWPDirtyRange;

struct TSWPDirtyRangeVector {
    struct TSWPDirtyRange *__begin_;
    struct TSWPDirtyRange *__end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        struct TSWPDirtyRange *__first_;
    } __end_cap_;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
    struct CGColor *_field7;
    double _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    struct TSWPRangeVector _field17;
    struct TSWPRangeVector _field18;
    struct _NSRange _field19;
    struct TSWPRangeVector *_field20;
    struct TSWPRangeVector *_field21;
    struct _NSRange _field22;
    struct _NSRange _field23;
    unsigned long long _field24;
    struct _NSRange _field25;
    id _field26;
    id _field27;
};

struct TSWPFastTypingState {
    unsigned char flags;
    NSDate *interimTimeout;
    NSDate *timeout;
    NSObject *idleDispatchSource;
};

struct TSWPLineFragment {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    double _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    CDStruct_a6fa95e6 _field8;
    struct TSWPListLabel *_field9;
    id _field10;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field11;
    double _field12;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> _field15;
    vector_5a1d2cc3 _field16;
    vector_5a1d2cc3 _field17;
    vector_5a1d2cc3 _field18;
    vector_5a1d2cc3 _field19;
    struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> _field20;
    struct TSWPTypesettingState *_field21;
    double _field22;
    id _field23;
    id _field24;
    struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> _field25;
    struct TSWPAdornmentLine *_field26;
    id _field27;
    unsigned int _field28;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field29;
    id _field30;
    double _field31;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef;

struct TSWPListLabel;

struct TSWPLoadableFontInfo {
    id _field1;
    id _field2;
    id _field3;
    char _field4;
};

struct TSWPMarkers {
    struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct TSWPParagraphAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    unsigned long long _field9;
    unsigned long long _field10;
};

struct TSWPParagraphData {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
};

struct TSWPParagraphEnumerator {
    id _field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
    struct _NSRange _field8;
};

struct TSWPParagraphMetrics {
    _Bool _field1;
    struct CGSize _field2;
    unsigned long long _field3;
    double _field4;
};

struct TSWPParagraphTypesetter;

struct TSWPRangeVector {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> __end_cap_;
};

struct TSWPStorageAction {
    int _field1;
    unsigned int _field2;
    int _field3;
    struct _NSRange _field4;
    id _field5;
    id _field6;
};

struct TSWPStorageActionBuilder {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    vector_e5fc8613 *_field9;
    int _field10;
    unsigned int _field11;
};

struct TSWPStorageActionGroup {
    int _field1;
    vector_e5fc8613 _field2;
    vector_e5fc8613 _field3;
    vector_e5fc8613 _field4;
    vector_e5fc8613 _field5;
    _Bool _field6;
    struct TSWPMarkers _field7;
};

struct TSWPStorageActionRunner {
    struct TSWPStorageActionState *_field1;
    _Bool _field2;
};

struct TSWPStorageActionState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    vector_e5fc8613 *_field9;
};

struct TSWPStorageChangeRange;

struct TSWPStorageParagraphIndexChange;

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct TSWPStorageActionGroup _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned long long _field9;
    struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> _field10;
    struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> _field11;
    struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    _Bool _field15;
    id _field16;
};

struct TSWPStorageTransactionObject {
    unsigned short _field1;
    union {
        unsigned int _field1;
        unsigned int _field2;
    } _field2;
    union {
        CDStruct_3144a3ae _field1;
        CDStruct_3144a3ae _field2;
        CDStruct_3144a3ae _field3;
        CDStruct_3144a3ae _field4;
        CDStruct_3144a3ae _field5;
        CDStruct_3144a3ae _field6;
        struct {
            unsigned int _field1;
            unsigned int _field2;
            int _field3;
        } _field7;
        struct {
            unsigned int _field1;
            struct TSWPParagraphData _field2;
            unsigned int _field3;
        } _field8;
        CDStruct_3144a3ae _field9;
        struct {
            unsigned int _field1;
            id _field2;
            unsigned int _field3;
        } _field10;
    } _field3;
};

struct TSWPTargetHint {
    struct CGRect _field1;
    struct _NSRange _field2;
    unsigned long long _field3;
    struct _NSRange _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct TSWPTopicNumberHints {
    struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> _numbersForListStyle;
    unsigned long long _charIndex;
    unsigned long long _validThroughCharIndex;
};

struct TSWPTypesettingState;

struct TSWPUIAttachmentData;

struct TabArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    int _field6;
    basic_string_a1f69cfb *_field7;
};

struct TableCellStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SpecBoolArchive *_field5;
    struct SpecIntegerArchive *_field6;
    struct SpecFillArchive *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct SpecIntegerArchive *_field13;
    struct SpecPaddingArchive *_field14;
};

struct TableCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct UUIDPath *_field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    double _field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
};

struct TableCommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandSelectionBehaviorArchive *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct TableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct TableRBTree;

struct TableSortOrderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    int _field6;
};

struct TableSortOrderUIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TableSortOrderUIDArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderUIDArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    int _field6;
};

struct TableStrokePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct TableStyleNetworkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    unsigned int _field16;
};

struct TableStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    int _field7;
};

struct TableStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct FillArchive *_field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    struct Deprecated_TableStrokeArchive *_field8;
    struct Deprecated_TableStrokeArchive *_field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct Deprecated_TableStrokeArchive *_field12;
    struct Deprecated_TableStrokeArchive *_field13;
    struct Deprecated_TableStrokeArchive *_field14;
    struct Deprecated_TableStrokeArchive *_field15;
    struct Deprecated_TableStrokeArchive *_field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    struct Deprecated_TableStrokeArchive *_field25;
    struct Deprecated_TableStrokeArchive *_field26;
    struct Deprecated_TableStrokeArchive *_field27;
    struct Deprecated_TableStrokeArchive *_field28;
    struct StrokePresetListArchive *_field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    basic_string_a1f69cfb *_field35;
    int _field36;
    int _field37;
    struct StrokeArchive *_field38;
    struct StrokeArchive *_field39;
    struct StrokeArchive *_field40;
    struct StrokeArchive *_field41;
    struct StrokeArchive *_field42;
    struct StrokeArchive *_field43;
    struct StrokeArchive *_field44;
    struct StrokeArchive *_field45;
    struct StrokeArchive *_field46;
    struct StrokeArchive *_field47;
    struct StrokeArchive *_field48;
    struct StrokeArchive *_field49;
    struct StrokeArchive *_field50;
    struct StrokeArchive *_field51;
    struct StrokeArchive *_field52;
    struct StrokeArchive *_field53;
    int _field54;
};

struct TableStylePropertyChangeSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct SpecBoolArchive *_field4;
    struct SpecBoolArchive *_field5;
    struct SpecFillArchive *_field6;
    struct SpecBoolArchive *_field7;
    struct SpecStrokeArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct SpecStrokeArchive *_field17;
    struct SpecStrokeArchive *_field18;
    struct SpecStrokeArchive *_field19;
    struct SpecStrokeArchive *_field20;
    struct SpecStrokeArchive *_field21;
    struct SpecStrokeArchive *_field22;
    struct SpecStrokeArchive *_field23;
    struct SpecStrokeArchive *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct SpecStrokeArchive *_field33;
    struct SpecStrokeArchive *_field34;
    struct SpecStrokeArchive *_field35;
    struct SpecStrokeArchive *_field36;
    struct SpecStrokeArchive *_field37;
    struct SpecStrokeArchive *_field38;
    struct SpecStrokeArchive *_field39;
    struct SpecTableStrokePresetListArchive *_field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    struct SpecBoolArchive *_field49;
    struct SpecBoolArchive *_field50;
    struct SpecBoolArchive *_field51;
    struct SpecBoolArchive *_field52;
    struct SpecBoolArchive *_field53;
    struct SpecBoolArchive *_field54;
    struct SpecBoolArchive *_field55;
    struct SpecBoolArchive *_field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    _Bool _field61;
    _Bool _field62;
    _Bool _field63;
    _Bool _field64;
    struct SpecBoolArchive *_field65;
    struct SpecStringArchive *_field66;
    struct SpecIntegerArchive *_field67;
    int _field68;
};

struct TableSubSelectionTransformerBaseArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUIDPath *_field5;
};

struct TableTransposeInfoArchive;

struct TabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::TabArchive> _field5;
};

struct TexCoordTilingShaderEffectState {
    struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> _field1;
};

struct TextCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct UndoTransaction *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    int _field13;
};

struct TextPresetDisplayItemArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
};

struct TextRun;

struct TextStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct TextualAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
};

struct TextureAttributes {
    int object;
    int format;
    char mipmap;
    char repeat;
    char nearest;
    long long unit;
    struct TextureSizeHint textureSizeHint;
    char is3DTexture;
};

struct TextureCoordinateConverter {
    box_80622335 _field1;
};

struct TextureSizeHint {
    int loadOptimizedMipmaps;
    tvec2_3b141483 sizeLODHint;
};

struct TextureUnitStates {
    struct UpdatableValue<unsigned long> activeTexture;
    struct array<TSCH3D::GLSingleState, 4> states;
};

struct TextureVariables {
    id _field1;
    id _field2;
    id _field3;
};

struct TileFramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct TileRowInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    unsigned int _field9;
};

struct TileStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TileStorage_Tile> _field5;
};

struct TokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
    struct Reference *_field6;
};

struct TrackedReferenceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive *_field5;
    unsigned int _field6;
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    _Bool _field5;
};

struct UID {
    unsigned char _field1[16];
};

struct UIGraphicalAttachment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct UIStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct SelectionArchive *_field9;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field10;
    int _field11;
    int _field12;
    unsigned int _field13;
    unsigned int _field14;
    struct ChartSelectionArchive *_field15;
    struct Reference *_field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedField_27dfe32f _field22;
    struct Point *_field23;
    struct Size *_field24;
    struct Size *_field25;
    struct RepeatedPtrField<TSCH::ChartUIState> _field26;
    struct SelectionPathArchive *_field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
};

struct UUID {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        CDStruct_e6eac3cb _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
};

struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
};

struct UUIDMapArchive;

struct UUIDPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct UnarchiverReference;

struct UnarchiverRepeatedReference;

struct UndoObjectArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    RepeatedPtrField_236b8a23 _field7;
    RepeatedField_27dfe32f _field8;
};

struct UndoTransaction;

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> *fields_;
};

struct UpdatableValue<unsigned int> {
    unsigned int value;
};

struct UpdatableValue<unsigned long> {
    unsigned long long value;
};

struct UpdateCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct CustomFormatArchive *_field6;
    struct CustomFormatArchive *_field7;
    struct UUID *_field8;
};

struct UpdateDateTimeFieldCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TextCommandArchive *_field5;
    struct Reference *_field6;
    struct Date *_field7;
    int _field8;
    int _field9;
};

struct UuidReferenceMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> _field5;
};

struct UuidSetStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> _field5;
};

struct UuidSetStoreArchive_UuidSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    unsigned int _field6;
};

struct VAOLoadResult {
    char _field1;
    char _field2;
    id _field3;
};

struct ValueEnumerator {
    char mForward;
    unsigned long long mIndex;
    unsigned long long mMax;
    double mValue;
};

struct VariableNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct VerifyDocumentWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
};

struct VerifyDrawableZOrdersWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct VerifyObjectsWithServerCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    RepeatedPtrField_bfda3daa _field6;
    _Bool _field7;
};

struct ViewStateMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
};

struct WHCCol;

struct WHCRow;

struct WPTableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableInfoArchive *_field5;
    struct Reference *_field6;
};

struct WrittenComponentInfo {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
    char _field5;
    id _field6;
    char _field7;
    char _field8;
    char _field9;
    id _field10;
    id _field11;
    char _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
};

struct WrittenObjectInfo;

struct XLFormulaStream {
    CDUnknownFunctionPointerType *_field1;
};

struct XlArray;

struct XlBaseFormulaTable;

struct XlBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    CDUnknownFunctionPointerType *_field74;
    struct EshObjectFactory *_field75;
};

struct XlBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
};

struct XlBrk;

struct XlCalculationProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    int _field3;
    short _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
};

struct XlCell {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    int _field5;
    double _field6;
    struct XlString *_field7;
    int _field8;
    struct XlFormulaInfo *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlCellFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlXf> _field2;
};

struct XlCellRow {
    CDUnknownFunctionPointerType *_field1;
    struct XlRowProperties *_field2;
    struct ChVector<XlCell *> _field3;
    unsigned int _field4;
};

struct XlCellTableInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlCf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    struct XlDXf *_field7;
    char *_field8;
    char *_field9;
};

struct XlChart3D {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct XlChartBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    struct ChVector<int> _field74;
    struct XlSubstreamProperties _field75;
    int _field76;
    int _field77;
    int _field78;
    struct CsRect<float> _field79;
    int _field80;
    int _field81;
    int _field82[4];
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    struct ChVector<int> _field88;
    int _field89[4];
    int _field90;
    int _field91;
    struct AxisParentChildren _field92;
    struct AxisParentChildren _field93;
    struct ChVector<XlChartBinaryReader::SeriesDescriptor> _field94;
    struct ChVector<XlChartBinaryReader::PlotDescriptor> _field95;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field96;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field97;
    unsigned short _field98;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field99;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field100;
    float _field101;
    float _field102;
    unsigned short _field103;
    unsigned short _field104;
    int _field105;
    struct ChVector<int> _field106;
    struct ChVector<int> _field107;
    int _field108;
    _Bool _field109;
    _Bool _field110;
    CDUnknownFunctionPointerType *_field111;
    struct EshObjectFactory *_field112;
};

struct XlChartBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
    struct XlChartShtProps _field28;
    int _field29;
    char *_field30;
    int _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    unsigned short _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    struct ChVector<unsigned short> _field40;
    struct ChVector<unsigned short> _field41;
    struct ChVector<XlChartFBI> _field42;
};

struct XlChartChartFormat;

struct XlChartCustomLabelText {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    unsigned int _field51;
    unsigned short _field52;
};

struct XlChartCustomLegend {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    short _field51;
    _Bool _field52;
    _Bool _field53;
};

struct XlChartDataSeries {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
};

struct XlChartErrorBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    struct XlChartSerAuxErrBar _field16;
    int _field17;
};

struct XlChartFBI;

struct XlChartFillStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    struct CsColour _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct XlChartFrameType {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
};

struct XlChartLegendFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
};

struct XlChartLineStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    int _field10;
};

struct XlChartLinkedData {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    char *_field3;
    unsigned short _field4;
    short _field5;
    _Bool _field6;
    struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> _field7;
};

struct XlChartMarkerStyle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct CsColour _field3;
    struct CsColour _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct XlChartPicF {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartPlot {
    CDUnknownFunctionPointerType *_field1;
    struct XlChart3D *_field2;
    struct XlChartChartFormat *_field3;
    struct XlChartSeriesFormat *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartLineStyle *_field8;
    struct ChVector<XlChartPlot::DefText> _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct XlChartPlotAxis {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct XlChartTextFrame *_field3;
    struct XlChartLineStyle *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartFillStyle *_field8;
    struct XlChartPicF *_field9;
    struct XlChartTick *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
    char *_field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartSerAuxErrBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    unsigned short _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartSeries;

struct XlChartSeriesFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartLineStyle *_field2;
    struct XlChartFillStyle *_field3;
    struct XlChartMarkerStyle *_field4;
    struct XlChartPicF *_field5;
    char *_field6;
    char *_field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartShtProps {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    int _field4;
    _Bool _field5;
};

struct XlChartTextFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
};

struct XlChartTick;

struct XlChartTrendLine {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    CDUnknownFunctionPointerType *_field16;
    struct XlHeader _field17;
    double _field18;
    double _field19;
    double _field20;
    int _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
};

struct XlCondFmt;

struct XlConditionalFormat {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct XlCondFmt *_field3;
};

struct XlConditionalFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlConditionalFormat *> _field2;
};

struct XlDXf {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    struct XlDXfUserFmt *_field7;
    struct XlDXfFont *_field8;
    struct XlDXfAlign *_field9;
    struct XlDXfBorders *_field10;
    struct XlDXfPattern *_field11;
    struct XlDXfProtect *_field12;
};

struct XlDXfAlign {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
};

struct XlDXfBorders {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
};

struct XlDXfFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlString *_field2;
    int _field3;
    int _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    short _field19;
};

struct XlDXfPattern {
    int _field1;
    short _field2;
    short _field3;
};

struct XlDXfProtect {
    _Bool _field1;
    _Bool _field2;
};

struct XlDXfUserFmt {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    short _field3;
    struct XlString *_field4;
};

struct XlDateTimeFormat;

struct XlDocumentInfo {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    short _field14;
    short *_field15;
    struct OcText _field16;
    int _field17;
    struct XlRef _field18;
    _Bool _field19;
    char *_field20;
    unsigned int _field21;
};

struct XlDocumentProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    short _field5;
    short _field6;
};

struct XlEshBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct XlReadStgStream *_field13;
};

struct XlEshBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshRecordWriterVisitor *_field3;
    struct ChStack<int> _field4;
    struct ChStack<EshHeader> _field5;
    struct XlWriteStgStream *_field6;
    struct SsrwOOStream *_field7;
    struct ChStack<int> _field8;
    struct ChStack<EshHeader> _field9;
    struct ChStack<int> _field10;
    struct ChStack<EshHeader> _field11;
    struct ChStack<int> *_field12;
    struct ChStack<EshHeader> *_field13;
};

struct XlEshClientAnchor {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned short _field4;
    CsRect_0aefebc6 _field5;
    CsRect_0aefebc6 _field6;
};

struct XlEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct XlFileProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    short _field4;
    struct OcText _field5;
    struct OcText _field6;
    unsigned short _field7;
    char *_field8;
    unsigned int _field9;
    char *_field10;
};

struct XlFmtPtg;

struct XlFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
    short _field5;
    short _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct XlFontTable {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    short _field3;
    struct CsSimpleHeapVector<XlFont> _field4;
};

struct XlFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
};

struct XlFormatInfo;

struct XlFormatParser;

struct XlFormatProcessor {
    struct XlFormatParser *_field1;
    _Bool _field2;
    struct XlDateTimeFormat *_field3;
    struct XlFormatInfo *_field4;
    struct XlFormatSection *_field5;
};

struct XlFormatSection {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    int _field26;
    struct OcText *_field27;
    struct OcText *_field28;
    _Bool _field29;
    short _field30;
    short _field31;
    short _field32;
    struct ChVector<XlFmtPtg *> _field33;
};

struct XlFormulaInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct OcText *_field3;
    char *_field4;
    unsigned int _field5;
    short _field6;
    struct XlShrFmla *_field7;
    struct XlArray *_field8;
    struct XlTable *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct XlFormulaParser;

struct XlFormulaProcessor {
    CDUnknownFunctionPointerType *_field1;
    struct XlFormulaParser *_field2;
    struct XlBaseFormulaTable *_field3;
    struct ChVector<CsString *> _field4;
    struct XlNameTable *_field5;
    ChVector_be6372b9 *_field6;
    struct XlLinkTable *_field7;
    unsigned int _field8;
    unsigned int _field9;
    char _field10[64];
    unsigned short *_field11;
    char *_field12;
    _Bool _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct XlGraphicsInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    short _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ChVector<XlGraphicsInfo::XlObjData *> _field8;
    _Bool _field9;
    int _field10;
    struct XlString *_field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    char *_field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    _Bool _field27;
    struct XlString *_field28;
};

struct XlHLink {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    struct XlString *_field7;
    struct XlString *_field8;
    struct XlString *_field9;
    struct XlString *_field10;
    struct XlString *_field11;
    unsigned short _field12;
};

struct XlHLinkToolTip {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    struct XlString *_field4;
};

struct XlHeader {
    unsigned int _field1;
    short _field2;
    unsigned char _field3;
};

struct XlIndex;

struct XlLink;

struct XlLinkLookupTable {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct ChVector<XlXti *> _field3;
};

struct XlLinkTable {
    CDUnknownFunctionPointerType *_field1;
    struct XlLinkLookupTable _field2;
    struct ChVector<XlLink *> _field3;
};

struct XlName {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    struct XlString *_field4;
    struct XlString *_field5;
    struct XlString *_field6;
    struct XlString *_field7;
    char *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    unsigned char _field13;
    unsigned char _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
};

struct XlNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[14];
};

struct XlNoteTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
};

struct XlObjData;

struct XlObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct XlEshObjectFactory *_field2;
};

struct XlPageProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    struct OcText *_field6;
    struct OcText *_field7;
    _Bool _field8;
    _Bool _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    _Bool _field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    short _field23;
    short _field24;
    short _field25;
    double _field26;
    double _field27;
    short _field28;
};

struct XlPane;

struct XlParserVisitor;

struct XlPhoneticInfo;

struct XlPtg {
    char *_field1;
    int _field2;
    unsigned int _field3;
    unsigned short _field4;
};

struct XlReadStgStream;

struct XlRecord;

struct XlRef {
    unsigned short _field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    _Bool _field5;
};

struct XlRow;

struct XlRowBlock {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlCellRow *> _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlRowProperties;

struct XlScl;

struct XlSelection;

struct XlSheetInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
};

struct XlSheetInfoTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    char *_field3;
};

struct XlSheetPresentation {
    CDUnknownFunctionPointerType *_field1;
    struct XlWindow2 *_field2;
    struct XlScl *_field3;
    struct XlPane *_field4;
    struct XlSelection *_field5[4];
};

struct XlShrFmla;

struct XlSortInfo {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    struct OcText _field9;
    struct OcText _field10;
    struct OcText _field11;
};

struct XlStrTableState;

struct XlString {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    struct ChVector<short *> _field3;
    struct XlPhoneticInfo *_field4;
    int _field5;
    short *_field6;
};

struct XlStringExtractor;

struct XlStyleTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[10];
};

struct XlSubstreamProperties {
    CDUnknownFunctionPointerType *_field1;
    struct XlSheetInfo _field2;
    struct XlPageProperties _field3;
    struct XlCellTableInfo _field4;
    int _field5;
    int _field6;
};

struct XlTable;

struct XlWindow2 {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    short _field4;
    short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned short _field18;
    short _field19;
};

struct XlWorksheetProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    int _field3;
    unsigned short _field4;
    _Bool _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    short _field26;
    struct ChVector<XlBrk *> _field27;
    struct ChVector<XlBrk *> _field28;
    struct OcText _field29;
};

struct XlWorksheetProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    short _field20;
};

struct XlWriteStgStream;

struct XlWriterVisitor;

struct XlXf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    unsigned char _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
};

struct XlXti;

struct ZeroCopyInputStream {
    CDUnknownFunctionPointerType *_field1;
};

struct _CGLContextObject;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RootStorage;

struct _SSRW_BLOB {
    unsigned int cbSize;
    char *pData;
};

struct _SSRW_CLIPDATA;

struct _SSRW_FILETIME {
    unsigned int dwLowDateTime;
    unsigned int dwHighDateTime;
};

struct _SSRW_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwOO_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwPropVariant {
    unsigned short vt;
    union {
        unsigned char cVal;
        short iVal;
        int lVal;
        double dblVal;
        unsigned short *bstrVal;
        struct _SSRW_BLOB blob;
        char *pszVal;
        struct _SSRW_FILETIME filetime;
        struct _SSRW_CLIPDATA *pclipdata;
        short boolVal;
    } v;
};

struct _StgInfo {
    int *_field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    struct _SSRW_GUID _field8;
};

struct _Storage;

struct _SymbolsTables {
    struct __CFString **_field1;
    struct __CFString **_field2;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSTDefaultCellBlock {
    TSTCell *defaultBodyCell;
    TSTCell *defaultHeaderRowCell;
    TSTCell *defaultHeaderColumnCell;
    TSTCell *defaultFooterRowCell;
};

struct _TSTLexiconCompletionOptions {
    char mAdoptFunctionArgumentList;
    char mInsertBareFunctionStartToken;
    char mInsertBareLetToken;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    unsigned long long _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFString;

struct __CFUUID;

struct __CTFont;

struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
    struct _NSRange *__first_;
};

struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> {
        struct __hash_node<TSUCellCoord, void *> *_field1;
    } _field1;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __hash_node<TSCECellRef, void *>;

struct __hash_node<TSCECellReference, void *>;

struct __hash_node<TSCEInternalCellReference, void *>;

struct __hash_node<TSCEReferenceType, void *>;

struct __hash_node<TSU::UUIDData<TSP::UUIDData>, void *>;

struct __hash_node<TSUCellCoord, void *>;

struct __hash_node<TSUCellRect, void *>;

struct __hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>;

struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>;

struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>;

struct __hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>;

struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>;

struct __hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>;

struct __hash_node<std::__1::__hash_value_type<const long long, bool>, void *>;

struct __hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>;

struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>;

struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>;

struct __hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>;

struct __hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>;

struct __hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>;

struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>;

struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
    struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> __bucket_list_;
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
            struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *> *__next_;
        } __first_;
    } __p1_;
    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
        unsigned long long __first_;
    } __p2_;
    struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
        float __first_;
    } __p3_;
};

struct __list_node_base<unsigned long, void *> {
    struct __list_node_base<unsigned long, void *> *__prev_;
    struct __list_node_base<unsigned long, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<TSTColumnOrRowMap, void *>;

struct __tree_node<TSTMergeRangeElem, void *>;

struct __tree_node<TSUCellRect, void *>;

struct __tree_node<TSUFlushableObjectInfo *, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _tagLevelItem {
    struct _tagLevelItem *_field1;
    struct _tagOctreeNode *_field2;
};

struct _tagOctree {
    struct _tagOctreeNode *_field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _tagRgbQuad *_field4;
    struct _tagLevelItem *_field5[9];
};

struct _tagOctreeNode {
    struct _tagOctreeNode *_field1;
    struct _tagOctreeNode *_field2[8];
    unsigned int _field3;
    struct _tagFPRgbTriple {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
    } _field4;
    unsigned short _field5;
};

struct _tagRgbQuad {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlBuf;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlOutputBuffer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    struct _xmlCharEncodingHandler *_field4;
    struct _xmlBuf *_field5;
    struct _xmlBuf *_field6;
    int _field7;
    int _field8;
};

struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
};

struct array<NSObject *, 8> {
    NSObject *__elems_[8];
};

struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> {
    struct ObjcSharedPtr<NSObject> __elems_[8];
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3D::GLSingleState, 2> {
    struct GLSingleState __elems_[2];
};

struct array<TSCH3D::GLSingleState, 4> {
    struct GLSingleState __elems_[4];
};

struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> {
    struct Data {
        tvec2_84d5962d _field1;
        tvec2_84d5962d _field2;
    } _field1[3];
};

struct array<TSCH3D::TextureAttributes, 8> {
    struct TextureAttributes __elems_[8];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct array<signed char, 8> {
    char __elems_[8];
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct auto_ptr<TSP::PersistedObjectUUIDMapOperation>;

struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
};

struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_88cdf798 *__ptr_;
};

struct basic_istream<char, std::__1::char_traits<char>>;

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct bitset<5> {
    unsigned long long __first_;
};

struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
};

struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> {
    struct __split_buffer<TSCEEvaluationContext **, std::__1::allocator<TSCEEvaluationContext **>> {
        struct TSCEEvaluationContext ***__first_;
        struct TSCEEvaluationContext ***__begin_;
        struct TSCEEvaluationContext ***__end_;
        struct __compressed_pair<TSCEEvaluationContext ***, std::__1::allocator<TSCEEvaluationContext **>> {
            struct TSCEEvaluationContext ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEEvaluationContext *>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct __split_buffer<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference *>> {
        struct TSCEInternalCellReference **_field1;
        struct TSCEInternalCellReference **_field2;
        struct TSCEInternalCellReference **_field3;
        struct __compressed_pair<TSCEInternalCellReference **, std::__1::allocator<TSCEInternalCellReference *>> {
            struct TSCEInternalCellReference **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEInternalCellReference>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> {
    struct __split_buffer<TSCH3D::Transform *, std::__1::allocator<TSCH3D::Transform *>> {
        struct Transform **_field1;
        struct Transform **_field2;
        struct Transform **_field3;
        struct __compressed_pair<TSCH3D::Transform **, std::__1::allocator<TSCH3D::Transform *>> {
            struct Transform **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCH3D::Transform>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> {
    struct __split_buffer<TSP::WrittenObjectInfo *, std::__1::allocator<TSP::WrittenObjectInfo *>> {
        struct WrittenObjectInfo **__first_;
        struct WrittenObjectInfo **__begin_;
        struct WrittenObjectInfo **__end_;
        struct __compressed_pair<TSP::WrittenObjectInfo **, std::__1::allocator<TSP::WrittenObjectInfo *>> {
            struct WrittenObjectInfo **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSP::WrittenObjectInfo>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> {
    struct __split_buffer<std::__1::pair<const Action *, int>*, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
        struct pair<const Action *, int> **_field1;
        struct pair<const Action *, int> **_field2;
        struct pair<const Action *, int> **_field3;
        struct __compressed_pair<std::__1::pair<const Action *, int>**, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
            struct pair<const Action *, int> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
    struct __split_buffer<std::__1::shared_ptr<StateSpec>*, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
        struct shared_ptr<StateSpec> **_field1;
        struct shared_ptr<StateSpec> **_field2;
        struct shared_ptr<StateSpec> **_field3;
        struct __compressed_pair<std::__1::shared_ptr<StateSpec>**, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
            struct shared_ptr<StateSpec> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
        unsigned long long _field1;
    } _field3;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct hash_map<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>, NSStringHash, NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>>> {
    struct __hash_table<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringEqual, true>, std::__1::allocator<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*> {
                struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, NSStringEqual, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
    struct __hash_table<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> {
                struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<id, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::pair<id, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> {
                struct __hash_node<std::__1::pair<id, GSSPMessageBase *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> {
                struct __hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>, TSCHViewCellCoordinateHash, TSCHViewCellCoordinateEqual, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
    struct __hash_table<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>, std::__1::allocator<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> {
                struct __hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __hash_table<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<Class, int, std::__1::less<Class>, std::__1::allocator<std::__1::pair<const Class, int>>> {
    struct __tree<std::__1::__value_type<Class, int>, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>, std::__1::allocator<std::__1::__value_type<Class, int>>> {
        struct __tree_node<std::__1::__value_type<Class, int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Class, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds, std::__1::less<TSCH3D::SceneObjectSharedPointer>, std::__1::allocator<std::__1::pair<const TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
    struct __tree<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>, std::__1::allocator<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
        struct __tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
        struct __tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
    struct __tree<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>, std::__1::allocator<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
        struct __tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, AnchorHash, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, AnchorHash>>> {
    struct __tree<std::__1::__value_type<int, AnchorHash>, std::__1::__map_value_compare<int, std::__1::__value_type<int, AnchorHash>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, AnchorHash>>> {
        struct __tree_node<std::__1::__value_type<int, AnchorHash>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, AnchorHash>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, AnchorHash>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> {
    struct __tree<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>>> {
        struct __tree_node<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, TSPUnknownFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPUnknownFieldTreeNode *>>> {
    struct __tree<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>>> {
        struct __tree_node<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> {
    struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>>> {
        struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::pair<Class, std::__1::basic_string<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<int, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> {
    struct __tree<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>>> {
        struct __tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::pair<long long, long long>>>> {
        struct __tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> {
    struct __tree<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>>> {
        struct __tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, unsigned long, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, unsigned long>>> {
    struct __tree<std::__1::__value_type<long, unsigned long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<long, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> {
    struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> {
    struct __tree<std::__1::__value_type<unsigned int, XlChartEnteredData *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XlChartEnteredData *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> {
    struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> {
    struct __tree<std::__1::__value_type<unsigned long, CGRect>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, CGRect>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, CGRect>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::greater<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __tree<std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::greater<unsigned short>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TSCEASTNodeArray *, int>;

struct pair<TSCECReference, bool> {
    struct TSCECReference _field1;
    _Bool _field2;
};

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
};

struct pair<TSUCellCoord, TSCEFormula>;

struct pair<TSUCellCoord, double>;

struct pair<_NSRange, _NSRange>;

struct pair<const Action *, int>;

struct pair<const char *, const char *> {
    char *_field1;
    char *_field2;
};

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct pair<signed char, TSCH3DShaderVariableLinkage *> {
    char _field1;
    id _field2;
};

struct pair<unsigned long, unsigned short>;

struct pair<unsigned short, bool>;

struct path_descr;

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
};

struct priority_queue<TSKCursorInRevision, std::__1::vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>>, TSKCursorInRevisionComparator> {
    struct vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>> _field1;
    struct TSKCursorInRevisionComparator _field2;
};

struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> {
    struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> c;
};

struct range<double> {
    double _field1;
    double _field2;
};

struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
};

struct scoped_array<unsigned char> {
    char *_field1;
};

struct segment_data<double>;

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_node<TSTMergeRangeElem, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUCellRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_node<TSUCellRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_node<TSUCellRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorReverseLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_node<TSUCellRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorReverseLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
    struct __tree<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
        struct __tree_node<id<TSWPStorageObserver>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<TSWPStorageObserver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<id<TSWPStorageObserver>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<id<TSWPStorageParagraphObserver>, std::__1::less<id<TSWPStorageParagraphObserver>>, std::__1::allocator<id<TSWPStorageParagraphObserver>>> {
    struct __tree<id<TSWPStorageParagraphObserver>, std::__1::less<id<TSWPStorageParagraphObserver>>, std::__1::allocator<id<TSWPStorageParagraphObserver>>> {
        struct __tree_node<id<TSWPStorageParagraphObserver>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<TSWPStorageParagraphObserver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<id<TSWPStorageParagraphObserver>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_node<long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>;

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_node<unsigned short, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_count {
    struct sp_counted_base *pi_;
};

struct shared_ptr<StateSpec>;

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector *_field1;
    struct shared_count _field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue *_field1;
    struct shared_count _field2;
};

struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSUStringChunk>;

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *px;
    struct shared_count pn;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct shared_count _field2;
};

struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sortColorEntry;

struct sp_counted_base;

struct stack<TSCEEvaluationContext *, std::__1::deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>>> {
    struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> c;
};

struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> {
    struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> _field1;
};

struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
};

struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tsuSaPage {
    CDUnknownFunctionPointerType *_field1;
};

struct tvec1<float> {
    CDUnion_d07f0a1e ;
};

struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
};

struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
};

struct unique_ptr<std::__1::__hash_node<TSCECellRef, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCECellRef, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>>> {
        struct __hash_node<TSCECellRef, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCECellReference, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> {
        struct __hash_node<TSCECellReference, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSCEInternalCellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCEInternalCellReference, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>>> {
        struct __hash_node<TSCEInternalCellReference, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSCEReferenceType, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCEReferenceType, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>*>>> {
        struct __hash_node<TSCEReferenceType, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>>> {
        struct __hash_node<TSU::UUIDData<TSP::UUIDData>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<TSUCellCoord, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSUCellCoord, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> {
        struct __hash_node<TSUCellCoord, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSUCellRect, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSUCellRect, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>>> {
        struct __hash_node<TSUCellRect, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const long long, bool>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<NSString>, std::__1::vector<std::__1::pair<TSCEFunctionIndex, float>, std::__1::allocator<std::__1::pair<TSCEFunctionIndex, float>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>>> {
        struct __hash_node<std::__1::pair<id, GSSPMessageBase *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>>> {
        struct __hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>>> {
        struct __hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> {
    struct __hash_table<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSTCellUID, TSTCellDiff *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCellDiff *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTExpressionNode *, TSTCSENodeData, std::__1::hash<TSTExpressionNode *>, std::__1::equal_to<TSTExpressionNode *>, std::__1::allocator<std::__1::pair<TSTExpressionNode *const, TSTCSENodeData>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCell *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSUColumnRowSize, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, TSCEFormulaOwnerIDHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, std::__1::vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>>>, TSCEFormulaOwnerIDEqual, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const __CFUUID *, unsigned short, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDHash, true>, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::__hash_value_type<const __CFUUID *, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const __CFUUID *, unsigned short>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const __CFUUID *, std::__1::__hash_value_type<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const char *, unsigned int, TSP::CStringHash, TSP::CStringEqualTo, std::__1::allocator<std::__1::pair<const char *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, unsigned int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>, std::__1::allocator<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ReferenceMapInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ReferenceMapInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, __unsafe_unretained Class, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DigestHash, TSP::DigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSCEValue>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, __unsafe_unretained Class, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const char *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const char *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const google::protobuf::Message *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, TSUCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSUCellRect>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, const __CFUUID *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, const __CFUUID *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, const __CFUUID *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, const __CFUUID *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, const __CFUUID *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned short, const __CFUUID *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, const __CFUUID *>, std::__1::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, const __CFUUID *>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node<TSCECellRef, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> {
                struct __hash_node<TSCECellRef, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
    struct __hash_table<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*> {
                struct __hash_node<TSCECellReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECellReferenceHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellReferenceEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
    struct __hash_table<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCEInternalCellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> {
                struct __hash_node<TSCEInternalCellReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEInternalCellReference>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEInternalCellReference>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
    struct __hash_table<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
        struct unique_ptr<std::__1::__hash_node<TSCEReferenceType, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> {
                struct __hash_node<TSCEReferenceType, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEReferenceType>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEReferenceType>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
                struct __hash_node<TSU::UUIDData<TSP::UUIDData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellCoord, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellCoord, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
    struct __hash_table<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellRect, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> {
                struct __hash_node<TSUCellRect, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellRect>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellRect>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<(anonymous namespace)::Range, std::__1::allocator<(anonymous namespace)::Range>> {
    struct Range *__begin_;
    struct Range *__end_;
    struct __compressed_pair<(anonymous namespace)::Range *, std::__1::allocator<(anonymous namespace)::Range>> {
        struct Range *__first_;
    } __end_cap_;
};

struct vector<AcceptHash *, std::__1::allocator<AcceptHash *>> {
    struct AcceptHash **__begin_;
    struct AcceptHash **__end_;
    struct __compressed_pair<AcceptHash **, std::__1::allocator<AcceptHash *>> {
        struct AcceptHash **__first_;
    } __end_cap_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__first_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
};

struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
    struct SubContext *_field1;
    struct SubContext *_field2;
    struct __compressed_pair<GSSPDeserializationContext::SubContext *, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
        struct SubContext *_field1;
    } _field3;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineAstNode>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstNode>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineAstUidTract>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstUidTract>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCalculationEngineFormula>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineFormula>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
        struct GSUNSWrapper<GSSPCalculationEngineFormula> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCellChange>, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
    struct GSUNSWrapper<GSSPCellChange> *__begin_;
    struct GSUNSWrapper<GSSPCellChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellChange>*, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
        struct GSUNSWrapper<GSSPCellChange> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCellRange>, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
    struct GSUNSWrapper<GSSPCellRange> *__begin_;
    struct GSUNSWrapper<GSSPCellRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellRange>*, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
        struct GSUNSWrapper<GSSPCellRange> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCellUID>, std::__1::allocator<GSUNSWrapper<GSSPCellUID>>> {
    struct GSUNSWrapper<GSSPCellUID> *__begin_;
    struct GSUNSWrapper<GSSPCellUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellUID>*, std::__1::allocator<GSUNSWrapper<GSSPCellUID>>> {
        struct GSUNSWrapper<GSSPCellUID> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisMultiData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisMultiData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartGridValue>, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
    struct GSUNSWrapper<GSSPChartGridValue> *__begin_;
    struct GSUNSWrapper<GSSPChartGridValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartGridValue>*, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
        struct GSUNSWrapper<GSSPChartGridValue> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartMediatorAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartMediatorAxisFormat>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisFormat>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__begin_;
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>*, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
        struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCitationRecord>, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
    struct GSUNSWrapper<GSSPCitationRecord> *__begin_;
    struct GSUNSWrapper<GSSPCitationRecord> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCitationRecord>*, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
        struct GSUNSWrapper<GSSPCitationRecord> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPCustomFormatCondition>, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__begin_;
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCustomFormatCondition>*, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
        struct GSUNSWrapper<GSSPCustomFormatCondition> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPImageData>, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
    struct GSUNSWrapper<GSSPImageData> *__begin_;
    struct GSUNSWrapper<GSSPImageData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPImageData>*, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
        struct GSUNSWrapper<GSSPImageData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPPasteboardDrawable>, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__begin_;
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPasteboardDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
        struct GSUNSWrapper<GSSPPasteboardDrawable> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPRange>, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
    struct GSUNSWrapper<GSSPRange> *__begin_;
    struct GSUNSWrapper<GSSPRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRange>*, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
        struct GSUNSWrapper<GSSPRange> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPRect>, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
    struct GSUNSWrapper<GSSPRect> *__begin_;
    struct GSUNSWrapper<GSSPRect> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRect>*, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
        struct GSUNSWrapper<GSSPRect> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPSize>, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
    struct GSUNSWrapper<GSSPSize> *__begin_;
    struct GSUNSWrapper<GSSPSize> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPSize>*, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
        struct GSUNSWrapper<GSSPSize> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPStorageAction>, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
    struct GSUNSWrapper<GSSPStorageAction> *__begin_;
    struct GSUNSWrapper<GSSPStorageAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageAction>*, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
        struct GSUNSWrapper<GSSPStorageAction> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPStorageActionGroup>, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
    struct GSUNSWrapper<GSSPStorageActionGroup> *__begin_;
    struct GSUNSWrapper<GSSPStorageActionGroup> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageActionGroup>*, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
        struct GSUNSWrapper<GSSPStorageActionGroup> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPTOCMapEntry>, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
    struct GSUNSWrapper<GSSPTOCMapEntry> *__begin_;
    struct GSUNSWrapper<GSSPTOCMapEntry> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTOCMapEntry>*, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
        struct GSUNSWrapper<GSSPTOCMapEntry> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<GSSPTableChange>, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
    struct GSUNSWrapper<GSSPTableChange> *__begin_;
    struct GSUNSWrapper<GSSPTableChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTableChange>*, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
        struct GSUNSWrapper<GSSPTableChange> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSObject>, std::__1::allocator<GSUNSWrapper<NSObject>>> {
    struct GSUNSWrapper<NSObject> *__begin_;
    struct GSUNSWrapper<NSObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSObject>*, std::__1::allocator<GSUNSWrapper<NSObject>>> {
        struct GSUNSWrapper<NSObject> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSUUID>, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
    struct GSUNSWrapper<NSUUID> *__begin_;
    struct GSUNSWrapper<NSUUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSUUID>*, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
        struct GSUNSWrapper<NSUUID> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCEOwnerUidMapper>, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__begin_;
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCEOwnerUidMapper>*, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
        struct GSUNSWrapper<TSCEOwnerUidMapper> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisID>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
    struct GSUNSWrapper<TSCHChartAxisID> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisID> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisID>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
        struct GSUNSWrapper<TSCHChartAxisID> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisNonStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartAxisStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartSeriesNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHChartSeriesStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSCHSelectionPath>, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
    struct GSUNSWrapper<TSCHSelectionPath> *__begin_;
    struct GSUNSWrapper<TSCHSelectionPath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHSelectionPath>*, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
        struct GSUNSWrapper<TSCHSelectionPath> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDBezierNode>, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
    struct GSUNSWrapper<TSDBezierNode> *__begin_;
    struct GSUNSWrapper<TSDBezierNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierNode>*, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
        struct GSUNSWrapper<TSDBezierNode> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDBezierSubpath>, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
    struct GSUNSWrapper<TSDBezierSubpath> *__begin_;
    struct GSUNSWrapper<TSDBezierSubpath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierSubpath>*, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
        struct GSUNSWrapper<TSDBezierSubpath> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDUserDefinedGuide>, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
    struct GSUNSWrapper<TSDUserDefinedGuide> *__begin_;
    struct GSUNSWrapper<TSDUserDefinedGuide> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDUserDefinedGuide>*, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
        struct GSUNSWrapper<TSDUserDefinedGuide> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKCommandResponse>, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
    struct GSUNSWrapper<TSKCommandResponse> *__begin_;
    struct GSUNSWrapper<TSKCommandResponse> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKCommandResponse>*, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
        struct GSUNSWrapper<TSKCommandResponse> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKImageDigestData>, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
    struct GSUNSWrapper<TSKImageDigestData> *__begin_;
    struct GSUNSWrapper<TSKImageDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKImageDigestData>*, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
        struct GSUNSWrapper<TSKImageDigestData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKMovieDigestData>, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
    struct GSUNSWrapper<TSKMovieDigestData> *__begin_;
    struct GSUNSWrapper<TSKMovieDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKMovieDigestData>*, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
        struct GSUNSWrapper<TSKMovieDigestData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSKWebQuickLookImage>, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
    struct GSUNSWrapper<TSKWebQuickLookImage> *__begin_;
    struct GSUNSWrapper<TSKWebQuickLookImage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKWebQuickLookImage>*, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
        struct GSUNSWrapper<TSKWebQuickLookImage> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSSStyle>, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
    struct GSUNSWrapper<TSSStyle> *__begin_;
    struct GSUNSWrapper<TSSStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSSStyle>*, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
        struct GSUNSWrapper<TSSStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTCell>, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
    struct GSUNSWrapper<TSTCell> *__begin_;
    struct GSUNSWrapper<TSTCell> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTCell>*, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
        struct GSUNSWrapper<TSTCell> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTColumnRowMetadata>, std::__1::allocator<GSUNSWrapper<TSTColumnRowMetadata>>> {
    struct GSUNSWrapper<TSTColumnRowMetadata> *__begin_;
    struct GSUNSWrapper<TSTColumnRowMetadata> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTColumnRowMetadata>*, std::__1::allocator<GSUNSWrapper<TSTColumnRowMetadata>>> {
        struct GSUNSWrapper<TSTColumnRowMetadata> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTConditionalStyleRule>, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
    struct GSUNSWrapper<TSTConditionalStyleRule> *__begin_;
    struct GSUNSWrapper<TSTConditionalStyleRule> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTConditionalStyleRule>*, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
        struct GSUNSWrapper<TSTConditionalStyleRule> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTMergeAction>, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
    struct GSUNSWrapper<TSTMergeAction> *__begin_;
    struct GSUNSWrapper<TSTMergeAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTMergeAction>*, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
        struct GSUNSWrapper<TSTMergeAction> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSTTableStrokePresetData>, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
    struct GSUNSWrapper<TSTTableStrokePresetData> *__begin_;
    struct GSUNSWrapper<TSTTableStrokePresetData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTTableStrokePresetData>*, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
        struct GSUNSWrapper<TSTTableStrokePresetData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSUCustomFormat>, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
    struct GSUNSWrapper<TSUCustomFormat> *__begin_;
    struct GSUNSWrapper<TSUCustomFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSUCustomFormat>*, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
        struct GSUNSWrapper<TSUCustomFormat> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSUUUIDPath>, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
    struct GSUNSWrapper<TSUUUIDPath> *_field1;
    struct GSUNSWrapper<TSUUUIDPath> *_field2;
    struct __compressed_pair<GSUNSWrapper<TSUUUIDPath>*, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
        struct GSUNSWrapper<TSUUUIDPath> *_field1;
    } _field3;
};

struct vector<GSUNSWrapper<TSWPCharacterStyleOrNil_G>, std::__1::allocator<GSUNSWrapper<TSWPCharacterStyleOrNil_G>>> {
    struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__begin_;
    struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPCharacterStyleOrNil_G>*, std::__1::allocator<GSUNSWrapper<TSWPCharacterStyleOrNil_G>>> {
        struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>, std::__1::allocator<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>>> {
    struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__begin_;
    struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>*, std::__1::allocator<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>>> {
        struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPHyperlinkField>, std::__1::allocator<GSUNSWrapper<TSWPHyperlinkField>>> {
    struct GSUNSWrapper<TSWPHyperlinkField> *__begin_;
    struct GSUNSWrapper<TSWPHyperlinkField> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPHyperlinkField>*, std::__1::allocator<GSUNSWrapper<TSWPHyperlinkField>>> {
        struct GSUNSWrapper<TSWPHyperlinkField> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPListStyle>, std::__1::allocator<GSUNSWrapper<TSWPListStyle>>> {
    struct GSUNSWrapper<TSWPListStyle> *__begin_;
    struct GSUNSWrapper<TSWPListStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPListStyle>*, std::__1::allocator<GSUNSWrapper<TSWPListStyle>>> {
        struct GSUNSWrapper<TSWPListStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPParagraphStyle>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
    struct GSUNSWrapper<TSWPParagraphStyle> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStyle>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
        struct GSUNSWrapper<TSWPParagraphStyle> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>>> {
    struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>>> {
        struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPTOCEntryData>, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
    struct GSUNSWrapper<TSWPTOCEntryData> *__begin_;
    struct GSUNSWrapper<TSWPTOCEntryData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTOCEntryData>*, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
        struct GSUNSWrapper<TSWPTOCEntryData> *__first_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPTab>, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
    struct GSUNSWrapper<TSWPTab> *__begin_;
    struct GSUNSWrapper<TSWPTab> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTab>*, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
        struct GSUNSWrapper<TSWPTab> *__first_;
    } __end_cap_;
};

struct vector<InsertionMap, std::__1::allocator<InsertionMap>> {
    struct InsertionMap *_field1;
    struct InsertionMap *_field2;
    struct __compressed_pair<InsertionMap *, std::__1::allocator<InsertionMap>> {
        struct InsertionMap *_field1;
    } _field3;
};

struct vector<JCColor, std::__1::allocator<JCColor>> {
    struct JCColor *_field1;
    struct JCColor *_field2;
    struct __compressed_pair<JCColor *, std::__1::allocator<JCColor>> {
        struct JCColor *_field1;
    } _field3;
};

struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTableCell **, std::__1::allocator<OADTableCell *>> {
        id *_field1;
    } _field3;
};

struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTablePartStyle **, std::__1::allocator<OADTablePartStyle *>> {
        id *_field1;
    } _field3;
};

struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
};

struct vector<TSCEASTElement *, std::__1::allocator<TSCEASTElement *>> {
    struct TSCEASTElement **_field1;
    struct TSCEASTElement **_field2;
    struct __compressed_pair<TSCEASTElement **, std::__1::allocator<TSCEASTElement *>> {
        struct TSCEASTElement **_field1;
    } _field3;
};

struct vector<TSCEASTElementWithChildren *, std::__1::allocator<TSCEASTElementWithChildren *>> {
    struct TSCEASTElementWithChildren **_field1;
    struct TSCEASTElementWithChildren **_field2;
    struct __compressed_pair<TSCEASTElementWithChildren **, std::__1::allocator<TSCEASTElementWithChildren *>> {
        struct TSCEASTElementWithChildren **_field1;
    } _field3;
};

struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> {
    struct TSCEBitGridTile **__begin_;
    struct TSCEBitGridTile **__end_;
    struct __compressed_pair<TSCEBitGridTile **, std::__1::allocator<TSCEBitGridTile *>> {
        struct TSCEBitGridTile **__first_;
    } __end_cap_;
};

struct vector<TSCECReference, std::__1::allocator<TSCECReference>> {
    struct TSCECReference *_field1;
    struct TSCECReference *_field2;
    struct __compressed_pair<TSCECReference *, std::__1::allocator<TSCECReference>> {
        struct TSCECReference *_field1;
    } _field3;
};

struct vector<TSCECellReference, std::__1::allocator<TSCECellReference>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSCECellReference *, std::__1::allocator<TSCECellReference>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__first_;
    } __end_cap_;
};

struct vector<TSCEFormulaID, std::__1::allocator<TSCEFormulaID>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSCEFormulaID *, std::__1::allocator<TSCEFormulaID>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct TSCEInternalCellReference *_field1;
    struct TSCEInternalCellReference *_field2;
    struct __compressed_pair<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference>> {
        struct TSCEInternalCellReference *_field1;
    } _field3;
};

struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
};

struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
};

struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> {
    struct TSCETaggedDouble *__begin_;
    struct TSCETaggedDouble *__end_;
    struct __compressed_pair<TSCETaggedDouble *, std::__1::allocator<TSCETaggedDouble>> {
        struct TSCETaggedDouble *__first_;
    } __end_cap_;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *_field1;
    struct TSCEValue *_field2;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *_field1;
    } _field3;
};

struct vector<TSCH3D::AxisLabelCacheItem, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
    struct AxisLabelCacheItem *__begin_;
    struct AxisLabelCacheItem *__end_;
    struct __compressed_pair<TSCH3D::AxisLabelCacheItem *, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
        struct AxisLabelCacheItem *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo *__begin_;
    struct BarElementInfo *__end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::__1::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    box_a3bd9649 *__begin_;
    box_a3bd9649 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        box_a3bd9649 *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
    struct Lookup *__begin_;
    struct Lookup *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup *, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
        struct Lookup *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState *__begin_;
    struct ResourceAttributeState *__end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState *__first_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__first_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
};

struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TSDStroke **, std::__1::allocator<TSDStroke *>> {
        id *_field1;
    } _field3;
};

struct vector<TSDWrapSegment, std::__1::allocator<TSDWrapSegment>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSDWrapSegment *, std::__1::allocator<TSDWrapSegment>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSKCursorInRevision, std::__1::allocator<TSKCursorInRevision>> {
    struct TSKCursorInRevision *_field1;
    struct TSKCursorInRevision *_field2;
    struct __compressed_pair<TSKCursorInRevision *, std::__1::allocator<TSKCursorInRevision>> {
        struct TSKCursorInRevision *_field1;
    } _field3;
};

struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
    struct ExternalReferenceCompletionInfo *_field1;
    struct ExternalReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ExternalReferenceCompletionInfo *, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
        struct ExternalReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
    struct FinalizeHandlerItem **__begin_;
    struct FinalizeHandlerItem **__end_;
    struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
        struct FinalizeHandlerItem **__first_;
    } __end_cap_;
};

struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> {
    struct ObjectStackEntry *__begin_;
    struct ObjectStackEntry *__end_;
    struct __compressed_pair<TSP::ObjectStackEntry *, std::__1::allocator<TSP::ObjectStackEntry>> {
        struct ObjectStackEntry *__first_;
    } __end_cap_;
};

struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
    struct ReferenceCompletionInfo *_field1;
    struct ReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ReferenceCompletionInfo *, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
        struct ReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
    struct RepeatedExternalReferenceCompletionInfo *__begin_;
    struct RepeatedExternalReferenceCompletionInfo *__end_;
    struct __compressed_pair<TSP::RepeatedExternalReferenceCompletionInfo *, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
        struct RepeatedExternalReferenceCompletionInfo *__first_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__first_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__first_;
    } __end_cap_;
};

struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__first_;
    } __end_cap_;
};

struct vector<TSTCellUIDRange, std::__1::allocator<TSTCellUIDRange>> {
    struct TSTCellUIDRange *__begin_;
    struct TSTCellUIDRange *__end_;
    struct __compressed_pair<TSTCellUIDRange *, std::__1::allocator<TSTCellUIDRange>> {
        struct TSTCellUIDRange *__first_;
    } __end_cap_;
};

struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__first_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol *__begin_;
    struct WHCCol *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol *__first_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow *__begin_;
    struct WHCRow *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow *__first_;
    } __end_cap_;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__first_;
    } __end_cap_;
};

struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__first_;
    } __end_cap_;
};

struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__first_;
    } __end_cap_;
};

struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
};

struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
};

struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> {
    struct TSWPAdornments *_field1;
    struct TSWPAdornments *_field2;
    struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments>> {
        struct TSWPAdornments *_field1;
    } _field3;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSWPAttributeArrayKind *, std::__1::allocator<TSWPAttributeArrayKind>> {
        int *_field1;
    } _field3;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef *_field1;
    struct TSWPLineRef *_field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef *_field1;
    } _field3;
};

struct vector<TSWPParagraphMetrics, std::__1::allocator<TSWPParagraphMetrics>> {
    struct TSWPParagraphMetrics *__begin_;
    struct TSWPParagraphMetrics *__end_;
    struct __compressed_pair<TSWPParagraphMetrics *, std::__1::allocator<TSWPParagraphMetrics>> {
        struct TSWPParagraphMetrics *__first_;
    } __end_cap_;
};

struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction *_field1;
    struct TSWPStorageAction *_field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction *_field1;
    } _field3;
};

struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> {
    struct TSWPStorageActionGroup *_field1;
    struct TSWPStorageActionGroup *_field2;
    struct __compressed_pair<TSWPStorageActionGroup *, std::__1::allocator<TSWPStorageActionGroup>> {
        struct TSWPStorageActionGroup *_field1;
    } _field3;
};

struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> {
    struct TSWPStorageChangeRange *_field1;
    struct TSWPStorageChangeRange *_field2;
    struct __compressed_pair<TSWPStorageChangeRange *, std::__1::allocator<TSWPStorageChangeRange>> {
        struct TSWPStorageChangeRange *_field1;
    } _field3;
};

struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
    struct TSWPStorageParagraphIndexChange *_field1;
    struct TSWPStorageParagraphIndexChange *_field2;
    struct __compressed_pair<TSWPStorageParagraphIndexChange *, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
        struct TSWPStorageParagraphIndexChange *_field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject *_field1;
    struct TSWPStorageTransactionObject *_field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject *_field1;
    } _field3;
};

struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    struct TSWPTargetHint *_field1;
    struct TSWPTargetHint *_field2;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        struct TSWPTargetHint *_field1;
    } _field3;
};

struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> {
    struct TSWPUIAttachmentData *_field1;
    struct TSWPUIAttachmentData *_field2;
    struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData>> {
        struct TSWPUIAttachmentData *_field1;
    } _field3;
};

struct vector<TSWPWritingDirection, std::__1::allocator<TSWPWritingDirection>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<TSWPWritingDirection *, std::__1::allocator<TSWPWritingDirection>> {
        int *__first_;
    } __end_cap_;
};

struct vector<_CGLPixelFormatAttribute, std::__1::allocator<_CGLPixelFormatAttribute>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<_CGLPixelFormatAttribute *, std::__1::allocator<_CGLPixelFormatAttribute>> {
        int *_field1;
    } _field3;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> __end_cap_;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
};

struct vector<boost::shared_ptr<TSUStringChunk>, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> *__begin_;
    struct shared_ptr<TSUStringChunk> *__end_;
    struct __compressed_pair<boost::shared_ptr<TSUStringChunk>*, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
};

struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
};

struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<id, std::__1::allocator<id>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<id *, std::__1::allocator<id>> {
        id *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<signed char, std::__1::allocator<signed char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<signed char *, std::__1::allocator<signed char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<sortColorEntry, std::__1::allocator<sortColorEntry>> {
    struct sortColorEntry *_field1;
    struct sortColorEntry *_field2;
    struct __compressed_pair<sortColorEntry *, std::__1::allocator<sortColorEntry>> {
        struct sortColorEntry *_field1;
    } _field3;
};

struct vector<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__begin_;
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__end_;
    struct __compressed_pair<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>*, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
        struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSCEASTNodeArray *, int>, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
    struct pair<TSCEASTNodeArray *, int> *__begin_;
    struct pair<TSCEASTNodeArray *, int> *__end_;
    struct __compressed_pair<std::__1::pair<TSCEASTNodeArray *, int>*, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
        struct pair<TSCEASTNodeArray *, int> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
    struct pair<TSCECReference, bool> *_field1;
    struct pair<TSCECReference, bool> *_field2;
    struct __compressed_pair<std::__1::pair<TSCECReference, bool>*, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
        struct pair<TSCECReference, bool> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>> {
    struct pair<TSUCellCoord, TSCEFormula> *__begin_;
    struct pair<TSUCellCoord, TSCEFormula> *__end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, TSCEFormula>*, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>> {
        struct pair<TSUCellCoord, TSCEFormula> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSUCellCoord, double>, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
    struct pair<TSUCellCoord, double> *__begin_;
    struct pair<TSUCellCoord, double> *__end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, double>*, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
        struct pair<TSUCellCoord, double> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
    struct pair<_NSRange, _NSRange> *_field1;
    struct pair<_NSRange, _NSRange> *_field2;
    struct __compressed_pair<std::__1::pair<_NSRange, _NSRange>*, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
        struct pair<_NSRange, _NSRange> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned short, bool>, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
    struct pair<unsigned short, bool> *__begin_;
    struct pair<unsigned short, bool> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned short, bool>*, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
        struct pair<unsigned short, bool> *__first_;
    } __end_cap_;
};

struct vector<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>, std::__1::allocator<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>>> {
    struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__begin_;
    struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__end_;
    struct __compressed_pair<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>*, std::__1::allocator<std::__1::set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>>>> {
        struct set<std::__1::pair<NSObject *, NSObject *>, std::__1::less<std::__1::pair<NSObject *, NSObject *>>, std::__1::allocator<std::__1::pair<NSObject *, NSObject *>>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
    set_55031187 *_field1;
    set_55031187 *_field2;
    struct __compressed_pair<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>*, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
        set_55031187 *_field1;
    } _field3;
};

struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>*, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
        struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
};

struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__first_;
    } __end_cap_;
};

struct yy_buffer_state;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} Color_1703f521;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr *_field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
} Path_1b135553;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseApplyPresetCommandArchive *_field5;
    struct Reference *_field6;
} ShapeApplyPresetCommandArchive_6e60faf2;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BaseApplyPresetCommandArchive *_field5;
} ShapeApplyPresetCommandArchive_f42bf676;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartMediatorArchive *_field5;
    basic_string_a1f69cfb *_field6;
    struct ChartMediatorFormulaStorage *_field7;
    _Bool _field8;
    _Bool _field9;
} ChartMediatorArchive_65508aa1;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    _Bool _field10;
} StyleUpdatePropertyMapCommandArchive_a83fa896;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CommandArchive *_field5;
    struct RepeatedPtrField<TSA::DrawableZOrderListArchive> _field6;
    _Bool _field7;
} InducedVerifyDrawableZOrdersWithServerCommandArchive_5749020c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DocumentArchive *_field5;
    struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> _field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    basic_string_a1f69cfb *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    struct Reference *_field16;
    _Bool _field17;
    _Bool _field18;
} DocumentArchive_cc920261;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionArchive *_field5;
    struct Reference *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> _field7;
} ChartSelectionArchive_0103965d;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionTransformerArchive *_field5;
} ShapeSelectionTransformerArchive_c3bfcae0;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct StrokeArchive *_field6;
    struct ShadowArchive *_field7;
    struct ReflectionArchive *_field8;
    struct LineEndArchive *_field9;
    struct LineEndArchive *_field10;
    float _field11;
} ShapeStylePropertiesArchive_14f5c167;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct InducedVerifyDrawableZOrdersWithServerCommandArchive *_field5;
} InducedVerifyDrawableZOrdersWithServerCommandArchive_2000d312;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RangeReferenceArchive *_field5;
    struct ChartSelectionArchive *_field6;
    struct Reference *_field7;
    struct DrawableSelectionArchive *_field8;
} ChartSelectionArchive_b21c617c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
    int _field6;
    int _field7;
    struct Range *_field8;
    int _field9;
} SelectionArchive_4d81a463;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CellID *_field6;
    struct RepeatedPtrField<TST::CellRange> _field7;
    struct RepeatedPtrField<TST::CellRange> _field8;
    struct CellID *_field9;
    int _field10;
} SelectionArchive_c89327b4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
} ChartMediatorArchive_9bee4689;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeSelectionTransformerArchive *_field5;
    struct UUIDPath *_field6;
} ShapeSelectionTransformerArchive_dc7af695;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleUpdatePropertyMapCommandArchive *_field5;
} StyleUpdatePropertyMapCommandArchive_5295ca17;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ThemeArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
} ThemeArchive_59195ce6;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    basic_string_a1f69cfb *_field8;
    _Bool _field9;
} DocumentArchive_e58439c3;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct ColumnsArchive *_field10;
    struct PaddingArchive *_field11;
    unsigned int _field12;
    _Bool _field13;
    struct Reference *_field14;
} ShapeStylePropertiesArchive_7f628ad1;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
} Color_0722d876;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::Path_Element> _field5;
} Path_91321ae4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    RepeatedPtrField_bfda3daa _field9;
    RepeatedPtrField_bfda3daa _field10;
    RepeatedPtrField_634a5f45 _field11;
} ThemeArchive_ef21e698;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    NSUUID *mCustomFormatKey;
    TSUCustomFormat *mCustomFormat;
    unsigned int mLegacyID;
    unsigned char mAppliedConditionKey;
} CDStruct_f25b4237;

typedef struct {
    id _field1;
    double _field2;
    long long _field3;
    long long _field4;
} CDStruct_b2228240;

typedef struct {
    unsigned char byte0;
    unsigned char byte1;
    unsigned char byte2;
    unsigned char byte3;
    unsigned char byte4;
    unsigned char byte5;
    unsigned char byte6;
    unsigned char byte7;
    unsigned char byte8;
    unsigned char byte9;
    unsigned char byte10;
    unsigned char byte11;
    unsigned char byte12;
    unsigned char byte13;
    unsigned char byte14;
    unsigned char byte15;
} CDStruct_e6eac3cb;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
} CDStruct_3144a3ae;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    unsigned int m_data1;
    unsigned short m_data2;
    unsigned short m_data3;
    unsigned char m_data4[8];
} CDStruct_214f2dba;

typedef struct {
    unsigned int _field1;
    long long _field2;
} CDStruct_31de062f;

typedef struct {
    unsigned long long numberOfColumns;
    unsigned long long numberOfRows;
    char isConstantColumnCount;
} CDStruct_aa5da924;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
} CDStruct_188655c5;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    char _field2;
    char _field3;
    int _field4;
    unsigned long long _field5;
    char _field6;
    int _field7;
    unsigned long long _field8;
    char _field9;
    int _field10;
} CDStruct_7c9ba04e;

typedef struct {
    unsigned long long _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    unsigned short _field1;
    unsigned char _field2;
    unsigned int :1;
    unsigned int :1;
} CDStruct_f2a491fb;

typedef struct {
    unsigned int mCurrencyCodeIndex:16;
    unsigned int mDecimalPlaces:8;
    unsigned int mNegativeStyle:3;
    unsigned int mShowThousandsSeparator:1;
    unsigned int mUseAccountingStyle:1;
} CDStruct_50447d3e;

typedef struct {
    unsigned int mSuppressDateFormat:1;
    unsigned int mSuppressTimeFormat:1;
    NSString *mDateTimeFormat;
} CDStruct_b44fd3ce;

typedef struct {
    unsigned int mUseAutomaticUnits:1;
    int mDurationUnitSmallest;
    int mDurationUnitLargest;
    int mDurationStyle;
} CDStruct_b1177b60;

typedef struct {
    unsigned int formulaID:24;
    unsigned int reserved:8;
} CDStruct_a91f2c80;

typedef struct {
    unsigned int mBase:8;
    unsigned int mBasePlaces:8;
    unsigned int mBaseUseMinusSign:1;
} CDStruct_c5e3a123;

typedef struct {
    unsigned int mFractionAccuracy:8;
} CDStruct_7ef9dbe9;

typedef struct {
    char forceOmitLegend;
    char forceOmitTitle;
    char forceOmitAxisTitle;
    char enable3DTightBounds;
    char enable3DScaledDepthBounds;
    long long maxDepthRatioType;
    unsigned long long max3DLimitingSeries;
} CDStruct_2671d966;

typedef struct {
    char applicationExists;
    char oldPluginExists;
    char currentPluginExists;
} CDStruct_2c3aca9f;

typedef struct {
    char forDrawing;
    double width;
    double leftCap;
    double rightCap;
    double height;
    double topCap;
    double bottomCap;
} CDStruct_08b9d696;

typedef struct {
    double value;
    char isMultiValued;
} CDStruct_219b14c8;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
} CDStruct_41cea37a;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_a6fa95e6;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double mMinimum;
    double mMaximum;
    double mIncrement;
    int mDisplayFormatType;
    unsigned int mOrientation:2;
    unsigned int mPosition:2;
} CDStruct_8374e35e;

typedef struct {
    double skew;
    double skewOffset;
    double scale;
} CDStruct_d6fcdff4;

typedef struct {
    double minModelValue;
    double maxModelValue;
} CDStruct_8292cb43;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int mInitialValue;
    unsigned int mMultipleChoiceListFormatID;
    id mData;
} CDStruct_4edf9c0c;

typedef struct {
    int _field1;
    unsigned long long _field2;
    char _field3;
} CDStruct_4eafa971;

typedef struct {
    int x;
    int y;
    int width;
    int height;
} CDStruct_bf95b13b;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    struct TSWPLineFragment *_field1;
    struct TSWPLineFragment *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
    _Bool _field8;
} CDStruct_bccfccf2;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    CDStruct_8292cb43 _field6;
    CDStruct_8292cb43 _field7;
    char _field8;
} CDStruct_825d95ef;

typedef struct {
    long long _field1;
    unsigned long long _field2;
    char _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char _field8;
    struct _NSRange _field9;
    unsigned long long _field10;
} CDStruct_ede889c8;

typedef struct {
    long long colorspace;
    double globalEdgeWeight;
    CDStruct_83984b6f colorChannelWeights;
    long long minPixelsPerSegmentCutoff;
    double minPixelsPerSegmentCutoffWeight;
} CDStruct_d84c1df1;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    CDStruct_73b5d383 topLeft;
    CDStruct_73b5d383 bottomRight;
} CDStruct_2d1207dd;

typedef struct {
    CDStruct_219b14c8 x;
    CDStruct_219b14c8 y;
} CDStruct_c34523b2;

typedef struct {
    struct CGAffineTransform _field1;
    struct CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    struct CGPoint _field1;
    unsigned long long _field2;
    char _field3;
} CDStruct_8a598304;

typedef struct {
    struct CGPoint _field1;
    char _field2;
} CDStruct_d1f892e1;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    char _field3;
    unsigned long long _field4;
} CDStruct_f3053fc7;

typedef struct {
    struct CGPoint p1;
    struct CGPoint p2;
    struct CGPoint ecp1;
    struct CGPoint ecp2;
    struct CGPoint cp1;
    struct CGPoint cp2;
    struct CGPoint mp1;
    struct CGPoint mp2;
} CDStruct_6250c7cd;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct TSUCellCoord coordinate;
    struct __CFUUID *tableID;
} CDStruct_de21cb60;

typedef struct {
    struct TSUCellCoord topLeft;
    struct TSUCellCoord bottomRight;
} CDStruct_d8c645bd;

typedef struct {
    struct _NSRange _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont *_field10;
    struct CGColor *_field11;
    id _field12;
    char _field13;
    int _field14;
    double _field15;
    struct CGColor *_field16;
    double _field17;
} CDStruct_90c0bbcc;

typedef struct {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
} CDStruct_e0d92598;

typedef struct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberFormatStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b44fd3ce mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        CDStruct_f25b4237 mCustomFormatStruct;
        CDStruct_8374e35e mControlFormatStruct;
        CDStruct_4edf9c0c mMultipleChoiceListFormatStruct;
    } ;
} CDStruct_28403e59;

typedef struct {
    CDStruct_6250c7cd _field1;
    CDStruct_6250c7cd _field2;
    CDStruct_6250c7cd _field3;
    CDStruct_6250c7cd _field4;
    CDStruct_6250c7cd _field5;
} CDStruct_64b597b6;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    char _field6;
} CDStruct_78ea5dae;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} CDStruct_50f584da;

typedef struct {
    struct CGRect _field1;
    double _field2;
    struct CGRect _field3;
    char _field4;
} CDStruct_486845e0;

typedef struct {
    struct TSCERangeCoordinate range;
    struct __CFUUID *tableID;
} CDStruct_fc93c73e;

// Ambiguous groups
typedef struct {
    unsigned int _field1;
    id _field2;
} CDStruct_2f1ac7ad;

typedef struct {
    unsigned int useCount;
    id ticket;
} CDStruct_2a021fcd;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long x;
    unsigned long long y;
} CDStruct_73b5d383;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct {
    unsigned short numberOfColumns;
    unsigned short numberOfRows;
} CDStruct_0bda8247;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    int columnOffset;
    int rowOffset;
} CDStruct_945081a1;

typedef struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_be6372b9;

typedef struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_2ce397a3;

typedef struct CsPoint<int> {
    int _field1[2];
} CsPoint_c846a6ec;

typedef struct CsRect<int> {
    int _field1[4];
} CsRect_0aefebc6;

typedef struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
} EshTablePropVal_64904f96;

typedef struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
} EshTablePropVal_f007a3b0;

typedef struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
} EshTablePropVal_ea625207;

typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
} RepeatedField_12b14242;

typedef struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
} RepeatedField_324622b8;

typedef struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
} RepeatedField_c2891982;

typedef struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
} RepeatedField_27dfe32f;

typedef struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_b5a3b001;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a96af6e2;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_daf2f3db;

typedef struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_3504fdd6;

typedef struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_45e8210e;

typedef struct RepeatedPtrField<TSK::CollaborationCommandHistoryItem> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_085b988b;

typedef struct RepeatedPtrField<TSK::IdPlacementOperationArgs> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_830a1b19;

typedef struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_634a5f45;

typedef struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_1f1a6efb;

typedef struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_fe6aca30;

typedef struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_5fb0b506;

typedef struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_5867f37b;

typedef struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_c964a194;

typedef struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_c67bb210;

typedef struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a0d2dbe7;

typedef struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_bfda3daa;

typedef struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_0a3269f6;

typedef struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_236b8a23;

typedef struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
} StateStack_43a7011f;

typedef struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        CDStruct_e6eac3cb _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
} UUIDData_5fbc143e;

typedef struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
} UUIDMap_8a451d2c;

typedef struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
} array_bb63b711;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
} auto_ptr_4370f086;

typedef struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_88cdf798 *__ptr_;
} auto_ptr_945ad503;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
} box_e9f23397;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
} box_80622335;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
} box_0260e9b3;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
} box_a3bd9649;

typedef struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __first_;
    } __size_;
} deque_c2509c49;

typedef struct hash_map<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>, TSCHViewCellCoordinateHash, TSCHViewCellCoordinateEqual, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
    struct __hash_table<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>, std::__1::allocator<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *>*> {
                struct __hash_node<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::pair<unsigned long, unsigned long>, SFUtility::ObjcSharedPtr<TSCHMacTableCell>>, TSCHViewCellCoordinateEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
} hash_map_3fa342e8;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
} line_190fbfc7;

typedef struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7d4ee7b7;

typedef struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_c224dc08;

typedef struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7ba5c2fb;

typedef struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multiset_5f6ec4d0;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
} pair_4d5b4bcf;

typedef struct pair<int, int> {
    int _field1;
    int _field2;
} pair_65f741c2;

typedef struct pair<signed char, TSCH3DShaderVariableLinkage *> {
    char _field1;
    id _field2;
} pair_76ac3a9c;

typedef struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
} plane_849e6053;

typedef struct range<double> {
    double _field1;
    double _field2;
} range_2a4e38ce;

typedef struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
} range_f61e6b34;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_80ec8016;

typedef struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_d5b49e31;

typedef struct set<TSUCellRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_node<TSUCellRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_e7af9335;

typedef struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_node<TSUCellRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_b3934546;

typedef struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_node<long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_6550bfbd;

typedef struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_55031187;

typedef struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bafc106c;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *px;
    struct shared_count pn;
} shared_ptr_72f95721;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct shared_count _field2;
} shared_ptr_6f812b7d;

typedef struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cd1ed623;

typedef struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b9bbcad9;

typedef struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
} stack_00018fe6;

typedef struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
} stack_e5003a0d;

typedef struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
} tmat2x2_6cc53533;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec1<float> {
    CDUnion_d07f0a1e ;
} tvec1_1f665138;

typedef struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
} tvec1_dad7e00b;

typedef struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
} tvec4_d23a2b6e;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

typedef struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
} tvec4_f99fd489;

typedef struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_da379038;

typedef struct unordered_map<TSTCellUID, TSTCellDiff *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCellDiff *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCellDiff *>, std::__1::equal_to<TSTCellUID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_9b74cd8e;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCell *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCell *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_32e44243;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSTCellStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_7b841237;

typedef struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSWPParagraphStyle *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_cbdc988b;

typedef struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_5a23823e;

typedef struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_76e3bca3;

typedef struct unordered_map<TSUCellCoord, TSUColumnRowSize, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_9e9e60e6;

typedef struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const long long, bool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_88cdf798;

typedef struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node<TSCECellRef, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> {
                struct __hash_node<TSCECellRef, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_58f8aa0e;

typedef struct unordered_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
    struct __hash_table<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*> {
                struct __hash_node<TSCECellReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECellReferenceHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellReferenceEqual> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_1019bb64;

typedef struct unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
    struct __hash_table<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCEInternalCellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> {
                struct __hash_node<TSCEInternalCellReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEInternalCellReference>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEInternalCellReference>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_eec9ed52;

typedef struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
                struct __hash_node<TSU::UUIDData<TSP::UUIDData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_set_c04cc813;

typedef struct unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellCoord, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_264d5b55;

typedef struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellCoord, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_1ae1562e;

typedef struct unordered_set<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
    struct __hash_table<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
        struct unique_ptr<std::__1::__hash_node<TSUCellRect, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> {
                struct __hash_node<TSUCellRect, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellRect>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellRect>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_92ec99dc;

typedef struct vector<AcceptHash *, std::__1::allocator<AcceptHash *>> {
    struct AcceptHash **__begin_;
    struct AcceptHash **__end_;
    struct __compressed_pair<AcceptHash **, std::__1::allocator<AcceptHash *>> {
        struct AcceptHash **__first_;
    } __end_cap_;
} vector_8804bab3;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__first_;
    } __end_cap_;
} vector_fa824bf3;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
} vector_b8c73e0a;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineAstNode>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstNode>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstNode>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstNode> *__first_;
    } __end_cap_;
} vector_2860e087;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineAstUidTract>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineAstUidTract>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineAstUidTract>>> {
        struct GSUNSWrapper<GSSPCalculationEngineAstUidTract> *__first_;
    } __end_cap_;
} vector_f05deffb;

typedef struct vector<GSUNSWrapper<GSSPCalculationEngineFormula>, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__begin_;
    struct GSUNSWrapper<GSSPCalculationEngineFormula> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCalculationEngineFormula>*, std::__1::allocator<GSUNSWrapper<GSSPCalculationEngineFormula>>> {
        struct GSUNSWrapper<GSSPCalculationEngineFormula> *__first_;
    } __end_cap_;
} vector_520da7f7;

typedef struct vector<GSUNSWrapper<GSSPCellChange>, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
    struct GSUNSWrapper<GSSPCellChange> *__begin_;
    struct GSUNSWrapper<GSSPCellChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellChange>*, std::__1::allocator<GSUNSWrapper<GSSPCellChange>>> {
        struct GSUNSWrapper<GSSPCellChange> *__first_;
    } __end_cap_;
} vector_5757ef6c;

typedef struct vector<GSUNSWrapper<GSSPCellRange>, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
    struct GSUNSWrapper<GSSPCellRange> *__begin_;
    struct GSUNSWrapper<GSSPCellRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellRange>*, std::__1::allocator<GSUNSWrapper<GSSPCellRange>>> {
        struct GSUNSWrapper<GSSPCellRange> *__first_;
    } __end_cap_;
} vector_347536ce;

typedef struct vector<GSUNSWrapper<GSSPCellUID>, std::__1::allocator<GSUNSWrapper<GSSPCellUID>>> {
    struct GSUNSWrapper<GSSPCellUID> *__begin_;
    struct GSUNSWrapper<GSSPCellUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCellUID>*, std::__1::allocator<GSUNSWrapper<GSSPCellUID>>> {
        struct GSUNSWrapper<GSSPCellUID> *__first_;
    } __end_cap_;
} vector_98d6607f;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisData> *__first_;
    } __end_cap_;
} vector_a4449968;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisMultiData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisMultiData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisMultiData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisMultiData> *__first_;
    } __end_cap_;
} vector_64501fdd;

typedef struct vector<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__begin_;
    struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>*, std::__1::allocator<GSUNSWrapper<GSSPChartFormattedAxisSeriesData>>> {
        struct GSUNSWrapper<GSSPChartFormattedAxisSeriesData> *__first_;
    } __end_cap_;
} vector_d00ba620;

typedef struct vector<GSUNSWrapper<GSSPChartGridValue>, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
    struct GSUNSWrapper<GSSPChartGridValue> *__begin_;
    struct GSUNSWrapper<GSSPChartGridValue> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartGridValue>*, std::__1::allocator<GSUNSWrapper<GSSPChartGridValue>>> {
        struct GSUNSWrapper<GSSPChartGridValue> *__first_;
    } __end_cap_;
} vector_dc0d6589;

typedef struct vector<GSUNSWrapper<GSSPChartMediatorAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisData> *__first_;
    } __end_cap_;
} vector_a629cf16;

typedef struct vector<GSUNSWrapper<GSSPChartMediatorAxisFormat>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisFormat>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisFormat>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisFormat> *__first_;
    } __end_cap_;
} vector_34b0bdda;

typedef struct vector<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__begin_;
    struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>*, std::__1::allocator<GSUNSWrapper<GSSPChartSeriesErrorBarCustomData>>> {
        struct GSUNSWrapper<GSSPChartSeriesErrorBarCustomData> *__first_;
    } __end_cap_;
} vector_2e7c4195;

typedef struct vector<GSUNSWrapper<GSSPCitationRecord>, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
    struct GSUNSWrapper<GSSPCitationRecord> *__begin_;
    struct GSUNSWrapper<GSSPCitationRecord> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCitationRecord>*, std::__1::allocator<GSUNSWrapper<GSSPCitationRecord>>> {
        struct GSUNSWrapper<GSSPCitationRecord> *__first_;
    } __end_cap_;
} vector_71b36aa3;

typedef struct vector<GSUNSWrapper<GSSPCustomFormatCondition>, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__begin_;
    struct GSUNSWrapper<GSSPCustomFormatCondition> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPCustomFormatCondition>*, std::__1::allocator<GSUNSWrapper<GSSPCustomFormatCondition>>> {
        struct GSUNSWrapper<GSSPCustomFormatCondition> *__first_;
    } __end_cap_;
} vector_d3db1262;

typedef struct vector<GSUNSWrapper<GSSPImageData>, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
    struct GSUNSWrapper<GSSPImageData> *__begin_;
    struct GSUNSWrapper<GSSPImageData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPImageData>*, std::__1::allocator<GSUNSWrapper<GSSPImageData>>> {
        struct GSUNSWrapper<GSSPImageData> *__first_;
    } __end_cap_;
} vector_48984fc6;

typedef struct vector<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestBaseMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestBaseMessage> *__first_;
    } __end_cap_;
} vector_b584c9be;

typedef struct vector<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__begin_;
    struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>*, std::__1::allocator<GSUNSWrapper<GSSPJavaUnitTestDerivedMessage>>> {
        struct GSUNSWrapper<GSSPJavaUnitTestDerivedMessage> *__first_;
    } __end_cap_;
} vector_35314b37;

typedef struct vector<GSUNSWrapper<GSSPPasteboardDrawable>, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__begin_;
    struct GSUNSWrapper<GSSPPasteboardDrawable> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPPasteboardDrawable>*, std::__1::allocator<GSUNSWrapper<GSSPPasteboardDrawable>>> {
        struct GSUNSWrapper<GSSPPasteboardDrawable> *__first_;
    } __end_cap_;
} vector_3316f281;

typedef struct vector<GSUNSWrapper<GSSPRange>, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
    struct GSUNSWrapper<GSSPRange> *__begin_;
    struct GSUNSWrapper<GSSPRange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRange>*, std::__1::allocator<GSUNSWrapper<GSSPRange>>> {
        struct GSUNSWrapper<GSSPRange> *__first_;
    } __end_cap_;
} vector_c16d56c8;

typedef struct vector<GSUNSWrapper<GSSPRect>, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
    struct GSUNSWrapper<GSSPRect> *__begin_;
    struct GSUNSWrapper<GSSPRect> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPRect>*, std::__1::allocator<GSUNSWrapper<GSSPRect>>> {
        struct GSUNSWrapper<GSSPRect> *__first_;
    } __end_cap_;
} vector_4e965f96;

typedef struct vector<GSUNSWrapper<GSSPSize>, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
    struct GSUNSWrapper<GSSPSize> *__begin_;
    struct GSUNSWrapper<GSSPSize> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPSize>*, std::__1::allocator<GSUNSWrapper<GSSPSize>>> {
        struct GSUNSWrapper<GSSPSize> *__first_;
    } __end_cap_;
} vector_bc49fb15;

typedef struct vector<GSUNSWrapper<GSSPStorageAction>, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
    struct GSUNSWrapper<GSSPStorageAction> *__begin_;
    struct GSUNSWrapper<GSSPStorageAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageAction>*, std::__1::allocator<GSUNSWrapper<GSSPStorageAction>>> {
        struct GSUNSWrapper<GSSPStorageAction> *__first_;
    } __end_cap_;
} vector_36e9b6d5;

typedef struct vector<GSUNSWrapper<GSSPStorageActionGroup>, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
    struct GSUNSWrapper<GSSPStorageActionGroup> *__begin_;
    struct GSUNSWrapper<GSSPStorageActionGroup> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPStorageActionGroup>*, std::__1::allocator<GSUNSWrapper<GSSPStorageActionGroup>>> {
        struct GSUNSWrapper<GSSPStorageActionGroup> *__first_;
    } __end_cap_;
} vector_46b9e66b;

typedef struct vector<GSUNSWrapper<GSSPTOCMapEntry>, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
    struct GSUNSWrapper<GSSPTOCMapEntry> *__begin_;
    struct GSUNSWrapper<GSSPTOCMapEntry> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTOCMapEntry>*, std::__1::allocator<GSUNSWrapper<GSSPTOCMapEntry>>> {
        struct GSUNSWrapper<GSSPTOCMapEntry> *__first_;
    } __end_cap_;
} vector_43450b93;

typedef struct vector<GSUNSWrapper<GSSPTableChange>, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
    struct GSUNSWrapper<GSSPTableChange> *__begin_;
    struct GSUNSWrapper<GSSPTableChange> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPTableChange>*, std::__1::allocator<GSUNSWrapper<GSSPTableChange>>> {
        struct GSUNSWrapper<GSSPTableChange> *__first_;
    } __end_cap_;
} vector_e0b1a5c5;

typedef struct vector<GSUNSWrapper<NSObject>, std::__1::allocator<GSUNSWrapper<NSObject>>> {
    struct GSUNSWrapper<NSObject> *__begin_;
    struct GSUNSWrapper<NSObject> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSObject>*, std::__1::allocator<GSUNSWrapper<NSObject>>> {
        struct GSUNSWrapper<NSObject> *__first_;
    } __end_cap_;
} vector_5a21c1ab;

typedef struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__first_;
    } __end_cap_;
} vector_a093891c;

typedef struct vector<GSUNSWrapper<NSUUID>, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
    struct GSUNSWrapper<NSUUID> *__begin_;
    struct GSUNSWrapper<NSUUID> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSUUID>*, std::__1::allocator<GSUNSWrapper<NSUUID>>> {
        struct GSUNSWrapper<NSUUID> *__first_;
    } __end_cap_;
} vector_d1537b29;

typedef struct vector<GSUNSWrapper<TSCEOwnerUidMapper>, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__begin_;
    struct GSUNSWrapper<TSCEOwnerUidMapper> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCEOwnerUidMapper>*, std::__1::allocator<GSUNSWrapper<TSCEOwnerUidMapper>>> {
        struct GSUNSWrapper<TSCEOwnerUidMapper> *__first_;
    } __end_cap_;
} vector_ce2c5aca;

typedef struct vector<GSUNSWrapper<TSCHChartAxisID>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
    struct GSUNSWrapper<TSCHChartAxisID> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisID> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisID>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisID>>> {
        struct GSUNSWrapper<TSCHChartAxisID> *__first_;
    } __end_cap_;
} vector_8610e4f5;

typedef struct vector<GSUNSWrapper<TSCHChartAxisNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisNonStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisNonStyle> *__first_;
    } __end_cap_;
} vector_ac76465f;

typedef struct vector<GSUNSWrapper<TSCHChartAxisStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
    struct GSUNSWrapper<TSCHChartAxisStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartAxisStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartAxisStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartAxisStyle>>> {
        struct GSUNSWrapper<TSCHChartAxisStyle> *__first_;
    } __end_cap_;
} vector_4b643b1f;

typedef struct vector<GSUNSWrapper<TSCHChartSeriesNonStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesNonStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesNonStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesNonStyle> *__first_;
    } __end_cap_;
} vector_784786cb;

typedef struct vector<GSUNSWrapper<TSCHChartSeriesStyle>, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__begin_;
    struct GSUNSWrapper<TSCHChartSeriesStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHChartSeriesStyle>*, std::__1::allocator<GSUNSWrapper<TSCHChartSeriesStyle>>> {
        struct GSUNSWrapper<TSCHChartSeriesStyle> *__first_;
    } __end_cap_;
} vector_08addc2e;

typedef struct vector<GSUNSWrapper<TSCHSelectionPath>, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
    struct GSUNSWrapper<TSCHSelectionPath> *__begin_;
    struct GSUNSWrapper<TSCHSelectionPath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSCHSelectionPath>*, std::__1::allocator<GSUNSWrapper<TSCHSelectionPath>>> {
        struct GSUNSWrapper<TSCHSelectionPath> *__first_;
    } __end_cap_;
} vector_adf11e52;

typedef struct vector<GSUNSWrapper<TSDBezierNode>, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
    struct GSUNSWrapper<TSDBezierNode> *__begin_;
    struct GSUNSWrapper<TSDBezierNode> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierNode>*, std::__1::allocator<GSUNSWrapper<TSDBezierNode>>> {
        struct GSUNSWrapper<TSDBezierNode> *__first_;
    } __end_cap_;
} vector_cf3607be;

typedef struct vector<GSUNSWrapper<TSDBezierSubpath>, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
    struct GSUNSWrapper<TSDBezierSubpath> *__begin_;
    struct GSUNSWrapper<TSDBezierSubpath> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDBezierSubpath>*, std::__1::allocator<GSUNSWrapper<TSDBezierSubpath>>> {
        struct GSUNSWrapper<TSDBezierSubpath> *__first_;
    } __end_cap_;
} vector_7287b4d3;

typedef struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__first_;
    } __end_cap_;
} vector_9d9810dc;

typedef struct vector<GSUNSWrapper<TSDUserDefinedGuide>, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
    struct GSUNSWrapper<TSDUserDefinedGuide> *__begin_;
    struct GSUNSWrapper<TSDUserDefinedGuide> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDUserDefinedGuide>*, std::__1::allocator<GSUNSWrapper<TSDUserDefinedGuide>>> {
        struct GSUNSWrapper<TSDUserDefinedGuide> *__first_;
    } __end_cap_;
} vector_c301cdb1;

typedef struct vector<GSUNSWrapper<TSKCommandResponse>, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
    struct GSUNSWrapper<TSKCommandResponse> *__begin_;
    struct GSUNSWrapper<TSKCommandResponse> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKCommandResponse>*, std::__1::allocator<GSUNSWrapper<TSKCommandResponse>>> {
        struct GSUNSWrapper<TSKCommandResponse> *__first_;
    } __end_cap_;
} vector_5ab6e457;

typedef struct vector<GSUNSWrapper<TSKImageDigestData>, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
    struct GSUNSWrapper<TSKImageDigestData> *__begin_;
    struct GSUNSWrapper<TSKImageDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKImageDigestData>*, std::__1::allocator<GSUNSWrapper<TSKImageDigestData>>> {
        struct GSUNSWrapper<TSKImageDigestData> *__first_;
    } __end_cap_;
} vector_84383bd0;

typedef struct vector<GSUNSWrapper<TSKMovieDigestData>, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
    struct GSUNSWrapper<TSKMovieDigestData> *__begin_;
    struct GSUNSWrapper<TSKMovieDigestData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKMovieDigestData>*, std::__1::allocator<GSUNSWrapper<TSKMovieDigestData>>> {
        struct GSUNSWrapper<TSKMovieDigestData> *__first_;
    } __end_cap_;
} vector_e4412b24;

typedef struct vector<GSUNSWrapper<TSKWebQuickLookImage>, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
    struct GSUNSWrapper<TSKWebQuickLookImage> *__begin_;
    struct GSUNSWrapper<TSKWebQuickLookImage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSKWebQuickLookImage>*, std::__1::allocator<GSUNSWrapper<TSKWebQuickLookImage>>> {
        struct GSUNSWrapper<TSKWebQuickLookImage> *__first_;
    } __end_cap_;
} vector_64eb1277;

typedef struct vector<GSUNSWrapper<TSSStyle>, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
    struct GSUNSWrapper<TSSStyle> *__begin_;
    struct GSUNSWrapper<TSSStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSSStyle>*, std::__1::allocator<GSUNSWrapper<TSSStyle>>> {
        struct GSUNSWrapper<TSSStyle> *__first_;
    } __end_cap_;
} vector_5c816c18;

typedef struct vector<GSUNSWrapper<TSTCell>, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
    struct GSUNSWrapper<TSTCell> *__begin_;
    struct GSUNSWrapper<TSTCell> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTCell>*, std::__1::allocator<GSUNSWrapper<TSTCell>>> {
        struct GSUNSWrapper<TSTCell> *__first_;
    } __end_cap_;
} vector_16c93b0c;

typedef struct vector<GSUNSWrapper<TSTColumnRowMetadata>, std::__1::allocator<GSUNSWrapper<TSTColumnRowMetadata>>> {
    struct GSUNSWrapper<TSTColumnRowMetadata> *__begin_;
    struct GSUNSWrapper<TSTColumnRowMetadata> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTColumnRowMetadata>*, std::__1::allocator<GSUNSWrapper<TSTColumnRowMetadata>>> {
        struct GSUNSWrapper<TSTColumnRowMetadata> *__first_;
    } __end_cap_;
} vector_e0a4097b;

typedef struct vector<GSUNSWrapper<TSTConditionalStyleRule>, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
    struct GSUNSWrapper<TSTConditionalStyleRule> *__begin_;
    struct GSUNSWrapper<TSTConditionalStyleRule> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTConditionalStyleRule>*, std::__1::allocator<GSUNSWrapper<TSTConditionalStyleRule>>> {
        struct GSUNSWrapper<TSTConditionalStyleRule> *__first_;
    } __end_cap_;
} vector_f59ca16a;

typedef struct vector<GSUNSWrapper<TSTMergeAction>, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
    struct GSUNSWrapper<TSTMergeAction> *__begin_;
    struct GSUNSWrapper<TSTMergeAction> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTMergeAction>*, std::__1::allocator<GSUNSWrapper<TSTMergeAction>>> {
        struct GSUNSWrapper<TSTMergeAction> *__first_;
    } __end_cap_;
} vector_b18431c0;

typedef struct vector<GSUNSWrapper<TSTTableStrokePresetData>, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
    struct GSUNSWrapper<TSTTableStrokePresetData> *__begin_;
    struct GSUNSWrapper<TSTTableStrokePresetData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSTTableStrokePresetData>*, std::__1::allocator<GSUNSWrapper<TSTTableStrokePresetData>>> {
        struct GSUNSWrapper<TSTTableStrokePresetData> *__first_;
    } __end_cap_;
} vector_d7cbf4a5;

typedef struct vector<GSUNSWrapper<TSUCustomFormat>, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
    struct GSUNSWrapper<TSUCustomFormat> *__begin_;
    struct GSUNSWrapper<TSUCustomFormat> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSUCustomFormat>*, std::__1::allocator<GSUNSWrapper<TSUCustomFormat>>> {
        struct GSUNSWrapper<TSUCustomFormat> *__first_;
    } __end_cap_;
} vector_bde5018d;

typedef struct vector<GSUNSWrapper<TSUUUIDPath>, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
    struct GSUNSWrapper<TSUUUIDPath> *_field1;
    struct GSUNSWrapper<TSUUUIDPath> *_field2;
    struct __compressed_pair<GSUNSWrapper<TSUUUIDPath>*, std::__1::allocator<GSUNSWrapper<TSUUUIDPath>>> {
        struct GSUNSWrapper<TSUUUIDPath> *_field1;
    } _field3;
} vector_2f0024c7;

typedef struct vector<GSUNSWrapper<TSWPCharacterStyleOrNil_G>, std::__1::allocator<GSUNSWrapper<TSWPCharacterStyleOrNil_G>>> {
    struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__begin_;
    struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPCharacterStyleOrNil_G>*, std::__1::allocator<GSUNSWrapper<TSWPCharacterStyleOrNil_G>>> {
        struct GSUNSWrapper<TSWPCharacterStyleOrNil_G> *__first_;
    } __end_cap_;
} vector_896f3d69;

typedef struct vector<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>, std::__1::allocator<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>>> {
    struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__begin_;
    struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>*, std::__1::allocator<GSUNSWrapper<TSWPCharacterStylePropertyChangeSet>>> {
        struct GSUNSWrapper<TSWPCharacterStylePropertyChangeSet> *__first_;
    } __end_cap_;
} vector_7ab7fcf0;

typedef struct vector<GSUNSWrapper<TSWPHyperlinkField>, std::__1::allocator<GSUNSWrapper<TSWPHyperlinkField>>> {
    struct GSUNSWrapper<TSWPHyperlinkField> *__begin_;
    struct GSUNSWrapper<TSWPHyperlinkField> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPHyperlinkField>*, std::__1::allocator<GSUNSWrapper<TSWPHyperlinkField>>> {
        struct GSUNSWrapper<TSWPHyperlinkField> *__first_;
    } __end_cap_;
} vector_9300c341;

typedef struct vector<GSUNSWrapper<TSWPListStyle>, std::__1::allocator<GSUNSWrapper<TSWPListStyle>>> {
    struct GSUNSWrapper<TSWPListStyle> *__begin_;
    struct GSUNSWrapper<TSWPListStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPListStyle>*, std::__1::allocator<GSUNSWrapper<TSWPListStyle>>> {
        struct GSUNSWrapper<TSWPListStyle> *__first_;
    } __end_cap_;
} vector_7fecde4e;

typedef struct vector<GSUNSWrapper<TSWPParagraphStyle>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
    struct GSUNSWrapper<TSWPParagraphStyle> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStyle> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStyle>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStyle>>> {
        struct GSUNSWrapper<TSWPParagraphStyle> *__first_;
    } __end_cap_;
} vector_dd8b49b6;

typedef struct vector<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>, std::__1::allocator<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>>> {
    struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__begin_;
    struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>*, std::__1::allocator<GSUNSWrapper<TSWPParagraphStylePropertyChangeSet>>> {
        struct GSUNSWrapper<TSWPParagraphStylePropertyChangeSet> *__first_;
    } __end_cap_;
} vector_c74776a8;

typedef struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__first_;
    } __end_cap_;
} vector_6e19e9c8;

typedef struct vector<GSUNSWrapper<TSWPTOCEntryData>, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
    struct GSUNSWrapper<TSWPTOCEntryData> *__begin_;
    struct GSUNSWrapper<TSWPTOCEntryData> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTOCEntryData>*, std::__1::allocator<GSUNSWrapper<TSWPTOCEntryData>>> {
        struct GSUNSWrapper<TSWPTOCEntryData> *__first_;
    } __end_cap_;
} vector_1b5e0c6d;

typedef struct vector<GSUNSWrapper<TSWPTab>, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
    struct GSUNSWrapper<TSWPTab> *__begin_;
    struct GSUNSWrapper<TSWPTab> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPTab>*, std::__1::allocator<GSUNSWrapper<TSWPTab>>> {
        struct GSUNSWrapper<TSWPTab> *__first_;
    } __end_cap_;
} vector_e52a4632;

typedef struct vector<InsertionMap, std::__1::allocator<InsertionMap>> {
    struct InsertionMap *_field1;
    struct InsertionMap *_field2;
    struct __compressed_pair<InsertionMap *, std::__1::allocator<InsertionMap>> {
        struct InsertionMap *_field1;
    } _field3;
} vector_3e4085d1;

typedef struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
} vector_2bba1c52;

typedef struct vector<TSCECellReference, std::__1::allocator<TSCECellReference>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSCECellReference *, std::__1::allocator<TSCECellReference>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_3fb2d6cd;

typedef struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__first_;
    } __end_cap_;
} vector_7ac42031;

typedef struct vector<TSCEFormulaID, std::__1::allocator<TSCEFormulaID>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSCEFormulaID *, std::__1::allocator<TSCEFormulaID>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_b129da7b;

typedef struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
} vector_60dd006f;

typedef struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
} vector_99ef3555;

typedef struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *_field1;
    struct TSCEValue *_field2;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *_field1;
    } _field3;
} vector_10088e46;

typedef struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__first_;
    } __end_cap_;
} vector_a9ee3a08;

typedef struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__first_;
    } __end_cap_;
} vector_4c74e494;

typedef struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__first_;
    } __end_cap_;
} vector_a3e57ab7;

typedef struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__first_;
    } __end_cap_;
} vector_cd7372eb;

typedef struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__first_;
    } __end_cap_;
} vector_aeadf634;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
} vector_b5dead7b;

typedef struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__first_;
    } __end_cap_;
} vector_029d225a;

typedef struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__first_;
    } __end_cap_;
} vector_8ef431c5;

typedef struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__first_;
    } __end_cap_;
} vector_afe065ba;

typedef struct vector<TSTCellUIDRange, std::__1::allocator<TSTCellUIDRange>> {
    struct TSTCellUIDRange *__begin_;
    struct TSTCellUIDRange *__end_;
    struct __compressed_pair<TSTCellUIDRange *, std::__1::allocator<TSTCellUIDRange>> {
        struct TSTCellUIDRange *__first_;
    } __end_cap_;
} vector_b8794d04;

typedef struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__first_;
    } __end_cap_;
} vector_62d75e4b;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__first_;
    } __end_cap_;
} vector_dadc1b26;

typedef struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__first_;
    } __end_cap_;
} vector_13f93596;

typedef struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__first_;
    } __end_cap_;
} vector_db509b29;

typedef struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
} vector_5a1d2cc3;

typedef struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
} vector_e65b05c3;

typedef struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction *_field1;
    struct TSWPStorageAction *_field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction *_field1;
    } _field3;
} vector_e5fc8613;

typedef struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    struct TSWPTargetHint *_field1;
    struct TSWPTargetHint *_field2;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        struct TSWPTargetHint *_field1;
    } _field3;
} vector_3a6dd4b9;

typedef struct vector<TSWPWritingDirection, std::__1::allocator<TSWPWritingDirection>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<TSWPWritingDirection *, std::__1::allocator<TSWPWritingDirection>> {
        int *__first_;
    } __end_cap_;
} vector_6a8d29c9;

typedef struct vector<_CGLPixelFormatAttribute, std::__1::allocator<_CGLPixelFormatAttribute>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<_CGLPixelFormatAttribute *, std::__1::allocator<_CGLPixelFormatAttribute>> {
        int *_field1;
    } _field3;
} vector_10364fa1;

typedef struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
} vector_277e069e;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
} vector_ec52ae8c;

typedef struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__first_;
    } __end_cap_;
} vector_7cfb452c;

typedef struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
} vector_319661ea;

typedef struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__first_;
    } __end_cap_;
} vector_35283da1;

typedef struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__first_;
    } __end_cap_;
} vector_56a3751a;

typedef struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__first_;
    } __end_cap_;
} vector_45b393db;

typedef struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
} vector_e600bae4;

typedef struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__first_;
    } __end_cap_;
} vector_b7abfae3;

typedef struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
} vector_50d79d4a;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

typedef struct vector<signed char, std::__1::allocator<signed char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<signed char *, std::__1::allocator<signed char>> {
        char *__first_;
    } __end_cap_;
} vector_0cbbbdf2;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
} vector_88016b54;

typedef struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__first_;
    } __end_cap_;
} vector_667badbd;

#pragma mark Named Unions

union EFData {
    CDStruct_aa5da924 _field1;
    struct {
        unsigned long long _field1;
        void *_field2;
    } _field2;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        char _field3;
        char _field4;
    } _field3;
};

union Value {
    struct RGB _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct AdjustedColor _field4;
};

union YYSTYPE {
    struct EFRefTok _field1;
    id _field2;
    unsigned long long _field3;
    int _field4;
    double _field5;
    id _field6;
    struct EFStrTok _field7;
};

#pragma mark Typedef'd Unions

// Ambiguous groups
typedef union {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDUnion_2cf95dea;

typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int _field1;
    int _field2;
    int _field3;
} CDUnion_58123c5d;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

