//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSDStyledDrawableEditor.h"

#import "TSDDecorator-Protocol.h"

@class CAShapeLayer, NSString, TSDDrawableInfo, TSDPathKnob, TSDRep, TSKCommandSelectionBehavior;
@protocol TSDPathEditableRep;

@interface TSDPathEditor : TSDStyledDrawableEditor <TSDDecorator>
{
    CAShapeLayer *mGhostPathLayer;
    struct CGPoint mLastGhostPosition;
    BOOL mIsInCommandGroup;
    TSDPathKnob *mHoveringKnob;
    CDUnknownBlockType mPathCreateBlock;
    TSDDrawableInfo *mCreatingInfo;
    BOOL mIsCreatingPath;
    BOOL mIsCreatingReversed;
    BOOL mShouldCreateNewPath;
    BOOL mWillBecomeCurrentEditorAgain;
    BOOL mCurrentCommandsPathRelated;
    TSKCommandSelectionBehavior *mInsertSelectionBehavior;
    TSDPathKnob *mPathHoverKnob;
    BOOL mAddNodeMode;
    BOOL mResetAfterRebase;
}

+ (Class)touchBarProviderClass;
+ (void)initialize;
@property(nonatomic) BOOL currentCommandsPathRelated; // @synthesize currentCommandsPathRelated=mCurrentCommandsPathRelated;
@property(nonatomic) BOOL resetAfterRebase; // @synthesize resetAfterRebase=mResetAfterRebase;
@property(nonatomic) BOOL shouldCreateNewPath; // @synthesize shouldCreateNewPath=mShouldCreateNewPath;
@property(nonatomic) BOOL isCreatingReversed; // @synthesize isCreatingReversed=mIsCreatingReversed;
@property(nonatomic) BOOL isCreatingPath; // @synthesize isCreatingPath=mIsCreatingPath;
@property(copy, nonatomic) CDUnknownBlockType pathCreateBlock; // @synthesize pathCreateBlock=mPathCreateBlock;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)p_selectNextNode:(int)arg1;
- (BOOL)canBeginEditingRepOnDoubleTap:(id)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (BOOL)pathReturnsTrueForSelector:(SEL)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)nudgeByDelta:(struct CGPoint)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)delete:(id)arg1;
- (void)distributeNodesByEdge:(int)arg1;
- (void)alignNodesByEdge:(int)arg1;
- (BOOL)pathHasSelectedNodes:(unsigned long long)arg1;
- (void)distributeDrawablesVertically:(id)arg1;
- (void)distributeDrawablesHorizontally:(id)arg1;
- (void)alignDrawablesByHorizontalCenter:(id)arg1;
- (void)alignDrawablesByBottomEdge:(id)arg1;
- (void)alignDrawablesByTopEdge:(id)arg1;
- (void)alignDrawablesByVerticalCenter:(id)arg1;
- (void)alignDrawablesByRightEdge:(id)arg1;
- (void)alignDrawablesByLeftEdge:(id)arg1;
- (void)close:(id)arg1;
- (void)join:(id)arg1;
- (void)split:(id)arg1;
- (void)makeBezier:(id)arg1;
- (void)makeSmooth:(id)arg1;
- (void)makeSharp:(id)arg1;
- (void)toggleSelectedNodeToType:(int)arg1;
- (void)setAddNodeMode:(BOOL)arg1;
- (void)flagsChangedWithEvent:(id)arg1;
- (void)p_commandGroupSafeEndEditing;
- (void)insertNewline:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)endPathEditing;
- (void)p_groupWillBeOpened:(id)arg1;
- (void)p_commandWillBeEnqueued:(id)arg1;
- (void)p_closeCommandGroupBookkeepingAndUnregisterForOpenGroupNotifications;
- (void)p_openCommandGroupBookkeepingAndRegisterForOpenGroupNotifications;
- (BOOL)canSaveSelectionToArchivedViewState;
- (BOOL)canRemainDuringSharedReadOnlyMode;
- (BOOL)canRemainDuringUserInitiatedSave;
- (BOOL)canRemainDuringDragInsert;
- (BOOL)wantsToReceiveTextInput;
- (BOOL)shouldRemainOnEditorStackForSelection:(id)arg1 inSelectionPath:(id)arg2 withNewEditors:(id)arg3;
- (BOOL)p_shouldKeepEditingInfos:(id)arg1;
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;
- (id)selectionWillChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3 inSelectionPath:(id)arg4 withNewEditors:(id)arg5;
@property(readonly, nonatomic) BOOL currentShapeIsValid;
- (BOOL)canEndPathCreationWithKnob:(id)arg1;
- (BOOL)canClosePathToKnob:(id)arg1;
- (BOOL)canContinuePathFromKnob:(id)arg1 reversed:(char *)arg2;
- (void)closeLastSubpath;
- (id)cursorAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseMovedAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)updateGhost;
- (void)updateGhostForNodeCreationAtPoint:(struct CGPoint)arg1;
- (void)p_resetAfterRebase;
- (void)endMovingKnob;
- (BOOL)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)newMouseEventHandlerAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)addContextualMenuItemsToMenu:(id)arg1 clickAtPoint:(struct CGPoint)arg2 withEvent:(id)arg3;
- (struct CGPoint)constrainedUnscaledPointForPathCreation:(struct CGPoint)arg1;
- (void)p_didScroll:(id)arg1;
@property(retain, nonatomic) TSDRep<TSDPathEditableRep> *creatingRep;
- (id)decoratorOverlayLayers;
- (void)setGhostStrokeColor;
- (id)ghostLayer;
- (void)deselectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)editPathsOnPathEditableRepsWithActionString:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 filterWithBlock:(CDUnknownBlockType)arg3;
- (id)newTrackerForKnob:(id)arg1 forRep:(id)arg2;
- (void)updatePositionsOfKnobs:(id)arg1 forRep:(id)arg2;
- (void)addKnobsForRep:(id)arg1 toArray:(id)arg2;
- (void)invalidateKnobs;
- (void)didResignTextInputEditor;
- (void)didBecomeCurrentEditorForEditorController:(id)arg1;
- (void)p_showPathHUD;
- (void)showPathHUD;
- (id)pathHUDController;
- (void)dealloc;
- (id)tma_formatInspectorPaneIdentifiers;
- (BOOL)tma_formatInspectorPanesShouldShowFloatingArrangePanel;
- (BOOL)tma_formatInspectorPanesShouldContinueEditorStackTraversal;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

