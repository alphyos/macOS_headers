//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSUKeyValueProxy.h"

#import "TSDDeferredChangeKeyValueProxy-Protocol.h"
#import "TSUDependentKeyValueProxyParent-Protocol.h"
#import "TSUKeyValueTracking-Protocol.h"

@class NSCountedSet, NSMutableSet, NSObject, NSString, TSDDeferredChangeKeyValueStorage, TSKDocumentRoot;
@protocol TSDDynamicChangeStandIn;

@interface TSDCommandPushingProxy : TSUKeyValueProxy <TSUDependentKeyValueProxyParent, TSDDeferredChangeKeyValueProxy, TSUKeyValueTracking>
{
    TSDDeferredChangeKeyValueStorage *mKeyValueStorage;
    NSCountedSet *mKeyPathsForValuesBeingChangedBySetter;
    NSCountedSet *mKeyPathsForNotificationsAlreadyBeingPosted;
    NSMutableSet *mKeyPathsForValuesChangedByDynamicChangeStandIn;
    long long mTrackingValueCount;
    BOOL mDidEnableAutomaticCommandGrouping;
    TSKDocumentRoot *mDocumentRoot;
    NSObject<TSDDynamicChangeStandIn> *mDynamicChangeStandIn;
}

+ (BOOL)forwardsNotificationsFromTargetForKey:(id)arg1;
+ (BOOL)targetAffectsValuesForKey:(id)arg1;
@property(retain, nonatomic) NSObject<TSDDynamicChangeStandIn> *p_dynamicChangeStandIn; // @synthesize p_dynamicChangeStandIn=mDynamicChangeStandIn;
@property(readonly, retain, nonatomic) TSKDocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
@property(nonatomic) BOOL p_didEnableAutomaticCommandGrouping; // @synthesize p_didEnableAutomaticCommandGrouping=mDidEnableAutomaticCommandGrouping;
@property(nonatomic) long long p_trackingValueCount; // @synthesize p_trackingValueCount=mTrackingValueCount;
@property(readonly, nonatomic) TSDDeferredChangeKeyValueStorage *p_keyValueStorage; // @synthesize p_keyValueStorage=mKeyValueStorage;
- (void)endTrackingValueForKeyPath:(id)arg1 shouldCloseCommandGroupIfNeeded:(BOOL)arg2;
- (void)startTrackingValueForKeyPath:(id)arg1 shouldOpenCommandGroupIfNeeded:(BOOL)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_tearDownDynamicChangeStandIn;
- (void)p_setupDynamicChangeStandIn:(id)arg1;
- (BOOL)usesCompoundValuesWithDynamicChangesForKeyPath:(id)arg1;
- (void)dynamicChangeStandInDidEndDynamicChange:(id)arg1;
- (id)newDynamicChangeStandInForKeyPath:(id)arg1;
- (id)p_parentForKeyPath:(id)arg1;
- (void)p_invalidateValuesForDependentKeysOfKeyPath:(id)arg1 alreadyInvalidatedKeyPaths:(id)arg2;
- (void)targetDidChangeValuesForKeyPaths:(id)arg1;
- (void)targetDidChangeValues;
- (id)p_invalidKeyPaths;
- (id)p_keyPathsForValuesBeingChangedBySetter;
- (BOOL)enqueueCommandToChangeOldValue:(id)arg1 toNewValue:(id)arg2 forKeyPath:(id)arg3;
- (id)commandToChangeOldValue:(id)arg1 toNewValue:(id)arg2 forKeyPath:(id)arg3;
- (BOOL)p_changeOldValue:(id)arg1 toNewValue:(id)arg2 forKeyPath:(id)arg3;
- (void)p_getNewValue:(id *)arg1 replacingOldValue:(id *)arg2 forKeyPath:(id)arg3 whenSettingValue:(id)arg4 forSubKeyPath:(id)arg5;
- (id)p_replacableKeyPathForKeyPath:(id)arg1 changedSubKeyPath:(id *)arg2;
- (BOOL)setChildValue:(id)arg1 forKeyPath:(id)arg2;
- (void)didSetValue:(id)arg1 forKeyPath:(id)arg2;
- (void)willSetValue:(id)arg1 forKeyPath:(id)arg2;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)newProxyForValue:(id)arg1 forKey:(id)arg2;
- (id)dependentKeysOfKeyPath:(id)arg1;
- (id)stickyValueForKey:(id)arg1;
- (void)invalidateValueForKey:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)p_valueBySkippingDynamicChangeStandInForKeyPath:(id)arg1;
- (id)p_valueByUsingDynamicChangeStandInIfPossible:(BOOL)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithTarget:(id)arg1;
- (id)initWithTarget:(id)arg1 documentRoot:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

