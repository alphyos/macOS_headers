//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "NSPopoverDelegate-Protocol.h"
#import "NSTextViewDelegate-Protocol.h"
#import "TSDAnnotationPopoverController-Protocol.h"

@class NSButton, NSLayoutConstraint, NSScrollView, NSString, NSTextField, NSTextView, NSUndoManager, TSDInteractiveCanvasController, TSDMacNSPopover, TSUWeakReference;
@protocol TSDAnnotationHosting;

@interface TSDMacAnnotationPopoverController : NSViewController <TSDAnnotationPopoverController, NSPopoverDelegate, NSTextViewDelegate>
{
    NSUndoManager *mUndoManager;
    TSDInteractiveCanvasController *mICC;
    id <TSDAnnotationHosting> mAnnotation;
    BOOL mIsCommentPopover;
    BOOL mShouldBeginEditing;
    BOOL mIsEditing;
    BOOL mIsSuspendingCollaboration;
    BOOL mIsCommittingText;
    BOOL mIsPlaceholderText;
    BOOL mViewHasLoaded;
    unsigned int mPreferredEdge;
    NSLayoutConstraint *mChangeTrackingStringHeightConstraint;
    NSTextField *mAnnotationAuthor;
    NSTextField *mAnnotationDate;
    NSTextField *mCommentTextViewPlaceholderText;
    NSTextField *mChangeTrackingString;
    NSScrollView *mCommentScrollView;
    NSTextView *mCommentTextView;
    NSButton *mDeleteButton;
    NSButton *mChangeTrackingAcceptButton;
    NSButton *mChangeTrackingRejectButton;
    NSButton *mAnnotationNextButton;
    NSButton *mAnnotationPreviousButton;
    BOOL mShouldIgnoreChangeSelection;
    BOOL mModelIsReadOnly;
    TSDMacNSPopover *mPopover;
    TSUWeakReference *mWeakPreviousFirstResponder;
}

@property(retain, nonatomic) TSUWeakReference *weakPreviousFirstResponder; // @synthesize weakPreviousFirstResponder=mWeakPreviousFirstResponder;
@property(nonatomic) BOOL modelIsReadOnly; // @synthesize modelIsReadOnly=mModelIsReadOnly;
@property(nonatomic) BOOL shouldIgnoreChangeSelection; // @synthesize shouldIgnoreChangeSelection=mShouldIgnoreChangeSelection;
@property(retain, nonatomic) TSDMacNSPopover *popover; // @synthesize popover=mPopover;
@property(retain, nonatomic) NSTextField *commentTextViewPlaceholderText; // @synthesize commentTextViewPlaceholderText=mCommentTextViewPlaceholderText;
@property(retain, nonatomic) NSButton *annotationPreviousButton; // @synthesize annotationPreviousButton=mAnnotationPreviousButton;
@property(retain, nonatomic) NSButton *annotationNextButton; // @synthesize annotationNextButton=mAnnotationNextButton;
@property(retain, nonatomic) NSButton *changeTrackingRejectButton; // @synthesize changeTrackingRejectButton=mChangeTrackingRejectButton;
@property(retain, nonatomic) NSButton *changeTrackingAcceptButton; // @synthesize changeTrackingAcceptButton=mChangeTrackingAcceptButton;
@property(retain, nonatomic) NSButton *deleteButton; // @synthesize deleteButton=mDeleteButton;
@property(retain, nonatomic) NSTextView *commentTextView; // @synthesize commentTextView=mCommentTextView;
@property(retain, nonatomic) NSScrollView *commentScrollView; // @synthesize commentScrollView=mCommentScrollView;
@property(retain, nonatomic) NSTextField *changeTrackingString; // @synthesize changeTrackingString=mChangeTrackingString;
@property(retain, nonatomic) NSTextField *annotationDate; // @synthesize annotationDate=mAnnotationDate;
@property(retain, nonatomic) NSTextField *annotationAuthor; // @synthesize annotationAuthor=mAnnotationAuthor;
@property(retain, nonatomic) NSLayoutConstraint *changeTrackingStringHeightConstraint; // @synthesize changeTrackingStringHeightConstraint=mChangeTrackingStringHeightConstraint;
@property(nonatomic) BOOL isCommentPopover; // @synthesize isCommentPopover=mIsCommentPopover;
@property(retain, nonatomic) id <TSDAnnotationHosting> annotation; // @synthesize annotation=mAnnotation;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setPinned:(BOOL)arg1;
- (id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (void)textDidEndEditing:(id)arg1;
- (void)textDidBeginEditing:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)p_fixPopoverEditingState;
- (void)textDidChange:(id)arg1;
- (id)p_commentPlaceholderTextColor;
- (id)p_annotationTextColor;
- (BOOL)p_isEmptyComment;
- (void)p_setPlaceholderText;
- (void)p_clearPlaceholderText;
- (id)p_appearanceForAuthor;
- (void)p_restoreFirstResponder;
- (void)p_updatePopoverFields;
- (void)p_setSizeIsEditing:(BOOL)arg1;
- (double)p_getPopoverHeightIsEditing:(BOOL)arg1;
- (double)p_maximumPopoverHeight;
- (double)p_minimumPopoverHeight;
- (id)p_getLayoutManagerForCommentTextView;
- (struct CGRect)p_frameForContentView;
- (void)p_willStyleTextNotification:(id)arg1;
- (void)p_mainMenuDidBeginTracking:(id)arg1;
- (void)p_commandControllerWillEnqueueCommand:(id)arg1;
- (void)p_hideDisplayedAnnotation:(id)arg1;
- (void)p_tearDownPopoverForEditing;
- (void)p_setUpPopoverForEditing;
- (void)p_resumeCollabIfSuspended;
- (void)p_suspendCollab;
- (void)p_commitCommentChanges;
- (void)p_tintPopover;
- (void)p_tintButtonImage:(id)arg1 shouldTintTitle:(BOOL)arg2;
- (void)viewWillDisappear;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)viewWillAppear;
- (void)closePopover;
- (void)previousAnnotation:(id)arg1;
- (void)nextAnnotation:(id)arg1;
- (void)rejectChange:(id)arg1;
- (void)acceptChange:(id)arg1;
- (void)deleteComment:(id)arg1;
- (void)close;
@property(readonly, nonatomic) unsigned int preferredRectEdge;
@property(readonly, nonatomic) struct CGSize annotationPopoverSize;
- (void)showPopoverForAnnotation:(id)arg1 relativeToRect:(struct CGRect)arg2 ofCanvasView:(id)arg3 preferredEdge:(unsigned int)arg4 beginEditing:(BOOL)arg5 pinned:(BOOL)arg6;
- (id)undoManagerForTextView:(id)arg1;
- (void)viewDidDisappear;
- (void)awakeFromNib;
- (id)nibName;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

