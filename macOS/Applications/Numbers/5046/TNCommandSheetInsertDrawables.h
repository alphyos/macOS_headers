//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "TSKCommand.h"

#import "GSSPAutoEncodable-Protocol.h"

@class NSArray, NSMutableArray, NSUUID, TSADrawablePositioner, TSDUndoObject, TSUUUIDPath;

@interface TNCommandSheetInsertDrawables : TSKCommand <GSSPAutoEncodable>
{
    TSADrawablePositioner *_positioner;
    NSArray *_addedCustomFormatKeys;
    TSDUndoObject *_drawableUndoObject;
    TSKCommand *_undoFormulaRewriteCommand;
    unsigned int _savedNextUntitledResolverIndex;
    NSMutableArray *_discardedUndoObjects;
    NSUUID *_sheetId;
    BOOL _forPaste;
    NSArray *_drawableInfoList;
    NSArray *_argsList;
    vector_dadc1b26 _chartEntityIdForBackingTableList;
    NSArray *_backingTableInfoList;
    TSUUUIDPath *_tableInfoIdPath;
    struct TSTCellUID _topLeftCell;
    struct TSTCellUID _bottomRightCell;
    BOOL _definedTableInfoIdPath;
    BOOL _definedTopLeftCell;
    BOOL _definedBottomRightCell;
}

+ (void)createChartMediatorForChartInfo:(id)arg1 tableInfo:(id)arg2 tableModel:(id)arg3 selection:(id)arg4;
@property(nonatomic) unsigned int savedNextUntitledResolverIndex; // @synthesize savedNextUntitledResolverIndex=_savedNextUntitledResolverIndex;
@property(retain, nonatomic) TSKCommand *undoFormulaRewriteCommand; // @synthesize undoFormulaRewriteCommand=_undoFormulaRewriteCommand;
@property(retain, nonatomic) TSADrawablePositioner *positioner; // @synthesize positioner=_positioner;
@property(nonatomic) BOOL forPaste; // @synthesize forPaste=_forPaste;
@property(copy, nonatomic) NSArray *argsList; // @synthesize argsList=_argsList;
@property(copy, nonatomic) NSUUID *sheetId; // @synthesize sheetId=_sheetId;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)bootstrapCommandForTesting;
- (id)p_createCellForGridValue:(id)arg1 tableModel:(id)arg2;
- (void)stitchOwnerIDsForCoPastedChart:(id)arg1 withIDMapping:(id)arg2;
- (void)p_connectBackingTable:(id)arg1 toChart:(id)arg2 tableIdRemapper:(id)arg3;
- (id)tableDrawableForPastingChart:(id)arg1 tableIdRemapper:(id)arg2 withContext:(id)arg3;
- (id)p_referencedTableIDsInDocumentForChart:(id)arg1;
- (id)p_tableIDsOnPasteboardWithPasteboardDrawables:(id)arg1 ownerIDMap:(id)arg2;
- (void)p_updateMappingReferencesAndApplyTablesForChartsIfNeededForPaste;
- (void)p_prepareBackingTablesForChartsForPaste;
- (id)p_backingTableForChartEntityUID:(const UUIDData_5fbc143e *)arg1;
- (void)transformWithOperationTransformer:(id)arg1;
- (id)operations;
- (id)makeInverse;
- (void)rollback;
- (BOOL)supportsCollaboration;
- (void)p_insertDrawablesAsRedo:(BOOL)arg1;
- (void)p_buildArgsListIfNecessary;
- (id)p_sheet;
- (void)redo;
- (void)undo;
- (void)commit;
- (BOOL)process;
- (void)p_migrateAndExtractDrawables;
@property(copy, nonatomic) NSArray *drawables;
- (void)p_discardDrawableUndoObject;
- (BOOL)p_isUsingDrawableArchive;
- (id)actionString;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (id)initWithSheet:(id)arg1 drawable:(id)arg2 context:(id)arg3;
- (id)initWithSheet:(id)arg1 drawable:(id)arg2 context:(id)arg3 forPaste:(BOOL)arg4;
- (id)initWithSheet:(id)arg1 drawables:(id)arg2 positioner:(id)arg3;
- (id)initWithSheet:(id)arg1 drawables:(id)arg2 atIndex:(unsigned long long)arg3 context:(id)arg4 forPaste:(BOOL)arg5;
- (id)initWithSheet:(id)arg1 drawables:(id)arg2 atIndex:(unsigned long long)arg3 context:(id)arg4 forPaste:(BOOL)arg5 tableInfoIdPath:(id)arg6 topLeftCell:(struct TSTCellUID)arg7 bottomRightCell:(struct TSTCellUID)arg8 backingTables:(id)arg9 chartEntityUidsForBackingTables:(const vector_dadc1b26 *)arg10;
- (id)initWithSheet:(id)arg1 drawables:(id)arg2 atIndex:(unsigned long long)arg3 context:(id)arg4 positioner:(id)arg5 forPaste:(BOOL)arg6;
- (id)initWithSheetId:(id)arg1 drawables:(id)arg2 drawableUndoObject:(id)arg3 argsList:(id)arg4 context:(id)arg5 positioner:(id)arg6 forPaste:(BOOL)arg7;
- (id)initWithSheetId:(id)arg1 drawables:(id)arg2 drawableUndoObject:(id)arg3 argsList:(id)arg4 context:(id)arg5 positioner:(id)arg6 forPaste:(BOOL)arg7 backingTables:(id)arg8 chartEntityUidsForBackingTables:(const vector_dadc1b26 *)arg9;
- (void)populateGSSPCmdSheetInsertDrawables:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

@end

