//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>;

@interface ConcurrentTaskDispatcher : NSObject
{
    unsigned long long _maxConcurrentTaskCount;
    unsigned long long _bufferSize;
    NSObject<OS_dispatch_queue> *_concurrentTaskQueue;
    unsigned long long _concurrentTaskCount;
    NSObject<OS_dispatch_semaphore> *_taskStackMutex;
    NSMutableArray *_taskStack;
    NSObject<OS_dispatch_group> *_concurrentTaskGroup;
    NSObject<OS_dispatch_semaphore> *_runningTasksMutex;
    NSMutableArray *_runningTasks;
    BOOL _isStopped;
}

@property BOOL isStopped; // @synthesize isStopped=_isStopped;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *concurrentTaskQueue; // @synthesize concurrentTaskQueue=_concurrentTaskQueue;
- (void).cxx_destruct;
- (void)logRunningTasks;
- (void)atomicPopRunningTask:(id)arg1;
- (void)atomicPushRunningTask:(id)arg1;
- (void)scheduleBranchWithTask:(id)arg1;
- (id)branchOffTasks:(id)arg1 shouldHoldBackOneTask:(BOOL)arg2;
- (void)stop;
- (void)startTasks:(id)arg1;
- (void)dealloc;
- (id)initWithMaxConcurrentTaskCount:(unsigned long long)arg1 bufferSize:(unsigned long long)arg2;

@end

