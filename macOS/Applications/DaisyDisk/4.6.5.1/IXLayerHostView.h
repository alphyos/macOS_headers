//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import "IXCoordinateTransformerProtocol-Protocol.h"
#import "IXHostProtocol-Protocol.h"

@class CALayer, IXDefaultKeyView, IXKeyViewManager, IXMouseViewManager, IXYosemiteWindowDragger, NSObject, NSTrackingArea;
@protocol IXCoordinateTransformerProtocol, IXKeyHandlerProtocol, IXKeyViewLoopDelegate, IXMouseHandlerProtocol;

@interface IXLayerHostView : NSView <IXHostProtocol, IXCoordinateTransformerProtocol>
{
    CALayer *_rootLayer;
    IXMouseViewManager *_mouseViewManager;
    IXKeyViewManager *_keyViewManager;
    IXDefaultKeyView *_defaultKeyView;
    NSTrackingArea *_trackingArea;
    BOOL _hasWindow;
    BOOL _mouseDownCanMoveWindow;
    IXYosemiteWindowDragger *_windowDragger;
    BOOL _isFrozen;
    BOOL _isKeyboardFocusDisabled;
    BOOL _lastSingleClickProcessed;
    BOOL _shouldTrackHoverWhenWindowInactive;
    BOOL _isMovableByViewBackground;
    long long _defaultKeyViewFocusLevel;
    NSObject<IXKeyViewLoopDelegate> *_keyViewLoopDelegate;
    NSObject<IXKeyHandlerProtocol> *_keyPostHandler;
    NSObject<IXMouseHandlerProtocol> *_mousePreHandler;
}

@property(nonatomic, setter=setMovableByViewBackground:) BOOL isMovableByViewBackground; // @synthesize isMovableByViewBackground=_isMovableByViewBackground;
@property(nonatomic) BOOL shouldTrackHoverWhenWindowInactive; // @synthesize shouldTrackHoverWhenWindowInactive=_shouldTrackHoverWhenWindowInactive;
@property(readonly, nonatomic) CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(readonly, nonatomic) BOOL lastSingleClickProcessed; // @synthesize lastSingleClickProcessed=_lastSingleClickProcessed;
@property(nonatomic) NSObject<IXMouseHandlerProtocol> *mousePreHandler; // @synthesize mousePreHandler=_mousePreHandler;
@property(nonatomic) NSObject<IXKeyHandlerProtocol> *keyPostHandler; // @synthesize keyPostHandler=_keyPostHandler;
@property(nonatomic) NSObject<IXKeyViewLoopDelegate> *keyViewLoopDelegate; // @synthesize keyViewLoopDelegate=_keyViewLoopDelegate;
@property(nonatomic, setter=setKeyboardFocusDisabled:) BOOL isKeyboardFocusDisabled; // @synthesize isKeyboardFocusDisabled=_isKeyboardFocusDisabled;
@property(nonatomic, setter=setFrozen:) BOOL isFrozen; // @synthesize isFrozen=_isFrozen;
@property(nonatomic) long long defaultKeyViewFocusLevel; // @synthesize defaultKeyViewFocusLevel=_defaultKeyViewFocusLevel;
@property BOOL mouseDownCanMoveWindow; // @synthesize mouseDownCanMoveWindow=_mouseDownCanMoveWindow;
@property(readonly, nonatomic) IXKeyViewManager *keyViewManager; // @synthesize keyViewManager=_keyViewManager;
@property(readonly, nonatomic) IXMouseViewManager *mouseViewManager; // @synthesize mouseViewManager=_mouseViewManager;
- (void)viewDidChangeBackingProperties;
@property(readonly, nonatomic) BOOL isHostHiddenOrHasHiddenAncestor;
@property(readonly, nonatomic) BOOL isHostDisabledOrHasDisabledAncestor;
- (unsigned long long)indexOfLayer:(id)arg1;
- (id)superlayerOfLayer:(id)arg1;
- (struct CGPoint)viewPointFromRootPoint:(struct CGPoint)arg1 layer:(id)arg2 accountOnAnimation:(BOOL)arg3;
- (struct CGRect)rootRectFromViewRect:(struct CGRect)arg1 layer:(id)arg2 accountOnAnimation:(BOOL)arg3;
@property(readonly, nonatomic) id <IXCoordinateTransformerProtocol> coordinateTransformer;
- (void)viewDidMoveToWindow;
@property(nonatomic) BOOL needsDefaultKeyView;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)updateTrackingAreas;
- (void)swipeWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)frameSizeDidChange;
@property(readonly, nonatomic) NSView *view;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

