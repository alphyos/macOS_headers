//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString;

@interface LUT : NSObject <NSCopying, NSCoding>
{
    NSString *_title;
    NSString *_descriptionText;
    unsigned long long _size;
    double _inputLowerBound;
    double _inputUpperBound;
    NSMutableDictionary *_metadata;
    NSDictionary *_passthroughFileOptions;
}

+ (id)LUTIdentityOfSize:(unsigned long long)arg1 inputLowerBound:(double)arg2 inputUpperBound:(double)arg3;
+ (id)LUTOfSize:(unsigned long long)arg1 inputLowerBound:(double)arg2 inputUpperBound:(double)arg3;
+ (id)LUTFromDataRepresentation:(id)arg1;
+ (id)LUTFromData:(id)arg1 formatterID:(id)arg2;
+ (id)LUTFromURL:(id)arg1;
@property(retain) NSDictionary *passthroughFileOptions; // @synthesize passthroughFileOptions=_passthroughFileOptions;
@property(retain) NSMutableDictionary *metadata; // @synthesize metadata=_metadata;
@property double inputUpperBound; // @synthesize inputUpperBound=_inputUpperBound;
@property double inputLowerBound; // @synthesize inputLowerBound=_inputLowerBound;
@property unsigned long long size; // @synthesize size=_size;
@property(retain) NSString *descriptionText; // @synthesize descriptionText=_descriptionText;
@property(retain) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)processNSImageDirectly:(id)arg1;
- (id)processNSImage:(id)arg1 renderPath:(long long)arg2;
- (id)processCIImage:(id)arg1;
- (id)coreImageFilterWithColorSpace:(struct CGColorSpace *)arg1;
- (id)coreImageFilterWithCurrentColorSpace;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)maximumAbsoluteError:(id)arg1;
- (id)averageAbsoluteError:(id)arg1;
- (id)symetricalMeanAbsolutePercentageError:(id)arg1;
- (_Bool)equalsLUTEssence:(id)arg1 compareType:(_Bool)arg2 compareSize:(_Bool)arg3 compareInputBounds:(_Bool)arg4;
- (_Bool)equalsLUT:(id)arg1;
- (_Bool)equalsIdentityLUT;
- (double)minimumOutputValue;
- (double)maximumOutputValue;
- (id)minimumOutputColor;
- (id)maximumOutputColor;
- (void)setColor:(id)arg1 r:(unsigned long long)arg2 g:(unsigned long long)arg3 b:(unsigned long long)arg4;
- (id)colorAtInterpolatedR:(double)arg1 g:(double)arg2 b:(double)arg3;
- (id)colorAtR:(unsigned long long)arg1 g:(unsigned long long)arg2 b:(unsigned long long)arg3;
- (id)colorAtColor:(id)arg1;
- (id)identityColorAtR:(double)arg1 g:(double)arg2 b:(double)arg3;
- (id)LUTByInvertingColor;
- (id)LUTByChangingInputLowerBound:(double)arg1 inputUpperBound:(double)arg2;
- (id)LUTByCombiningWithLUT:(id)arg1;
- (id)LUTByChangingStrength:(double)arg1;
- (id)LUTByRemappingFromInputLowColor:(id)arg1 inputHigh:(id)arg2 outputLow:(id)arg3 outputHigh:(id)arg4 bounded:(BOOL)arg5;
- (id)LUTByRemappingValuesWithInputLow:(double)arg1 inputHigh:(double)arg2 outputLow:(double)arg3 outputHigh:(double)arg4 bounded:(BOOL)arg5;
- (id)LUTByOffsettingWithColor:(id)arg1;
- (id)LUTByClampingUpperBoundOnly:(double)arg1;
- (id)LUTByClampingLowerBoundOnly:(double)arg1;
- (id)LUTByClampingLowerBound:(double)arg1 upperBound:(double)arg2;
- (id)LUTByResizingToSize:(unsigned long long)arg1;
- (void)LUTLoopWithBlock:(CDUnknownBlockType)arg1;
- (void)copyMetaPropertiesFromLUT:(id)arg1;
- (id)dataFromLUTWithFormatterID:(id)arg1 options:(id)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 formatterID:(id)arg3 options:(id)arg4 conformLUT:(BOOL)arg5;
- (id)dataRepresentation;
- (id)initWithSize:(unsigned long long)arg1 inputLowerBound:(double)arg2 inputUpperBound:(double)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

