//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "FLUManagedObject.h"

@class FLUAvatar, FLUUserID, NSDate, NSNumber, NSOrderedSet, NSSet, NSString;

@interface _FLUUser : FLUManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)taggedInMediaSet;
- (id)sponsoredMediaSet;
- (id)sharedMessagesSet;
- (id)seenMessagesSet;
- (id)requestedFollowersSet;
- (id)recommendedMediaSet;
- (id)messagesSet;
- (id)mediaSet;
- (id)linkedAccountsSet;
- (id)likesSet;
- (id)likedMessagesSet;
- (id)hashtagsSet;
- (id)followingsSet;
- (id)followingUsersBlockedSet;
- (id)followersSet;
- (id)followerRequestsSet;
- (id)createdConversationsSet;
- (id)conversationsSet;
- (id)commentsSet;
- (id)commentPreviewsSet;
- (id)commentLikesSet;
- (id)blockedFollowersSet;
- (id)activitiesSet;
- (void)setPrimitiveUnseenCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveUnseenCountValue;
@property unsigned long long unseenCountValue;
- (void)setPrimitiveTaggedUserMediaUnviewedCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveTaggedUserMediaUnviewedCountValue;
@property unsigned long long taggedUserMediaUnviewedCountValue;
- (void)setPrimitiveTaggedUserMediaCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveTaggedUserMediaCountValue;
@property unsigned long long taggedUserMediaCountValue;
- (void)setPrimitiveTaggedLocationMediaCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveTaggedLocationMediaCountValue;
@property unsigned long long taggedLocationMediaCountValue;
- (void)setPrimitiveSuggestionIndexValue:(unsigned long long)arg1;
- (unsigned long long)primitiveSuggestionIndexValue;
@property unsigned long long suggestionIndexValue;
- (void)setPrimitiveSearchPositionValue:(unsigned long long)arg1;
- (unsigned long long)primitiveSearchPositionValue;
@property unsigned long long searchPositionValue;
- (void)setPrimitiveRankedIndexValue:(unsigned long long)arg1;
- (unsigned long long)primitiveRankedIndexValue;
@property unsigned long long rankedIndexValue;
- (void)setPrimitiveProfileVisitsDaysCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveProfileVisitsDaysCountValue;
@property unsigned long long profileVisitsDaysCountValue;
- (void)setPrimitiveProfileVisitsCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveProfileVisitsCountValue;
@property unsigned long long profileVisitsCountValue;
- (void)setPrimitivePendingRequestsCountValue:(unsigned long long)arg1;
- (unsigned long long)primitivePendingRequestsCountValue;
@property unsigned long long pendingRequestsCountValue;
- (void)setPrimitiveNotificationCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveNotificationCountValue;
@property unsigned long long notificationCountValue;
- (void)setPrimitiveMessageRequestsCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveMessageRequestsCountValue;
@property unsigned long long messageRequestsCountValue;
- (void)setPrimitiveMediaCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveMediaCountValue;
@property unsigned long long mediaCountValue;
- (void)setPrimitiveIsVerifiedValue:(BOOL)arg1;
- (BOOL)primitiveIsVerifiedValue;
@property BOOL isVerifiedValue;
- (void)setPrimitiveIsUsertagReviewEnabledValue:(BOOL)arg1;
- (BOOL)primitiveIsUsertagReviewEnabledValue;
@property BOOL isUsertagReviewEnabledValue;
- (void)setPrimitiveIsUnpublishedValue:(BOOL)arg1;
- (BOOL)primitiveIsUnpublishedValue;
@property BOOL isUnpublishedValue;
- (void)setPrimitiveIsSponsorTaggingAllowedValue:(BOOL)arg1;
- (BOOL)primitiveIsSponsorTaggingAllowedValue;
@property BOOL isSponsorTaggingAllowedValue;
- (void)setPrimitiveIsSponsorProfileValue:(BOOL)arg1;
- (BOOL)primitiveIsSponsorProfileValue;
@property BOOL isSponsorProfileValue;
- (void)setPrimitiveIsRestrictedAccountValue:(BOOL)arg1;
- (BOOL)primitiveIsRestrictedAccountValue;
@property BOOL isRestrictedAccountValue;
- (void)setPrimitiveIsPrivateValue:(BOOL)arg1;
- (BOOL)primitiveIsPrivateValue;
@property BOOL isPrivateValue;
- (void)setPrimitiveIsPreparingForRemoteDeletionValue:(BOOL)arg1;
- (BOOL)primitiveIsPreparingForRemoteDeletionValue;
@property BOOL isPreparingForRemoteDeletionValue;
- (void)setPrimitiveIsPreparingForLogoutValue:(BOOL)arg1;
- (BOOL)primitiveIsPreparingForLogoutValue;
@property BOOL isPreparingForLogoutValue;
- (void)setPrimitiveIsOrganicInsightsEnabledValue:(BOOL)arg1;
- (BOOL)primitiveIsOrganicInsightsEnabledValue;
@property BOOL isOrganicInsightsEnabledValue;
- (void)setPrimitiveIsNewSuggestionValue:(BOOL)arg1;
- (BOOL)primitiveIsNewSuggestionValue;
@property BOOL isNewSuggestionValue;
- (void)setPrimitiveIsMutedValue:(BOOL)arg1;
- (BOOL)primitiveIsMutedValue;
@property BOOL isMutedValue;
- (void)setPrimitiveIsMeValue:(BOOL)arg1;
- (BOOL)primitiveIsMeValue;
@property BOOL isMeValue;
- (void)setPrimitiveIsInvitedValue:(BOOL)arg1;
- (BOOL)primitiveIsInvitedValue;
@property BOOL isInvitedValue;
- (void)setPrimitiveIsInterestAccountValue:(BOOL)arg1;
- (BOOL)primitiveIsInterestAccountValue;
@property BOOL isInterestAccountValue;
- (void)setPrimitiveIsHiddenValue:(BOOL)arg1;
- (BOOL)primitiveIsHiddenValue;
@property BOOL isHiddenValue;
- (void)setPrimitiveIsFromFacebookInviteFeedValue:(BOOL)arg1;
- (BOOL)primitiveIsFromFacebookInviteFeedValue;
@property BOOL isFromFacebookInviteFeedValue;
- (void)setPrimitiveIsFromFacebookFollowFeedValue:(BOOL)arg1;
- (BOOL)primitiveIsFromFacebookFollowFeedValue;
@property BOOL isFromFacebookFollowFeedValue;
- (void)setPrimitiveIsFromAddressBookFollowFeedValue:(BOOL)arg1;
- (BOOL)primitiveIsFromAddressBookFollowFeedValue;
@property BOOL isFromAddressBookFollowFeedValue;
- (void)setPrimitiveIsFollowRestrictedValue:(BOOL)arg1;
- (BOOL)primitiveIsFollowRestrictedValue;
@property BOOL isFollowRestrictedValue;
- (void)setPrimitiveIsFavoritedValue:(BOOL)arg1;
- (BOOL)primitiveIsFavoritedValue;
@property BOOL isFavoritedValue;
- (void)setPrimitiveIsFavoriteValue:(BOOL)arg1;
- (BOOL)primitiveIsFavoriteValue;
@property BOOL isFavoriteValue;
- (void)setPrimitiveIsCurrentUserValue:(BOOL)arg1;
- (BOOL)primitiveIsCurrentUserValue;
@property BOOL isCurrentUserValue;
- (void)setPrimitiveIsConvertToBusinessEnabledValue:(BOOL)arg1;
- (BOOL)primitiveIsConvertToBusinessEnabledValue;
@property BOOL isConvertToBusinessEnabledValue;
- (void)setPrimitiveIsBusinessValue:(BOOL)arg1;
- (BOOL)primitiveIsBusinessValue;
@property BOOL isBusinessValue;
- (void)setPrimitiveIsBoostPostEnabledValue:(BOOL)arg1;
- (BOOL)primitiveIsBoostPostEnabledValue;
@property BOOL isBoostPostEnabledValue;
- (void)setPrimitiveIsBlockedCommenterValue:(BOOL)arg1;
- (BOOL)primitiveIsBlockedCommenterValue;
@property BOOL isBlockedCommenterValue;
- (void)setPrimitiveIsBiographyTranslationAvailableValue:(BOOL)arg1;
- (BOOL)primitiveIsBiographyTranslationAvailableValue;
@property BOOL isBiographyTranslationAvailableValue;
- (void)setPrimitiveIsBestieSuggestionValue:(BOOL)arg1;
- (BOOL)primitiveIsBestieSuggestionValue;
@property BOOL isBestieSuggestionValue;
- (void)setPrimitiveIsBestieValue:(BOOL)arg1;
- (BOOL)primitiveIsBestieValue;
@property BOOL isBestieValue;
- (void)setPrimitiveIsApprovedBusinessPartnerValue:(BOOL)arg1;
- (BOOL)primitiveIsApprovedBusinessPartnerValue;
@property BOOL isApprovedBusinessPartnerValue;
- (void)setPrimitiveIsAlertShownValue:(BOOL)arg1;
- (BOOL)primitiveIsAlertShownValue;
@property BOOL isAlertShownValue;
- (void)setPrimitiveIsAddressBookSyncedValue:(BOOL)arg1;
- (BOOL)primitiveIsAddressBookSyncedValue;
@property BOOL isAddressBookSyncedValue;
- (void)setPrimitiveIsAddressBookSyncAllowedValue:(BOOL)arg1;
- (BOOL)primitiveIsAddressBookSyncAllowedValue;
@property BOOL isAddressBookSyncAllowedValue;
- (void)setPrimitiveHasChainingValue:(BOOL)arg1;
- (BOOL)primitiveHasChainingValue;
@property BOOL hasChainingValue;
- (void)setPrimitiveHasAnonymousProfilePictureValue:(BOOL)arg1;
- (BOOL)primitiveHasAnonymousProfilePictureValue;
@property BOOL hasAnonymousProfilePictureValue;
- (void)setPrimitiveGenderValue:(unsigned long long)arg1;
- (unsigned long long)primitiveGenderValue;
@property unsigned long long genderValue;
- (void)setPrimitiveFrequencyCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveFrequencyCountValue;
@property unsigned long long frequencyCountValue;
- (void)setPrimitiveFollowingCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveFollowingCountValue;
@property unsigned long long followingCountValue;
- (void)setPrimitiveFollowerCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveFollowerCountValue;
@property unsigned long long followerCountValue;
- (void)setPrimitiveFacebookFriendsInviteCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveFacebookFriendsInviteCountValue;
@property unsigned long long facebookFriendsInviteCountValue;
- (void)setPrimitiveFacebookFriendsFollowCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveFacebookFriendsFollowCountValue;
@property unsigned long long facebookFriendsFollowCountValue;
- (void)setPrimitiveExploreIndexValue:(unsigned long long)arg1;
- (unsigned long long)primitiveExploreIndexValue;
@property unsigned long long exploreIndexValue;
- (void)setPrimitiveBusinessAddressLongitudeValue:(double)arg1;
- (double)primitiveBusinessAddressLongitudeValue;
@property double businessAddressLongitudeValue;
- (void)setPrimitiveBusinessAddressLatitudeValue:(double)arg1;
- (double)primitiveBusinessAddressLatitudeValue;
@property double businessAddressLatitudeValue;
- (void)setPrimitiveAddressBookFriendsFollowCountValue:(unsigned long long)arg1;
- (unsigned long long)primitiveAddressBookFriendsFollowCountValue;
@property unsigned long long addressBookFriendsFollowCountValue;
@property(readonly, nonatomic) FLUUserID *objectID;
- (void)replaceFollowersAtIndexes:(id)arg1 withFollowers:(id)arg2;
- (void)replaceObjectInFollowersAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeFollowersAtIndexes:(id)arg1;
- (void)insertFollowers:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromFollowersAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inFollowersAtIndex:(unsigned long long)arg2;
- (void)removeFollowersObject:(id)arg1;
- (void)addFollowersObject:(id)arg1;
- (void)removeFollowers:(id)arg1;
- (void)addFollowers:(id)arg1;
- (void)replaceFollowingsAtIndexes:(id)arg1 withFollowings:(id)arg2;
- (void)replaceObjectInFollowingsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeFollowingsAtIndexes:(id)arg1;
- (void)insertFollowings:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromFollowingsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inFollowingsAtIndex:(unsigned long long)arg2;
- (void)removeFollowingsObject:(id)arg1;
- (void)addFollowingsObject:(id)arg1;
- (void)removeFollowings:(id)arg1;
- (void)addFollowings:(id)arg1;
- (void)replaceRecommendedMediaAtIndexes:(id)arg1 withRecommendedMedia:(id)arg2;
- (void)replaceObjectInRecommendedMediaAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeRecommendedMediaAtIndexes:(id)arg1;
- (void)insertRecommendedMedia:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromRecommendedMediaAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inRecommendedMediaAtIndex:(unsigned long long)arg2;
- (void)removeRecommendedMediaObject:(id)arg1;
- (void)addRecommendedMediaObject:(id)arg1;
- (void)removeRecommendedMedia:(id)arg1;
- (void)addRecommendedMedia:(id)arg1;
- (void)replaceRequestedFollowersAtIndexes:(id)arg1 withRequestedFollowers:(id)arg2;
- (void)replaceObjectInRequestedFollowersAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeRequestedFollowersAtIndexes:(id)arg1;
- (void)insertRequestedFollowers:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectFromRequestedFollowersAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inRequestedFollowersAtIndex:(unsigned long long)arg2;
- (void)removeRequestedFollowersObject:(id)arg1;
- (void)addRequestedFollowersObject:(id)arg1;
- (void)removeRequestedFollowers:(id)arg1;
- (void)addRequestedFollowers:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSSet *activities; // @dynamic activities;
@property(retain, nonatomic) NSNumber *addressBookFriendsFollowCount; // @dynamic addressBookFriendsFollowCount;
@property(retain, nonatomic) FLUAvatar *avatar; // @dynamic avatar;
@property(retain, nonatomic) NSString *avatarURL; // @dynamic avatarURL;
@property(retain, nonatomic) NSString *biography; // @dynamic biography;
@property(retain, nonatomic) NSDate *blockedDate; // @dynamic blockedDate;
@property(retain, nonatomic) NSSet *blockedFollowers; // @dynamic blockedFollowers;
@property(retain, nonatomic) NSString *businessAddressCity; // @dynamic businessAddressCity;
@property(retain, nonatomic) NSString *businessAddressCityID; // @dynamic businessAddressCityID;
@property(retain, nonatomic) NSNumber *businessAddressLatitude; // @dynamic businessAddressLatitude;
@property(retain, nonatomic) NSNumber *businessAddressLongitude; // @dynamic businessAddressLongitude;
@property(retain, nonatomic) NSString *businessAddressPostcode; // @dynamic businessAddressPostcode;
@property(retain, nonatomic) NSString *businessAddressStreet; // @dynamic businessAddressStreet;
@property(retain, nonatomic) NSString *businessCategory; // @dynamic businessCategory;
@property(retain, nonatomic) NSString *businessContactMethod; // @dynamic businessContactMethod;
@property(retain, nonatomic) NSString *businessDirectMessaging; // @dynamic businessDirectMessaging;
@property(retain, nonatomic) NSString *businessEmail; // @dynamic businessEmail;
@property(retain, nonatomic) NSString *businessPageName; // @dynamic businessPageName;
@property(retain, nonatomic) NSString *businessPhoneCountryCode; // @dynamic businessPhoneCountryCode;
@property(retain, nonatomic) NSString *businessPhoneNumber; // @dynamic businessPhoneNumber;
@property(retain, nonatomic) NSSet *commentLikes; // @dynamic commentLikes;
@property(retain, nonatomic) NSSet *commentPreviews; // @dynamic commentPreviews;
@property(retain, nonatomic) NSSet *comments; // @dynamic comments;
@property(retain, nonatomic) NSSet *conversations; // @dynamic conversations;
@property(retain, nonatomic) NSSet *createdConversations; // @dynamic createdConversations;
@property(retain, nonatomic) NSString *email; // @dynamic email;
@property(retain, nonatomic) NSNumber *exploreIndex; // @dynamic exploreIndex;
@property(retain, nonatomic) NSNumber *facebookFriendsFollowCount; // @dynamic facebookFriendsFollowCount;
@property(retain, nonatomic) NSNumber *facebookFriendsInviteCount; // @dynamic facebookFriendsInviteCount;
@property(retain, nonatomic) NSString *facebookPageID; // @dynamic facebookPageID;
@property(retain, nonatomic) NSDate *favouriteDate; // @dynamic favouriteDate;
@property(retain, nonatomic) NSNumber *followerCount; // @dynamic followerCount;
@property(retain, nonatomic) NSSet *followerRequests; // @dynamic followerRequests;
@property(retain, nonatomic) NSOrderedSet *followers; // @dynamic followers;
@property(retain, nonatomic) NSNumber *followingCount; // @dynamic followingCount;
@property(retain, nonatomic) NSSet *followingUsersBlocked; // @dynamic followingUsersBlocked;
@property(retain, nonatomic) NSOrderedSet *followings; // @dynamic followings;
@property(retain, nonatomic) NSNumber *frequencyCount; // @dynamic frequencyCount;
@property(retain, nonatomic) NSNumber *gender; // @dynamic gender;
@property(retain, nonatomic) NSNumber *hasAnonymousProfilePicture; // @dynamic hasAnonymousProfilePicture;
@property(retain, nonatomic) NSNumber *hasChaining; // @dynamic hasChaining;
@property(retain, nonatomic) NSSet *hashtags; // @dynamic hashtags;
@property(retain, nonatomic) NSNumber *isAddressBookSyncAllowed; // @dynamic isAddressBookSyncAllowed;
@property(retain, nonatomic) NSNumber *isAddressBookSynced; // @dynamic isAddressBookSynced;
@property(retain, nonatomic) NSNumber *isAlertShown; // @dynamic isAlertShown;
@property(retain, nonatomic) NSNumber *isApprovedBusinessPartner; // @dynamic isApprovedBusinessPartner;
@property(retain, nonatomic) NSNumber *isBestie; // @dynamic isBestie;
@property(retain, nonatomic) NSNumber *isBestieSuggestion; // @dynamic isBestieSuggestion;
@property(retain, nonatomic) NSNumber *isBiographyTranslationAvailable; // @dynamic isBiographyTranslationAvailable;
@property(retain, nonatomic) NSNumber *isBlockedCommenter; // @dynamic isBlockedCommenter;
@property(retain, nonatomic) NSNumber *isBoostPostEnabled; // @dynamic isBoostPostEnabled;
@property(retain, nonatomic) NSNumber *isBusiness; // @dynamic isBusiness;
@property(retain, nonatomic) NSNumber *isConvertToBusinessEnabled; // @dynamic isConvertToBusinessEnabled;
@property(retain, nonatomic) NSNumber *isCurrentUser; // @dynamic isCurrentUser;
@property(retain, nonatomic) NSNumber *isFavorite; // @dynamic isFavorite;
@property(retain, nonatomic) NSNumber *isFavorited; // @dynamic isFavorited;
@property(retain, nonatomic) NSNumber *isFollowRestricted; // @dynamic isFollowRestricted;
@property(retain, nonatomic) NSNumber *isFromAddressBookFollowFeed; // @dynamic isFromAddressBookFollowFeed;
@property(retain, nonatomic) NSNumber *isFromFacebookFollowFeed; // @dynamic isFromFacebookFollowFeed;
@property(retain, nonatomic) NSNumber *isFromFacebookInviteFeed; // @dynamic isFromFacebookInviteFeed;
@property(retain, nonatomic) NSNumber *isHidden; // @dynamic isHidden;
@property(retain, nonatomic) NSNumber *isInterestAccount; // @dynamic isInterestAccount;
@property(retain, nonatomic) NSNumber *isInvited; // @dynamic isInvited;
@property(retain, nonatomic) NSNumber *isMe; // @dynamic isMe;
@property(retain, nonatomic) NSNumber *isMuted; // @dynamic isMuted;
@property(retain, nonatomic) NSNumber *isNewSuggestion; // @dynamic isNewSuggestion;
@property(retain, nonatomic) NSNumber *isOrganicInsightsEnabled; // @dynamic isOrganicInsightsEnabled;
@property(retain, nonatomic) NSNumber *isPreparingForLogout; // @dynamic isPreparingForLogout;
@property(retain, nonatomic) NSNumber *isPreparingForRemoteDeletion; // @dynamic isPreparingForRemoteDeletion;
@property(retain, nonatomic) NSNumber *isPrivate; // @dynamic isPrivate;
@property(retain, nonatomic) NSNumber *isRestrictedAccount; // @dynamic isRestrictedAccount;
@property(retain, nonatomic) NSNumber *isSponsorProfile; // @dynamic isSponsorProfile;
@property(retain, nonatomic) NSNumber *isSponsorTaggingAllowed; // @dynamic isSponsorTaggingAllowed;
@property(retain, nonatomic) NSNumber *isUnpublished; // @dynamic isUnpublished;
@property(retain, nonatomic) NSNumber *isUsertagReviewEnabled; // @dynamic isUsertagReviewEnabled;
@property(retain, nonatomic) NSNumber *isVerified; // @dynamic isVerified;
@property(retain, nonatomic) NSSet *likedMessages; // @dynamic likedMessages;
@property(retain, nonatomic) NSSet *likes; // @dynamic likes;
@property(retain, nonatomic) NSSet *linkedAccounts; // @dynamic linkedAccounts;
@property(retain, nonatomic) NSString *loginNonce; // @dynamic loginNonce;
@property(retain, nonatomic) NSSet *media; // @dynamic media;
@property(retain, nonatomic) NSNumber *mediaCount; // @dynamic mediaCount;
@property(retain, nonatomic) NSNumber *messageRequestsCount; // @dynamic messageRequestsCount;
@property(retain, nonatomic) NSSet *messages; // @dynamic messages;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSNumber *notificationCount; // @dynamic notificationCount;
@property(retain, nonatomic) NSNumber *pendingRequestsCount; // @dynamic pendingRequestsCount;
@property(retain, nonatomic) NSString *phoneNumber; // @dynamic phoneNumber;
@property(retain, nonatomic) NSString *profileContext; // @dynamic profileContext;
@property(retain, nonatomic) NSNumber *profileVisitsCount; // @dynamic profileVisitsCount;
@property(retain, nonatomic) NSNumber *profileVisitsDaysCount; // @dynamic profileVisitsDaysCount;
@property(retain, nonatomic) NSNumber *rankedIndex; // @dynamic rankedIndex;
@property(retain, nonatomic) NSString *recommendedAlgorithm; // @dynamic recommendedAlgorithm;
@property(retain, nonatomic) NSOrderedSet *recommendedMedia; // @dynamic recommendedMedia;
@property(retain, nonatomic) NSString *recommendedReason; // @dynamic recommendedReason;
@property(retain, nonatomic) NSString *remoteFacebookID; // @dynamic remoteFacebookID;
@property(retain, nonatomic) NSString *remoteID; // @dynamic remoteID;
@property(retain, nonatomic) NSOrderedSet *requestedFollowers; // @dynamic requestedFollowers;
@property(retain, nonatomic) NSString *restrictedAccountBody; // @dynamic restrictedAccountBody;
@property(retain, nonatomic) NSString *restrictedAccountLeftLinkText; // @dynamic restrictedAccountLeftLinkText;
@property(retain, nonatomic) NSString *restrictedAccountLink; // @dynamic restrictedAccountLink;
@property(retain, nonatomic) NSString *restrictedAccountMessage; // @dynamic restrictedAccountMessage;
@property(retain, nonatomic) NSString *restrictedAccountMoreLinkText; // @dynamic restrictedAccountMoreLinkText;
@property(retain, nonatomic) NSString *restrictedAccountRightLinkText; // @dynamic restrictedAccountRightLinkText;
@property(retain, nonatomic) NSString *restrictedAccountTitle; // @dynamic restrictedAccountTitle;
@property(retain, nonatomic) NSString *searchContext; // @dynamic searchContext;
@property(retain, nonatomic) NSNumber *searchPosition; // @dynamic searchPosition;
@property(retain, nonatomic) NSSet *seenMessages; // @dynamic seenMessages;
@property(retain, nonatomic) NSSet *sharedMessages; // @dynamic sharedMessages;
@property(retain, nonatomic) NSSet *sponsoredMedia; // @dynamic sponsoredMedia;
@property(retain, nonatomic) NSNumber *suggestionIndex; // @dynamic suggestionIndex;
@property(retain, nonatomic) NSSet *taggedInMedia; // @dynamic taggedInMedia;
@property(retain, nonatomic) NSNumber *taggedLocationMediaCount; // @dynamic taggedLocationMediaCount;
@property(retain, nonatomic) NSNumber *taggedUserMediaCount; // @dynamic taggedUserMediaCount;
@property(retain, nonatomic) NSNumber *taggedUserMediaUnviewedCount; // @dynamic taggedUserMediaUnviewedCount;
@property(retain, nonatomic) NSString *translatedBiography; // @dynamic translatedBiography;
@property(retain, nonatomic) NSNumber *unseenCount; // @dynamic unseenCount;
@property(retain, nonatomic) NSString *username; // @dynamic username;
@property(retain, nonatomic) NSString *website; // @dynamic website;

@end

