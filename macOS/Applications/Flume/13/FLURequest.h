//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSMutableURLRequest.h"

@class AFHTTPResponseSerializer<AFURLResponseSerialization>, FLUHTTPSessionManager, NSError, NSObject<OS_dispatch_queue>, NSSet, NSURLResponse;

@interface FLURequest : NSMutableURLRequest
{
    BOOL _isJSONResponse;
    BOOL _isPrivateAPIRequest;
    BOOL _isUnauthenticatedRequest;
    BOOL _isAbsoluteURLDebug;
    BOOL _addCapabilitiesHeader;
    BOOL _addConnectionTypeHeader;
    BOOL _addConnectionSpeedHeader;
    BOOL _addAbsoluteURLDebugHeader;
    FLUHTTPSessionManager *_sessionManager;
    NSSet *_acceptableContentTypes;
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    NSObject<OS_dispatch_queue> *_workerDispatchQueue;
    CDUnknownBlockType _processingBlock;
    CDUnknownBlockType _succeededUIBlock;
    CDUnknownBlockType _progressUIBlock;
    CDUnknownBlockType _failedUIBlock;
    NSURLResponse *_response;
    NSError *_error;
    id _responseObject;
}

+ (id)requestWithPath:(id)arg1 params:(id)arg2;
+ (id)requestWithPath:(id)arg1 params:(id)arg2 baseURL:(id)arg3;
+ (id)requestWithPath:(id)arg1 queryString:(id)arg2 baseURL:(id)arg3;
+ (id)requestWithPath:(id)arg1 queryString:(id)arg2;
+ (id)requestWithPath:(id)arg1;
+ (id)requestWithURL:(id)arg1;
+ (id)baseURL;
+ (id)requestRecentMediaForLocation:(id)arg1 withParams:(id)arg2;
+ (id)requestSearchPlacesWithParams:(id)arg1;
+ (id)requestSearchLocationsWithParams:(id)arg1;
+ (id)requestLocationWithRemoteID:(id)arg1 params:(id)arg2;
+ (id)requestFetchLynxURL:(id)arg1;
+ (id)requestLogBadgingUserActionWithMetadataDict:(id)arg1;
+ (id)requestGetBadgingMetadata;
+ (id)requestSendChallengeVerificationCodeWithPath:(id)arg1 verificationCode:(id)arg2;
+ (id)requestGetChallengeSMSCodeWithPath:(id)arg1 phoneNumber:(id)arg2 userID:(id)arg3 nonce:(id)arg4;
+ (id)requestGetChallengeWithPath:(id)arg1;
+ (id)requestSetPushNotificationSetting:(id)arg1 value:(id)arg2;
+ (id)requestSetEmailNotificationSetting:(id)arg1 value:(id)arg2;
+ (id)requestPushNotificationSettings;
+ (id)requestEmailNotificationSettings;
+ (id)requestBootstrappedUsers;
+ (id)requestRegisterPushNotificationsWithParams:(id)arg1;
+ (id)requestFeedbackProblemWithURL:(id)arg1;
+ (id)requestClearSearchHistory;
+ (id)requestRecentSearches;
+ (id)requestHideSuggestedSearchWithParams:(id)arg1;
+ (id)requestSuggestedSearchesWithParams:(id)arg1;
+ (id)requestSearchTopSearchesWithParams:(id)arg1;
+ (id)requestGetAdsFeedWithPreviousMedia:(id)arg1;
+ (id)requestSendAppStateWithLocation:(id)arg1;
+ (id)requestLogAppActivation;
+ (id)requestLogAppInstall;
+ (id)requestLogAttribution;
+ (id)requestGetZRTokenHash;
+ (id)requestReadMSISDNHeader;
+ (id)requestFetchQuickPromotions;
+ (id)requestFacebookOTA;
+ (id)requestSyncMegaphoneLogWithUUID:(id)arg1 action:(id)arg2 type:(id)arg3 displayMedium:(id)arg4;
+ (id)requestSyncExperiments;
+ (id)requestSyncLoginExperiments;
+ (id)requestSetUsertagReviewEnabled:(BOOL)arg1;
+ (id)requestShowTaggedPostsOnProfile:(id)arg1;
+ (id)requestHideTaggedPostsFromProfile:(id)arg1;
+ (id)requestRemoveTagFromMedia:(id)arg1;
+ (id)requestTranslateComment:(id)arg1;
+ (id)requestReportCommentAsSpam:(id)arg1;
+ (id)requestRemoveLikeForComment:(id)arg1;
+ (id)requestAddLikeForComment:(id)arg1;
+ (id)requestLikesForComment:(id)arg1 withParams:(id)arg2;
+ (id)requestDeleteComments:(id)arg1;
+ (id)requestAddComment:(id)arg1;
+ (id)requestChildCommentsForComment:(id)arg1 withParams:(id)arg2;
+ (id)requestCommentsForMedia:(id)arg1 withParams:(id)arg2;
+ (id)requestRemoveSponsorTagFromMedia:(id)arg1;
+ (id)requestUnarchiveMedia:(id)arg1;
+ (id)requestArchiveMedia:(id)arg1;
+ (id)requestBlockedMedia;
+ (id)requestReportMediaAsSpam:(id)arg1;
+ (id)requestDisableCommentsForMedia:(id)arg1;
+ (id)requestEnableCommentsForMedia:(id)arg1;
+ (id)requestInsightsForMedia:(id)arg1;
+ (id)requestGeotagCheckTicket:(id)arg1;
+ (id)requestRemoveGeotagsFromMedia:(id)arg1;
+ (id)requestIgnoreRecommendedMedia:(id)arg1;
+ (id)requestShareMedia:(id)arg1 caption:(id)arg2 shareToAccounts:(id)arg3;
+ (id)requestUpdateMedia:(id)arg1 location:(id)arg2 tags:(id)arg3 caption:(id)arg4;
+ (id)requestConfigureMediaWithUploadID:(id)arg1 carouselUploadIDs:(id)arg2 mediaTypes:(id)arg3 sizes:(id)arg4 durations:(id)arg5 audioMutedValues:(id)arg6 mediaLocation:(id)arg7 postingLocation:(id)arg8 tags:(id)arg9 sponsorTags:(id)arg10 caption:(id)arg11 shareToAccounts:(id)arg12 shareToFavorites:(BOOL)arg13 settings:(id)arg14;
+ (id)requestUploadVideoData:(id)arg1 offset:(unsigned long long)arg2 size:(unsigned long long)arg3 length:(unsigned long long)arg4 toURL:(id)arg5 job:(id)arg6 sessionID:(id)arg7 sessionHash:(id)arg8;
+ (id)requestUploadVideoDataForUploadID:(id)arg1 filename:(id)arg2 waterfallID:(id)arg3 data:(id)arg4 offset:(unsigned long long)arg5 length:(unsigned long long)arg6 size:(struct CGSize)arg7 duration:(double)arg8 forConversation:(BOOL)arg9;
+ (id)requestUploadVideoOffsetForUploadID:(id)arg1 filename:(id)arg2 waterfallID:(id)arg3 size:(struct CGSize)arg4 duration:(double)arg5;
+ (id)requestConversationUploadVideoSize:(struct CGSize)arg1 duration:(double)arg2;
+ (id)requestUploadVideoWithSize:(struct CGSize)arg1 duration:(double)arg2 carouselPost:(BOOL)arg3;
+ (id)requestUploadVideoCoverImageData:(id)arg1 uploadID:(id)arg2 carouselPost:(BOOL)arg3;
+ (id)requestUploadImageData:(id)arg1 carouselPost:(BOOL)arg2;
+ (id)requestUploadImageDataForUploadID:(id)arg1 filename:(id)arg2 waterfallID:(id)arg3 data:(id)arg4 offset:(unsigned long long)arg5 length:(unsigned long long)arg6 forConversation:(BOOL)arg7 forCoverImage:(BOOL)arg8;
+ (id)requestUploadImageOffsetForUploadID:(id)arg1 filename:(id)arg2 waterfallID:(id)arg3 coverImage:(BOOL)arg4;
+ (id)requestDeleteMedia:(id)arg1;
+ (id)requestRemoveSaveForMedia:(id)arg1;
+ (id)requestAddSaveForMedia:(id)arg1 addedCollections:(id)arg2 removedCollections:(id)arg3;
+ (id)requestRemoveLikeForMedia:(id)arg1;
+ (id)requestAddLikeForMedia:(id)arg1;
+ (id)requestLikesForMedia:(id)arg1 withParams:(id)arg2;
+ (id)requestRecentMediaThumbnailsForUsers:(id)arg1;
+ (id)requestMediaWithRemoteIDArray:(id)arg1;
+ (id)requestMediaWithRemoteID:(id)arg1 commentID:(id)arg2;
+ (id)requestMediaWithRemoteID:(id)arg1;
+ (id)requestOembedWithShortcode:(id)arg1;
+ (id)requestHideActivity:(id)arg1;
+ (id)requestLogClickedActivity:(id)arg1;
+ (id)requestActivityFollowingFeedWithParams:(id)arg1;
+ (id)requestActivityFeed;
+ (id)requestUpdateName:(id)arg1 forConversation:(id)arg2;
+ (id)requestAddUsers:(id)arg1 toConversation:(id)arg2;
+ (id)requestDeclineAllPendingConversations;
+ (id)requestDeclinePendingConversations:(id)arg1;
+ (id)requestAllowPendingConversations:(id)arg1;
+ (id)requestAllowAllPendingConversations;
+ (id)requestBlockPendingConversation:(id)arg1;
+ (id)requestDeclinePendingConversation:(id)arg1;
+ (id)requestAllowPendingConversation:(id)arg1;
+ (id)requestLeaveConversation:(id)arg1;
+ (id)requestDeleteConversation:(id)arg1;
+ (id)requestUnmuteConversation:(id)arg1;
+ (id)requestMuteConversation:(id)arg1;
+ (id)requestPendingConversationsFeedWithParams:(id)arg1;
+ (id)requestConversationsFeedWithParams:(id)arg1;
+ (id)requestVisualConversationsFeedWithParams:(id)arg1;
+ (id)requestRecentMediaForTag:(id)arg1 withParams:(id)arg2;
+ (id)requestRelatedTagsForTagWithName:(id)arg1;
+ (id)requestSearchTagsWithName:(id)arg1 count:(unsigned long long)arg2 excludeList:(id)arg3 rankToken:(id)arg4;
+ (id)requestTagWithName:(id)arg1;
+ (id)requestDeleteSavedCollection:(id)arg1;
+ (id)requestUpdateSavedCollection:(id)arg1 addedMedia:(id)arg2;
+ (id)requestUpdateSavedCollection:(id)arg1 name:(id)arg2;
+ (id)requestCreateSavedCollectionWithName:(id)arg1 addedMedia:(id)arg2;
+ (id)requestMediaForSavedCollection:(id)arg1 withParams:(id)arg2;
+ (id)requestSavedCollectionsFeedWithParams:(id)arg1;
+ (id)requestSavedPostsFeedWithParams:(id)arg1;
+ (id)requestRemoveLikeForMessage:(id)arg1;
+ (id)requestAddLikeForMessage:(id)arg1;
+ (id)requestUpdateSeenMessage:(id)arg1;
+ (id)requestDeleteMessage:(id)arg1;
+ (id)requestConfigureMessage:(id)arg1 withUploadID:(id)arg2;
+ (id)requestAddMessage:(id)arg1;
+ (id)requestMessagesForConversation:(id)arg1 withParams:(id)arg2;
+ (id)requestPromotableMediaFeedWithParams:(id)arg1;
+ (id)requestDeletePromotion:(id)arg1;
+ (id)requestPromotionResults:(id)arg1;
+ (id)requestPromotion:(id)arg1;
+ (id)requestPromotions;
+ (id)requestUpdateBrandedContentSettingsRequireApproval:(BOOL)arg1 addedUsers:(id)arg2 removedUsers:(id)arg3;
+ (id)requestBrandedContentSettings;
+ (id)requestTranslateBiographyForUser:(id)arg1;
+ (id)requestGetTwoFactorAuthNewCodes;
+ (id)requestDisableTwoFactorAuth;
+ (id)requestEnableTwoFactorAuthForNumber:(id)arg1 withVerificationCode:(id)arg2;
+ (id)requestGetTwoFactorAuthEnableSMSForNumber:(id)arg1;
+ (id)requestGetTwoFactorAuthStatus;
+ (id)requestGetTwoFactorLoginSMSWithIdentifier:(id)arg1 username:(id)arg2;
+ (id)requestStoryMediaForUserIDs:(id)arg1;
+ (id)requestStoryForUser:(id)arg1;
+ (id)requestStoriesFeed;
+ (id)requestInsightsFeedWithParams:(id)arg1;
+ (id)requestDeclareNotBusiness;
+ (id)requestUpdateBusinessEmail:(id)arg1 phoneNumber:(id)arg2 phoneContactMethod:(id)arg3 streetAddress:(id)arg4 cityID:(id)arg5 zip:(id)arg6;
+ (id)requestFacebookSwitchToPersonalAccount;
+ (id)requestSwitchToPersonalAccount;
+ (id)requestSwitchToBusinessProfileWithFacebookPageID:(id)arg1 emailAddress:(id)arg2 phoneNumber:(id)arg3 phoneContactMethod:(id)arg4 streetAddress:(id)arg5 cityID:(id)arg6 zip:(id)arg7;
+ (id)getBusinessConvertSocialContext;
+ (id)requestFacebookCitiesWithSearchTerm:(id)arg1;
+ (id)requestFacebookManagedPagesInfo;
+ (id)requestSetCommentBlockedCommenters:(id)arg1 unblockedCommenters:(id)arg2;
+ (id)requestGetCommentBlockedCommenters;
+ (id)requestSetCommentAudienceControlType:(id)arg1;
+ (id)requestGetCommentAudienceControlTypes;
+ (id)requestSetCommentCategoryFilterDisabled:(BOOL)arg1;
+ (id)requestGetCommentCategoryFilterDisabled;
+ (id)requestSetCommentFilterKeywords:(id)arg1;
+ (id)requestCommentFilterKeywords;
+ (id)requestSetCommentFilterStatus:(BOOL)arg1;
+ (id)requestCommentFilterStatus;
+ (id)requestUnlinkAddressBookContacts;
+ (id)requestLinkAddressBookContacts;
+ (id)requestFacebookInviteUser:(id)arg1;
+ (id)requestFacebookInviteFriendsWithOffset:(id)arg1;
+ (id)requestFacebookInviteFriendsCount;
+ (id)requestFacebookFollowFriends;
+ (id)requestUpdateAvatar:(id)arg1;
+ (id)requestRemoveAvatar;
+ (id)requestUpdatePassword:(id)arg1 newPassword:(id)arg2 repeatPassword:(id)arg3;
+ (id)requestUpdateEmail:(id)arg1;
+ (id)requestConfirmEmail;
+ (id)requestUpdateName:(id)arg1 username:(id)arg2 website:(id)arg3 bio:(id)arg4 email:(id)arg5 phone:(id)arg6 gender:(unsigned long long)arg7;
+ (id)requestUpdateCurrentUserPrivateProfile:(BOOL)arg1;
+ (id)requestCurrentUserProfileNotices;
+ (id)requestCurrentUserProfile;
+ (id)requestMarkCurrentUserOverageForUser:(id)arg1;
+ (id)requestMarkCurrentUserUnderageForUser:(id)arg1;
+ (id)requestRankedShareRecipients;
+ (id)requestRankedRecipients;
+ (id)requestRecentRecipients;
+ (id)requestAutocompleteUserList;
+ (id)requestReportUserAsSpam:(id)arg1;
+ (id)requestTogglePostNotificationsForUser:(id)arg1 enabled:(BOOL)arg2;
+ (id)requestUnblockUser:(id)arg1;
+ (id)requestBlockUser:(id)arg1;
+ (id)requestBlockedUsersFeed;
+ (id)requestFollowingsForUser:(id)arg1 withParams:(id)arg2;
+ (id)requestFollowersForUser:(id)arg1 withParams:(id)arg2;
+ (id)requestRemoveFollowerForUser:(id)arg1;
+ (id)requestAcceptFollowerRequestForUser:(id)arg1;
+ (id)requestRemoveFollowerRequestForUser:(id)arg1;
+ (id)requestAddFollowerForUsers:(id)arg1;
+ (id)requestAddFollowerForUser:(id)arg1;
+ (id)requestRelationshipToUsers:(id)arg1;
+ (id)requestRelationshipToUser:(id)arg1;
+ (id)requestFavoritesFeedForUser:(id)arg1 withParams:(id)arg2;
+ (id)requestSetFavoritesWithAddedUsers:(id)arg1 removedUsers:(id)arg2;
+ (id)requestGetFavoritesWithParams:(id)arg1;
+ (id)requestArchivedMediaFeedWithParams:(id)arg1;
+ (id)requestNotificationsBadge;
+ (id)requestProfileBadge;
+ (id)requestChainingDismissWithParams:(id)arg1;
+ (id)requestChainingDetailsWithParams:(id)arg1;
+ (id)requestChainingWithParams:(id)arg1;
+ (id)requestProfileTaggedPostsFeedForUser:(id)arg1 withParams:(id)arg2;
+ (id)requestProfileLocationsFeedForUser:(id)arg1;
+ (id)requestProfileFeedForUser:(id)arg1 withParams:(id)arg2;
+ (id)requestIgnoreRecommendedUser:(id)arg1;
+ (id)requestExploreDiscoverFeedForChannel:(id)arg1 params:(id)arg2;
+ (id)requestExplorePeopleSuggestionsSeen;
+ (id)requestExplorePeopleFeedWithParams:(id)arg1;
+ (id)requestExplorePostsFeedWithParams:(id)arg1;
+ (id)requestLikesFeedWithParams:(id)arg1;
+ (id)requestLikesFeed;
+ (id)requestUserPendingFollowerRequests;
+ (id)requestUserFeedWithParams:(id)arg1;
+ (id)requestUserFeed;
+ (id)requestSearchRankedRecipientsWithName:(id)arg1;
+ (id)requestSearchFavoriteUsersWithUsername:(id)arg1;
+ (id)requestSearchUsersWithUsername:(id)arg1 count:(unsigned long long)arg2 excludeList:(id)arg3 rankToken:(id)arg4 contentCreatorsOnly:(BOOL)arg5 sponsorProfilesOnly:(BOOL)arg6;
+ (id)requestUserWithRemoteID:(id)arg1 fromModule:(id)arg2;
+ (id)requestLogoutUser:(id)arg1 oneTapLogin:(BOOL)arg2;
+ (id)requestUnlinkOdnoklassnikiToken;
+ (id)requestLinkOdnoklassnikiToken:(id)arg1 refreshToken:(id)arg2 expiry:(id)arg3;
+ (id)requestOdnoklassnikiUserInfoWithAccessToken:(id)arg1;
+ (id)requestOdnoklassnikiAccessTokenWithAuthCode:(id)arg1;
+ (id)requestOdnoklassnikiAuthorizeURL;
+ (id)requestUnlinkVKontakteToken;
+ (id)requestLinkVKontakteToken:(id)arg1;
+ (id)requestVKontakteUserInfoWithAccessToken:(id)arg1 userID:(id)arg2;
+ (id)requestUnlinkMixiToken;
+ (id)requestLinkMixiToken:(id)arg1;
+ (id)requestMixiUserInfoWithAccessToken:(id)arg1;
+ (id)requestMixiAccessTokenWithAuthCode:(id)arg1;
+ (id)requestAmebaThemeList;
+ (id)requestAmebaAccessTokenWithAuthCode:(id)arg1;
+ (id)requestWeiboUserInfoWithAccessToken:(id)arg1 userID:(id)arg2;
+ (id)requestSwarmUserInfoWithAccessToken:(id)arg1;
+ (id)requestFlickrAccessTokenWithAuthToken:(id)arg1 verifier:(id)arg2;
+ (id)requestFlickrRequestToken;
+ (id)requestTumblrFollowInstagramBlog;
+ (id)requestTumblrLoginWithUsername:(id)arg1 password:(id)arg2;
+ (id)requestTwitterAccessTokenWithAuthToken:(id)arg1 verifier:(id)arg2;
+ (id)requestUnlinkTwitterToken;
+ (id)requestLinkTwitterToken:(id)arg1 accessTokenSecret:(id)arg2 username:(id)arg3;
+ (id)requestTwitterAuthorizeURL;
+ (id)requestGetFacebookConnectedID;
+ (id)requestUnlinkFacebookToken;
+ (id)requestLinkFacebookToken:(id)arg1 deniedScopes:(id)arg2 scopes:(id)arg3 expiry:(id)arg4;
+ (id)requestGetFacebookToken;
+ (id)requestLoginFacebookWithAccessToken:(id)arg1 dryRun:(BOOL)arg2;
+ (id)requestFacebookGraphAccounts;
+ (id)requestFacebookGraphMe;
+ (id)requestLoggedInUser:(id)arg1 mid:(id)arg2 csrfToken:(id)arg3;
+ (id)requestLoggedInUserWithUsername:(id)arg1 password:(id)arg2 mid:(id)arg3 csrfToken:(id)arg4;
+ (id)requestContactPointPrefill;
+ (id)requestCookiesForUser:(id)arg1;
+ (id)requestLoggedInUser:(id)arg1 identifier:(id)arg2 verificationCode:(id)arg3;
@property(retain, nonatomic) id responseObject; // @synthesize responseObject=_responseObject;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(copy) CDUnknownBlockType failedUIBlock; // @synthesize failedUIBlock=_failedUIBlock;
@property(copy) CDUnknownBlockType progressUIBlock; // @synthesize progressUIBlock=_progressUIBlock;
@property(copy) CDUnknownBlockType succeededUIBlock; // @synthesize succeededUIBlock=_succeededUIBlock;
@property(copy) CDUnknownBlockType processingBlock; // @synthesize processingBlock=_processingBlock;
@property(nonatomic) NSObject<OS_dispatch_queue> *workerDispatchQueue; // @synthesize workerDispatchQueue=_workerDispatchQueue;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSSet *acceptableContentTypes; // @synthesize acceptableContentTypes=_acceptableContentTypes;
@property(retain, nonatomic) FLUHTTPSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(nonatomic) BOOL addAbsoluteURLDebugHeader; // @synthesize addAbsoluteURLDebugHeader=_addAbsoluteURLDebugHeader;
@property(nonatomic) BOOL addConnectionSpeedHeader; // @synthesize addConnectionSpeedHeader=_addConnectionSpeedHeader;
@property(nonatomic) BOOL addConnectionTypeHeader; // @synthesize addConnectionTypeHeader=_addConnectionTypeHeader;
@property(nonatomic) BOOL addCapabilitiesHeader; // @synthesize addCapabilitiesHeader=_addCapabilitiesHeader;
@property(nonatomic) BOOL isAbsoluteURLDebug; // @synthesize isAbsoluteURLDebug=_isAbsoluteURLDebug;
@property(nonatomic) BOOL isUnauthenticatedRequest; // @synthesize isUnauthenticatedRequest=_isUnauthenticatedRequest;
@property(nonatomic) BOOL isPrivateAPIRequest; // @synthesize isPrivateAPIRequest=_isPrivateAPIRequest;
@property(nonatomic) BOOL isJSONResponse; // @synthesize isJSONResponse=_isJSONResponse;
- (void).cxx_destruct;
- (void)setPostBody:(id)arg1 multipartForm:(BOOL)arg2;
- (void)appendFormat:(id)arg1 arg:(id)arg2 toData:(id)arg3;
- (void)appendString:(id)arg1 toData:(id)arg2;
- (id)responseString;
- (id)responseDictionary;
- (id)responseArray;
- (id)initWithRequest:(id)arg1;

@end

